/*
Dynatrace Environment API

Documentation of the Dynatrace Environment API v1. To read about use cases and examples, see [Dynatrace Documentation](https://dt-url.net/xc03k3c).  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package environmentv1

import (
	"encoding/json"
)

// checks if the ActiveGateConnectionInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ActiveGateConnectionInfo{}

// ActiveGateConnectionInfo Connectivity information for an Environment ActiveGate (except ActiveGate tokens)
type ActiveGateConnectionInfo struct {
	CommunicationEndpoints *string `json:"communicationEndpoints,omitempty"`
	TenantToken *string `json:"tenantToken,omitempty"`
	TenantUUID *string `json:"tenantUUID,omitempty"`
}

// NewActiveGateConnectionInfo instantiates a new ActiveGateConnectionInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewActiveGateConnectionInfo() *ActiveGateConnectionInfo {
	this := ActiveGateConnectionInfo{}
	return &this
}

// NewActiveGateConnectionInfoWithDefaults instantiates a new ActiveGateConnectionInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewActiveGateConnectionInfoWithDefaults() *ActiveGateConnectionInfo {
	this := ActiveGateConnectionInfo{}
	return &this
}

// GetCommunicationEndpoints returns the CommunicationEndpoints field value if set, zero value otherwise.
func (o *ActiveGateConnectionInfo) GetCommunicationEndpoints() string {
	if o == nil || IsNil(o.CommunicationEndpoints) {
		var ret string
		return ret
	}
	return *o.CommunicationEndpoints
}

// GetCommunicationEndpointsOk returns a tuple with the CommunicationEndpoints field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActiveGateConnectionInfo) GetCommunicationEndpointsOk() (*string, bool) {
	if o == nil || IsNil(o.CommunicationEndpoints) {
		return nil, false
	}
	return o.CommunicationEndpoints, true
}

// HasCommunicationEndpoints returns a boolean if a field has been set.
func (o *ActiveGateConnectionInfo) HasCommunicationEndpoints() bool {
	if o != nil && !IsNil(o.CommunicationEndpoints) {
		return true
	}

	return false
}

// SetCommunicationEndpoints gets a reference to the given string and assigns it to the CommunicationEndpoints field.
func (o *ActiveGateConnectionInfo) SetCommunicationEndpoints(v string) {
	o.CommunicationEndpoints = &v
}

// GetTenantToken returns the TenantToken field value if set, zero value otherwise.
func (o *ActiveGateConnectionInfo) GetTenantToken() string {
	if o == nil || IsNil(o.TenantToken) {
		var ret string
		return ret
	}
	return *o.TenantToken
}

// GetTenantTokenOk returns a tuple with the TenantToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActiveGateConnectionInfo) GetTenantTokenOk() (*string, bool) {
	if o == nil || IsNil(o.TenantToken) {
		return nil, false
	}
	return o.TenantToken, true
}

// HasTenantToken returns a boolean if a field has been set.
func (o *ActiveGateConnectionInfo) HasTenantToken() bool {
	if o != nil && !IsNil(o.TenantToken) {
		return true
	}

	return false
}

// SetTenantToken gets a reference to the given string and assigns it to the TenantToken field.
func (o *ActiveGateConnectionInfo) SetTenantToken(v string) {
	o.TenantToken = &v
}

// GetTenantUUID returns the TenantUUID field value if set, zero value otherwise.
func (o *ActiveGateConnectionInfo) GetTenantUUID() string {
	if o == nil || IsNil(o.TenantUUID) {
		var ret string
		return ret
	}
	return *o.TenantUUID
}

// GetTenantUUIDOk returns a tuple with the TenantUUID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActiveGateConnectionInfo) GetTenantUUIDOk() (*string, bool) {
	if o == nil || IsNil(o.TenantUUID) {
		return nil, false
	}
	return o.TenantUUID, true
}

// HasTenantUUID returns a boolean if a field has been set.
func (o *ActiveGateConnectionInfo) HasTenantUUID() bool {
	if o != nil && !IsNil(o.TenantUUID) {
		return true
	}

	return false
}

// SetTenantUUID gets a reference to the given string and assigns it to the TenantUUID field.
func (o *ActiveGateConnectionInfo) SetTenantUUID(v string) {
	o.TenantUUID = &v
}

func (o ActiveGateConnectionInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ActiveGateConnectionInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CommunicationEndpoints) {
		toSerialize["communicationEndpoints"] = o.CommunicationEndpoints
	}
	if !IsNil(o.TenantToken) {
		toSerialize["tenantToken"] = o.TenantToken
	}
	if !IsNil(o.TenantUUID) {
		toSerialize["tenantUUID"] = o.TenantUUID
	}
	return toSerialize, nil
}

type NullableActiveGateConnectionInfo struct {
	value *ActiveGateConnectionInfo
	isSet bool
}

func (v NullableActiveGateConnectionInfo) Get() *ActiveGateConnectionInfo {
	return v.value
}

func (v *NullableActiveGateConnectionInfo) Set(val *ActiveGateConnectionInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableActiveGateConnectionInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableActiveGateConnectionInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableActiveGateConnectionInfo(val *ActiveGateConnectionInfo) *NullableActiveGateConnectionInfo {
	return &NullableActiveGateConnectionInfo{value: val, isSet: true}
}

func (v NullableActiveGateConnectionInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableActiveGateConnectionInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


