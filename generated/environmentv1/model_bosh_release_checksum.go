/*
Dynatrace Environment API

Documentation of the Dynatrace Environment API v1. To read about use cases and examples, see [Dynatrace Documentation](https://dt-url.net/xc03k3c).  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package environmentv1

import (
	"encoding/json"
)

// checks if the BoshReleaseChecksum type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BoshReleaseChecksum{}

// BoshReleaseChecksum The checksum of the BOSH release tarball.
type BoshReleaseChecksum struct {
	// The checksum of the  BOSH release tarball.    This is the sha256 hash of the installer file.
	Sha256 *string `json:"sha256,omitempty"`
}

// NewBoshReleaseChecksum instantiates a new BoshReleaseChecksum object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBoshReleaseChecksum() *BoshReleaseChecksum {
	this := BoshReleaseChecksum{}
	return &this
}

// NewBoshReleaseChecksumWithDefaults instantiates a new BoshReleaseChecksum object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBoshReleaseChecksumWithDefaults() *BoshReleaseChecksum {
	this := BoshReleaseChecksum{}
	return &this
}

// GetSha256 returns the Sha256 field value if set, zero value otherwise.
func (o *BoshReleaseChecksum) GetSha256() string {
	if o == nil || IsNil(o.Sha256) {
		var ret string
		return ret
	}
	return *o.Sha256
}

// GetSha256Ok returns a tuple with the Sha256 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BoshReleaseChecksum) GetSha256Ok() (*string, bool) {
	if o == nil || IsNil(o.Sha256) {
		return nil, false
	}
	return o.Sha256, true
}

// HasSha256 returns a boolean if a field has been set.
func (o *BoshReleaseChecksum) HasSha256() bool {
	if o != nil && !IsNil(o.Sha256) {
		return true
	}

	return false
}

// SetSha256 gets a reference to the given string and assigns it to the Sha256 field.
func (o *BoshReleaseChecksum) SetSha256(v string) {
	o.Sha256 = &v
}

func (o BoshReleaseChecksum) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BoshReleaseChecksum) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Sha256) {
		toSerialize["sha256"] = o.Sha256
	}
	return toSerialize, nil
}

type NullableBoshReleaseChecksum struct {
	value *BoshReleaseChecksum
	isSet bool
}

func (v NullableBoshReleaseChecksum) Get() *BoshReleaseChecksum {
	return v.value
}

func (v *NullableBoshReleaseChecksum) Set(val *BoshReleaseChecksum) {
	v.value = val
	v.isSet = true
}

func (v NullableBoshReleaseChecksum) IsSet() bool {
	return v.isSet
}

func (v *NullableBoshReleaseChecksum) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBoshReleaseChecksum(val *BoshReleaseChecksum) *NullableBoshReleaseChecksum {
	return &NullableBoshReleaseChecksum{value: val, isSet: true}
}

func (v NullableBoshReleaseChecksum) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBoshReleaseChecksum) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


