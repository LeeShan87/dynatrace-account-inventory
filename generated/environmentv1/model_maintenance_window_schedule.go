/*
Dynatrace Environment API

Documentation of the Dynatrace Environment API v1. To read about use cases and examples, see [Dynatrace Documentation](https://dt-url.net/xc03k3c).  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package environmentv1

import (
	"encoding/json"
)

// checks if the MaintenanceWindowSchedule type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MaintenanceWindowSchedule{}

// MaintenanceWindowSchedule An object defining date, time, and recurrence of the maintenance window.
type MaintenanceWindowSchedule struct {
	// The end date and time of the maintenance window in the `yyyy-MM-dd HH:mm` format.
	MaintenanceEnd string `json:"maintenanceEnd"`
	// The start date and time of the maintenance window in the `yyyy-MM-dd HH:mm` format.
	MaintenanceStart string `json:"maintenanceStart"`
	Recurrence *MaintenanceWindowRecurrence `json:"recurrence,omitempty"`
	// The time zone of the start and end time. Default time zone is UTC.    You can user either UTC offset `UTC+01:00` format or the IANA Time Zone Database format.
	TimezoneId *string `json:"timezoneId,omitempty"`
	// Recurrence of the schedule.
	Type string `json:"type"`
}

// NewMaintenanceWindowSchedule instantiates a new MaintenanceWindowSchedule object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMaintenanceWindowSchedule(maintenanceEnd string, maintenanceStart string, type_ string) *MaintenanceWindowSchedule {
	this := MaintenanceWindowSchedule{}
	this.MaintenanceEnd = maintenanceEnd
	this.MaintenanceStart = maintenanceStart
	this.Type = type_
	return &this
}

// NewMaintenanceWindowScheduleWithDefaults instantiates a new MaintenanceWindowSchedule object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMaintenanceWindowScheduleWithDefaults() *MaintenanceWindowSchedule {
	this := MaintenanceWindowSchedule{}
	return &this
}

// GetMaintenanceEnd returns the MaintenanceEnd field value
func (o *MaintenanceWindowSchedule) GetMaintenanceEnd() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MaintenanceEnd
}

// GetMaintenanceEndOk returns a tuple with the MaintenanceEnd field value
// and a boolean to check if the value has been set.
func (o *MaintenanceWindowSchedule) GetMaintenanceEndOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MaintenanceEnd, true
}

// SetMaintenanceEnd sets field value
func (o *MaintenanceWindowSchedule) SetMaintenanceEnd(v string) {
	o.MaintenanceEnd = v
}

// GetMaintenanceStart returns the MaintenanceStart field value
func (o *MaintenanceWindowSchedule) GetMaintenanceStart() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MaintenanceStart
}

// GetMaintenanceStartOk returns a tuple with the MaintenanceStart field value
// and a boolean to check if the value has been set.
func (o *MaintenanceWindowSchedule) GetMaintenanceStartOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MaintenanceStart, true
}

// SetMaintenanceStart sets field value
func (o *MaintenanceWindowSchedule) SetMaintenanceStart(v string) {
	o.MaintenanceStart = v
}

// GetRecurrence returns the Recurrence field value if set, zero value otherwise.
func (o *MaintenanceWindowSchedule) GetRecurrence() MaintenanceWindowRecurrence {
	if o == nil || IsNil(o.Recurrence) {
		var ret MaintenanceWindowRecurrence
		return ret
	}
	return *o.Recurrence
}

// GetRecurrenceOk returns a tuple with the Recurrence field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MaintenanceWindowSchedule) GetRecurrenceOk() (*MaintenanceWindowRecurrence, bool) {
	if o == nil || IsNil(o.Recurrence) {
		return nil, false
	}
	return o.Recurrence, true
}

// HasRecurrence returns a boolean if a field has been set.
func (o *MaintenanceWindowSchedule) HasRecurrence() bool {
	if o != nil && !IsNil(o.Recurrence) {
		return true
	}

	return false
}

// SetRecurrence gets a reference to the given MaintenanceWindowRecurrence and assigns it to the Recurrence field.
func (o *MaintenanceWindowSchedule) SetRecurrence(v MaintenanceWindowRecurrence) {
	o.Recurrence = &v
}

// GetTimezoneId returns the TimezoneId field value if set, zero value otherwise.
func (o *MaintenanceWindowSchedule) GetTimezoneId() string {
	if o == nil || IsNil(o.TimezoneId) {
		var ret string
		return ret
	}
	return *o.TimezoneId
}

// GetTimezoneIdOk returns a tuple with the TimezoneId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MaintenanceWindowSchedule) GetTimezoneIdOk() (*string, bool) {
	if o == nil || IsNil(o.TimezoneId) {
		return nil, false
	}
	return o.TimezoneId, true
}

// HasTimezoneId returns a boolean if a field has been set.
func (o *MaintenanceWindowSchedule) HasTimezoneId() bool {
	if o != nil && !IsNil(o.TimezoneId) {
		return true
	}

	return false
}

// SetTimezoneId gets a reference to the given string and assigns it to the TimezoneId field.
func (o *MaintenanceWindowSchedule) SetTimezoneId(v string) {
	o.TimezoneId = &v
}

// GetType returns the Type field value
func (o *MaintenanceWindowSchedule) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *MaintenanceWindowSchedule) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *MaintenanceWindowSchedule) SetType(v string) {
	o.Type = v
}

func (o MaintenanceWindowSchedule) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MaintenanceWindowSchedule) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["maintenanceEnd"] = o.MaintenanceEnd
	toSerialize["maintenanceStart"] = o.MaintenanceStart
	if !IsNil(o.Recurrence) {
		toSerialize["recurrence"] = o.Recurrence
	}
	if !IsNil(o.TimezoneId) {
		toSerialize["timezoneId"] = o.TimezoneId
	}
	toSerialize["type"] = o.Type
	return toSerialize, nil
}

type NullableMaintenanceWindowSchedule struct {
	value *MaintenanceWindowSchedule
	isSet bool
}

func (v NullableMaintenanceWindowSchedule) Get() *MaintenanceWindowSchedule {
	return v.value
}

func (v *NullableMaintenanceWindowSchedule) Set(val *MaintenanceWindowSchedule) {
	v.value = val
	v.isSet = true
}

func (v NullableMaintenanceWindowSchedule) IsSet() bool {
	return v.isSet
}

func (v *NullableMaintenanceWindowSchedule) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMaintenanceWindowSchedule(val *MaintenanceWindowSchedule) *NullableMaintenanceWindowSchedule {
	return &NullableMaintenanceWindowSchedule{value: val, isSet: true}
}

func (v NullableMaintenanceWindowSchedule) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMaintenanceWindowSchedule) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


