/*
Dynatrace Environment API

Documentation of the Dynatrace Environment API v1. To read about use cases and examples, see [Dynatrace Documentation](https://dt-url.net/xc03k3c).  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package environmentv1

import (
	"encoding/json"
)

// checks if the AnonymizationIdResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AnonymizationIdResult{}

// AnonymizationIdResult struct for AnonymizationIdResult
type AnonymizationIdResult struct {
	// A list of tuples of request ID and cluster name
	ClusterRequestIds []AnonymizationClusterRequestID `json:"clusterRequestIds,omitempty"`
	// The ID of the newly created anonymization job. If multiple datacenters are involved a list separated by \"|\" will be returned
	RequestId *string `json:"requestId,omitempty"`
}

// NewAnonymizationIdResult instantiates a new AnonymizationIdResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAnonymizationIdResult() *AnonymizationIdResult {
	this := AnonymizationIdResult{}
	return &this
}

// NewAnonymizationIdResultWithDefaults instantiates a new AnonymizationIdResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAnonymizationIdResultWithDefaults() *AnonymizationIdResult {
	this := AnonymizationIdResult{}
	return &this
}

// GetClusterRequestIds returns the ClusterRequestIds field value if set, zero value otherwise.
func (o *AnonymizationIdResult) GetClusterRequestIds() []AnonymizationClusterRequestID {
	if o == nil || IsNil(o.ClusterRequestIds) {
		var ret []AnonymizationClusterRequestID
		return ret
	}
	return o.ClusterRequestIds
}

// GetClusterRequestIdsOk returns a tuple with the ClusterRequestIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AnonymizationIdResult) GetClusterRequestIdsOk() ([]AnonymizationClusterRequestID, bool) {
	if o == nil || IsNil(o.ClusterRequestIds) {
		return nil, false
	}
	return o.ClusterRequestIds, true
}

// HasClusterRequestIds returns a boolean if a field has been set.
func (o *AnonymizationIdResult) HasClusterRequestIds() bool {
	if o != nil && !IsNil(o.ClusterRequestIds) {
		return true
	}

	return false
}

// SetClusterRequestIds gets a reference to the given []AnonymizationClusterRequestID and assigns it to the ClusterRequestIds field.
func (o *AnonymizationIdResult) SetClusterRequestIds(v []AnonymizationClusterRequestID) {
	o.ClusterRequestIds = v
}

// GetRequestId returns the RequestId field value if set, zero value otherwise.
func (o *AnonymizationIdResult) GetRequestId() string {
	if o == nil || IsNil(o.RequestId) {
		var ret string
		return ret
	}
	return *o.RequestId
}

// GetRequestIdOk returns a tuple with the RequestId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AnonymizationIdResult) GetRequestIdOk() (*string, bool) {
	if o == nil || IsNil(o.RequestId) {
		return nil, false
	}
	return o.RequestId, true
}

// HasRequestId returns a boolean if a field has been set.
func (o *AnonymizationIdResult) HasRequestId() bool {
	if o != nil && !IsNil(o.RequestId) {
		return true
	}

	return false
}

// SetRequestId gets a reference to the given string and assigns it to the RequestId field.
func (o *AnonymizationIdResult) SetRequestId(v string) {
	o.RequestId = &v
}

func (o AnonymizationIdResult) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AnonymizationIdResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ClusterRequestIds) {
		toSerialize["clusterRequestIds"] = o.ClusterRequestIds
	}
	if !IsNil(o.RequestId) {
		toSerialize["requestId"] = o.RequestId
	}
	return toSerialize, nil
}

type NullableAnonymizationIdResult struct {
	value *AnonymizationIdResult
	isSet bool
}

func (v NullableAnonymizationIdResult) Get() *AnonymizationIdResult {
	return v.value
}

func (v *NullableAnonymizationIdResult) Set(val *AnonymizationIdResult) {
	v.value = val
	v.isSet = true
}

func (v NullableAnonymizationIdResult) IsSet() bool {
	return v.isSet
}

func (v *NullableAnonymizationIdResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAnonymizationIdResult(val *AnonymizationIdResult) *NullableAnonymizationIdResult {
	return &NullableAnonymizationIdResult{value: val, isSet: true}
}

func (v NullableAnonymizationIdResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAnonymizationIdResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


