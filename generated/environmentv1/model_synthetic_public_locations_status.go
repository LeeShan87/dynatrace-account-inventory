/*
Dynatrace Environment API

Documentation of the Dynatrace Environment API v1. To read about use cases and examples, see [Dynatrace Documentation](https://dt-url.net/xc03k3c).  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package environmentv1

import (
	"encoding/json"
)

// checks if the SyntheticPublicLocationsStatus type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SyntheticPublicLocationsStatus{}

// SyntheticPublicLocationsStatus The status of public synthetic locations.
type SyntheticPublicLocationsStatus struct {
	// Synthetic monitors can (`true`) or can't (`false`) run on public synthetic locations.
	PublicLocationsEnabled bool `json:"publicLocationsEnabled"`
}

// NewSyntheticPublicLocationsStatus instantiates a new SyntheticPublicLocationsStatus object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSyntheticPublicLocationsStatus(publicLocationsEnabled bool) *SyntheticPublicLocationsStatus {
	this := SyntheticPublicLocationsStatus{}
	this.PublicLocationsEnabled = publicLocationsEnabled
	return &this
}

// NewSyntheticPublicLocationsStatusWithDefaults instantiates a new SyntheticPublicLocationsStatus object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSyntheticPublicLocationsStatusWithDefaults() *SyntheticPublicLocationsStatus {
	this := SyntheticPublicLocationsStatus{}
	return &this
}

// GetPublicLocationsEnabled returns the PublicLocationsEnabled field value
func (o *SyntheticPublicLocationsStatus) GetPublicLocationsEnabled() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.PublicLocationsEnabled
}

// GetPublicLocationsEnabledOk returns a tuple with the PublicLocationsEnabled field value
// and a boolean to check if the value has been set.
func (o *SyntheticPublicLocationsStatus) GetPublicLocationsEnabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PublicLocationsEnabled, true
}

// SetPublicLocationsEnabled sets field value
func (o *SyntheticPublicLocationsStatus) SetPublicLocationsEnabled(v bool) {
	o.PublicLocationsEnabled = v
}

func (o SyntheticPublicLocationsStatus) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SyntheticPublicLocationsStatus) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["publicLocationsEnabled"] = o.PublicLocationsEnabled
	return toSerialize, nil
}

type NullableSyntheticPublicLocationsStatus struct {
	value *SyntheticPublicLocationsStatus
	isSet bool
}

func (v NullableSyntheticPublicLocationsStatus) Get() *SyntheticPublicLocationsStatus {
	return v.value
}

func (v *NullableSyntheticPublicLocationsStatus) Set(val *SyntheticPublicLocationsStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableSyntheticPublicLocationsStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableSyntheticPublicLocationsStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSyntheticPublicLocationsStatus(val *SyntheticPublicLocationsStatus) *NullableSyntheticPublicLocationsStatus {
	return &NullableSyntheticPublicLocationsStatus{value: val, isSet: true}
}

func (v NullableSyntheticPublicLocationsStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSyntheticPublicLocationsStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


