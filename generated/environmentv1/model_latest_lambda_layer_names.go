/*
Dynatrace Environment API

Documentation of the Dynatrace Environment API v1. To read about use cases and examples, see [Dynatrace Documentation](https://dt-url.net/xc03k3c).  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package environmentv1

import (
	"encoding/json"
)

// checks if the LatestLambdaLayerNames type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LatestLambdaLayerNames{}

// LatestLambdaLayerNames Latest OneAgent lambda version names available
type LatestLambdaLayerNames struct {
	Collector *string `json:"collector,omitempty"`
	Java *string `json:"java,omitempty"`
	JavaWithCollector *string `json:"java_with_collector,omitempty"`
	Nodejs *string `json:"nodejs,omitempty"`
	NodejsWithCollector *string `json:"nodejs_with_collector,omitempty"`
	Python *string `json:"python,omitempty"`
	PythonWithCollector *string `json:"python_with_collector,omitempty"`
}

// NewLatestLambdaLayerNames instantiates a new LatestLambdaLayerNames object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLatestLambdaLayerNames() *LatestLambdaLayerNames {
	this := LatestLambdaLayerNames{}
	return &this
}

// NewLatestLambdaLayerNamesWithDefaults instantiates a new LatestLambdaLayerNames object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLatestLambdaLayerNamesWithDefaults() *LatestLambdaLayerNames {
	this := LatestLambdaLayerNames{}
	return &this
}

// GetCollector returns the Collector field value if set, zero value otherwise.
func (o *LatestLambdaLayerNames) GetCollector() string {
	if o == nil || IsNil(o.Collector) {
		var ret string
		return ret
	}
	return *o.Collector
}

// GetCollectorOk returns a tuple with the Collector field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LatestLambdaLayerNames) GetCollectorOk() (*string, bool) {
	if o == nil || IsNil(o.Collector) {
		return nil, false
	}
	return o.Collector, true
}

// HasCollector returns a boolean if a field has been set.
func (o *LatestLambdaLayerNames) HasCollector() bool {
	if o != nil && !IsNil(o.Collector) {
		return true
	}

	return false
}

// SetCollector gets a reference to the given string and assigns it to the Collector field.
func (o *LatestLambdaLayerNames) SetCollector(v string) {
	o.Collector = &v
}

// GetJava returns the Java field value if set, zero value otherwise.
func (o *LatestLambdaLayerNames) GetJava() string {
	if o == nil || IsNil(o.Java) {
		var ret string
		return ret
	}
	return *o.Java
}

// GetJavaOk returns a tuple with the Java field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LatestLambdaLayerNames) GetJavaOk() (*string, bool) {
	if o == nil || IsNil(o.Java) {
		return nil, false
	}
	return o.Java, true
}

// HasJava returns a boolean if a field has been set.
func (o *LatestLambdaLayerNames) HasJava() bool {
	if o != nil && !IsNil(o.Java) {
		return true
	}

	return false
}

// SetJava gets a reference to the given string and assigns it to the Java field.
func (o *LatestLambdaLayerNames) SetJava(v string) {
	o.Java = &v
}

// GetJavaWithCollector returns the JavaWithCollector field value if set, zero value otherwise.
func (o *LatestLambdaLayerNames) GetJavaWithCollector() string {
	if o == nil || IsNil(o.JavaWithCollector) {
		var ret string
		return ret
	}
	return *o.JavaWithCollector
}

// GetJavaWithCollectorOk returns a tuple with the JavaWithCollector field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LatestLambdaLayerNames) GetJavaWithCollectorOk() (*string, bool) {
	if o == nil || IsNil(o.JavaWithCollector) {
		return nil, false
	}
	return o.JavaWithCollector, true
}

// HasJavaWithCollector returns a boolean if a field has been set.
func (o *LatestLambdaLayerNames) HasJavaWithCollector() bool {
	if o != nil && !IsNil(o.JavaWithCollector) {
		return true
	}

	return false
}

// SetJavaWithCollector gets a reference to the given string and assigns it to the JavaWithCollector field.
func (o *LatestLambdaLayerNames) SetJavaWithCollector(v string) {
	o.JavaWithCollector = &v
}

// GetNodejs returns the Nodejs field value if set, zero value otherwise.
func (o *LatestLambdaLayerNames) GetNodejs() string {
	if o == nil || IsNil(o.Nodejs) {
		var ret string
		return ret
	}
	return *o.Nodejs
}

// GetNodejsOk returns a tuple with the Nodejs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LatestLambdaLayerNames) GetNodejsOk() (*string, bool) {
	if o == nil || IsNil(o.Nodejs) {
		return nil, false
	}
	return o.Nodejs, true
}

// HasNodejs returns a boolean if a field has been set.
func (o *LatestLambdaLayerNames) HasNodejs() bool {
	if o != nil && !IsNil(o.Nodejs) {
		return true
	}

	return false
}

// SetNodejs gets a reference to the given string and assigns it to the Nodejs field.
func (o *LatestLambdaLayerNames) SetNodejs(v string) {
	o.Nodejs = &v
}

// GetNodejsWithCollector returns the NodejsWithCollector field value if set, zero value otherwise.
func (o *LatestLambdaLayerNames) GetNodejsWithCollector() string {
	if o == nil || IsNil(o.NodejsWithCollector) {
		var ret string
		return ret
	}
	return *o.NodejsWithCollector
}

// GetNodejsWithCollectorOk returns a tuple with the NodejsWithCollector field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LatestLambdaLayerNames) GetNodejsWithCollectorOk() (*string, bool) {
	if o == nil || IsNil(o.NodejsWithCollector) {
		return nil, false
	}
	return o.NodejsWithCollector, true
}

// HasNodejsWithCollector returns a boolean if a field has been set.
func (o *LatestLambdaLayerNames) HasNodejsWithCollector() bool {
	if o != nil && !IsNil(o.NodejsWithCollector) {
		return true
	}

	return false
}

// SetNodejsWithCollector gets a reference to the given string and assigns it to the NodejsWithCollector field.
func (o *LatestLambdaLayerNames) SetNodejsWithCollector(v string) {
	o.NodejsWithCollector = &v
}

// GetPython returns the Python field value if set, zero value otherwise.
func (o *LatestLambdaLayerNames) GetPython() string {
	if o == nil || IsNil(o.Python) {
		var ret string
		return ret
	}
	return *o.Python
}

// GetPythonOk returns a tuple with the Python field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LatestLambdaLayerNames) GetPythonOk() (*string, bool) {
	if o == nil || IsNil(o.Python) {
		return nil, false
	}
	return o.Python, true
}

// HasPython returns a boolean if a field has been set.
func (o *LatestLambdaLayerNames) HasPython() bool {
	if o != nil && !IsNil(o.Python) {
		return true
	}

	return false
}

// SetPython gets a reference to the given string and assigns it to the Python field.
func (o *LatestLambdaLayerNames) SetPython(v string) {
	o.Python = &v
}

// GetPythonWithCollector returns the PythonWithCollector field value if set, zero value otherwise.
func (o *LatestLambdaLayerNames) GetPythonWithCollector() string {
	if o == nil || IsNil(o.PythonWithCollector) {
		var ret string
		return ret
	}
	return *o.PythonWithCollector
}

// GetPythonWithCollectorOk returns a tuple with the PythonWithCollector field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LatestLambdaLayerNames) GetPythonWithCollectorOk() (*string, bool) {
	if o == nil || IsNil(o.PythonWithCollector) {
		return nil, false
	}
	return o.PythonWithCollector, true
}

// HasPythonWithCollector returns a boolean if a field has been set.
func (o *LatestLambdaLayerNames) HasPythonWithCollector() bool {
	if o != nil && !IsNil(o.PythonWithCollector) {
		return true
	}

	return false
}

// SetPythonWithCollector gets a reference to the given string and assigns it to the PythonWithCollector field.
func (o *LatestLambdaLayerNames) SetPythonWithCollector(v string) {
	o.PythonWithCollector = &v
}

func (o LatestLambdaLayerNames) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LatestLambdaLayerNames) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Collector) {
		toSerialize["collector"] = o.Collector
	}
	if !IsNil(o.Java) {
		toSerialize["java"] = o.Java
	}
	if !IsNil(o.JavaWithCollector) {
		toSerialize["java_with_collector"] = o.JavaWithCollector
	}
	if !IsNil(o.Nodejs) {
		toSerialize["nodejs"] = o.Nodejs
	}
	if !IsNil(o.NodejsWithCollector) {
		toSerialize["nodejs_with_collector"] = o.NodejsWithCollector
	}
	if !IsNil(o.Python) {
		toSerialize["python"] = o.Python
	}
	if !IsNil(o.PythonWithCollector) {
		toSerialize["python_with_collector"] = o.PythonWithCollector
	}
	return toSerialize, nil
}

type NullableLatestLambdaLayerNames struct {
	value *LatestLambdaLayerNames
	isSet bool
}

func (v NullableLatestLambdaLayerNames) Get() *LatestLambdaLayerNames {
	return v.value
}

func (v *NullableLatestLambdaLayerNames) Set(val *LatestLambdaLayerNames) {
	v.value = val
	v.isSet = true
}

func (v NullableLatestLambdaLayerNames) IsSet() bool {
	return v.isSet
}

func (v *NullableLatestLambdaLayerNames) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLatestLambdaLayerNames(val *LatestLambdaLayerNames) *NullableLatestLambdaLayerNames {
	return &NullableLatestLambdaLayerNames{value: val, isSet: true}
}

func (v NullableLatestLambdaLayerNames) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLatestLambdaLayerNames) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


