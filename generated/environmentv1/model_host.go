/*
Dynatrace Environment API

Documentation of the Dynatrace Environment API v1. To read about use cases and examples, see [Dynatrace Documentation](https://dt-url.net/xc03k3c).  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package environmentv1

import (
	"encoding/json"
)

// checks if the Host type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Host{}

// Host Information about the host.
type Host struct {
	AgentVersion *AgentVersion `json:"agentVersion,omitempty"`
	AmiId *string `json:"amiId,omitempty"`
	// Status of auto-injection
	AutoInjection *string `json:"autoInjection,omitempty"`
	AutoScalingGroup *string `json:"autoScalingGroup,omitempty"`
	AwsInstanceId *string `json:"awsInstanceId,omitempty"`
	AwsInstanceType *string `json:"awsInstanceType,omitempty"`
	// The name inherited from AWS.
	AwsNameTag *string `json:"awsNameTag,omitempty"`
	AwsSecurityGroup []string `json:"awsSecurityGroup,omitempty"`
	AzureComputeModeName *string `json:"azureComputeModeName,omitempty"`
	AzureEnvironment *string `json:"azureEnvironment,omitempty"`
	AzureHostNames []string `json:"azureHostNames,omitempty"`
	AzureResourceGroupName *string `json:"azureResourceGroupName,omitempty"`
	AzureResourceId *string `json:"azureResourceId,omitempty"`
	AzureSiteNames []string `json:"azureSiteNames,omitempty"`
	AzureSku *string `json:"azureSku,omitempty"`
	AzureVmName *string `json:"azureVmName,omitempty"`
	AzureVmScaleSetName *string `json:"azureVmScaleSetName,omitempty"`
	AzureVmSizeLabel *string `json:"azureVmSizeLabel,omitempty"`
	AzureZone *string `json:"azureZone,omitempty"`
	BeanstalkEnvironmentName *string `json:"beanstalkEnvironmentName,omitempty"`
	Bitness *string `json:"bitness,omitempty"`
	// The Cloud Foundry BOSH availability zone.
	BoshAvailabilityZone *string `json:"boshAvailabilityZone,omitempty"`
	// The Cloud Foundry BOSH deployment ID.
	BoshDeploymentId *string `json:"boshDeploymentId,omitempty"`
	// The Cloud Foundry BOSH instance ID.
	BoshInstanceId *string `json:"boshInstanceId,omitempty"`
	// The Cloud Foundry BOSH instance name.
	BoshInstanceName *string `json:"boshInstanceName,omitempty"`
	// The Cloud Foundry BOSH name.
	BoshName *string `json:"boshName,omitempty"`
	// The Cloud Foundry BOSH stemcell version.
	BoshStemcellVersion *string `json:"boshStemcellVersion,omitempty"`
	// Defines the cloud platform vendor version.
	CloudPlatformVendorVersion *string `json:"cloudPlatformVendorVersion,omitempty"`
	CloudType *string `json:"cloudType,omitempty"`
	ConsumedHostUnits *string `json:"consumedHostUnits,omitempty"`
	CpuCores *int32 `json:"cpuCores,omitempty"`
	// The customized name of the entity
	CustomizedName *string `json:"customizedName,omitempty"`
	// The discovered name of the entity
	DiscoveredName *string `json:"discoveredName,omitempty"`
	// The name of the Dynatrace entity as displayed in the UI.
	DisplayName *string `json:"displayName,omitempty"`
	// The Dynatrace entity ID of the required entity.
	EntityId *string `json:"entityId,omitempty"`
	EsxiHostName *string `json:"esxiHostName,omitempty"`
	// The timestamp of when the entity was first detected, in UTC milliseconds
	FirstSeenTimestamp *int64 `json:"firstSeenTimestamp,omitempty"`
	FromRelationships *HostFromRelationships `json:"fromRelationships,omitempty"`
	// The Google Compute Engine instance ID.
	GceInstanceId *string `json:"gceInstanceId,omitempty"`
	// The Google Compute Engine instance name.
	GceInstanceName *string `json:"gceInstanceName,omitempty"`
	// The Google Compute Engine machine type.
	GceMachineType *string `json:"gceMachineType,omitempty"`
	// The Google Compute Engine project.
	GceProject *string `json:"gceProject,omitempty"`
	// The Google Compute Engine numeric project ID.
	GceProjectId *string `json:"gceProjectId,omitempty"`
	// The public IP addresses of the Google Compute Engine.
	GcePublicIpAddresses []string `json:"gcePublicIpAddresses,omitempty"`
	// The Google Cloud Platform Zone.
	GcpZone *string `json:"gcpZone,omitempty"`
	HostGroup *HostGroup `json:"hostGroup,omitempty"`
	HypervisorType *string `json:"hypervisorType,omitempty"`
	IpAddresses []string `json:"ipAddresses,omitempty"`
	IsMonitoringCandidate *bool `json:"isMonitoringCandidate,omitempty"`
	// The kubernetes cluster the entity is in.
	KubernetesCluster *string `json:"kubernetesCluster,omitempty"`
	// The kubernetes labels defined on the entity.
	KubernetesLabels map[string]map[string]interface{} `json:"kubernetesLabels,omitempty"`
	// The kubernetes node the entity is in.
	KubernetesNode *string `json:"kubernetesNode,omitempty"`
	// The timestamp of when the entity was last detected, in UTC milliseconds
	LastSeenTimestamp *int64 `json:"lastSeenTimestamp,omitempty"`
	LocalHostName *string `json:"localHostName,omitempty"`
	LocalIp *string `json:"localIp,omitempty"`
	LogicalCpuCores *int32 `json:"logicalCpuCores,omitempty"`
	// The AIX instance logical CPU count.
	LogicalCpus *int32 `json:"logicalCpus,omitempty"`
	// The management zones that the entity is part of.
	ManagementZones []EntityShortRepresentation `json:"managementZones,omitempty"`
	MonitoringMode *string `json:"monitoringMode,omitempty"`
	// The ID of network zone the entity is in.
	NetworkZoneId *string `json:"networkZoneId,omitempty"`
	// The custom name defined in OneAgent config.
	OneAgentCustomHostName *string `json:"oneAgentCustomHostName,omitempty"`
	OpenStackInstaceType *string `json:"openStackInstaceType,omitempty"`
	OpenstackAvZone *string `json:"openstackAvZone,omitempty"`
	OpenstackComputeNodeName *string `json:"openstackComputeNodeName,omitempty"`
	OpenstackProjectName *string `json:"openstackProjectName,omitempty"`
	OpenstackSecurityGroups []string `json:"openstackSecurityGroups,omitempty"`
	OpenstackVmName *string `json:"openstackVmName,omitempty"`
	OsArchitecture *string `json:"osArchitecture,omitempty"`
	OsType *string `json:"osType,omitempty"`
	OsVersion *string `json:"osVersion,omitempty"`
	// The versions of the PaaS agents currently running on the entity.
	PaasAgentVersions []AgentVersion `json:"paasAgentVersions,omitempty"`
	PaasMemoryLimit *int64 `json:"paasMemoryLimit,omitempty"`
	PaasType *string `json:"paasType,omitempty"`
	PublicHostName *string `json:"publicHostName,omitempty"`
	PublicIp *string `json:"publicIp,omitempty"`
	ScaleSetName *string `json:"scaleSetName,omitempty"`
	// The AIX instance simultaneous threads count.
	SimultaneousMultithreading *int32 `json:"simultaneousMultithreading,omitempty"`
	SoftwareTechnologies []TechnologyInfo `json:"softwareTechnologies,omitempty"`
	// The list of entity tags.
	Tags []TagInfo `json:"tags,omitempty"`
	ToRelationships *HostToRelationships `json:"toRelationships,omitempty"`
	UserLevel *string `json:"userLevel,omitempty"`
	// The AIX instance virtual CPU count.
	VirtualCpus *int32 `json:"virtualCpus,omitempty"`
	VmwareName *string `json:"vmwareName,omitempty"`
	// The CPU model number.
	ZosCPUModelNumber *string `json:"zosCPUModelNumber,omitempty"`
	// The CPU serial number.
	ZosCPUSerialNumber *string `json:"zosCPUSerialNumber,omitempty"`
	// Name of the LPAR.
	ZosLpaName *string `json:"zosLpaName,omitempty"`
	// Name of the system.
	ZosSystemName *string `json:"zosSystemName,omitempty"`
	// Number of assigned processors for this LPAR.
	ZosTotalGeneralPurposeProcessors *int32 `json:"zosTotalGeneralPurposeProcessors,omitempty"`
	// Memory assigned to the host (Terabyte).
	ZosTotalPhysicalMemory *int32 `json:"zosTotalPhysicalMemory,omitempty"`
	// Number of assigned support processors for this LPAR.
	ZosTotalZiipProcessors *int32 `json:"zosTotalZiipProcessors,omitempty"`
	// Type of virtualization on the mainframe.
	ZosVirtualization *string `json:"zosVirtualization,omitempty"`
}

// NewHost instantiates a new Host object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHost() *Host {
	this := Host{}
	return &this
}

// NewHostWithDefaults instantiates a new Host object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHostWithDefaults() *Host {
	this := Host{}
	return &this
}

// GetAgentVersion returns the AgentVersion field value if set, zero value otherwise.
func (o *Host) GetAgentVersion() AgentVersion {
	if o == nil || IsNil(o.AgentVersion) {
		var ret AgentVersion
		return ret
	}
	return *o.AgentVersion
}

// GetAgentVersionOk returns a tuple with the AgentVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Host) GetAgentVersionOk() (*AgentVersion, bool) {
	if o == nil || IsNil(o.AgentVersion) {
		return nil, false
	}
	return o.AgentVersion, true
}

// HasAgentVersion returns a boolean if a field has been set.
func (o *Host) HasAgentVersion() bool {
	if o != nil && !IsNil(o.AgentVersion) {
		return true
	}

	return false
}

// SetAgentVersion gets a reference to the given AgentVersion and assigns it to the AgentVersion field.
func (o *Host) SetAgentVersion(v AgentVersion) {
	o.AgentVersion = &v
}

// GetAmiId returns the AmiId field value if set, zero value otherwise.
func (o *Host) GetAmiId() string {
	if o == nil || IsNil(o.AmiId) {
		var ret string
		return ret
	}
	return *o.AmiId
}

// GetAmiIdOk returns a tuple with the AmiId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Host) GetAmiIdOk() (*string, bool) {
	if o == nil || IsNil(o.AmiId) {
		return nil, false
	}
	return o.AmiId, true
}

// HasAmiId returns a boolean if a field has been set.
func (o *Host) HasAmiId() bool {
	if o != nil && !IsNil(o.AmiId) {
		return true
	}

	return false
}

// SetAmiId gets a reference to the given string and assigns it to the AmiId field.
func (o *Host) SetAmiId(v string) {
	o.AmiId = &v
}

// GetAutoInjection returns the AutoInjection field value if set, zero value otherwise.
func (o *Host) GetAutoInjection() string {
	if o == nil || IsNil(o.AutoInjection) {
		var ret string
		return ret
	}
	return *o.AutoInjection
}

// GetAutoInjectionOk returns a tuple with the AutoInjection field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Host) GetAutoInjectionOk() (*string, bool) {
	if o == nil || IsNil(o.AutoInjection) {
		return nil, false
	}
	return o.AutoInjection, true
}

// HasAutoInjection returns a boolean if a field has been set.
func (o *Host) HasAutoInjection() bool {
	if o != nil && !IsNil(o.AutoInjection) {
		return true
	}

	return false
}

// SetAutoInjection gets a reference to the given string and assigns it to the AutoInjection field.
func (o *Host) SetAutoInjection(v string) {
	o.AutoInjection = &v
}

// GetAutoScalingGroup returns the AutoScalingGroup field value if set, zero value otherwise.
func (o *Host) GetAutoScalingGroup() string {
	if o == nil || IsNil(o.AutoScalingGroup) {
		var ret string
		return ret
	}
	return *o.AutoScalingGroup
}

// GetAutoScalingGroupOk returns a tuple with the AutoScalingGroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Host) GetAutoScalingGroupOk() (*string, bool) {
	if o == nil || IsNil(o.AutoScalingGroup) {
		return nil, false
	}
	return o.AutoScalingGroup, true
}

// HasAutoScalingGroup returns a boolean if a field has been set.
func (o *Host) HasAutoScalingGroup() bool {
	if o != nil && !IsNil(o.AutoScalingGroup) {
		return true
	}

	return false
}

// SetAutoScalingGroup gets a reference to the given string and assigns it to the AutoScalingGroup field.
func (o *Host) SetAutoScalingGroup(v string) {
	o.AutoScalingGroup = &v
}

// GetAwsInstanceId returns the AwsInstanceId field value if set, zero value otherwise.
func (o *Host) GetAwsInstanceId() string {
	if o == nil || IsNil(o.AwsInstanceId) {
		var ret string
		return ret
	}
	return *o.AwsInstanceId
}

// GetAwsInstanceIdOk returns a tuple with the AwsInstanceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Host) GetAwsInstanceIdOk() (*string, bool) {
	if o == nil || IsNil(o.AwsInstanceId) {
		return nil, false
	}
	return o.AwsInstanceId, true
}

// HasAwsInstanceId returns a boolean if a field has been set.
func (o *Host) HasAwsInstanceId() bool {
	if o != nil && !IsNil(o.AwsInstanceId) {
		return true
	}

	return false
}

// SetAwsInstanceId gets a reference to the given string and assigns it to the AwsInstanceId field.
func (o *Host) SetAwsInstanceId(v string) {
	o.AwsInstanceId = &v
}

// GetAwsInstanceType returns the AwsInstanceType field value if set, zero value otherwise.
func (o *Host) GetAwsInstanceType() string {
	if o == nil || IsNil(o.AwsInstanceType) {
		var ret string
		return ret
	}
	return *o.AwsInstanceType
}

// GetAwsInstanceTypeOk returns a tuple with the AwsInstanceType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Host) GetAwsInstanceTypeOk() (*string, bool) {
	if o == nil || IsNil(o.AwsInstanceType) {
		return nil, false
	}
	return o.AwsInstanceType, true
}

// HasAwsInstanceType returns a boolean if a field has been set.
func (o *Host) HasAwsInstanceType() bool {
	if o != nil && !IsNil(o.AwsInstanceType) {
		return true
	}

	return false
}

// SetAwsInstanceType gets a reference to the given string and assigns it to the AwsInstanceType field.
func (o *Host) SetAwsInstanceType(v string) {
	o.AwsInstanceType = &v
}

// GetAwsNameTag returns the AwsNameTag field value if set, zero value otherwise.
func (o *Host) GetAwsNameTag() string {
	if o == nil || IsNil(o.AwsNameTag) {
		var ret string
		return ret
	}
	return *o.AwsNameTag
}

// GetAwsNameTagOk returns a tuple with the AwsNameTag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Host) GetAwsNameTagOk() (*string, bool) {
	if o == nil || IsNil(o.AwsNameTag) {
		return nil, false
	}
	return o.AwsNameTag, true
}

// HasAwsNameTag returns a boolean if a field has been set.
func (o *Host) HasAwsNameTag() bool {
	if o != nil && !IsNil(o.AwsNameTag) {
		return true
	}

	return false
}

// SetAwsNameTag gets a reference to the given string and assigns it to the AwsNameTag field.
func (o *Host) SetAwsNameTag(v string) {
	o.AwsNameTag = &v
}

// GetAwsSecurityGroup returns the AwsSecurityGroup field value if set, zero value otherwise.
func (o *Host) GetAwsSecurityGroup() []string {
	if o == nil || IsNil(o.AwsSecurityGroup) {
		var ret []string
		return ret
	}
	return o.AwsSecurityGroup
}

// GetAwsSecurityGroupOk returns a tuple with the AwsSecurityGroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Host) GetAwsSecurityGroupOk() ([]string, bool) {
	if o == nil || IsNil(o.AwsSecurityGroup) {
		return nil, false
	}
	return o.AwsSecurityGroup, true
}

// HasAwsSecurityGroup returns a boolean if a field has been set.
func (o *Host) HasAwsSecurityGroup() bool {
	if o != nil && !IsNil(o.AwsSecurityGroup) {
		return true
	}

	return false
}

// SetAwsSecurityGroup gets a reference to the given []string and assigns it to the AwsSecurityGroup field.
func (o *Host) SetAwsSecurityGroup(v []string) {
	o.AwsSecurityGroup = v
}

// GetAzureComputeModeName returns the AzureComputeModeName field value if set, zero value otherwise.
func (o *Host) GetAzureComputeModeName() string {
	if o == nil || IsNil(o.AzureComputeModeName) {
		var ret string
		return ret
	}
	return *o.AzureComputeModeName
}

// GetAzureComputeModeNameOk returns a tuple with the AzureComputeModeName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Host) GetAzureComputeModeNameOk() (*string, bool) {
	if o == nil || IsNil(o.AzureComputeModeName) {
		return nil, false
	}
	return o.AzureComputeModeName, true
}

// HasAzureComputeModeName returns a boolean if a field has been set.
func (o *Host) HasAzureComputeModeName() bool {
	if o != nil && !IsNil(o.AzureComputeModeName) {
		return true
	}

	return false
}

// SetAzureComputeModeName gets a reference to the given string and assigns it to the AzureComputeModeName field.
func (o *Host) SetAzureComputeModeName(v string) {
	o.AzureComputeModeName = &v
}

// GetAzureEnvironment returns the AzureEnvironment field value if set, zero value otherwise.
func (o *Host) GetAzureEnvironment() string {
	if o == nil || IsNil(o.AzureEnvironment) {
		var ret string
		return ret
	}
	return *o.AzureEnvironment
}

// GetAzureEnvironmentOk returns a tuple with the AzureEnvironment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Host) GetAzureEnvironmentOk() (*string, bool) {
	if o == nil || IsNil(o.AzureEnvironment) {
		return nil, false
	}
	return o.AzureEnvironment, true
}

// HasAzureEnvironment returns a boolean if a field has been set.
func (o *Host) HasAzureEnvironment() bool {
	if o != nil && !IsNil(o.AzureEnvironment) {
		return true
	}

	return false
}

// SetAzureEnvironment gets a reference to the given string and assigns it to the AzureEnvironment field.
func (o *Host) SetAzureEnvironment(v string) {
	o.AzureEnvironment = &v
}

// GetAzureHostNames returns the AzureHostNames field value if set, zero value otherwise.
func (o *Host) GetAzureHostNames() []string {
	if o == nil || IsNil(o.AzureHostNames) {
		var ret []string
		return ret
	}
	return o.AzureHostNames
}

// GetAzureHostNamesOk returns a tuple with the AzureHostNames field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Host) GetAzureHostNamesOk() ([]string, bool) {
	if o == nil || IsNil(o.AzureHostNames) {
		return nil, false
	}
	return o.AzureHostNames, true
}

// HasAzureHostNames returns a boolean if a field has been set.
func (o *Host) HasAzureHostNames() bool {
	if o != nil && !IsNil(o.AzureHostNames) {
		return true
	}

	return false
}

// SetAzureHostNames gets a reference to the given []string and assigns it to the AzureHostNames field.
func (o *Host) SetAzureHostNames(v []string) {
	o.AzureHostNames = v
}

// GetAzureResourceGroupName returns the AzureResourceGroupName field value if set, zero value otherwise.
func (o *Host) GetAzureResourceGroupName() string {
	if o == nil || IsNil(o.AzureResourceGroupName) {
		var ret string
		return ret
	}
	return *o.AzureResourceGroupName
}

// GetAzureResourceGroupNameOk returns a tuple with the AzureResourceGroupName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Host) GetAzureResourceGroupNameOk() (*string, bool) {
	if o == nil || IsNil(o.AzureResourceGroupName) {
		return nil, false
	}
	return o.AzureResourceGroupName, true
}

// HasAzureResourceGroupName returns a boolean if a field has been set.
func (o *Host) HasAzureResourceGroupName() bool {
	if o != nil && !IsNil(o.AzureResourceGroupName) {
		return true
	}

	return false
}

// SetAzureResourceGroupName gets a reference to the given string and assigns it to the AzureResourceGroupName field.
func (o *Host) SetAzureResourceGroupName(v string) {
	o.AzureResourceGroupName = &v
}

// GetAzureResourceId returns the AzureResourceId field value if set, zero value otherwise.
func (o *Host) GetAzureResourceId() string {
	if o == nil || IsNil(o.AzureResourceId) {
		var ret string
		return ret
	}
	return *o.AzureResourceId
}

// GetAzureResourceIdOk returns a tuple with the AzureResourceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Host) GetAzureResourceIdOk() (*string, bool) {
	if o == nil || IsNil(o.AzureResourceId) {
		return nil, false
	}
	return o.AzureResourceId, true
}

// HasAzureResourceId returns a boolean if a field has been set.
func (o *Host) HasAzureResourceId() bool {
	if o != nil && !IsNil(o.AzureResourceId) {
		return true
	}

	return false
}

// SetAzureResourceId gets a reference to the given string and assigns it to the AzureResourceId field.
func (o *Host) SetAzureResourceId(v string) {
	o.AzureResourceId = &v
}

// GetAzureSiteNames returns the AzureSiteNames field value if set, zero value otherwise.
func (o *Host) GetAzureSiteNames() []string {
	if o == nil || IsNil(o.AzureSiteNames) {
		var ret []string
		return ret
	}
	return o.AzureSiteNames
}

// GetAzureSiteNamesOk returns a tuple with the AzureSiteNames field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Host) GetAzureSiteNamesOk() ([]string, bool) {
	if o == nil || IsNil(o.AzureSiteNames) {
		return nil, false
	}
	return o.AzureSiteNames, true
}

// HasAzureSiteNames returns a boolean if a field has been set.
func (o *Host) HasAzureSiteNames() bool {
	if o != nil && !IsNil(o.AzureSiteNames) {
		return true
	}

	return false
}

// SetAzureSiteNames gets a reference to the given []string and assigns it to the AzureSiteNames field.
func (o *Host) SetAzureSiteNames(v []string) {
	o.AzureSiteNames = v
}

// GetAzureSku returns the AzureSku field value if set, zero value otherwise.
func (o *Host) GetAzureSku() string {
	if o == nil || IsNil(o.AzureSku) {
		var ret string
		return ret
	}
	return *o.AzureSku
}

// GetAzureSkuOk returns a tuple with the AzureSku field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Host) GetAzureSkuOk() (*string, bool) {
	if o == nil || IsNil(o.AzureSku) {
		return nil, false
	}
	return o.AzureSku, true
}

// HasAzureSku returns a boolean if a field has been set.
func (o *Host) HasAzureSku() bool {
	if o != nil && !IsNil(o.AzureSku) {
		return true
	}

	return false
}

// SetAzureSku gets a reference to the given string and assigns it to the AzureSku field.
func (o *Host) SetAzureSku(v string) {
	o.AzureSku = &v
}

// GetAzureVmName returns the AzureVmName field value if set, zero value otherwise.
func (o *Host) GetAzureVmName() string {
	if o == nil || IsNil(o.AzureVmName) {
		var ret string
		return ret
	}
	return *o.AzureVmName
}

// GetAzureVmNameOk returns a tuple with the AzureVmName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Host) GetAzureVmNameOk() (*string, bool) {
	if o == nil || IsNil(o.AzureVmName) {
		return nil, false
	}
	return o.AzureVmName, true
}

// HasAzureVmName returns a boolean if a field has been set.
func (o *Host) HasAzureVmName() bool {
	if o != nil && !IsNil(o.AzureVmName) {
		return true
	}

	return false
}

// SetAzureVmName gets a reference to the given string and assigns it to the AzureVmName field.
func (o *Host) SetAzureVmName(v string) {
	o.AzureVmName = &v
}

// GetAzureVmScaleSetName returns the AzureVmScaleSetName field value if set, zero value otherwise.
func (o *Host) GetAzureVmScaleSetName() string {
	if o == nil || IsNil(o.AzureVmScaleSetName) {
		var ret string
		return ret
	}
	return *o.AzureVmScaleSetName
}

// GetAzureVmScaleSetNameOk returns a tuple with the AzureVmScaleSetName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Host) GetAzureVmScaleSetNameOk() (*string, bool) {
	if o == nil || IsNil(o.AzureVmScaleSetName) {
		return nil, false
	}
	return o.AzureVmScaleSetName, true
}

// HasAzureVmScaleSetName returns a boolean if a field has been set.
func (o *Host) HasAzureVmScaleSetName() bool {
	if o != nil && !IsNil(o.AzureVmScaleSetName) {
		return true
	}

	return false
}

// SetAzureVmScaleSetName gets a reference to the given string and assigns it to the AzureVmScaleSetName field.
func (o *Host) SetAzureVmScaleSetName(v string) {
	o.AzureVmScaleSetName = &v
}

// GetAzureVmSizeLabel returns the AzureVmSizeLabel field value if set, zero value otherwise.
func (o *Host) GetAzureVmSizeLabel() string {
	if o == nil || IsNil(o.AzureVmSizeLabel) {
		var ret string
		return ret
	}
	return *o.AzureVmSizeLabel
}

// GetAzureVmSizeLabelOk returns a tuple with the AzureVmSizeLabel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Host) GetAzureVmSizeLabelOk() (*string, bool) {
	if o == nil || IsNil(o.AzureVmSizeLabel) {
		return nil, false
	}
	return o.AzureVmSizeLabel, true
}

// HasAzureVmSizeLabel returns a boolean if a field has been set.
func (o *Host) HasAzureVmSizeLabel() bool {
	if o != nil && !IsNil(o.AzureVmSizeLabel) {
		return true
	}

	return false
}

// SetAzureVmSizeLabel gets a reference to the given string and assigns it to the AzureVmSizeLabel field.
func (o *Host) SetAzureVmSizeLabel(v string) {
	o.AzureVmSizeLabel = &v
}

// GetAzureZone returns the AzureZone field value if set, zero value otherwise.
func (o *Host) GetAzureZone() string {
	if o == nil || IsNil(o.AzureZone) {
		var ret string
		return ret
	}
	return *o.AzureZone
}

// GetAzureZoneOk returns a tuple with the AzureZone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Host) GetAzureZoneOk() (*string, bool) {
	if o == nil || IsNil(o.AzureZone) {
		return nil, false
	}
	return o.AzureZone, true
}

// HasAzureZone returns a boolean if a field has been set.
func (o *Host) HasAzureZone() bool {
	if o != nil && !IsNil(o.AzureZone) {
		return true
	}

	return false
}

// SetAzureZone gets a reference to the given string and assigns it to the AzureZone field.
func (o *Host) SetAzureZone(v string) {
	o.AzureZone = &v
}

// GetBeanstalkEnvironmentName returns the BeanstalkEnvironmentName field value if set, zero value otherwise.
func (o *Host) GetBeanstalkEnvironmentName() string {
	if o == nil || IsNil(o.BeanstalkEnvironmentName) {
		var ret string
		return ret
	}
	return *o.BeanstalkEnvironmentName
}

// GetBeanstalkEnvironmentNameOk returns a tuple with the BeanstalkEnvironmentName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Host) GetBeanstalkEnvironmentNameOk() (*string, bool) {
	if o == nil || IsNil(o.BeanstalkEnvironmentName) {
		return nil, false
	}
	return o.BeanstalkEnvironmentName, true
}

// HasBeanstalkEnvironmentName returns a boolean if a field has been set.
func (o *Host) HasBeanstalkEnvironmentName() bool {
	if o != nil && !IsNil(o.BeanstalkEnvironmentName) {
		return true
	}

	return false
}

// SetBeanstalkEnvironmentName gets a reference to the given string and assigns it to the BeanstalkEnvironmentName field.
func (o *Host) SetBeanstalkEnvironmentName(v string) {
	o.BeanstalkEnvironmentName = &v
}

// GetBitness returns the Bitness field value if set, zero value otherwise.
func (o *Host) GetBitness() string {
	if o == nil || IsNil(o.Bitness) {
		var ret string
		return ret
	}
	return *o.Bitness
}

// GetBitnessOk returns a tuple with the Bitness field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Host) GetBitnessOk() (*string, bool) {
	if o == nil || IsNil(o.Bitness) {
		return nil, false
	}
	return o.Bitness, true
}

// HasBitness returns a boolean if a field has been set.
func (o *Host) HasBitness() bool {
	if o != nil && !IsNil(o.Bitness) {
		return true
	}

	return false
}

// SetBitness gets a reference to the given string and assigns it to the Bitness field.
func (o *Host) SetBitness(v string) {
	o.Bitness = &v
}

// GetBoshAvailabilityZone returns the BoshAvailabilityZone field value if set, zero value otherwise.
func (o *Host) GetBoshAvailabilityZone() string {
	if o == nil || IsNil(o.BoshAvailabilityZone) {
		var ret string
		return ret
	}
	return *o.BoshAvailabilityZone
}

// GetBoshAvailabilityZoneOk returns a tuple with the BoshAvailabilityZone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Host) GetBoshAvailabilityZoneOk() (*string, bool) {
	if o == nil || IsNil(o.BoshAvailabilityZone) {
		return nil, false
	}
	return o.BoshAvailabilityZone, true
}

// HasBoshAvailabilityZone returns a boolean if a field has been set.
func (o *Host) HasBoshAvailabilityZone() bool {
	if o != nil && !IsNil(o.BoshAvailabilityZone) {
		return true
	}

	return false
}

// SetBoshAvailabilityZone gets a reference to the given string and assigns it to the BoshAvailabilityZone field.
func (o *Host) SetBoshAvailabilityZone(v string) {
	o.BoshAvailabilityZone = &v
}

// GetBoshDeploymentId returns the BoshDeploymentId field value if set, zero value otherwise.
func (o *Host) GetBoshDeploymentId() string {
	if o == nil || IsNil(o.BoshDeploymentId) {
		var ret string
		return ret
	}
	return *o.BoshDeploymentId
}

// GetBoshDeploymentIdOk returns a tuple with the BoshDeploymentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Host) GetBoshDeploymentIdOk() (*string, bool) {
	if o == nil || IsNil(o.BoshDeploymentId) {
		return nil, false
	}
	return o.BoshDeploymentId, true
}

// HasBoshDeploymentId returns a boolean if a field has been set.
func (o *Host) HasBoshDeploymentId() bool {
	if o != nil && !IsNil(o.BoshDeploymentId) {
		return true
	}

	return false
}

// SetBoshDeploymentId gets a reference to the given string and assigns it to the BoshDeploymentId field.
func (o *Host) SetBoshDeploymentId(v string) {
	o.BoshDeploymentId = &v
}

// GetBoshInstanceId returns the BoshInstanceId field value if set, zero value otherwise.
func (o *Host) GetBoshInstanceId() string {
	if o == nil || IsNil(o.BoshInstanceId) {
		var ret string
		return ret
	}
	return *o.BoshInstanceId
}

// GetBoshInstanceIdOk returns a tuple with the BoshInstanceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Host) GetBoshInstanceIdOk() (*string, bool) {
	if o == nil || IsNil(o.BoshInstanceId) {
		return nil, false
	}
	return o.BoshInstanceId, true
}

// HasBoshInstanceId returns a boolean if a field has been set.
func (o *Host) HasBoshInstanceId() bool {
	if o != nil && !IsNil(o.BoshInstanceId) {
		return true
	}

	return false
}

// SetBoshInstanceId gets a reference to the given string and assigns it to the BoshInstanceId field.
func (o *Host) SetBoshInstanceId(v string) {
	o.BoshInstanceId = &v
}

// GetBoshInstanceName returns the BoshInstanceName field value if set, zero value otherwise.
func (o *Host) GetBoshInstanceName() string {
	if o == nil || IsNil(o.BoshInstanceName) {
		var ret string
		return ret
	}
	return *o.BoshInstanceName
}

// GetBoshInstanceNameOk returns a tuple with the BoshInstanceName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Host) GetBoshInstanceNameOk() (*string, bool) {
	if o == nil || IsNil(o.BoshInstanceName) {
		return nil, false
	}
	return o.BoshInstanceName, true
}

// HasBoshInstanceName returns a boolean if a field has been set.
func (o *Host) HasBoshInstanceName() bool {
	if o != nil && !IsNil(o.BoshInstanceName) {
		return true
	}

	return false
}

// SetBoshInstanceName gets a reference to the given string and assigns it to the BoshInstanceName field.
func (o *Host) SetBoshInstanceName(v string) {
	o.BoshInstanceName = &v
}

// GetBoshName returns the BoshName field value if set, zero value otherwise.
func (o *Host) GetBoshName() string {
	if o == nil || IsNil(o.BoshName) {
		var ret string
		return ret
	}
	return *o.BoshName
}

// GetBoshNameOk returns a tuple with the BoshName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Host) GetBoshNameOk() (*string, bool) {
	if o == nil || IsNil(o.BoshName) {
		return nil, false
	}
	return o.BoshName, true
}

// HasBoshName returns a boolean if a field has been set.
func (o *Host) HasBoshName() bool {
	if o != nil && !IsNil(o.BoshName) {
		return true
	}

	return false
}

// SetBoshName gets a reference to the given string and assigns it to the BoshName field.
func (o *Host) SetBoshName(v string) {
	o.BoshName = &v
}

// GetBoshStemcellVersion returns the BoshStemcellVersion field value if set, zero value otherwise.
func (o *Host) GetBoshStemcellVersion() string {
	if o == nil || IsNil(o.BoshStemcellVersion) {
		var ret string
		return ret
	}
	return *o.BoshStemcellVersion
}

// GetBoshStemcellVersionOk returns a tuple with the BoshStemcellVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Host) GetBoshStemcellVersionOk() (*string, bool) {
	if o == nil || IsNil(o.BoshStemcellVersion) {
		return nil, false
	}
	return o.BoshStemcellVersion, true
}

// HasBoshStemcellVersion returns a boolean if a field has been set.
func (o *Host) HasBoshStemcellVersion() bool {
	if o != nil && !IsNil(o.BoshStemcellVersion) {
		return true
	}

	return false
}

// SetBoshStemcellVersion gets a reference to the given string and assigns it to the BoshStemcellVersion field.
func (o *Host) SetBoshStemcellVersion(v string) {
	o.BoshStemcellVersion = &v
}

// GetCloudPlatformVendorVersion returns the CloudPlatformVendorVersion field value if set, zero value otherwise.
func (o *Host) GetCloudPlatformVendorVersion() string {
	if o == nil || IsNil(o.CloudPlatformVendorVersion) {
		var ret string
		return ret
	}
	return *o.CloudPlatformVendorVersion
}

// GetCloudPlatformVendorVersionOk returns a tuple with the CloudPlatformVendorVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Host) GetCloudPlatformVendorVersionOk() (*string, bool) {
	if o == nil || IsNil(o.CloudPlatformVendorVersion) {
		return nil, false
	}
	return o.CloudPlatformVendorVersion, true
}

// HasCloudPlatformVendorVersion returns a boolean if a field has been set.
func (o *Host) HasCloudPlatformVendorVersion() bool {
	if o != nil && !IsNil(o.CloudPlatformVendorVersion) {
		return true
	}

	return false
}

// SetCloudPlatformVendorVersion gets a reference to the given string and assigns it to the CloudPlatformVendorVersion field.
func (o *Host) SetCloudPlatformVendorVersion(v string) {
	o.CloudPlatformVendorVersion = &v
}

// GetCloudType returns the CloudType field value if set, zero value otherwise.
func (o *Host) GetCloudType() string {
	if o == nil || IsNil(o.CloudType) {
		var ret string
		return ret
	}
	return *o.CloudType
}

// GetCloudTypeOk returns a tuple with the CloudType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Host) GetCloudTypeOk() (*string, bool) {
	if o == nil || IsNil(o.CloudType) {
		return nil, false
	}
	return o.CloudType, true
}

// HasCloudType returns a boolean if a field has been set.
func (o *Host) HasCloudType() bool {
	if o != nil && !IsNil(o.CloudType) {
		return true
	}

	return false
}

// SetCloudType gets a reference to the given string and assigns it to the CloudType field.
func (o *Host) SetCloudType(v string) {
	o.CloudType = &v
}

// GetConsumedHostUnits returns the ConsumedHostUnits field value if set, zero value otherwise.
func (o *Host) GetConsumedHostUnits() string {
	if o == nil || IsNil(o.ConsumedHostUnits) {
		var ret string
		return ret
	}
	return *o.ConsumedHostUnits
}

// GetConsumedHostUnitsOk returns a tuple with the ConsumedHostUnits field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Host) GetConsumedHostUnitsOk() (*string, bool) {
	if o == nil || IsNil(o.ConsumedHostUnits) {
		return nil, false
	}
	return o.ConsumedHostUnits, true
}

// HasConsumedHostUnits returns a boolean if a field has been set.
func (o *Host) HasConsumedHostUnits() bool {
	if o != nil && !IsNil(o.ConsumedHostUnits) {
		return true
	}

	return false
}

// SetConsumedHostUnits gets a reference to the given string and assigns it to the ConsumedHostUnits field.
func (o *Host) SetConsumedHostUnits(v string) {
	o.ConsumedHostUnits = &v
}

// GetCpuCores returns the CpuCores field value if set, zero value otherwise.
func (o *Host) GetCpuCores() int32 {
	if o == nil || IsNil(o.CpuCores) {
		var ret int32
		return ret
	}
	return *o.CpuCores
}

// GetCpuCoresOk returns a tuple with the CpuCores field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Host) GetCpuCoresOk() (*int32, bool) {
	if o == nil || IsNil(o.CpuCores) {
		return nil, false
	}
	return o.CpuCores, true
}

// HasCpuCores returns a boolean if a field has been set.
func (o *Host) HasCpuCores() bool {
	if o != nil && !IsNil(o.CpuCores) {
		return true
	}

	return false
}

// SetCpuCores gets a reference to the given int32 and assigns it to the CpuCores field.
func (o *Host) SetCpuCores(v int32) {
	o.CpuCores = &v
}

// GetCustomizedName returns the CustomizedName field value if set, zero value otherwise.
func (o *Host) GetCustomizedName() string {
	if o == nil || IsNil(o.CustomizedName) {
		var ret string
		return ret
	}
	return *o.CustomizedName
}

// GetCustomizedNameOk returns a tuple with the CustomizedName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Host) GetCustomizedNameOk() (*string, bool) {
	if o == nil || IsNil(o.CustomizedName) {
		return nil, false
	}
	return o.CustomizedName, true
}

// HasCustomizedName returns a boolean if a field has been set.
func (o *Host) HasCustomizedName() bool {
	if o != nil && !IsNil(o.CustomizedName) {
		return true
	}

	return false
}

// SetCustomizedName gets a reference to the given string and assigns it to the CustomizedName field.
func (o *Host) SetCustomizedName(v string) {
	o.CustomizedName = &v
}

// GetDiscoveredName returns the DiscoveredName field value if set, zero value otherwise.
func (o *Host) GetDiscoveredName() string {
	if o == nil || IsNil(o.DiscoveredName) {
		var ret string
		return ret
	}
	return *o.DiscoveredName
}

// GetDiscoveredNameOk returns a tuple with the DiscoveredName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Host) GetDiscoveredNameOk() (*string, bool) {
	if o == nil || IsNil(o.DiscoveredName) {
		return nil, false
	}
	return o.DiscoveredName, true
}

// HasDiscoveredName returns a boolean if a field has been set.
func (o *Host) HasDiscoveredName() bool {
	if o != nil && !IsNil(o.DiscoveredName) {
		return true
	}

	return false
}

// SetDiscoveredName gets a reference to the given string and assigns it to the DiscoveredName field.
func (o *Host) SetDiscoveredName(v string) {
	o.DiscoveredName = &v
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise.
func (o *Host) GetDisplayName() string {
	if o == nil || IsNil(o.DisplayName) {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Host) GetDisplayNameOk() (*string, bool) {
	if o == nil || IsNil(o.DisplayName) {
		return nil, false
	}
	return o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *Host) HasDisplayName() bool {
	if o != nil && !IsNil(o.DisplayName) {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *Host) SetDisplayName(v string) {
	o.DisplayName = &v
}

// GetEntityId returns the EntityId field value if set, zero value otherwise.
func (o *Host) GetEntityId() string {
	if o == nil || IsNil(o.EntityId) {
		var ret string
		return ret
	}
	return *o.EntityId
}

// GetEntityIdOk returns a tuple with the EntityId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Host) GetEntityIdOk() (*string, bool) {
	if o == nil || IsNil(o.EntityId) {
		return nil, false
	}
	return o.EntityId, true
}

// HasEntityId returns a boolean if a field has been set.
func (o *Host) HasEntityId() bool {
	if o != nil && !IsNil(o.EntityId) {
		return true
	}

	return false
}

// SetEntityId gets a reference to the given string and assigns it to the EntityId field.
func (o *Host) SetEntityId(v string) {
	o.EntityId = &v
}

// GetEsxiHostName returns the EsxiHostName field value if set, zero value otherwise.
func (o *Host) GetEsxiHostName() string {
	if o == nil || IsNil(o.EsxiHostName) {
		var ret string
		return ret
	}
	return *o.EsxiHostName
}

// GetEsxiHostNameOk returns a tuple with the EsxiHostName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Host) GetEsxiHostNameOk() (*string, bool) {
	if o == nil || IsNil(o.EsxiHostName) {
		return nil, false
	}
	return o.EsxiHostName, true
}

// HasEsxiHostName returns a boolean if a field has been set.
func (o *Host) HasEsxiHostName() bool {
	if o != nil && !IsNil(o.EsxiHostName) {
		return true
	}

	return false
}

// SetEsxiHostName gets a reference to the given string and assigns it to the EsxiHostName field.
func (o *Host) SetEsxiHostName(v string) {
	o.EsxiHostName = &v
}

// GetFirstSeenTimestamp returns the FirstSeenTimestamp field value if set, zero value otherwise.
func (o *Host) GetFirstSeenTimestamp() int64 {
	if o == nil || IsNil(o.FirstSeenTimestamp) {
		var ret int64
		return ret
	}
	return *o.FirstSeenTimestamp
}

// GetFirstSeenTimestampOk returns a tuple with the FirstSeenTimestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Host) GetFirstSeenTimestampOk() (*int64, bool) {
	if o == nil || IsNil(o.FirstSeenTimestamp) {
		return nil, false
	}
	return o.FirstSeenTimestamp, true
}

// HasFirstSeenTimestamp returns a boolean if a field has been set.
func (o *Host) HasFirstSeenTimestamp() bool {
	if o != nil && !IsNil(o.FirstSeenTimestamp) {
		return true
	}

	return false
}

// SetFirstSeenTimestamp gets a reference to the given int64 and assigns it to the FirstSeenTimestamp field.
func (o *Host) SetFirstSeenTimestamp(v int64) {
	o.FirstSeenTimestamp = &v
}

// GetFromRelationships returns the FromRelationships field value if set, zero value otherwise.
func (o *Host) GetFromRelationships() HostFromRelationships {
	if o == nil || IsNil(o.FromRelationships) {
		var ret HostFromRelationships
		return ret
	}
	return *o.FromRelationships
}

// GetFromRelationshipsOk returns a tuple with the FromRelationships field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Host) GetFromRelationshipsOk() (*HostFromRelationships, bool) {
	if o == nil || IsNil(o.FromRelationships) {
		return nil, false
	}
	return o.FromRelationships, true
}

// HasFromRelationships returns a boolean if a field has been set.
func (o *Host) HasFromRelationships() bool {
	if o != nil && !IsNil(o.FromRelationships) {
		return true
	}

	return false
}

// SetFromRelationships gets a reference to the given HostFromRelationships and assigns it to the FromRelationships field.
func (o *Host) SetFromRelationships(v HostFromRelationships) {
	o.FromRelationships = &v
}

// GetGceInstanceId returns the GceInstanceId field value if set, zero value otherwise.
func (o *Host) GetGceInstanceId() string {
	if o == nil || IsNil(o.GceInstanceId) {
		var ret string
		return ret
	}
	return *o.GceInstanceId
}

// GetGceInstanceIdOk returns a tuple with the GceInstanceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Host) GetGceInstanceIdOk() (*string, bool) {
	if o == nil || IsNil(o.GceInstanceId) {
		return nil, false
	}
	return o.GceInstanceId, true
}

// HasGceInstanceId returns a boolean if a field has been set.
func (o *Host) HasGceInstanceId() bool {
	if o != nil && !IsNil(o.GceInstanceId) {
		return true
	}

	return false
}

// SetGceInstanceId gets a reference to the given string and assigns it to the GceInstanceId field.
func (o *Host) SetGceInstanceId(v string) {
	o.GceInstanceId = &v
}

// GetGceInstanceName returns the GceInstanceName field value if set, zero value otherwise.
func (o *Host) GetGceInstanceName() string {
	if o == nil || IsNil(o.GceInstanceName) {
		var ret string
		return ret
	}
	return *o.GceInstanceName
}

// GetGceInstanceNameOk returns a tuple with the GceInstanceName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Host) GetGceInstanceNameOk() (*string, bool) {
	if o == nil || IsNil(o.GceInstanceName) {
		return nil, false
	}
	return o.GceInstanceName, true
}

// HasGceInstanceName returns a boolean if a field has been set.
func (o *Host) HasGceInstanceName() bool {
	if o != nil && !IsNil(o.GceInstanceName) {
		return true
	}

	return false
}

// SetGceInstanceName gets a reference to the given string and assigns it to the GceInstanceName field.
func (o *Host) SetGceInstanceName(v string) {
	o.GceInstanceName = &v
}

// GetGceMachineType returns the GceMachineType field value if set, zero value otherwise.
func (o *Host) GetGceMachineType() string {
	if o == nil || IsNil(o.GceMachineType) {
		var ret string
		return ret
	}
	return *o.GceMachineType
}

// GetGceMachineTypeOk returns a tuple with the GceMachineType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Host) GetGceMachineTypeOk() (*string, bool) {
	if o == nil || IsNil(o.GceMachineType) {
		return nil, false
	}
	return o.GceMachineType, true
}

// HasGceMachineType returns a boolean if a field has been set.
func (o *Host) HasGceMachineType() bool {
	if o != nil && !IsNil(o.GceMachineType) {
		return true
	}

	return false
}

// SetGceMachineType gets a reference to the given string and assigns it to the GceMachineType field.
func (o *Host) SetGceMachineType(v string) {
	o.GceMachineType = &v
}

// GetGceProject returns the GceProject field value if set, zero value otherwise.
func (o *Host) GetGceProject() string {
	if o == nil || IsNil(o.GceProject) {
		var ret string
		return ret
	}
	return *o.GceProject
}

// GetGceProjectOk returns a tuple with the GceProject field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Host) GetGceProjectOk() (*string, bool) {
	if o == nil || IsNil(o.GceProject) {
		return nil, false
	}
	return o.GceProject, true
}

// HasGceProject returns a boolean if a field has been set.
func (o *Host) HasGceProject() bool {
	if o != nil && !IsNil(o.GceProject) {
		return true
	}

	return false
}

// SetGceProject gets a reference to the given string and assigns it to the GceProject field.
func (o *Host) SetGceProject(v string) {
	o.GceProject = &v
}

// GetGceProjectId returns the GceProjectId field value if set, zero value otherwise.
func (o *Host) GetGceProjectId() string {
	if o == nil || IsNil(o.GceProjectId) {
		var ret string
		return ret
	}
	return *o.GceProjectId
}

// GetGceProjectIdOk returns a tuple with the GceProjectId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Host) GetGceProjectIdOk() (*string, bool) {
	if o == nil || IsNil(o.GceProjectId) {
		return nil, false
	}
	return o.GceProjectId, true
}

// HasGceProjectId returns a boolean if a field has been set.
func (o *Host) HasGceProjectId() bool {
	if o != nil && !IsNil(o.GceProjectId) {
		return true
	}

	return false
}

// SetGceProjectId gets a reference to the given string and assigns it to the GceProjectId field.
func (o *Host) SetGceProjectId(v string) {
	o.GceProjectId = &v
}

// GetGcePublicIpAddresses returns the GcePublicIpAddresses field value if set, zero value otherwise.
func (o *Host) GetGcePublicIpAddresses() []string {
	if o == nil || IsNil(o.GcePublicIpAddresses) {
		var ret []string
		return ret
	}
	return o.GcePublicIpAddresses
}

// GetGcePublicIpAddressesOk returns a tuple with the GcePublicIpAddresses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Host) GetGcePublicIpAddressesOk() ([]string, bool) {
	if o == nil || IsNil(o.GcePublicIpAddresses) {
		return nil, false
	}
	return o.GcePublicIpAddresses, true
}

// HasGcePublicIpAddresses returns a boolean if a field has been set.
func (o *Host) HasGcePublicIpAddresses() bool {
	if o != nil && !IsNil(o.GcePublicIpAddresses) {
		return true
	}

	return false
}

// SetGcePublicIpAddresses gets a reference to the given []string and assigns it to the GcePublicIpAddresses field.
func (o *Host) SetGcePublicIpAddresses(v []string) {
	o.GcePublicIpAddresses = v
}

// GetGcpZone returns the GcpZone field value if set, zero value otherwise.
func (o *Host) GetGcpZone() string {
	if o == nil || IsNil(o.GcpZone) {
		var ret string
		return ret
	}
	return *o.GcpZone
}

// GetGcpZoneOk returns a tuple with the GcpZone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Host) GetGcpZoneOk() (*string, bool) {
	if o == nil || IsNil(o.GcpZone) {
		return nil, false
	}
	return o.GcpZone, true
}

// HasGcpZone returns a boolean if a field has been set.
func (o *Host) HasGcpZone() bool {
	if o != nil && !IsNil(o.GcpZone) {
		return true
	}

	return false
}

// SetGcpZone gets a reference to the given string and assigns it to the GcpZone field.
func (o *Host) SetGcpZone(v string) {
	o.GcpZone = &v
}

// GetHostGroup returns the HostGroup field value if set, zero value otherwise.
func (o *Host) GetHostGroup() HostGroup {
	if o == nil || IsNil(o.HostGroup) {
		var ret HostGroup
		return ret
	}
	return *o.HostGroup
}

// GetHostGroupOk returns a tuple with the HostGroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Host) GetHostGroupOk() (*HostGroup, bool) {
	if o == nil || IsNil(o.HostGroup) {
		return nil, false
	}
	return o.HostGroup, true
}

// HasHostGroup returns a boolean if a field has been set.
func (o *Host) HasHostGroup() bool {
	if o != nil && !IsNil(o.HostGroup) {
		return true
	}

	return false
}

// SetHostGroup gets a reference to the given HostGroup and assigns it to the HostGroup field.
func (o *Host) SetHostGroup(v HostGroup) {
	o.HostGroup = &v
}

// GetHypervisorType returns the HypervisorType field value if set, zero value otherwise.
func (o *Host) GetHypervisorType() string {
	if o == nil || IsNil(o.HypervisorType) {
		var ret string
		return ret
	}
	return *o.HypervisorType
}

// GetHypervisorTypeOk returns a tuple with the HypervisorType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Host) GetHypervisorTypeOk() (*string, bool) {
	if o == nil || IsNil(o.HypervisorType) {
		return nil, false
	}
	return o.HypervisorType, true
}

// HasHypervisorType returns a boolean if a field has been set.
func (o *Host) HasHypervisorType() bool {
	if o != nil && !IsNil(o.HypervisorType) {
		return true
	}

	return false
}

// SetHypervisorType gets a reference to the given string and assigns it to the HypervisorType field.
func (o *Host) SetHypervisorType(v string) {
	o.HypervisorType = &v
}

// GetIpAddresses returns the IpAddresses field value if set, zero value otherwise.
func (o *Host) GetIpAddresses() []string {
	if o == nil || IsNil(o.IpAddresses) {
		var ret []string
		return ret
	}
	return o.IpAddresses
}

// GetIpAddressesOk returns a tuple with the IpAddresses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Host) GetIpAddressesOk() ([]string, bool) {
	if o == nil || IsNil(o.IpAddresses) {
		return nil, false
	}
	return o.IpAddresses, true
}

// HasIpAddresses returns a boolean if a field has been set.
func (o *Host) HasIpAddresses() bool {
	if o != nil && !IsNil(o.IpAddresses) {
		return true
	}

	return false
}

// SetIpAddresses gets a reference to the given []string and assigns it to the IpAddresses field.
func (o *Host) SetIpAddresses(v []string) {
	o.IpAddresses = v
}

// GetIsMonitoringCandidate returns the IsMonitoringCandidate field value if set, zero value otherwise.
func (o *Host) GetIsMonitoringCandidate() bool {
	if o == nil || IsNil(o.IsMonitoringCandidate) {
		var ret bool
		return ret
	}
	return *o.IsMonitoringCandidate
}

// GetIsMonitoringCandidateOk returns a tuple with the IsMonitoringCandidate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Host) GetIsMonitoringCandidateOk() (*bool, bool) {
	if o == nil || IsNil(o.IsMonitoringCandidate) {
		return nil, false
	}
	return o.IsMonitoringCandidate, true
}

// HasIsMonitoringCandidate returns a boolean if a field has been set.
func (o *Host) HasIsMonitoringCandidate() bool {
	if o != nil && !IsNil(o.IsMonitoringCandidate) {
		return true
	}

	return false
}

// SetIsMonitoringCandidate gets a reference to the given bool and assigns it to the IsMonitoringCandidate field.
func (o *Host) SetIsMonitoringCandidate(v bool) {
	o.IsMonitoringCandidate = &v
}

// GetKubernetesCluster returns the KubernetesCluster field value if set, zero value otherwise.
func (o *Host) GetKubernetesCluster() string {
	if o == nil || IsNil(o.KubernetesCluster) {
		var ret string
		return ret
	}
	return *o.KubernetesCluster
}

// GetKubernetesClusterOk returns a tuple with the KubernetesCluster field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Host) GetKubernetesClusterOk() (*string, bool) {
	if o == nil || IsNil(o.KubernetesCluster) {
		return nil, false
	}
	return o.KubernetesCluster, true
}

// HasKubernetesCluster returns a boolean if a field has been set.
func (o *Host) HasKubernetesCluster() bool {
	if o != nil && !IsNil(o.KubernetesCluster) {
		return true
	}

	return false
}

// SetKubernetesCluster gets a reference to the given string and assigns it to the KubernetesCluster field.
func (o *Host) SetKubernetesCluster(v string) {
	o.KubernetesCluster = &v
}

// GetKubernetesLabels returns the KubernetesLabels field value if set, zero value otherwise.
func (o *Host) GetKubernetesLabels() map[string]map[string]interface{} {
	if o == nil || IsNil(o.KubernetesLabels) {
		var ret map[string]map[string]interface{}
		return ret
	}
	return o.KubernetesLabels
}

// GetKubernetesLabelsOk returns a tuple with the KubernetesLabels field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Host) GetKubernetesLabelsOk() (map[string]map[string]interface{}, bool) {
	if o == nil || IsNil(o.KubernetesLabels) {
		return map[string]map[string]interface{}{}, false
	}
	return o.KubernetesLabels, true
}

// HasKubernetesLabels returns a boolean if a field has been set.
func (o *Host) HasKubernetesLabels() bool {
	if o != nil && !IsNil(o.KubernetesLabels) {
		return true
	}

	return false
}

// SetKubernetesLabels gets a reference to the given map[string]map[string]interface{} and assigns it to the KubernetesLabels field.
func (o *Host) SetKubernetesLabels(v map[string]map[string]interface{}) {
	o.KubernetesLabels = v
}

// GetKubernetesNode returns the KubernetesNode field value if set, zero value otherwise.
func (o *Host) GetKubernetesNode() string {
	if o == nil || IsNil(o.KubernetesNode) {
		var ret string
		return ret
	}
	return *o.KubernetesNode
}

// GetKubernetesNodeOk returns a tuple with the KubernetesNode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Host) GetKubernetesNodeOk() (*string, bool) {
	if o == nil || IsNil(o.KubernetesNode) {
		return nil, false
	}
	return o.KubernetesNode, true
}

// HasKubernetesNode returns a boolean if a field has been set.
func (o *Host) HasKubernetesNode() bool {
	if o != nil && !IsNil(o.KubernetesNode) {
		return true
	}

	return false
}

// SetKubernetesNode gets a reference to the given string and assigns it to the KubernetesNode field.
func (o *Host) SetKubernetesNode(v string) {
	o.KubernetesNode = &v
}

// GetLastSeenTimestamp returns the LastSeenTimestamp field value if set, zero value otherwise.
func (o *Host) GetLastSeenTimestamp() int64 {
	if o == nil || IsNil(o.LastSeenTimestamp) {
		var ret int64
		return ret
	}
	return *o.LastSeenTimestamp
}

// GetLastSeenTimestampOk returns a tuple with the LastSeenTimestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Host) GetLastSeenTimestampOk() (*int64, bool) {
	if o == nil || IsNil(o.LastSeenTimestamp) {
		return nil, false
	}
	return o.LastSeenTimestamp, true
}

// HasLastSeenTimestamp returns a boolean if a field has been set.
func (o *Host) HasLastSeenTimestamp() bool {
	if o != nil && !IsNil(o.LastSeenTimestamp) {
		return true
	}

	return false
}

// SetLastSeenTimestamp gets a reference to the given int64 and assigns it to the LastSeenTimestamp field.
func (o *Host) SetLastSeenTimestamp(v int64) {
	o.LastSeenTimestamp = &v
}

// GetLocalHostName returns the LocalHostName field value if set, zero value otherwise.
func (o *Host) GetLocalHostName() string {
	if o == nil || IsNil(o.LocalHostName) {
		var ret string
		return ret
	}
	return *o.LocalHostName
}

// GetLocalHostNameOk returns a tuple with the LocalHostName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Host) GetLocalHostNameOk() (*string, bool) {
	if o == nil || IsNil(o.LocalHostName) {
		return nil, false
	}
	return o.LocalHostName, true
}

// HasLocalHostName returns a boolean if a field has been set.
func (o *Host) HasLocalHostName() bool {
	if o != nil && !IsNil(o.LocalHostName) {
		return true
	}

	return false
}

// SetLocalHostName gets a reference to the given string and assigns it to the LocalHostName field.
func (o *Host) SetLocalHostName(v string) {
	o.LocalHostName = &v
}

// GetLocalIp returns the LocalIp field value if set, zero value otherwise.
func (o *Host) GetLocalIp() string {
	if o == nil || IsNil(o.LocalIp) {
		var ret string
		return ret
	}
	return *o.LocalIp
}

// GetLocalIpOk returns a tuple with the LocalIp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Host) GetLocalIpOk() (*string, bool) {
	if o == nil || IsNil(o.LocalIp) {
		return nil, false
	}
	return o.LocalIp, true
}

// HasLocalIp returns a boolean if a field has been set.
func (o *Host) HasLocalIp() bool {
	if o != nil && !IsNil(o.LocalIp) {
		return true
	}

	return false
}

// SetLocalIp gets a reference to the given string and assigns it to the LocalIp field.
func (o *Host) SetLocalIp(v string) {
	o.LocalIp = &v
}

// GetLogicalCpuCores returns the LogicalCpuCores field value if set, zero value otherwise.
func (o *Host) GetLogicalCpuCores() int32 {
	if o == nil || IsNil(o.LogicalCpuCores) {
		var ret int32
		return ret
	}
	return *o.LogicalCpuCores
}

// GetLogicalCpuCoresOk returns a tuple with the LogicalCpuCores field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Host) GetLogicalCpuCoresOk() (*int32, bool) {
	if o == nil || IsNil(o.LogicalCpuCores) {
		return nil, false
	}
	return o.LogicalCpuCores, true
}

// HasLogicalCpuCores returns a boolean if a field has been set.
func (o *Host) HasLogicalCpuCores() bool {
	if o != nil && !IsNil(o.LogicalCpuCores) {
		return true
	}

	return false
}

// SetLogicalCpuCores gets a reference to the given int32 and assigns it to the LogicalCpuCores field.
func (o *Host) SetLogicalCpuCores(v int32) {
	o.LogicalCpuCores = &v
}

// GetLogicalCpus returns the LogicalCpus field value if set, zero value otherwise.
func (o *Host) GetLogicalCpus() int32 {
	if o == nil || IsNil(o.LogicalCpus) {
		var ret int32
		return ret
	}
	return *o.LogicalCpus
}

// GetLogicalCpusOk returns a tuple with the LogicalCpus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Host) GetLogicalCpusOk() (*int32, bool) {
	if o == nil || IsNil(o.LogicalCpus) {
		return nil, false
	}
	return o.LogicalCpus, true
}

// HasLogicalCpus returns a boolean if a field has been set.
func (o *Host) HasLogicalCpus() bool {
	if o != nil && !IsNil(o.LogicalCpus) {
		return true
	}

	return false
}

// SetLogicalCpus gets a reference to the given int32 and assigns it to the LogicalCpus field.
func (o *Host) SetLogicalCpus(v int32) {
	o.LogicalCpus = &v
}

// GetManagementZones returns the ManagementZones field value if set, zero value otherwise.
func (o *Host) GetManagementZones() []EntityShortRepresentation {
	if o == nil || IsNil(o.ManagementZones) {
		var ret []EntityShortRepresentation
		return ret
	}
	return o.ManagementZones
}

// GetManagementZonesOk returns a tuple with the ManagementZones field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Host) GetManagementZonesOk() ([]EntityShortRepresentation, bool) {
	if o == nil || IsNil(o.ManagementZones) {
		return nil, false
	}
	return o.ManagementZones, true
}

// HasManagementZones returns a boolean if a field has been set.
func (o *Host) HasManagementZones() bool {
	if o != nil && !IsNil(o.ManagementZones) {
		return true
	}

	return false
}

// SetManagementZones gets a reference to the given []EntityShortRepresentation and assigns it to the ManagementZones field.
func (o *Host) SetManagementZones(v []EntityShortRepresentation) {
	o.ManagementZones = v
}

// GetMonitoringMode returns the MonitoringMode field value if set, zero value otherwise.
func (o *Host) GetMonitoringMode() string {
	if o == nil || IsNil(o.MonitoringMode) {
		var ret string
		return ret
	}
	return *o.MonitoringMode
}

// GetMonitoringModeOk returns a tuple with the MonitoringMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Host) GetMonitoringModeOk() (*string, bool) {
	if o == nil || IsNil(o.MonitoringMode) {
		return nil, false
	}
	return o.MonitoringMode, true
}

// HasMonitoringMode returns a boolean if a field has been set.
func (o *Host) HasMonitoringMode() bool {
	if o != nil && !IsNil(o.MonitoringMode) {
		return true
	}

	return false
}

// SetMonitoringMode gets a reference to the given string and assigns it to the MonitoringMode field.
func (o *Host) SetMonitoringMode(v string) {
	o.MonitoringMode = &v
}

// GetNetworkZoneId returns the NetworkZoneId field value if set, zero value otherwise.
func (o *Host) GetNetworkZoneId() string {
	if o == nil || IsNil(o.NetworkZoneId) {
		var ret string
		return ret
	}
	return *o.NetworkZoneId
}

// GetNetworkZoneIdOk returns a tuple with the NetworkZoneId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Host) GetNetworkZoneIdOk() (*string, bool) {
	if o == nil || IsNil(o.NetworkZoneId) {
		return nil, false
	}
	return o.NetworkZoneId, true
}

// HasNetworkZoneId returns a boolean if a field has been set.
func (o *Host) HasNetworkZoneId() bool {
	if o != nil && !IsNil(o.NetworkZoneId) {
		return true
	}

	return false
}

// SetNetworkZoneId gets a reference to the given string and assigns it to the NetworkZoneId field.
func (o *Host) SetNetworkZoneId(v string) {
	o.NetworkZoneId = &v
}

// GetOneAgentCustomHostName returns the OneAgentCustomHostName field value if set, zero value otherwise.
func (o *Host) GetOneAgentCustomHostName() string {
	if o == nil || IsNil(o.OneAgentCustomHostName) {
		var ret string
		return ret
	}
	return *o.OneAgentCustomHostName
}

// GetOneAgentCustomHostNameOk returns a tuple with the OneAgentCustomHostName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Host) GetOneAgentCustomHostNameOk() (*string, bool) {
	if o == nil || IsNil(o.OneAgentCustomHostName) {
		return nil, false
	}
	return o.OneAgentCustomHostName, true
}

// HasOneAgentCustomHostName returns a boolean if a field has been set.
func (o *Host) HasOneAgentCustomHostName() bool {
	if o != nil && !IsNil(o.OneAgentCustomHostName) {
		return true
	}

	return false
}

// SetOneAgentCustomHostName gets a reference to the given string and assigns it to the OneAgentCustomHostName field.
func (o *Host) SetOneAgentCustomHostName(v string) {
	o.OneAgentCustomHostName = &v
}

// GetOpenStackInstaceType returns the OpenStackInstaceType field value if set, zero value otherwise.
func (o *Host) GetOpenStackInstaceType() string {
	if o == nil || IsNil(o.OpenStackInstaceType) {
		var ret string
		return ret
	}
	return *o.OpenStackInstaceType
}

// GetOpenStackInstaceTypeOk returns a tuple with the OpenStackInstaceType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Host) GetOpenStackInstaceTypeOk() (*string, bool) {
	if o == nil || IsNil(o.OpenStackInstaceType) {
		return nil, false
	}
	return o.OpenStackInstaceType, true
}

// HasOpenStackInstaceType returns a boolean if a field has been set.
func (o *Host) HasOpenStackInstaceType() bool {
	if o != nil && !IsNil(o.OpenStackInstaceType) {
		return true
	}

	return false
}

// SetOpenStackInstaceType gets a reference to the given string and assigns it to the OpenStackInstaceType field.
func (o *Host) SetOpenStackInstaceType(v string) {
	o.OpenStackInstaceType = &v
}

// GetOpenstackAvZone returns the OpenstackAvZone field value if set, zero value otherwise.
func (o *Host) GetOpenstackAvZone() string {
	if o == nil || IsNil(o.OpenstackAvZone) {
		var ret string
		return ret
	}
	return *o.OpenstackAvZone
}

// GetOpenstackAvZoneOk returns a tuple with the OpenstackAvZone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Host) GetOpenstackAvZoneOk() (*string, bool) {
	if o == nil || IsNil(o.OpenstackAvZone) {
		return nil, false
	}
	return o.OpenstackAvZone, true
}

// HasOpenstackAvZone returns a boolean if a field has been set.
func (o *Host) HasOpenstackAvZone() bool {
	if o != nil && !IsNil(o.OpenstackAvZone) {
		return true
	}

	return false
}

// SetOpenstackAvZone gets a reference to the given string and assigns it to the OpenstackAvZone field.
func (o *Host) SetOpenstackAvZone(v string) {
	o.OpenstackAvZone = &v
}

// GetOpenstackComputeNodeName returns the OpenstackComputeNodeName field value if set, zero value otherwise.
func (o *Host) GetOpenstackComputeNodeName() string {
	if o == nil || IsNil(o.OpenstackComputeNodeName) {
		var ret string
		return ret
	}
	return *o.OpenstackComputeNodeName
}

// GetOpenstackComputeNodeNameOk returns a tuple with the OpenstackComputeNodeName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Host) GetOpenstackComputeNodeNameOk() (*string, bool) {
	if o == nil || IsNil(o.OpenstackComputeNodeName) {
		return nil, false
	}
	return o.OpenstackComputeNodeName, true
}

// HasOpenstackComputeNodeName returns a boolean if a field has been set.
func (o *Host) HasOpenstackComputeNodeName() bool {
	if o != nil && !IsNil(o.OpenstackComputeNodeName) {
		return true
	}

	return false
}

// SetOpenstackComputeNodeName gets a reference to the given string and assigns it to the OpenstackComputeNodeName field.
func (o *Host) SetOpenstackComputeNodeName(v string) {
	o.OpenstackComputeNodeName = &v
}

// GetOpenstackProjectName returns the OpenstackProjectName field value if set, zero value otherwise.
func (o *Host) GetOpenstackProjectName() string {
	if o == nil || IsNil(o.OpenstackProjectName) {
		var ret string
		return ret
	}
	return *o.OpenstackProjectName
}

// GetOpenstackProjectNameOk returns a tuple with the OpenstackProjectName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Host) GetOpenstackProjectNameOk() (*string, bool) {
	if o == nil || IsNil(o.OpenstackProjectName) {
		return nil, false
	}
	return o.OpenstackProjectName, true
}

// HasOpenstackProjectName returns a boolean if a field has been set.
func (o *Host) HasOpenstackProjectName() bool {
	if o != nil && !IsNil(o.OpenstackProjectName) {
		return true
	}

	return false
}

// SetOpenstackProjectName gets a reference to the given string and assigns it to the OpenstackProjectName field.
func (o *Host) SetOpenstackProjectName(v string) {
	o.OpenstackProjectName = &v
}

// GetOpenstackSecurityGroups returns the OpenstackSecurityGroups field value if set, zero value otherwise.
func (o *Host) GetOpenstackSecurityGroups() []string {
	if o == nil || IsNil(o.OpenstackSecurityGroups) {
		var ret []string
		return ret
	}
	return o.OpenstackSecurityGroups
}

// GetOpenstackSecurityGroupsOk returns a tuple with the OpenstackSecurityGroups field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Host) GetOpenstackSecurityGroupsOk() ([]string, bool) {
	if o == nil || IsNil(o.OpenstackSecurityGroups) {
		return nil, false
	}
	return o.OpenstackSecurityGroups, true
}

// HasOpenstackSecurityGroups returns a boolean if a field has been set.
func (o *Host) HasOpenstackSecurityGroups() bool {
	if o != nil && !IsNil(o.OpenstackSecurityGroups) {
		return true
	}

	return false
}

// SetOpenstackSecurityGroups gets a reference to the given []string and assigns it to the OpenstackSecurityGroups field.
func (o *Host) SetOpenstackSecurityGroups(v []string) {
	o.OpenstackSecurityGroups = v
}

// GetOpenstackVmName returns the OpenstackVmName field value if set, zero value otherwise.
func (o *Host) GetOpenstackVmName() string {
	if o == nil || IsNil(o.OpenstackVmName) {
		var ret string
		return ret
	}
	return *o.OpenstackVmName
}

// GetOpenstackVmNameOk returns a tuple with the OpenstackVmName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Host) GetOpenstackVmNameOk() (*string, bool) {
	if o == nil || IsNil(o.OpenstackVmName) {
		return nil, false
	}
	return o.OpenstackVmName, true
}

// HasOpenstackVmName returns a boolean if a field has been set.
func (o *Host) HasOpenstackVmName() bool {
	if o != nil && !IsNil(o.OpenstackVmName) {
		return true
	}

	return false
}

// SetOpenstackVmName gets a reference to the given string and assigns it to the OpenstackVmName field.
func (o *Host) SetOpenstackVmName(v string) {
	o.OpenstackVmName = &v
}

// GetOsArchitecture returns the OsArchitecture field value if set, zero value otherwise.
func (o *Host) GetOsArchitecture() string {
	if o == nil || IsNil(o.OsArchitecture) {
		var ret string
		return ret
	}
	return *o.OsArchitecture
}

// GetOsArchitectureOk returns a tuple with the OsArchitecture field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Host) GetOsArchitectureOk() (*string, bool) {
	if o == nil || IsNil(o.OsArchitecture) {
		return nil, false
	}
	return o.OsArchitecture, true
}

// HasOsArchitecture returns a boolean if a field has been set.
func (o *Host) HasOsArchitecture() bool {
	if o != nil && !IsNil(o.OsArchitecture) {
		return true
	}

	return false
}

// SetOsArchitecture gets a reference to the given string and assigns it to the OsArchitecture field.
func (o *Host) SetOsArchitecture(v string) {
	o.OsArchitecture = &v
}

// GetOsType returns the OsType field value if set, zero value otherwise.
func (o *Host) GetOsType() string {
	if o == nil || IsNil(o.OsType) {
		var ret string
		return ret
	}
	return *o.OsType
}

// GetOsTypeOk returns a tuple with the OsType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Host) GetOsTypeOk() (*string, bool) {
	if o == nil || IsNil(o.OsType) {
		return nil, false
	}
	return o.OsType, true
}

// HasOsType returns a boolean if a field has been set.
func (o *Host) HasOsType() bool {
	if o != nil && !IsNil(o.OsType) {
		return true
	}

	return false
}

// SetOsType gets a reference to the given string and assigns it to the OsType field.
func (o *Host) SetOsType(v string) {
	o.OsType = &v
}

// GetOsVersion returns the OsVersion field value if set, zero value otherwise.
func (o *Host) GetOsVersion() string {
	if o == nil || IsNil(o.OsVersion) {
		var ret string
		return ret
	}
	return *o.OsVersion
}

// GetOsVersionOk returns a tuple with the OsVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Host) GetOsVersionOk() (*string, bool) {
	if o == nil || IsNil(o.OsVersion) {
		return nil, false
	}
	return o.OsVersion, true
}

// HasOsVersion returns a boolean if a field has been set.
func (o *Host) HasOsVersion() bool {
	if o != nil && !IsNil(o.OsVersion) {
		return true
	}

	return false
}

// SetOsVersion gets a reference to the given string and assigns it to the OsVersion field.
func (o *Host) SetOsVersion(v string) {
	o.OsVersion = &v
}

// GetPaasAgentVersions returns the PaasAgentVersions field value if set, zero value otherwise.
func (o *Host) GetPaasAgentVersions() []AgentVersion {
	if o == nil || IsNil(o.PaasAgentVersions) {
		var ret []AgentVersion
		return ret
	}
	return o.PaasAgentVersions
}

// GetPaasAgentVersionsOk returns a tuple with the PaasAgentVersions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Host) GetPaasAgentVersionsOk() ([]AgentVersion, bool) {
	if o == nil || IsNil(o.PaasAgentVersions) {
		return nil, false
	}
	return o.PaasAgentVersions, true
}

// HasPaasAgentVersions returns a boolean if a field has been set.
func (o *Host) HasPaasAgentVersions() bool {
	if o != nil && !IsNil(o.PaasAgentVersions) {
		return true
	}

	return false
}

// SetPaasAgentVersions gets a reference to the given []AgentVersion and assigns it to the PaasAgentVersions field.
func (o *Host) SetPaasAgentVersions(v []AgentVersion) {
	o.PaasAgentVersions = v
}

// GetPaasMemoryLimit returns the PaasMemoryLimit field value if set, zero value otherwise.
func (o *Host) GetPaasMemoryLimit() int64 {
	if o == nil || IsNil(o.PaasMemoryLimit) {
		var ret int64
		return ret
	}
	return *o.PaasMemoryLimit
}

// GetPaasMemoryLimitOk returns a tuple with the PaasMemoryLimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Host) GetPaasMemoryLimitOk() (*int64, bool) {
	if o == nil || IsNil(o.PaasMemoryLimit) {
		return nil, false
	}
	return o.PaasMemoryLimit, true
}

// HasPaasMemoryLimit returns a boolean if a field has been set.
func (o *Host) HasPaasMemoryLimit() bool {
	if o != nil && !IsNil(o.PaasMemoryLimit) {
		return true
	}

	return false
}

// SetPaasMemoryLimit gets a reference to the given int64 and assigns it to the PaasMemoryLimit field.
func (o *Host) SetPaasMemoryLimit(v int64) {
	o.PaasMemoryLimit = &v
}

// GetPaasType returns the PaasType field value if set, zero value otherwise.
func (o *Host) GetPaasType() string {
	if o == nil || IsNil(o.PaasType) {
		var ret string
		return ret
	}
	return *o.PaasType
}

// GetPaasTypeOk returns a tuple with the PaasType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Host) GetPaasTypeOk() (*string, bool) {
	if o == nil || IsNil(o.PaasType) {
		return nil, false
	}
	return o.PaasType, true
}

// HasPaasType returns a boolean if a field has been set.
func (o *Host) HasPaasType() bool {
	if o != nil && !IsNil(o.PaasType) {
		return true
	}

	return false
}

// SetPaasType gets a reference to the given string and assigns it to the PaasType field.
func (o *Host) SetPaasType(v string) {
	o.PaasType = &v
}

// GetPublicHostName returns the PublicHostName field value if set, zero value otherwise.
func (o *Host) GetPublicHostName() string {
	if o == nil || IsNil(o.PublicHostName) {
		var ret string
		return ret
	}
	return *o.PublicHostName
}

// GetPublicHostNameOk returns a tuple with the PublicHostName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Host) GetPublicHostNameOk() (*string, bool) {
	if o == nil || IsNil(o.PublicHostName) {
		return nil, false
	}
	return o.PublicHostName, true
}

// HasPublicHostName returns a boolean if a field has been set.
func (o *Host) HasPublicHostName() bool {
	if o != nil && !IsNil(o.PublicHostName) {
		return true
	}

	return false
}

// SetPublicHostName gets a reference to the given string and assigns it to the PublicHostName field.
func (o *Host) SetPublicHostName(v string) {
	o.PublicHostName = &v
}

// GetPublicIp returns the PublicIp field value if set, zero value otherwise.
func (o *Host) GetPublicIp() string {
	if o == nil || IsNil(o.PublicIp) {
		var ret string
		return ret
	}
	return *o.PublicIp
}

// GetPublicIpOk returns a tuple with the PublicIp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Host) GetPublicIpOk() (*string, bool) {
	if o == nil || IsNil(o.PublicIp) {
		return nil, false
	}
	return o.PublicIp, true
}

// HasPublicIp returns a boolean if a field has been set.
func (o *Host) HasPublicIp() bool {
	if o != nil && !IsNil(o.PublicIp) {
		return true
	}

	return false
}

// SetPublicIp gets a reference to the given string and assigns it to the PublicIp field.
func (o *Host) SetPublicIp(v string) {
	o.PublicIp = &v
}

// GetScaleSetName returns the ScaleSetName field value if set, zero value otherwise.
func (o *Host) GetScaleSetName() string {
	if o == nil || IsNil(o.ScaleSetName) {
		var ret string
		return ret
	}
	return *o.ScaleSetName
}

// GetScaleSetNameOk returns a tuple with the ScaleSetName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Host) GetScaleSetNameOk() (*string, bool) {
	if o == nil || IsNil(o.ScaleSetName) {
		return nil, false
	}
	return o.ScaleSetName, true
}

// HasScaleSetName returns a boolean if a field has been set.
func (o *Host) HasScaleSetName() bool {
	if o != nil && !IsNil(o.ScaleSetName) {
		return true
	}

	return false
}

// SetScaleSetName gets a reference to the given string and assigns it to the ScaleSetName field.
func (o *Host) SetScaleSetName(v string) {
	o.ScaleSetName = &v
}

// GetSimultaneousMultithreading returns the SimultaneousMultithreading field value if set, zero value otherwise.
func (o *Host) GetSimultaneousMultithreading() int32 {
	if o == nil || IsNil(o.SimultaneousMultithreading) {
		var ret int32
		return ret
	}
	return *o.SimultaneousMultithreading
}

// GetSimultaneousMultithreadingOk returns a tuple with the SimultaneousMultithreading field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Host) GetSimultaneousMultithreadingOk() (*int32, bool) {
	if o == nil || IsNil(o.SimultaneousMultithreading) {
		return nil, false
	}
	return o.SimultaneousMultithreading, true
}

// HasSimultaneousMultithreading returns a boolean if a field has been set.
func (o *Host) HasSimultaneousMultithreading() bool {
	if o != nil && !IsNil(o.SimultaneousMultithreading) {
		return true
	}

	return false
}

// SetSimultaneousMultithreading gets a reference to the given int32 and assigns it to the SimultaneousMultithreading field.
func (o *Host) SetSimultaneousMultithreading(v int32) {
	o.SimultaneousMultithreading = &v
}

// GetSoftwareTechnologies returns the SoftwareTechnologies field value if set, zero value otherwise.
func (o *Host) GetSoftwareTechnologies() []TechnologyInfo {
	if o == nil || IsNil(o.SoftwareTechnologies) {
		var ret []TechnologyInfo
		return ret
	}
	return o.SoftwareTechnologies
}

// GetSoftwareTechnologiesOk returns a tuple with the SoftwareTechnologies field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Host) GetSoftwareTechnologiesOk() ([]TechnologyInfo, bool) {
	if o == nil || IsNil(o.SoftwareTechnologies) {
		return nil, false
	}
	return o.SoftwareTechnologies, true
}

// HasSoftwareTechnologies returns a boolean if a field has been set.
func (o *Host) HasSoftwareTechnologies() bool {
	if o != nil && !IsNil(o.SoftwareTechnologies) {
		return true
	}

	return false
}

// SetSoftwareTechnologies gets a reference to the given []TechnologyInfo and assigns it to the SoftwareTechnologies field.
func (o *Host) SetSoftwareTechnologies(v []TechnologyInfo) {
	o.SoftwareTechnologies = v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *Host) GetTags() []TagInfo {
	if o == nil || IsNil(o.Tags) {
		var ret []TagInfo
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Host) GetTagsOk() ([]TagInfo, bool) {
	if o == nil || IsNil(o.Tags) {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *Host) HasTags() bool {
	if o != nil && !IsNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given []TagInfo and assigns it to the Tags field.
func (o *Host) SetTags(v []TagInfo) {
	o.Tags = v
}

// GetToRelationships returns the ToRelationships field value if set, zero value otherwise.
func (o *Host) GetToRelationships() HostToRelationships {
	if o == nil || IsNil(o.ToRelationships) {
		var ret HostToRelationships
		return ret
	}
	return *o.ToRelationships
}

// GetToRelationshipsOk returns a tuple with the ToRelationships field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Host) GetToRelationshipsOk() (*HostToRelationships, bool) {
	if o == nil || IsNil(o.ToRelationships) {
		return nil, false
	}
	return o.ToRelationships, true
}

// HasToRelationships returns a boolean if a field has been set.
func (o *Host) HasToRelationships() bool {
	if o != nil && !IsNil(o.ToRelationships) {
		return true
	}

	return false
}

// SetToRelationships gets a reference to the given HostToRelationships and assigns it to the ToRelationships field.
func (o *Host) SetToRelationships(v HostToRelationships) {
	o.ToRelationships = &v
}

// GetUserLevel returns the UserLevel field value if set, zero value otherwise.
func (o *Host) GetUserLevel() string {
	if o == nil || IsNil(o.UserLevel) {
		var ret string
		return ret
	}
	return *o.UserLevel
}

// GetUserLevelOk returns a tuple with the UserLevel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Host) GetUserLevelOk() (*string, bool) {
	if o == nil || IsNil(o.UserLevel) {
		return nil, false
	}
	return o.UserLevel, true
}

// HasUserLevel returns a boolean if a field has been set.
func (o *Host) HasUserLevel() bool {
	if o != nil && !IsNil(o.UserLevel) {
		return true
	}

	return false
}

// SetUserLevel gets a reference to the given string and assigns it to the UserLevel field.
func (o *Host) SetUserLevel(v string) {
	o.UserLevel = &v
}

// GetVirtualCpus returns the VirtualCpus field value if set, zero value otherwise.
func (o *Host) GetVirtualCpus() int32 {
	if o == nil || IsNil(o.VirtualCpus) {
		var ret int32
		return ret
	}
	return *o.VirtualCpus
}

// GetVirtualCpusOk returns a tuple with the VirtualCpus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Host) GetVirtualCpusOk() (*int32, bool) {
	if o == nil || IsNil(o.VirtualCpus) {
		return nil, false
	}
	return o.VirtualCpus, true
}

// HasVirtualCpus returns a boolean if a field has been set.
func (o *Host) HasVirtualCpus() bool {
	if o != nil && !IsNil(o.VirtualCpus) {
		return true
	}

	return false
}

// SetVirtualCpus gets a reference to the given int32 and assigns it to the VirtualCpus field.
func (o *Host) SetVirtualCpus(v int32) {
	o.VirtualCpus = &v
}

// GetVmwareName returns the VmwareName field value if set, zero value otherwise.
func (o *Host) GetVmwareName() string {
	if o == nil || IsNil(o.VmwareName) {
		var ret string
		return ret
	}
	return *o.VmwareName
}

// GetVmwareNameOk returns a tuple with the VmwareName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Host) GetVmwareNameOk() (*string, bool) {
	if o == nil || IsNil(o.VmwareName) {
		return nil, false
	}
	return o.VmwareName, true
}

// HasVmwareName returns a boolean if a field has been set.
func (o *Host) HasVmwareName() bool {
	if o != nil && !IsNil(o.VmwareName) {
		return true
	}

	return false
}

// SetVmwareName gets a reference to the given string and assigns it to the VmwareName field.
func (o *Host) SetVmwareName(v string) {
	o.VmwareName = &v
}

// GetZosCPUModelNumber returns the ZosCPUModelNumber field value if set, zero value otherwise.
func (o *Host) GetZosCPUModelNumber() string {
	if o == nil || IsNil(o.ZosCPUModelNumber) {
		var ret string
		return ret
	}
	return *o.ZosCPUModelNumber
}

// GetZosCPUModelNumberOk returns a tuple with the ZosCPUModelNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Host) GetZosCPUModelNumberOk() (*string, bool) {
	if o == nil || IsNil(o.ZosCPUModelNumber) {
		return nil, false
	}
	return o.ZosCPUModelNumber, true
}

// HasZosCPUModelNumber returns a boolean if a field has been set.
func (o *Host) HasZosCPUModelNumber() bool {
	if o != nil && !IsNil(o.ZosCPUModelNumber) {
		return true
	}

	return false
}

// SetZosCPUModelNumber gets a reference to the given string and assigns it to the ZosCPUModelNumber field.
func (o *Host) SetZosCPUModelNumber(v string) {
	o.ZosCPUModelNumber = &v
}

// GetZosCPUSerialNumber returns the ZosCPUSerialNumber field value if set, zero value otherwise.
func (o *Host) GetZosCPUSerialNumber() string {
	if o == nil || IsNil(o.ZosCPUSerialNumber) {
		var ret string
		return ret
	}
	return *o.ZosCPUSerialNumber
}

// GetZosCPUSerialNumberOk returns a tuple with the ZosCPUSerialNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Host) GetZosCPUSerialNumberOk() (*string, bool) {
	if o == nil || IsNil(o.ZosCPUSerialNumber) {
		return nil, false
	}
	return o.ZosCPUSerialNumber, true
}

// HasZosCPUSerialNumber returns a boolean if a field has been set.
func (o *Host) HasZosCPUSerialNumber() bool {
	if o != nil && !IsNil(o.ZosCPUSerialNumber) {
		return true
	}

	return false
}

// SetZosCPUSerialNumber gets a reference to the given string and assigns it to the ZosCPUSerialNumber field.
func (o *Host) SetZosCPUSerialNumber(v string) {
	o.ZosCPUSerialNumber = &v
}

// GetZosLpaName returns the ZosLpaName field value if set, zero value otherwise.
func (o *Host) GetZosLpaName() string {
	if o == nil || IsNil(o.ZosLpaName) {
		var ret string
		return ret
	}
	return *o.ZosLpaName
}

// GetZosLpaNameOk returns a tuple with the ZosLpaName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Host) GetZosLpaNameOk() (*string, bool) {
	if o == nil || IsNil(o.ZosLpaName) {
		return nil, false
	}
	return o.ZosLpaName, true
}

// HasZosLpaName returns a boolean if a field has been set.
func (o *Host) HasZosLpaName() bool {
	if o != nil && !IsNil(o.ZosLpaName) {
		return true
	}

	return false
}

// SetZosLpaName gets a reference to the given string and assigns it to the ZosLpaName field.
func (o *Host) SetZosLpaName(v string) {
	o.ZosLpaName = &v
}

// GetZosSystemName returns the ZosSystemName field value if set, zero value otherwise.
func (o *Host) GetZosSystemName() string {
	if o == nil || IsNil(o.ZosSystemName) {
		var ret string
		return ret
	}
	return *o.ZosSystemName
}

// GetZosSystemNameOk returns a tuple with the ZosSystemName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Host) GetZosSystemNameOk() (*string, bool) {
	if o == nil || IsNil(o.ZosSystemName) {
		return nil, false
	}
	return o.ZosSystemName, true
}

// HasZosSystemName returns a boolean if a field has been set.
func (o *Host) HasZosSystemName() bool {
	if o != nil && !IsNil(o.ZosSystemName) {
		return true
	}

	return false
}

// SetZosSystemName gets a reference to the given string and assigns it to the ZosSystemName field.
func (o *Host) SetZosSystemName(v string) {
	o.ZosSystemName = &v
}

// GetZosTotalGeneralPurposeProcessors returns the ZosTotalGeneralPurposeProcessors field value if set, zero value otherwise.
func (o *Host) GetZosTotalGeneralPurposeProcessors() int32 {
	if o == nil || IsNil(o.ZosTotalGeneralPurposeProcessors) {
		var ret int32
		return ret
	}
	return *o.ZosTotalGeneralPurposeProcessors
}

// GetZosTotalGeneralPurposeProcessorsOk returns a tuple with the ZosTotalGeneralPurposeProcessors field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Host) GetZosTotalGeneralPurposeProcessorsOk() (*int32, bool) {
	if o == nil || IsNil(o.ZosTotalGeneralPurposeProcessors) {
		return nil, false
	}
	return o.ZosTotalGeneralPurposeProcessors, true
}

// HasZosTotalGeneralPurposeProcessors returns a boolean if a field has been set.
func (o *Host) HasZosTotalGeneralPurposeProcessors() bool {
	if o != nil && !IsNil(o.ZosTotalGeneralPurposeProcessors) {
		return true
	}

	return false
}

// SetZosTotalGeneralPurposeProcessors gets a reference to the given int32 and assigns it to the ZosTotalGeneralPurposeProcessors field.
func (o *Host) SetZosTotalGeneralPurposeProcessors(v int32) {
	o.ZosTotalGeneralPurposeProcessors = &v
}

// GetZosTotalPhysicalMemory returns the ZosTotalPhysicalMemory field value if set, zero value otherwise.
func (o *Host) GetZosTotalPhysicalMemory() int32 {
	if o == nil || IsNil(o.ZosTotalPhysicalMemory) {
		var ret int32
		return ret
	}
	return *o.ZosTotalPhysicalMemory
}

// GetZosTotalPhysicalMemoryOk returns a tuple with the ZosTotalPhysicalMemory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Host) GetZosTotalPhysicalMemoryOk() (*int32, bool) {
	if o == nil || IsNil(o.ZosTotalPhysicalMemory) {
		return nil, false
	}
	return o.ZosTotalPhysicalMemory, true
}

// HasZosTotalPhysicalMemory returns a boolean if a field has been set.
func (o *Host) HasZosTotalPhysicalMemory() bool {
	if o != nil && !IsNil(o.ZosTotalPhysicalMemory) {
		return true
	}

	return false
}

// SetZosTotalPhysicalMemory gets a reference to the given int32 and assigns it to the ZosTotalPhysicalMemory field.
func (o *Host) SetZosTotalPhysicalMemory(v int32) {
	o.ZosTotalPhysicalMemory = &v
}

// GetZosTotalZiipProcessors returns the ZosTotalZiipProcessors field value if set, zero value otherwise.
func (o *Host) GetZosTotalZiipProcessors() int32 {
	if o == nil || IsNil(o.ZosTotalZiipProcessors) {
		var ret int32
		return ret
	}
	return *o.ZosTotalZiipProcessors
}

// GetZosTotalZiipProcessorsOk returns a tuple with the ZosTotalZiipProcessors field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Host) GetZosTotalZiipProcessorsOk() (*int32, bool) {
	if o == nil || IsNil(o.ZosTotalZiipProcessors) {
		return nil, false
	}
	return o.ZosTotalZiipProcessors, true
}

// HasZosTotalZiipProcessors returns a boolean if a field has been set.
func (o *Host) HasZosTotalZiipProcessors() bool {
	if o != nil && !IsNil(o.ZosTotalZiipProcessors) {
		return true
	}

	return false
}

// SetZosTotalZiipProcessors gets a reference to the given int32 and assigns it to the ZosTotalZiipProcessors field.
func (o *Host) SetZosTotalZiipProcessors(v int32) {
	o.ZosTotalZiipProcessors = &v
}

// GetZosVirtualization returns the ZosVirtualization field value if set, zero value otherwise.
func (o *Host) GetZosVirtualization() string {
	if o == nil || IsNil(o.ZosVirtualization) {
		var ret string
		return ret
	}
	return *o.ZosVirtualization
}

// GetZosVirtualizationOk returns a tuple with the ZosVirtualization field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Host) GetZosVirtualizationOk() (*string, bool) {
	if o == nil || IsNil(o.ZosVirtualization) {
		return nil, false
	}
	return o.ZosVirtualization, true
}

// HasZosVirtualization returns a boolean if a field has been set.
func (o *Host) HasZosVirtualization() bool {
	if o != nil && !IsNil(o.ZosVirtualization) {
		return true
	}

	return false
}

// SetZosVirtualization gets a reference to the given string and assigns it to the ZosVirtualization field.
func (o *Host) SetZosVirtualization(v string) {
	o.ZosVirtualization = &v
}

func (o Host) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Host) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AgentVersion) {
		toSerialize["agentVersion"] = o.AgentVersion
	}
	if !IsNil(o.AmiId) {
		toSerialize["amiId"] = o.AmiId
	}
	if !IsNil(o.AutoInjection) {
		toSerialize["autoInjection"] = o.AutoInjection
	}
	if !IsNil(o.AutoScalingGroup) {
		toSerialize["autoScalingGroup"] = o.AutoScalingGroup
	}
	if !IsNil(o.AwsInstanceId) {
		toSerialize["awsInstanceId"] = o.AwsInstanceId
	}
	if !IsNil(o.AwsInstanceType) {
		toSerialize["awsInstanceType"] = o.AwsInstanceType
	}
	if !IsNil(o.AwsNameTag) {
		toSerialize["awsNameTag"] = o.AwsNameTag
	}
	if !IsNil(o.AwsSecurityGroup) {
		toSerialize["awsSecurityGroup"] = o.AwsSecurityGroup
	}
	if !IsNil(o.AzureComputeModeName) {
		toSerialize["azureComputeModeName"] = o.AzureComputeModeName
	}
	if !IsNil(o.AzureEnvironment) {
		toSerialize["azureEnvironment"] = o.AzureEnvironment
	}
	if !IsNil(o.AzureHostNames) {
		toSerialize["azureHostNames"] = o.AzureHostNames
	}
	if !IsNil(o.AzureResourceGroupName) {
		toSerialize["azureResourceGroupName"] = o.AzureResourceGroupName
	}
	if !IsNil(o.AzureResourceId) {
		toSerialize["azureResourceId"] = o.AzureResourceId
	}
	if !IsNil(o.AzureSiteNames) {
		toSerialize["azureSiteNames"] = o.AzureSiteNames
	}
	if !IsNil(o.AzureSku) {
		toSerialize["azureSku"] = o.AzureSku
	}
	if !IsNil(o.AzureVmName) {
		toSerialize["azureVmName"] = o.AzureVmName
	}
	if !IsNil(o.AzureVmScaleSetName) {
		toSerialize["azureVmScaleSetName"] = o.AzureVmScaleSetName
	}
	if !IsNil(o.AzureVmSizeLabel) {
		toSerialize["azureVmSizeLabel"] = o.AzureVmSizeLabel
	}
	if !IsNil(o.AzureZone) {
		toSerialize["azureZone"] = o.AzureZone
	}
	if !IsNil(o.BeanstalkEnvironmentName) {
		toSerialize["beanstalkEnvironmentName"] = o.BeanstalkEnvironmentName
	}
	if !IsNil(o.Bitness) {
		toSerialize["bitness"] = o.Bitness
	}
	if !IsNil(o.BoshAvailabilityZone) {
		toSerialize["boshAvailabilityZone"] = o.BoshAvailabilityZone
	}
	if !IsNil(o.BoshDeploymentId) {
		toSerialize["boshDeploymentId"] = o.BoshDeploymentId
	}
	if !IsNil(o.BoshInstanceId) {
		toSerialize["boshInstanceId"] = o.BoshInstanceId
	}
	if !IsNil(o.BoshInstanceName) {
		toSerialize["boshInstanceName"] = o.BoshInstanceName
	}
	if !IsNil(o.BoshName) {
		toSerialize["boshName"] = o.BoshName
	}
	if !IsNil(o.BoshStemcellVersion) {
		toSerialize["boshStemcellVersion"] = o.BoshStemcellVersion
	}
	if !IsNil(o.CloudPlatformVendorVersion) {
		toSerialize["cloudPlatformVendorVersion"] = o.CloudPlatformVendorVersion
	}
	if !IsNil(o.CloudType) {
		toSerialize["cloudType"] = o.CloudType
	}
	if !IsNil(o.ConsumedHostUnits) {
		toSerialize["consumedHostUnits"] = o.ConsumedHostUnits
	}
	if !IsNil(o.CpuCores) {
		toSerialize["cpuCores"] = o.CpuCores
	}
	if !IsNil(o.CustomizedName) {
		toSerialize["customizedName"] = o.CustomizedName
	}
	if !IsNil(o.DiscoveredName) {
		toSerialize["discoveredName"] = o.DiscoveredName
	}
	if !IsNil(o.DisplayName) {
		toSerialize["displayName"] = o.DisplayName
	}
	if !IsNil(o.EntityId) {
		toSerialize["entityId"] = o.EntityId
	}
	if !IsNil(o.EsxiHostName) {
		toSerialize["esxiHostName"] = o.EsxiHostName
	}
	if !IsNil(o.FirstSeenTimestamp) {
		toSerialize["firstSeenTimestamp"] = o.FirstSeenTimestamp
	}
	if !IsNil(o.FromRelationships) {
		toSerialize["fromRelationships"] = o.FromRelationships
	}
	if !IsNil(o.GceInstanceId) {
		toSerialize["gceInstanceId"] = o.GceInstanceId
	}
	if !IsNil(o.GceInstanceName) {
		toSerialize["gceInstanceName"] = o.GceInstanceName
	}
	if !IsNil(o.GceMachineType) {
		toSerialize["gceMachineType"] = o.GceMachineType
	}
	if !IsNil(o.GceProject) {
		toSerialize["gceProject"] = o.GceProject
	}
	if !IsNil(o.GceProjectId) {
		toSerialize["gceProjectId"] = o.GceProjectId
	}
	if !IsNil(o.GcePublicIpAddresses) {
		toSerialize["gcePublicIpAddresses"] = o.GcePublicIpAddresses
	}
	if !IsNil(o.GcpZone) {
		toSerialize["gcpZone"] = o.GcpZone
	}
	if !IsNil(o.HostGroup) {
		toSerialize["hostGroup"] = o.HostGroup
	}
	if !IsNil(o.HypervisorType) {
		toSerialize["hypervisorType"] = o.HypervisorType
	}
	if !IsNil(o.IpAddresses) {
		toSerialize["ipAddresses"] = o.IpAddresses
	}
	if !IsNil(o.IsMonitoringCandidate) {
		toSerialize["isMonitoringCandidate"] = o.IsMonitoringCandidate
	}
	if !IsNil(o.KubernetesCluster) {
		toSerialize["kubernetesCluster"] = o.KubernetesCluster
	}
	if !IsNil(o.KubernetesLabels) {
		toSerialize["kubernetesLabels"] = o.KubernetesLabels
	}
	if !IsNil(o.KubernetesNode) {
		toSerialize["kubernetesNode"] = o.KubernetesNode
	}
	if !IsNil(o.LastSeenTimestamp) {
		toSerialize["lastSeenTimestamp"] = o.LastSeenTimestamp
	}
	if !IsNil(o.LocalHostName) {
		toSerialize["localHostName"] = o.LocalHostName
	}
	if !IsNil(o.LocalIp) {
		toSerialize["localIp"] = o.LocalIp
	}
	if !IsNil(o.LogicalCpuCores) {
		toSerialize["logicalCpuCores"] = o.LogicalCpuCores
	}
	if !IsNil(o.LogicalCpus) {
		toSerialize["logicalCpus"] = o.LogicalCpus
	}
	if !IsNil(o.ManagementZones) {
		toSerialize["managementZones"] = o.ManagementZones
	}
	if !IsNil(o.MonitoringMode) {
		toSerialize["monitoringMode"] = o.MonitoringMode
	}
	if !IsNil(o.NetworkZoneId) {
		toSerialize["networkZoneId"] = o.NetworkZoneId
	}
	if !IsNil(o.OneAgentCustomHostName) {
		toSerialize["oneAgentCustomHostName"] = o.OneAgentCustomHostName
	}
	if !IsNil(o.OpenStackInstaceType) {
		toSerialize["openStackInstaceType"] = o.OpenStackInstaceType
	}
	if !IsNil(o.OpenstackAvZone) {
		toSerialize["openstackAvZone"] = o.OpenstackAvZone
	}
	if !IsNil(o.OpenstackComputeNodeName) {
		toSerialize["openstackComputeNodeName"] = o.OpenstackComputeNodeName
	}
	if !IsNil(o.OpenstackProjectName) {
		toSerialize["openstackProjectName"] = o.OpenstackProjectName
	}
	if !IsNil(o.OpenstackSecurityGroups) {
		toSerialize["openstackSecurityGroups"] = o.OpenstackSecurityGroups
	}
	if !IsNil(o.OpenstackVmName) {
		toSerialize["openstackVmName"] = o.OpenstackVmName
	}
	if !IsNil(o.OsArchitecture) {
		toSerialize["osArchitecture"] = o.OsArchitecture
	}
	if !IsNil(o.OsType) {
		toSerialize["osType"] = o.OsType
	}
	if !IsNil(o.OsVersion) {
		toSerialize["osVersion"] = o.OsVersion
	}
	if !IsNil(o.PaasAgentVersions) {
		toSerialize["paasAgentVersions"] = o.PaasAgentVersions
	}
	if !IsNil(o.PaasMemoryLimit) {
		toSerialize["paasMemoryLimit"] = o.PaasMemoryLimit
	}
	if !IsNil(o.PaasType) {
		toSerialize["paasType"] = o.PaasType
	}
	if !IsNil(o.PublicHostName) {
		toSerialize["publicHostName"] = o.PublicHostName
	}
	if !IsNil(o.PublicIp) {
		toSerialize["publicIp"] = o.PublicIp
	}
	if !IsNil(o.ScaleSetName) {
		toSerialize["scaleSetName"] = o.ScaleSetName
	}
	if !IsNil(o.SimultaneousMultithreading) {
		toSerialize["simultaneousMultithreading"] = o.SimultaneousMultithreading
	}
	if !IsNil(o.SoftwareTechnologies) {
		toSerialize["softwareTechnologies"] = o.SoftwareTechnologies
	}
	if !IsNil(o.Tags) {
		toSerialize["tags"] = o.Tags
	}
	if !IsNil(o.ToRelationships) {
		toSerialize["toRelationships"] = o.ToRelationships
	}
	if !IsNil(o.UserLevel) {
		toSerialize["userLevel"] = o.UserLevel
	}
	if !IsNil(o.VirtualCpus) {
		toSerialize["virtualCpus"] = o.VirtualCpus
	}
	if !IsNil(o.VmwareName) {
		toSerialize["vmwareName"] = o.VmwareName
	}
	if !IsNil(o.ZosCPUModelNumber) {
		toSerialize["zosCPUModelNumber"] = o.ZosCPUModelNumber
	}
	if !IsNil(o.ZosCPUSerialNumber) {
		toSerialize["zosCPUSerialNumber"] = o.ZosCPUSerialNumber
	}
	if !IsNil(o.ZosLpaName) {
		toSerialize["zosLpaName"] = o.ZosLpaName
	}
	if !IsNil(o.ZosSystemName) {
		toSerialize["zosSystemName"] = o.ZosSystemName
	}
	if !IsNil(o.ZosTotalGeneralPurposeProcessors) {
		toSerialize["zosTotalGeneralPurposeProcessors"] = o.ZosTotalGeneralPurposeProcessors
	}
	if !IsNil(o.ZosTotalPhysicalMemory) {
		toSerialize["zosTotalPhysicalMemory"] = o.ZosTotalPhysicalMemory
	}
	if !IsNil(o.ZosTotalZiipProcessors) {
		toSerialize["zosTotalZiipProcessors"] = o.ZosTotalZiipProcessors
	}
	if !IsNil(o.ZosVirtualization) {
		toSerialize["zosVirtualization"] = o.ZosVirtualization
	}
	return toSerialize, nil
}

type NullableHost struct {
	value *Host
	isSet bool
}

func (v NullableHost) Get() *Host {
	return v.value
}

func (v *NullableHost) Set(val *Host) {
	v.value = val
	v.isSet = true
}

func (v NullableHost) IsSet() bool {
	return v.isSet
}

func (v *NullableHost) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHost(val *Host) *NullableHost {
	return &NullableHost{value: val, isSet: true}
}

func (v NullableHost) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHost) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


