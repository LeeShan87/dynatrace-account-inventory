/*
Dynatrace Environment API

Documentation of the Dynatrace Environment API v1. To read about use cases and examples, see [Dynatrace Documentation](https://dt-url.net/xc03k3c).  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package environmentv1

import (
	"encoding/json"
)

// checks if the Service type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Service{}

// Service struct for Service
type Service struct {
	AgentTechnologyType *string `json:"agentTechnologyType,omitempty"`
	// The services of the akka actor system.
	AkkaActorSystem *string `json:"akkaActorSystem,omitempty"`
	ClassName *string `json:"className,omitempty"`
	ContextRoot *string `json:"contextRoot,omitempty"`
	// The customized name of the entity
	CustomizedName *string `json:"customizedName,omitempty"`
	DatabaseHostNames []string `json:"databaseHostNames,omitempty"`
	DatabaseName *string `json:"databaseName,omitempty"`
	DatabaseVendor *string `json:"databaseVendor,omitempty"`
	// The discovered name of the entity
	DiscoveredName *string `json:"discoveredName,omitempty"`
	// The name of the Dynatrace entity as displayed in the UI.
	DisplayName *string `json:"displayName,omitempty"`
	// The Dynatrace entity ID of the required entity.
	EntityId *string `json:"entityId,omitempty"`
	// The ESB application name.
	EsbApplicationName *string `json:"esbApplicationName,omitempty"`
	// The timestamp of when the entity was first detected, in UTC milliseconds
	FirstSeenTimestamp *int64 `json:"firstSeenTimestamp,omitempty"`
	FromRelationships *ServiceFromRelationships `json:"fromRelationships,omitempty"`
	// The IBM CTG gateway URL.
	IbmCtgGatewayUrl *string `json:"ibmCtgGatewayUrl,omitempty"`
	// The IBM CICS Transaction Gateway name.
	IbmCtgServerName *string `json:"ibmCtgServerName,omitempty"`
	// The IIB application name.
	IibApplicationName *string `json:"iibApplicationName,omitempty"`
	IpAddresses []string `json:"ipAddresses,omitempty"`
	IsExternalService *bool `json:"isExternalService,omitempty"`
	// The timestamp of when the entity was last detected, in UTC milliseconds
	LastSeenTimestamp *int64 `json:"lastSeenTimestamp,omitempty"`
	// The management zones that the entity is part of.
	ManagementZones []EntityShortRepresentation `json:"managementZones,omitempty"`
	Path *string `json:"path,omitempty"`
	Port *int32 `json:"port,omitempty"`
	// The endpoint of the remote service.
	RemoteEndpoint *string `json:"remoteEndpoint,omitempty"`
	// The name of the remote service.
	RemoteServiceName *string `json:"remoteServiceName,omitempty"`
	// Attributes that contributed to the service id.
	ServiceDetectionAttributes map[string]map[string]interface{} `json:"serviceDetectionAttributes,omitempty"`
	ServiceTechnologyTypes []string `json:"serviceTechnologyTypes,omitempty"`
	ServiceType *string `json:"serviceType,omitempty"`
	SoftwareTechnologies []TechnologyInfo `json:"softwareTechnologies,omitempty"`
	// The list of entity tags.
	Tags []TagInfo `json:"tags,omitempty"`
	ToRelationships *ServiceToRelationships `json:"toRelationships,omitempty"`
	WebApplicationId *string `json:"webApplicationId,omitempty"`
	WebServerName *string `json:"webServerName,omitempty"`
	WebServiceName *string `json:"webServiceName,omitempty"`
	WebServiceNamespace *string `json:"webServiceNamespace,omitempty"`
}

// NewService instantiates a new Service object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewService() *Service {
	this := Service{}
	return &this
}

// NewServiceWithDefaults instantiates a new Service object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServiceWithDefaults() *Service {
	this := Service{}
	return &this
}

// GetAgentTechnologyType returns the AgentTechnologyType field value if set, zero value otherwise.
func (o *Service) GetAgentTechnologyType() string {
	if o == nil || IsNil(o.AgentTechnologyType) {
		var ret string
		return ret
	}
	return *o.AgentTechnologyType
}

// GetAgentTechnologyTypeOk returns a tuple with the AgentTechnologyType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Service) GetAgentTechnologyTypeOk() (*string, bool) {
	if o == nil || IsNil(o.AgentTechnologyType) {
		return nil, false
	}
	return o.AgentTechnologyType, true
}

// HasAgentTechnologyType returns a boolean if a field has been set.
func (o *Service) HasAgentTechnologyType() bool {
	if o != nil && !IsNil(o.AgentTechnologyType) {
		return true
	}

	return false
}

// SetAgentTechnologyType gets a reference to the given string and assigns it to the AgentTechnologyType field.
func (o *Service) SetAgentTechnologyType(v string) {
	o.AgentTechnologyType = &v
}

// GetAkkaActorSystem returns the AkkaActorSystem field value if set, zero value otherwise.
func (o *Service) GetAkkaActorSystem() string {
	if o == nil || IsNil(o.AkkaActorSystem) {
		var ret string
		return ret
	}
	return *o.AkkaActorSystem
}

// GetAkkaActorSystemOk returns a tuple with the AkkaActorSystem field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Service) GetAkkaActorSystemOk() (*string, bool) {
	if o == nil || IsNil(o.AkkaActorSystem) {
		return nil, false
	}
	return o.AkkaActorSystem, true
}

// HasAkkaActorSystem returns a boolean if a field has been set.
func (o *Service) HasAkkaActorSystem() bool {
	if o != nil && !IsNil(o.AkkaActorSystem) {
		return true
	}

	return false
}

// SetAkkaActorSystem gets a reference to the given string and assigns it to the AkkaActorSystem field.
func (o *Service) SetAkkaActorSystem(v string) {
	o.AkkaActorSystem = &v
}

// GetClassName returns the ClassName field value if set, zero value otherwise.
func (o *Service) GetClassName() string {
	if o == nil || IsNil(o.ClassName) {
		var ret string
		return ret
	}
	return *o.ClassName
}

// GetClassNameOk returns a tuple with the ClassName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Service) GetClassNameOk() (*string, bool) {
	if o == nil || IsNil(o.ClassName) {
		return nil, false
	}
	return o.ClassName, true
}

// HasClassName returns a boolean if a field has been set.
func (o *Service) HasClassName() bool {
	if o != nil && !IsNil(o.ClassName) {
		return true
	}

	return false
}

// SetClassName gets a reference to the given string and assigns it to the ClassName field.
func (o *Service) SetClassName(v string) {
	o.ClassName = &v
}

// GetContextRoot returns the ContextRoot field value if set, zero value otherwise.
func (o *Service) GetContextRoot() string {
	if o == nil || IsNil(o.ContextRoot) {
		var ret string
		return ret
	}
	return *o.ContextRoot
}

// GetContextRootOk returns a tuple with the ContextRoot field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Service) GetContextRootOk() (*string, bool) {
	if o == nil || IsNil(o.ContextRoot) {
		return nil, false
	}
	return o.ContextRoot, true
}

// HasContextRoot returns a boolean if a field has been set.
func (o *Service) HasContextRoot() bool {
	if o != nil && !IsNil(o.ContextRoot) {
		return true
	}

	return false
}

// SetContextRoot gets a reference to the given string and assigns it to the ContextRoot field.
func (o *Service) SetContextRoot(v string) {
	o.ContextRoot = &v
}

// GetCustomizedName returns the CustomizedName field value if set, zero value otherwise.
func (o *Service) GetCustomizedName() string {
	if o == nil || IsNil(o.CustomizedName) {
		var ret string
		return ret
	}
	return *o.CustomizedName
}

// GetCustomizedNameOk returns a tuple with the CustomizedName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Service) GetCustomizedNameOk() (*string, bool) {
	if o == nil || IsNil(o.CustomizedName) {
		return nil, false
	}
	return o.CustomizedName, true
}

// HasCustomizedName returns a boolean if a field has been set.
func (o *Service) HasCustomizedName() bool {
	if o != nil && !IsNil(o.CustomizedName) {
		return true
	}

	return false
}

// SetCustomizedName gets a reference to the given string and assigns it to the CustomizedName field.
func (o *Service) SetCustomizedName(v string) {
	o.CustomizedName = &v
}

// GetDatabaseHostNames returns the DatabaseHostNames field value if set, zero value otherwise.
func (o *Service) GetDatabaseHostNames() []string {
	if o == nil || IsNil(o.DatabaseHostNames) {
		var ret []string
		return ret
	}
	return o.DatabaseHostNames
}

// GetDatabaseHostNamesOk returns a tuple with the DatabaseHostNames field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Service) GetDatabaseHostNamesOk() ([]string, bool) {
	if o == nil || IsNil(o.DatabaseHostNames) {
		return nil, false
	}
	return o.DatabaseHostNames, true
}

// HasDatabaseHostNames returns a boolean if a field has been set.
func (o *Service) HasDatabaseHostNames() bool {
	if o != nil && !IsNil(o.DatabaseHostNames) {
		return true
	}

	return false
}

// SetDatabaseHostNames gets a reference to the given []string and assigns it to the DatabaseHostNames field.
func (o *Service) SetDatabaseHostNames(v []string) {
	o.DatabaseHostNames = v
}

// GetDatabaseName returns the DatabaseName field value if set, zero value otherwise.
func (o *Service) GetDatabaseName() string {
	if o == nil || IsNil(o.DatabaseName) {
		var ret string
		return ret
	}
	return *o.DatabaseName
}

// GetDatabaseNameOk returns a tuple with the DatabaseName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Service) GetDatabaseNameOk() (*string, bool) {
	if o == nil || IsNil(o.DatabaseName) {
		return nil, false
	}
	return o.DatabaseName, true
}

// HasDatabaseName returns a boolean if a field has been set.
func (o *Service) HasDatabaseName() bool {
	if o != nil && !IsNil(o.DatabaseName) {
		return true
	}

	return false
}

// SetDatabaseName gets a reference to the given string and assigns it to the DatabaseName field.
func (o *Service) SetDatabaseName(v string) {
	o.DatabaseName = &v
}

// GetDatabaseVendor returns the DatabaseVendor field value if set, zero value otherwise.
func (o *Service) GetDatabaseVendor() string {
	if o == nil || IsNil(o.DatabaseVendor) {
		var ret string
		return ret
	}
	return *o.DatabaseVendor
}

// GetDatabaseVendorOk returns a tuple with the DatabaseVendor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Service) GetDatabaseVendorOk() (*string, bool) {
	if o == nil || IsNil(o.DatabaseVendor) {
		return nil, false
	}
	return o.DatabaseVendor, true
}

// HasDatabaseVendor returns a boolean if a field has been set.
func (o *Service) HasDatabaseVendor() bool {
	if o != nil && !IsNil(o.DatabaseVendor) {
		return true
	}

	return false
}

// SetDatabaseVendor gets a reference to the given string and assigns it to the DatabaseVendor field.
func (o *Service) SetDatabaseVendor(v string) {
	o.DatabaseVendor = &v
}

// GetDiscoveredName returns the DiscoveredName field value if set, zero value otherwise.
func (o *Service) GetDiscoveredName() string {
	if o == nil || IsNil(o.DiscoveredName) {
		var ret string
		return ret
	}
	return *o.DiscoveredName
}

// GetDiscoveredNameOk returns a tuple with the DiscoveredName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Service) GetDiscoveredNameOk() (*string, bool) {
	if o == nil || IsNil(o.DiscoveredName) {
		return nil, false
	}
	return o.DiscoveredName, true
}

// HasDiscoveredName returns a boolean if a field has been set.
func (o *Service) HasDiscoveredName() bool {
	if o != nil && !IsNil(o.DiscoveredName) {
		return true
	}

	return false
}

// SetDiscoveredName gets a reference to the given string and assigns it to the DiscoveredName field.
func (o *Service) SetDiscoveredName(v string) {
	o.DiscoveredName = &v
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise.
func (o *Service) GetDisplayName() string {
	if o == nil || IsNil(o.DisplayName) {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Service) GetDisplayNameOk() (*string, bool) {
	if o == nil || IsNil(o.DisplayName) {
		return nil, false
	}
	return o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *Service) HasDisplayName() bool {
	if o != nil && !IsNil(o.DisplayName) {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *Service) SetDisplayName(v string) {
	o.DisplayName = &v
}

// GetEntityId returns the EntityId field value if set, zero value otherwise.
func (o *Service) GetEntityId() string {
	if o == nil || IsNil(o.EntityId) {
		var ret string
		return ret
	}
	return *o.EntityId
}

// GetEntityIdOk returns a tuple with the EntityId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Service) GetEntityIdOk() (*string, bool) {
	if o == nil || IsNil(o.EntityId) {
		return nil, false
	}
	return o.EntityId, true
}

// HasEntityId returns a boolean if a field has been set.
func (o *Service) HasEntityId() bool {
	if o != nil && !IsNil(o.EntityId) {
		return true
	}

	return false
}

// SetEntityId gets a reference to the given string and assigns it to the EntityId field.
func (o *Service) SetEntityId(v string) {
	o.EntityId = &v
}

// GetEsbApplicationName returns the EsbApplicationName field value if set, zero value otherwise.
func (o *Service) GetEsbApplicationName() string {
	if o == nil || IsNil(o.EsbApplicationName) {
		var ret string
		return ret
	}
	return *o.EsbApplicationName
}

// GetEsbApplicationNameOk returns a tuple with the EsbApplicationName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Service) GetEsbApplicationNameOk() (*string, bool) {
	if o == nil || IsNil(o.EsbApplicationName) {
		return nil, false
	}
	return o.EsbApplicationName, true
}

// HasEsbApplicationName returns a boolean if a field has been set.
func (o *Service) HasEsbApplicationName() bool {
	if o != nil && !IsNil(o.EsbApplicationName) {
		return true
	}

	return false
}

// SetEsbApplicationName gets a reference to the given string and assigns it to the EsbApplicationName field.
func (o *Service) SetEsbApplicationName(v string) {
	o.EsbApplicationName = &v
}

// GetFirstSeenTimestamp returns the FirstSeenTimestamp field value if set, zero value otherwise.
func (o *Service) GetFirstSeenTimestamp() int64 {
	if o == nil || IsNil(o.FirstSeenTimestamp) {
		var ret int64
		return ret
	}
	return *o.FirstSeenTimestamp
}

// GetFirstSeenTimestampOk returns a tuple with the FirstSeenTimestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Service) GetFirstSeenTimestampOk() (*int64, bool) {
	if o == nil || IsNil(o.FirstSeenTimestamp) {
		return nil, false
	}
	return o.FirstSeenTimestamp, true
}

// HasFirstSeenTimestamp returns a boolean if a field has been set.
func (o *Service) HasFirstSeenTimestamp() bool {
	if o != nil && !IsNil(o.FirstSeenTimestamp) {
		return true
	}

	return false
}

// SetFirstSeenTimestamp gets a reference to the given int64 and assigns it to the FirstSeenTimestamp field.
func (o *Service) SetFirstSeenTimestamp(v int64) {
	o.FirstSeenTimestamp = &v
}

// GetFromRelationships returns the FromRelationships field value if set, zero value otherwise.
func (o *Service) GetFromRelationships() ServiceFromRelationships {
	if o == nil || IsNil(o.FromRelationships) {
		var ret ServiceFromRelationships
		return ret
	}
	return *o.FromRelationships
}

// GetFromRelationshipsOk returns a tuple with the FromRelationships field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Service) GetFromRelationshipsOk() (*ServiceFromRelationships, bool) {
	if o == nil || IsNil(o.FromRelationships) {
		return nil, false
	}
	return o.FromRelationships, true
}

// HasFromRelationships returns a boolean if a field has been set.
func (o *Service) HasFromRelationships() bool {
	if o != nil && !IsNil(o.FromRelationships) {
		return true
	}

	return false
}

// SetFromRelationships gets a reference to the given ServiceFromRelationships and assigns it to the FromRelationships field.
func (o *Service) SetFromRelationships(v ServiceFromRelationships) {
	o.FromRelationships = &v
}

// GetIbmCtgGatewayUrl returns the IbmCtgGatewayUrl field value if set, zero value otherwise.
func (o *Service) GetIbmCtgGatewayUrl() string {
	if o == nil || IsNil(o.IbmCtgGatewayUrl) {
		var ret string
		return ret
	}
	return *o.IbmCtgGatewayUrl
}

// GetIbmCtgGatewayUrlOk returns a tuple with the IbmCtgGatewayUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Service) GetIbmCtgGatewayUrlOk() (*string, bool) {
	if o == nil || IsNil(o.IbmCtgGatewayUrl) {
		return nil, false
	}
	return o.IbmCtgGatewayUrl, true
}

// HasIbmCtgGatewayUrl returns a boolean if a field has been set.
func (o *Service) HasIbmCtgGatewayUrl() bool {
	if o != nil && !IsNil(o.IbmCtgGatewayUrl) {
		return true
	}

	return false
}

// SetIbmCtgGatewayUrl gets a reference to the given string and assigns it to the IbmCtgGatewayUrl field.
func (o *Service) SetIbmCtgGatewayUrl(v string) {
	o.IbmCtgGatewayUrl = &v
}

// GetIbmCtgServerName returns the IbmCtgServerName field value if set, zero value otherwise.
func (o *Service) GetIbmCtgServerName() string {
	if o == nil || IsNil(o.IbmCtgServerName) {
		var ret string
		return ret
	}
	return *o.IbmCtgServerName
}

// GetIbmCtgServerNameOk returns a tuple with the IbmCtgServerName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Service) GetIbmCtgServerNameOk() (*string, bool) {
	if o == nil || IsNil(o.IbmCtgServerName) {
		return nil, false
	}
	return o.IbmCtgServerName, true
}

// HasIbmCtgServerName returns a boolean if a field has been set.
func (o *Service) HasIbmCtgServerName() bool {
	if o != nil && !IsNil(o.IbmCtgServerName) {
		return true
	}

	return false
}

// SetIbmCtgServerName gets a reference to the given string and assigns it to the IbmCtgServerName field.
func (o *Service) SetIbmCtgServerName(v string) {
	o.IbmCtgServerName = &v
}

// GetIibApplicationName returns the IibApplicationName field value if set, zero value otherwise.
func (o *Service) GetIibApplicationName() string {
	if o == nil || IsNil(o.IibApplicationName) {
		var ret string
		return ret
	}
	return *o.IibApplicationName
}

// GetIibApplicationNameOk returns a tuple with the IibApplicationName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Service) GetIibApplicationNameOk() (*string, bool) {
	if o == nil || IsNil(o.IibApplicationName) {
		return nil, false
	}
	return o.IibApplicationName, true
}

// HasIibApplicationName returns a boolean if a field has been set.
func (o *Service) HasIibApplicationName() bool {
	if o != nil && !IsNil(o.IibApplicationName) {
		return true
	}

	return false
}

// SetIibApplicationName gets a reference to the given string and assigns it to the IibApplicationName field.
func (o *Service) SetIibApplicationName(v string) {
	o.IibApplicationName = &v
}

// GetIpAddresses returns the IpAddresses field value if set, zero value otherwise.
func (o *Service) GetIpAddresses() []string {
	if o == nil || IsNil(o.IpAddresses) {
		var ret []string
		return ret
	}
	return o.IpAddresses
}

// GetIpAddressesOk returns a tuple with the IpAddresses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Service) GetIpAddressesOk() ([]string, bool) {
	if o == nil || IsNil(o.IpAddresses) {
		return nil, false
	}
	return o.IpAddresses, true
}

// HasIpAddresses returns a boolean if a field has been set.
func (o *Service) HasIpAddresses() bool {
	if o != nil && !IsNil(o.IpAddresses) {
		return true
	}

	return false
}

// SetIpAddresses gets a reference to the given []string and assigns it to the IpAddresses field.
func (o *Service) SetIpAddresses(v []string) {
	o.IpAddresses = v
}

// GetIsExternalService returns the IsExternalService field value if set, zero value otherwise.
func (o *Service) GetIsExternalService() bool {
	if o == nil || IsNil(o.IsExternalService) {
		var ret bool
		return ret
	}
	return *o.IsExternalService
}

// GetIsExternalServiceOk returns a tuple with the IsExternalService field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Service) GetIsExternalServiceOk() (*bool, bool) {
	if o == nil || IsNil(o.IsExternalService) {
		return nil, false
	}
	return o.IsExternalService, true
}

// HasIsExternalService returns a boolean if a field has been set.
func (o *Service) HasIsExternalService() bool {
	if o != nil && !IsNil(o.IsExternalService) {
		return true
	}

	return false
}

// SetIsExternalService gets a reference to the given bool and assigns it to the IsExternalService field.
func (o *Service) SetIsExternalService(v bool) {
	o.IsExternalService = &v
}

// GetLastSeenTimestamp returns the LastSeenTimestamp field value if set, zero value otherwise.
func (o *Service) GetLastSeenTimestamp() int64 {
	if o == nil || IsNil(o.LastSeenTimestamp) {
		var ret int64
		return ret
	}
	return *o.LastSeenTimestamp
}

// GetLastSeenTimestampOk returns a tuple with the LastSeenTimestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Service) GetLastSeenTimestampOk() (*int64, bool) {
	if o == nil || IsNil(o.LastSeenTimestamp) {
		return nil, false
	}
	return o.LastSeenTimestamp, true
}

// HasLastSeenTimestamp returns a boolean if a field has been set.
func (o *Service) HasLastSeenTimestamp() bool {
	if o != nil && !IsNil(o.LastSeenTimestamp) {
		return true
	}

	return false
}

// SetLastSeenTimestamp gets a reference to the given int64 and assigns it to the LastSeenTimestamp field.
func (o *Service) SetLastSeenTimestamp(v int64) {
	o.LastSeenTimestamp = &v
}

// GetManagementZones returns the ManagementZones field value if set, zero value otherwise.
func (o *Service) GetManagementZones() []EntityShortRepresentation {
	if o == nil || IsNil(o.ManagementZones) {
		var ret []EntityShortRepresentation
		return ret
	}
	return o.ManagementZones
}

// GetManagementZonesOk returns a tuple with the ManagementZones field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Service) GetManagementZonesOk() ([]EntityShortRepresentation, bool) {
	if o == nil || IsNil(o.ManagementZones) {
		return nil, false
	}
	return o.ManagementZones, true
}

// HasManagementZones returns a boolean if a field has been set.
func (o *Service) HasManagementZones() bool {
	if o != nil && !IsNil(o.ManagementZones) {
		return true
	}

	return false
}

// SetManagementZones gets a reference to the given []EntityShortRepresentation and assigns it to the ManagementZones field.
func (o *Service) SetManagementZones(v []EntityShortRepresentation) {
	o.ManagementZones = v
}

// GetPath returns the Path field value if set, zero value otherwise.
func (o *Service) GetPath() string {
	if o == nil || IsNil(o.Path) {
		var ret string
		return ret
	}
	return *o.Path
}

// GetPathOk returns a tuple with the Path field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Service) GetPathOk() (*string, bool) {
	if o == nil || IsNil(o.Path) {
		return nil, false
	}
	return o.Path, true
}

// HasPath returns a boolean if a field has been set.
func (o *Service) HasPath() bool {
	if o != nil && !IsNil(o.Path) {
		return true
	}

	return false
}

// SetPath gets a reference to the given string and assigns it to the Path field.
func (o *Service) SetPath(v string) {
	o.Path = &v
}

// GetPort returns the Port field value if set, zero value otherwise.
func (o *Service) GetPort() int32 {
	if o == nil || IsNil(o.Port) {
		var ret int32
		return ret
	}
	return *o.Port
}

// GetPortOk returns a tuple with the Port field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Service) GetPortOk() (*int32, bool) {
	if o == nil || IsNil(o.Port) {
		return nil, false
	}
	return o.Port, true
}

// HasPort returns a boolean if a field has been set.
func (o *Service) HasPort() bool {
	if o != nil && !IsNil(o.Port) {
		return true
	}

	return false
}

// SetPort gets a reference to the given int32 and assigns it to the Port field.
func (o *Service) SetPort(v int32) {
	o.Port = &v
}

// GetRemoteEndpoint returns the RemoteEndpoint field value if set, zero value otherwise.
func (o *Service) GetRemoteEndpoint() string {
	if o == nil || IsNil(o.RemoteEndpoint) {
		var ret string
		return ret
	}
	return *o.RemoteEndpoint
}

// GetRemoteEndpointOk returns a tuple with the RemoteEndpoint field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Service) GetRemoteEndpointOk() (*string, bool) {
	if o == nil || IsNil(o.RemoteEndpoint) {
		return nil, false
	}
	return o.RemoteEndpoint, true
}

// HasRemoteEndpoint returns a boolean if a field has been set.
func (o *Service) HasRemoteEndpoint() bool {
	if o != nil && !IsNil(o.RemoteEndpoint) {
		return true
	}

	return false
}

// SetRemoteEndpoint gets a reference to the given string and assigns it to the RemoteEndpoint field.
func (o *Service) SetRemoteEndpoint(v string) {
	o.RemoteEndpoint = &v
}

// GetRemoteServiceName returns the RemoteServiceName field value if set, zero value otherwise.
func (o *Service) GetRemoteServiceName() string {
	if o == nil || IsNil(o.RemoteServiceName) {
		var ret string
		return ret
	}
	return *o.RemoteServiceName
}

// GetRemoteServiceNameOk returns a tuple with the RemoteServiceName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Service) GetRemoteServiceNameOk() (*string, bool) {
	if o == nil || IsNil(o.RemoteServiceName) {
		return nil, false
	}
	return o.RemoteServiceName, true
}

// HasRemoteServiceName returns a boolean if a field has been set.
func (o *Service) HasRemoteServiceName() bool {
	if o != nil && !IsNil(o.RemoteServiceName) {
		return true
	}

	return false
}

// SetRemoteServiceName gets a reference to the given string and assigns it to the RemoteServiceName field.
func (o *Service) SetRemoteServiceName(v string) {
	o.RemoteServiceName = &v
}

// GetServiceDetectionAttributes returns the ServiceDetectionAttributes field value if set, zero value otherwise.
func (o *Service) GetServiceDetectionAttributes() map[string]map[string]interface{} {
	if o == nil || IsNil(o.ServiceDetectionAttributes) {
		var ret map[string]map[string]interface{}
		return ret
	}
	return o.ServiceDetectionAttributes
}

// GetServiceDetectionAttributesOk returns a tuple with the ServiceDetectionAttributes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Service) GetServiceDetectionAttributesOk() (map[string]map[string]interface{}, bool) {
	if o == nil || IsNil(o.ServiceDetectionAttributes) {
		return map[string]map[string]interface{}{}, false
	}
	return o.ServiceDetectionAttributes, true
}

// HasServiceDetectionAttributes returns a boolean if a field has been set.
func (o *Service) HasServiceDetectionAttributes() bool {
	if o != nil && !IsNil(o.ServiceDetectionAttributes) {
		return true
	}

	return false
}

// SetServiceDetectionAttributes gets a reference to the given map[string]map[string]interface{} and assigns it to the ServiceDetectionAttributes field.
func (o *Service) SetServiceDetectionAttributes(v map[string]map[string]interface{}) {
	o.ServiceDetectionAttributes = v
}

// GetServiceTechnologyTypes returns the ServiceTechnologyTypes field value if set, zero value otherwise.
func (o *Service) GetServiceTechnologyTypes() []string {
	if o == nil || IsNil(o.ServiceTechnologyTypes) {
		var ret []string
		return ret
	}
	return o.ServiceTechnologyTypes
}

// GetServiceTechnologyTypesOk returns a tuple with the ServiceTechnologyTypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Service) GetServiceTechnologyTypesOk() ([]string, bool) {
	if o == nil || IsNil(o.ServiceTechnologyTypes) {
		return nil, false
	}
	return o.ServiceTechnologyTypes, true
}

// HasServiceTechnologyTypes returns a boolean if a field has been set.
func (o *Service) HasServiceTechnologyTypes() bool {
	if o != nil && !IsNil(o.ServiceTechnologyTypes) {
		return true
	}

	return false
}

// SetServiceTechnologyTypes gets a reference to the given []string and assigns it to the ServiceTechnologyTypes field.
func (o *Service) SetServiceTechnologyTypes(v []string) {
	o.ServiceTechnologyTypes = v
}

// GetServiceType returns the ServiceType field value if set, zero value otherwise.
func (o *Service) GetServiceType() string {
	if o == nil || IsNil(o.ServiceType) {
		var ret string
		return ret
	}
	return *o.ServiceType
}

// GetServiceTypeOk returns a tuple with the ServiceType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Service) GetServiceTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ServiceType) {
		return nil, false
	}
	return o.ServiceType, true
}

// HasServiceType returns a boolean if a field has been set.
func (o *Service) HasServiceType() bool {
	if o != nil && !IsNil(o.ServiceType) {
		return true
	}

	return false
}

// SetServiceType gets a reference to the given string and assigns it to the ServiceType field.
func (o *Service) SetServiceType(v string) {
	o.ServiceType = &v
}

// GetSoftwareTechnologies returns the SoftwareTechnologies field value if set, zero value otherwise.
func (o *Service) GetSoftwareTechnologies() []TechnologyInfo {
	if o == nil || IsNil(o.SoftwareTechnologies) {
		var ret []TechnologyInfo
		return ret
	}
	return o.SoftwareTechnologies
}

// GetSoftwareTechnologiesOk returns a tuple with the SoftwareTechnologies field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Service) GetSoftwareTechnologiesOk() ([]TechnologyInfo, bool) {
	if o == nil || IsNil(o.SoftwareTechnologies) {
		return nil, false
	}
	return o.SoftwareTechnologies, true
}

// HasSoftwareTechnologies returns a boolean if a field has been set.
func (o *Service) HasSoftwareTechnologies() bool {
	if o != nil && !IsNil(o.SoftwareTechnologies) {
		return true
	}

	return false
}

// SetSoftwareTechnologies gets a reference to the given []TechnologyInfo and assigns it to the SoftwareTechnologies field.
func (o *Service) SetSoftwareTechnologies(v []TechnologyInfo) {
	o.SoftwareTechnologies = v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *Service) GetTags() []TagInfo {
	if o == nil || IsNil(o.Tags) {
		var ret []TagInfo
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Service) GetTagsOk() ([]TagInfo, bool) {
	if o == nil || IsNil(o.Tags) {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *Service) HasTags() bool {
	if o != nil && !IsNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given []TagInfo and assigns it to the Tags field.
func (o *Service) SetTags(v []TagInfo) {
	o.Tags = v
}

// GetToRelationships returns the ToRelationships field value if set, zero value otherwise.
func (o *Service) GetToRelationships() ServiceToRelationships {
	if o == nil || IsNil(o.ToRelationships) {
		var ret ServiceToRelationships
		return ret
	}
	return *o.ToRelationships
}

// GetToRelationshipsOk returns a tuple with the ToRelationships field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Service) GetToRelationshipsOk() (*ServiceToRelationships, bool) {
	if o == nil || IsNil(o.ToRelationships) {
		return nil, false
	}
	return o.ToRelationships, true
}

// HasToRelationships returns a boolean if a field has been set.
func (o *Service) HasToRelationships() bool {
	if o != nil && !IsNil(o.ToRelationships) {
		return true
	}

	return false
}

// SetToRelationships gets a reference to the given ServiceToRelationships and assigns it to the ToRelationships field.
func (o *Service) SetToRelationships(v ServiceToRelationships) {
	o.ToRelationships = &v
}

// GetWebApplicationId returns the WebApplicationId field value if set, zero value otherwise.
func (o *Service) GetWebApplicationId() string {
	if o == nil || IsNil(o.WebApplicationId) {
		var ret string
		return ret
	}
	return *o.WebApplicationId
}

// GetWebApplicationIdOk returns a tuple with the WebApplicationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Service) GetWebApplicationIdOk() (*string, bool) {
	if o == nil || IsNil(o.WebApplicationId) {
		return nil, false
	}
	return o.WebApplicationId, true
}

// HasWebApplicationId returns a boolean if a field has been set.
func (o *Service) HasWebApplicationId() bool {
	if o != nil && !IsNil(o.WebApplicationId) {
		return true
	}

	return false
}

// SetWebApplicationId gets a reference to the given string and assigns it to the WebApplicationId field.
func (o *Service) SetWebApplicationId(v string) {
	o.WebApplicationId = &v
}

// GetWebServerName returns the WebServerName field value if set, zero value otherwise.
func (o *Service) GetWebServerName() string {
	if o == nil || IsNil(o.WebServerName) {
		var ret string
		return ret
	}
	return *o.WebServerName
}

// GetWebServerNameOk returns a tuple with the WebServerName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Service) GetWebServerNameOk() (*string, bool) {
	if o == nil || IsNil(o.WebServerName) {
		return nil, false
	}
	return o.WebServerName, true
}

// HasWebServerName returns a boolean if a field has been set.
func (o *Service) HasWebServerName() bool {
	if o != nil && !IsNil(o.WebServerName) {
		return true
	}

	return false
}

// SetWebServerName gets a reference to the given string and assigns it to the WebServerName field.
func (o *Service) SetWebServerName(v string) {
	o.WebServerName = &v
}

// GetWebServiceName returns the WebServiceName field value if set, zero value otherwise.
func (o *Service) GetWebServiceName() string {
	if o == nil || IsNil(o.WebServiceName) {
		var ret string
		return ret
	}
	return *o.WebServiceName
}

// GetWebServiceNameOk returns a tuple with the WebServiceName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Service) GetWebServiceNameOk() (*string, bool) {
	if o == nil || IsNil(o.WebServiceName) {
		return nil, false
	}
	return o.WebServiceName, true
}

// HasWebServiceName returns a boolean if a field has been set.
func (o *Service) HasWebServiceName() bool {
	if o != nil && !IsNil(o.WebServiceName) {
		return true
	}

	return false
}

// SetWebServiceName gets a reference to the given string and assigns it to the WebServiceName field.
func (o *Service) SetWebServiceName(v string) {
	o.WebServiceName = &v
}

// GetWebServiceNamespace returns the WebServiceNamespace field value if set, zero value otherwise.
func (o *Service) GetWebServiceNamespace() string {
	if o == nil || IsNil(o.WebServiceNamespace) {
		var ret string
		return ret
	}
	return *o.WebServiceNamespace
}

// GetWebServiceNamespaceOk returns a tuple with the WebServiceNamespace field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Service) GetWebServiceNamespaceOk() (*string, bool) {
	if o == nil || IsNil(o.WebServiceNamespace) {
		return nil, false
	}
	return o.WebServiceNamespace, true
}

// HasWebServiceNamespace returns a boolean if a field has been set.
func (o *Service) HasWebServiceNamespace() bool {
	if o != nil && !IsNil(o.WebServiceNamespace) {
		return true
	}

	return false
}

// SetWebServiceNamespace gets a reference to the given string and assigns it to the WebServiceNamespace field.
func (o *Service) SetWebServiceNamespace(v string) {
	o.WebServiceNamespace = &v
}

func (o Service) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Service) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AgentTechnologyType) {
		toSerialize["agentTechnologyType"] = o.AgentTechnologyType
	}
	if !IsNil(o.AkkaActorSystem) {
		toSerialize["akkaActorSystem"] = o.AkkaActorSystem
	}
	if !IsNil(o.ClassName) {
		toSerialize["className"] = o.ClassName
	}
	if !IsNil(o.ContextRoot) {
		toSerialize["contextRoot"] = o.ContextRoot
	}
	if !IsNil(o.CustomizedName) {
		toSerialize["customizedName"] = o.CustomizedName
	}
	if !IsNil(o.DatabaseHostNames) {
		toSerialize["databaseHostNames"] = o.DatabaseHostNames
	}
	if !IsNil(o.DatabaseName) {
		toSerialize["databaseName"] = o.DatabaseName
	}
	if !IsNil(o.DatabaseVendor) {
		toSerialize["databaseVendor"] = o.DatabaseVendor
	}
	if !IsNil(o.DiscoveredName) {
		toSerialize["discoveredName"] = o.DiscoveredName
	}
	if !IsNil(o.DisplayName) {
		toSerialize["displayName"] = o.DisplayName
	}
	if !IsNil(o.EntityId) {
		toSerialize["entityId"] = o.EntityId
	}
	if !IsNil(o.EsbApplicationName) {
		toSerialize["esbApplicationName"] = o.EsbApplicationName
	}
	if !IsNil(o.FirstSeenTimestamp) {
		toSerialize["firstSeenTimestamp"] = o.FirstSeenTimestamp
	}
	if !IsNil(o.FromRelationships) {
		toSerialize["fromRelationships"] = o.FromRelationships
	}
	if !IsNil(o.IbmCtgGatewayUrl) {
		toSerialize["ibmCtgGatewayUrl"] = o.IbmCtgGatewayUrl
	}
	if !IsNil(o.IbmCtgServerName) {
		toSerialize["ibmCtgServerName"] = o.IbmCtgServerName
	}
	if !IsNil(o.IibApplicationName) {
		toSerialize["iibApplicationName"] = o.IibApplicationName
	}
	if !IsNil(o.IpAddresses) {
		toSerialize["ipAddresses"] = o.IpAddresses
	}
	if !IsNil(o.IsExternalService) {
		toSerialize["isExternalService"] = o.IsExternalService
	}
	if !IsNil(o.LastSeenTimestamp) {
		toSerialize["lastSeenTimestamp"] = o.LastSeenTimestamp
	}
	if !IsNil(o.ManagementZones) {
		toSerialize["managementZones"] = o.ManagementZones
	}
	if !IsNil(o.Path) {
		toSerialize["path"] = o.Path
	}
	if !IsNil(o.Port) {
		toSerialize["port"] = o.Port
	}
	if !IsNil(o.RemoteEndpoint) {
		toSerialize["remoteEndpoint"] = o.RemoteEndpoint
	}
	if !IsNil(o.RemoteServiceName) {
		toSerialize["remoteServiceName"] = o.RemoteServiceName
	}
	if !IsNil(o.ServiceDetectionAttributes) {
		toSerialize["serviceDetectionAttributes"] = o.ServiceDetectionAttributes
	}
	if !IsNil(o.ServiceTechnologyTypes) {
		toSerialize["serviceTechnologyTypes"] = o.ServiceTechnologyTypes
	}
	if !IsNil(o.ServiceType) {
		toSerialize["serviceType"] = o.ServiceType
	}
	if !IsNil(o.SoftwareTechnologies) {
		toSerialize["softwareTechnologies"] = o.SoftwareTechnologies
	}
	if !IsNil(o.Tags) {
		toSerialize["tags"] = o.Tags
	}
	if !IsNil(o.ToRelationships) {
		toSerialize["toRelationships"] = o.ToRelationships
	}
	if !IsNil(o.WebApplicationId) {
		toSerialize["webApplicationId"] = o.WebApplicationId
	}
	if !IsNil(o.WebServerName) {
		toSerialize["webServerName"] = o.WebServerName
	}
	if !IsNil(o.WebServiceName) {
		toSerialize["webServiceName"] = o.WebServiceName
	}
	if !IsNil(o.WebServiceNamespace) {
		toSerialize["webServiceNamespace"] = o.WebServiceNamespace
	}
	return toSerialize, nil
}

type NullableService struct {
	value *Service
	isSet bool
}

func (v NullableService) Get() *Service {
	return v.value
}

func (v *NullableService) Set(val *Service) {
	v.value = val
	v.isSet = true
}

func (v NullableService) IsSet() bool {
	return v.isSet
}

func (v *NullableService) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableService(val *Service) *NullableService {
	return &NullableService{value: val, isSet: true}
}

func (v NullableService) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableService) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


