/*
Dynatrace Environment API

 Documentation of the Dynatrace Environment API v2. Resources here generally supersede those in v1. Migration of resources from v1 is in progress.   If you miss a resource, consider using the Dynatrace Environment API v1. To read about use cases and examples, see [Dynatrace Documentation](https://dt-url.net/2u23k1k) .  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package environmentv2

import (
	"encoding/json"
)

// checks if the RemoteConfigurationManagementOperation type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RemoteConfigurationManagementOperation{}

// RemoteConfigurationManagementOperation Definition of a single remote configuration management operation.
type RemoteConfigurationManagementOperation struct {
	// The attribute which is affected by the operation.
	Attribute string `json:"attribute"`
	// The operation performed on given attribute.
	Operation string `json:"operation"`
	// The value which should be assigned to given attribute.
	Value *string `json:"value,omitempty"`
}

// NewRemoteConfigurationManagementOperation instantiates a new RemoteConfigurationManagementOperation object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRemoteConfigurationManagementOperation(attribute string, operation string) *RemoteConfigurationManagementOperation {
	this := RemoteConfigurationManagementOperation{}
	this.Attribute = attribute
	this.Operation = operation
	return &this
}

// NewRemoteConfigurationManagementOperationWithDefaults instantiates a new RemoteConfigurationManagementOperation object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRemoteConfigurationManagementOperationWithDefaults() *RemoteConfigurationManagementOperation {
	this := RemoteConfigurationManagementOperation{}
	return &this
}

// GetAttribute returns the Attribute field value
func (o *RemoteConfigurationManagementOperation) GetAttribute() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Attribute
}

// GetAttributeOk returns a tuple with the Attribute field value
// and a boolean to check if the value has been set.
func (o *RemoteConfigurationManagementOperation) GetAttributeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Attribute, true
}

// SetAttribute sets field value
func (o *RemoteConfigurationManagementOperation) SetAttribute(v string) {
	o.Attribute = v
}

// GetOperation returns the Operation field value
func (o *RemoteConfigurationManagementOperation) GetOperation() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Operation
}

// GetOperationOk returns a tuple with the Operation field value
// and a boolean to check if the value has been set.
func (o *RemoteConfigurationManagementOperation) GetOperationOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Operation, true
}

// SetOperation sets field value
func (o *RemoteConfigurationManagementOperation) SetOperation(v string) {
	o.Operation = v
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *RemoteConfigurationManagementOperation) GetValue() string {
	if o == nil || IsNil(o.Value) {
		var ret string
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RemoteConfigurationManagementOperation) GetValueOk() (*string, bool) {
	if o == nil || IsNil(o.Value) {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *RemoteConfigurationManagementOperation) HasValue() bool {
	if o != nil && !IsNil(o.Value) {
		return true
	}

	return false
}

// SetValue gets a reference to the given string and assigns it to the Value field.
func (o *RemoteConfigurationManagementOperation) SetValue(v string) {
	o.Value = &v
}

func (o RemoteConfigurationManagementOperation) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RemoteConfigurationManagementOperation) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["attribute"] = o.Attribute
	toSerialize["operation"] = o.Operation
	if !IsNil(o.Value) {
		toSerialize["value"] = o.Value
	}
	return toSerialize, nil
}

type NullableRemoteConfigurationManagementOperation struct {
	value *RemoteConfigurationManagementOperation
	isSet bool
}

func (v NullableRemoteConfigurationManagementOperation) Get() *RemoteConfigurationManagementOperation {
	return v.value
}

func (v *NullableRemoteConfigurationManagementOperation) Set(val *RemoteConfigurationManagementOperation) {
	v.value = val
	v.isSet = true
}

func (v NullableRemoteConfigurationManagementOperation) IsSet() bool {
	return v.isSet
}

func (v *NullableRemoteConfigurationManagementOperation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRemoteConfigurationManagementOperation(val *RemoteConfigurationManagementOperation) *NullableRemoteConfigurationManagementOperation {
	return &NullableRemoteConfigurationManagementOperation{value: val, isSet: true}
}

func (v NullableRemoteConfigurationManagementOperation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRemoteConfigurationManagementOperation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


