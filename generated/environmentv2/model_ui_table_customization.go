/*
Dynatrace Environment API

 Documentation of the Dynatrace Environment API v2. Resources here generally supersede those in v1. Migration of resources from v1 is in progress.   If you miss a resource, consider using the Dynatrace Environment API v1. To read about use cases and examples, see [Dynatrace Documentation](https://dt-url.net/2u23k1k) .  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package environmentv2

import (
	"encoding/json"
)

// checks if the UiTableCustomization type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UiTableCustomization{}

// UiTableCustomization Customization for UI tables
type UiTableCustomization struct {
	// A list of columns for the UI table
	Columns []UiTableColumnCustomization `json:"columns,omitempty"`
	EmptyState *UiEmptyStateCustomization `json:"emptyState,omitempty"`
}

// NewUiTableCustomization instantiates a new UiTableCustomization object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUiTableCustomization() *UiTableCustomization {
	this := UiTableCustomization{}
	return &this
}

// NewUiTableCustomizationWithDefaults instantiates a new UiTableCustomization object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUiTableCustomizationWithDefaults() *UiTableCustomization {
	this := UiTableCustomization{}
	return &this
}

// GetColumns returns the Columns field value if set, zero value otherwise.
func (o *UiTableCustomization) GetColumns() []UiTableColumnCustomization {
	if o == nil || IsNil(o.Columns) {
		var ret []UiTableColumnCustomization
		return ret
	}
	return o.Columns
}

// GetColumnsOk returns a tuple with the Columns field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UiTableCustomization) GetColumnsOk() ([]UiTableColumnCustomization, bool) {
	if o == nil || IsNil(o.Columns) {
		return nil, false
	}
	return o.Columns, true
}

// HasColumns returns a boolean if a field has been set.
func (o *UiTableCustomization) HasColumns() bool {
	if o != nil && !IsNil(o.Columns) {
		return true
	}

	return false
}

// SetColumns gets a reference to the given []UiTableColumnCustomization and assigns it to the Columns field.
func (o *UiTableCustomization) SetColumns(v []UiTableColumnCustomization) {
	o.Columns = v
}

// GetEmptyState returns the EmptyState field value if set, zero value otherwise.
func (o *UiTableCustomization) GetEmptyState() UiEmptyStateCustomization {
	if o == nil || IsNil(o.EmptyState) {
		var ret UiEmptyStateCustomization
		return ret
	}
	return *o.EmptyState
}

// GetEmptyStateOk returns a tuple with the EmptyState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UiTableCustomization) GetEmptyStateOk() (*UiEmptyStateCustomization, bool) {
	if o == nil || IsNil(o.EmptyState) {
		return nil, false
	}
	return o.EmptyState, true
}

// HasEmptyState returns a boolean if a field has been set.
func (o *UiTableCustomization) HasEmptyState() bool {
	if o != nil && !IsNil(o.EmptyState) {
		return true
	}

	return false
}

// SetEmptyState gets a reference to the given UiEmptyStateCustomization and assigns it to the EmptyState field.
func (o *UiTableCustomization) SetEmptyState(v UiEmptyStateCustomization) {
	o.EmptyState = &v
}

func (o UiTableCustomization) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UiTableCustomization) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Columns) {
		toSerialize["columns"] = o.Columns
	}
	if !IsNil(o.EmptyState) {
		toSerialize["emptyState"] = o.EmptyState
	}
	return toSerialize, nil
}

type NullableUiTableCustomization struct {
	value *UiTableCustomization
	isSet bool
}

func (v NullableUiTableCustomization) Get() *UiTableCustomization {
	return v.value
}

func (v *NullableUiTableCustomization) Set(val *UiTableCustomization) {
	v.value = val
	v.isSet = true
}

func (v NullableUiTableCustomization) IsSet() bool {
	return v.isSet
}

func (v *NullableUiTableCustomization) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUiTableCustomization(val *UiTableCustomization) *NullableUiTableCustomization {
	return &NullableUiTableCustomization{value: val, isSet: true}
}

func (v NullableUiTableCustomization) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUiTableCustomization) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


