openapi: 3.0.1
info:
  description: "\nDocumentation of the Dynatrace Environment API v2. Resources here\
    \ generally supersede those in v1. Migration of resources from v1 is in progress.\
    \ \n\nIf you miss a resource, consider using the Dynatrace Environment API v1.\
    \ To read about use cases and examples, see [Dynatrace Documentation](https://dt-url.net/2u23k1k)\
    \ .\n\nNotes about compatibility:\n* Operations marked as early adopter or preview\
    \ may be changed in non-compatible ways, although we try to avoid this.\n* We\
    \ may add new enum constants without incrementing the API version; thus, clients\
    \ need to handle unknown enum constants gracefully."
  title: Dynatrace Environment API
  version: 2.0.0
servers:
- url: /
tags:
- description: Query and ingest metrics
  name: Metrics
- description: Manage problems and comments
  name: Problems
- description: Manage events
  name: Events
- description: Read audit logs
  name: Audit Logs
- description: Manage network zones
  name: Network zones
- description: Manage monitored entities
  name: Monitored entities
- description: Read and ingest logs
  name: Logs
- description: View information about your ActiveGates
  name: ActiveGates
- description: Manage ActiveGate auto-update settings.
  name: ActiveGates - Auto-update configuration
- description: Manage ActiveGate auto-update jobs.
  name: ActiveGates - Auto-update jobs
- description: Manage ActiveGates configuration remotely
  name: ActiveGates - Remote configuration management
- description: Manage OneAgent configuration remotely
  name: OneAgent - Remote configuration management
- description: Manage custom tags of monitored entities
  name: Monitored entities - Custom tags
- description: Read state of monitored entities
  name: Monitored entities - Monitoring state
- description: Manage SLOs
  name: Service-level objectives
- description: Analyze your deployed components
  name: Releases
- description: Manage security problems
  name: Security problems
- description: Read attacks
  name: Attacks
- description: Manage Davis security advices
  name: Davis security advisor
- description: Manage Extensions 2.0 life cycle
  name: Extensions 2.0
- description: "Query countries, regions, and cities"
  name: Geographic regions
- description: "Install, update and manage metadata of Hub items"
  name: Hub items
- description: Manage JavaScript mapping files for JavaScript symbolication and deobfuscation
  name: JavaScript mapping files
- description: "Gets the status of ActiveGate [tokens enforcement](https://dt-url.net/m80331a)"
  name: ActiveGates - ActiveGate tokens enforcement
- description: Ingest OpenTelemetry Protocol (OTLP) logs into Dynatrace
  name: OpenTelemetry Protocol (OTLP) Logs Ingest
- description: Ingest OpenTelemetry Protocol (OTLP) traces into Dynatrace
  name: OpenTelemetry Protocol (OTLP) Trace Ingest
- description: Ingest OpenTelemetry Protocol (OTLP) metrics into Dynatrace
  name: OpenTelemetry Protocol (OTLP) Metric Ingest
- description: Manage Dynatrace ActiveGate tokens
  name: Access Tokens - ActiveGate tokens
- description: Manage Dynatrace API tokens
  name: Access Tokens - API tokens
- description: Manage credentials for Synthetic monitors
  name: Credential vault
- description: Manage settings objects
  name: Settings - Objects
- description: View settings schemas
  name: Settings - Schemas
- description: Trigger and view information about on-demand synthetic monitor executions
  name: Synthetic - On-demand monitor executions
- description: Rotate tenant tokens
  name: Access tokens - Tenant tokens
- description: View metric units
  name: Metrics - Units
paths:
  /activeGateTokens:
    get:
      description: "You can limit the output by using pagination: \n1. Specify the\
        \ number of results per page in the **pageSize** query parameter. \n2. Use\
        \ the cursor from the **nextPageKey** field of the previous response in the\
        \ **nextPageKey** query parameter to obtain subsequent pages."
      operationId: listTokens
      parameters:
      - description: "The cursor for the next page of results. You can find it in\
          \ the **nextPageKey** field of the previous response. \n\nThe first page\
          \ is always returned if you don't specify the **nextPageKey** query parameter.\
          \ \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must\
          \ omit all other query parameters. "
        explode: true
        in: query
        name: nextPageKey
        required: false
        schema:
          type: string
        style: form
      - description: "The amount of ActiveGate tokens in a single response payload.\
          \ \n\nThe maximal allowed page size is 3000 and the minimal size is 100.\
          \ \n\nIf not set, 100 is used."
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          format: int64
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ActiveGateTokenList'
          description: Success. The response contains the list of ActiveGate tokens.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid.
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The requested resource doesn't exist.
      security:
      - Api-Token: []
      summary: Lists all available ActiveGate tokens
      tags:
      - Access Tokens - ActiveGate tokens
      x-token-scopes:
      - activeGateTokenManagement.read
    post:
      description: The newly created token will be owned by the same user who owns
        the token used for authentication of the call.
      operationId: createToken
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/ActiveGateTokenCreate'
        description: The JSON body of the request. Contains parameters of the new
          ActiveGate token.
        required: true
      responses:
        "201":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ActiveGateTokenCreated'
          description: Success. The token has been created. The body of the response
            contains the token secret.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid.
      security:
      - Api-Token: []
      summary: Creates a new ActiveGate token
      tags:
      - Access Tokens - ActiveGate tokens
      x-token-scopes:
      - activeGateTokenManagement.create
      - activeGateTokenManagement.write
  /activeGateTokens/{activeGateTokenIdentifier}:
    delete:
      operationId: revokeToken
      parameters:
      - description: "The ActiveGate token identifier, consisting of [prefix and public\
          \ part](https://dt-url.net/rn00tjg) of the token to be deleted."
        explode: false
        in: path
        name: activeGateTokenIdentifier
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Success. Response doesn't have a body.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid.
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The requested resource doesn't exist.
      security:
      - Api-Token: []
      summary: Deletes an ActiveGate token
      tags:
      - Access Tokens - ActiveGate tokens
      x-token-scopes:
      - activeGateTokenManagement.write
    get:
      description: The token secret is **not** exposed.
      operationId: getToken
      parameters:
      - description: "The ActiveGate token identifier, consisting of [prefix and public\
          \ part](https://dt-url.net/rn00tjg) of the token."
        explode: false
        in: path
        name: activeGateTokenIdentifier
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ActiveGateToken'
          description: Success. The response contains the metadata of the tokens.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid.
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The requested resource doesn't exist.
      security:
      - Api-Token: []
      summary: Gets metadata of an ActiveGate token
      tags:
      - Access Tokens - ActiveGate tokens
      x-token-scopes:
      - activeGateTokenManagement.read
  /activeGates:
    get:
      description: The response includes all ActiveGates that are currently connected
        to the environment or have been connected during last 2 hours.
      operationId: getAllActiveGates
      parameters:
      - description: "Filters the resulting set of ActiveGates by the name of the\
          \ host it's running on. \n\n You can specify a partial name. In that case,\
          \ the `CONTAINS` operator is used."
        explode: true
        in: query
        name: hostname
        required: false
        schema:
          type: string
        style: form
      - description: Filters the resulting set of ActiveGates by the OS type of the
          host it's running on.
        explode: true
        in: query
        name: osType
        required: false
        schema:
          enum:
          - LINUX
          - WINDOWS
          type: string
        style: form
      - description: "Filters the resulting set of ActiveGates by the network address.\
          \ \n\n You can specify a partial address. In that case, the `CONTAINS` operator\
          \ is used."
        explode: true
        in: query
        name: networkAddress
        required: false
        schema:
          type: string
        style: form
      - description: "Filters the resulting set of ActiveGates by the Load Balancer\
          \ address. \n\n You can specify a partial address. In that case, the `CONTAINS`\
          \ operator is used."
        explode: true
        in: query
        name: loadBalancerAddress
        required: false
        schema:
          type: string
        style: form
      - description: Filters the resulting set of ActiveGates by the ActiveGate type.
        explode: true
        in: query
        name: type
        required: false
        schema:
          enum:
          - ENVIRONMENT
          - ENVIRONMENT_MULTI
          type: string
        style: form
      - description: "Filters the resulting set of ActiveGates by the network zone.\
          \ \n\n You can specify a partial name. In that case, the `CONTAINS` operator\
          \ is used."
        explode: true
        in: query
        name: networkZone
        required: false
        schema:
          type: string
        style: form
      - description: Filters the resulting set of ActiveGates by the auto-update status.
        explode: true
        in: query
        name: updateStatus
        required: false
        schema:
          enum:
          - INCOMPATIBLE
          - OUTDATED
          - SCHEDULED
          - SUPPRESSED
          - UNKNOWN
          - UP2DATE
          - UPDATE_IN_PROGRESS
          - UPDATE_PENDING
          - UPDATE_PROBLEM
          type: string
        style: form
      - description: "Filters the resulting set of ActiveGates by the specified version.\
          \ \n\n Specify the comparison operator here."
        explode: true
        in: query
        name: versionCompareType
        required: false
        schema:
          default: EQUAL
          enum:
          - EQUAL
          - GREATER
          - GREATER_EQUAL
          - LOWER
          - LOWER_EQUAL
          type: string
        style: form
      - description: "Filters the resulting set of ActiveGates by the specified version.\
          \ \n\n Specify the version in `<major>.<minor>.<revision>` format (for example,\
          \ `1.195.0`) here."
        explode: true
        in: query
        name: version
        required: false
        schema:
          type: string
        style: form
      - description: Filters the resulting set of ActiveGates by the actual state
          of auto-update.
        explode: true
        in: query
        name: autoUpdate
        required: false
        schema:
          enum:
          - DISABLED
          - ENABLED
          type: string
        style: form
      - description: "Filters the resulting set of ActiveGates by the group. \n\n\
          \ You can specify a partial name. In that case, the `CONTAINS` operator\
          \ is used."
        explode: true
        in: query
        name: group
        required: false
        schema:
          type: string
        style: form
      - description: Filters the resulting set of ActiveGates by the communication
          status.
        explode: true
        in: query
        name: online
        required: false
        schema:
          type: boolean
        style: form
      - description: Filters the resulting set of ActiveGates by the enabled modules.
        explode: true
        in: query
        name: enabledModule
        required: false
        schema:
          items:
            enum:
            - AWS
            - AZURE
            - BEACON_FORWARDER
            - CLOUD_FOUNDRY
            - DB_INSIGHT
            - EXTENSIONS_V1
            - EXTENSIONS_V2
            - KUBERNETES
            - LOGS
            - MEMORY_DUMPS
            - METRIC_API
            - ONE_AGENT_ROUTING
            - OTLP_INGEST
            - REST_API
            - SYNTHETIC
            - VMWARE
            - Z_OS
            type: string
          type: array
        style: form
      - description: Filters the resulting set of ActiveGates by the disabled modules.
        explode: true
        in: query
        name: disabledModule
        required: false
        schema:
          items:
            enum:
            - AWS
            - AZURE
            - BEACON_FORWARDER
            - CLOUD_FOUNDRY
            - DB_INSIGHT
            - EXTENSIONS_V1
            - EXTENSIONS_V2
            - KUBERNETES
            - LOGS
            - MEMORY_DUMPS
            - METRIC_API
            - ONE_AGENT_ROUTING
            - OTLP_INGEST
            - REST_API
            - SYNTHETIC
            - VMWARE
            - Z_OS
            type: string
          type: array
        style: form
      - description: Filters the resulting set of ActiveGates to those which are running
          in container (`true`) or not (`false`).
        explode: true
        in: query
        name: containerized
        required: false
        schema:
          type: boolean
        style: form
      - description: Filters the resulting set of ActiveGates to those with authorization
          token in specified state.
        explode: true
        in: query
        name: tokenState
        required: false
        schema:
          enum:
          - ABSENT
          - EXPIRING
          - INVALID
          - UNKNOWN
          - UNSUPPORTED
          - VALID
          type: string
        style: form
      - description: Filters the resulting set of ActiveGates to those with set expiration
          date for authorization token.
        explode: true
        in: query
        name: tokenExpirationSet
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ActiveGateList'
          description: Success
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid.
      security:
      - Api-Token: []
      summary: Lists all available ActiveGates
      tags:
      - ActiveGates
      x-permissions:
      - environment:roles:manage-settings
      x-supports-personal-access-token: true
      x-token-scopes:
      - activeGates.read
  /activeGates/autoUpdate:
    get:
      operationId: getGlobalAutoUpdateConfigForTenant
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ActiveGateGlobalAutoUpdateConfig'
          description: Success
      security:
      - Api-Token: []
      summary: Gets the global auto-update configuration of environment ActiveGates.
      tags:
      - ActiveGates - Auto-update configuration
      x-permissions:
      - environment:roles:manage-settings
      x-supports-personal-access-token: true
      x-token-scopes:
      - activeGates.read
    put:
      operationId: putGlobalAutoUpdateConfigForTenant
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/ActiveGateGlobalAutoUpdateConfig'
        description: "JSON body of the request, containing global auto update parameters."
        required: true
      responses:
        "204":
          description: Success. The global auto-update configuration have been updated.
            Response doesn't have a body.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid.
      security:
      - Api-Token: []
      summary: Puts the global auto-update configuration of environment ActiveGates.
      tags:
      - ActiveGates - Auto-update configuration
      x-permissions:
      - environment:roles:manage-settings
      x-supports-personal-access-token: true
      x-token-scopes:
      - activeGates.write
  /activeGates/autoUpdate/validator:
    post:
      operationId: validateGlobalAutoUpdateConfigForTenant
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/ActiveGateGlobalAutoUpdateConfig'
        description: "JSON body of the request, containing global auto update parameters."
        required: true
      responses:
        "204":
          description: Validated. The submitted configuration is valid. Response doesn't
            have a body.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid.
      security:
      - Api-Token: []
      summary: Validates the payload for the `POST /activeGates/autoUpdate` request.
      tags:
      - ActiveGates - Auto-update configuration
      x-permissions:
      - environment:roles:manage-settings
      x-supports-personal-access-token: true
      x-token-scopes:
      - activeGates.write
  /activeGates/remoteConfigurationManagement:
    get:
      description: The response includes finished jobs for the last 7 days.
      operationId: getRemoteIdentityOperations
      parameters:
      - description: "The start of the requested timeframe for a remote configuration\
          \ management job. \n\nYou can use one of the following formats: \n* Timestamp\
          \ in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`.\
          \ If no time zone is specified, UTC is used. You can use a space character\
          \ instead of the `T`. Seconds and fractions of a second are optional. \n\
          * Relative timeframe, back from now. The format is `now-NU/A`, where `N`\
          \ is the amount of time, `U` is the unit of time, and `A` is an alignment.\
          \ The alignment rounds all the smaller values to the nearest zero in the\
          \ past. For example, `now-1y/w` is one year back, aligned by a week. \n\
          You can also specify relative timeframe without an alignment: `now-NU`.\
          \ \nSupported time units for the relative timeframe are: \n   * `m`: minutes\
          \ \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months\
          \ \n   * `y`: years \n\n"
        explode: true
        in: query
        name: from
        required: false
        schema:
          type: string
        style: form
      - description: "The end of the requested timeframe for a remote configuration\
          \ management job. \n\nYou can use one of the following formats: \n* Timestamp\
          \ in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`.\
          \ If no time zone is specified, UTC is used. You can use a space character\
          \ instead of the `T`. Seconds and fractions of a second are optional. \n\
          * Relative timeframe, back from now. The format is `now-NU/A`, where `N`\
          \ is the amount of time, `U` is the unit of time, and `A` is an alignment.\
          \ The alignment rounds all the smaller values to the nearest zero in the\
          \ past. For example, `now-1y/w` is one year back, aligned by a week. \n\
          You can also specify relative timeframe without an alignment: `now-NU`.\
          \ \nSupported time units for the relative timeframe are: \n   * `m`: minutes\
          \ \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months\
          \ \n   * `y`: years \n\nIf not set, the current timestamp is used."
        explode: true
        in: query
        name: to
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/RemoteConfigurationManagementJobList'
          description: Success
      security:
      - Api-Token: []
      summary: Lists finished ActiveGate remote configuration management jobs
      tags:
      - ActiveGates - Remote configuration management
      x-permissions:
      - environment:roles:viewer
      x-supports-personal-access-token: true
      x-token-scopes:
      - activeGates.read
    post:
      operationId: createRemoteIdentityOperationJob
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/RemoteConfigurationManagementOperationActiveGateRequest'
        description: "JSON body of the request, containing remote configuration management\
          \ job definition."
        required: true
      responses:
        "201":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/RemoteConfigurationManagementJob'
          description: Created
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/RemoteConfigurationManagementValidationResult'
          description: Failed. The input is invalid.
        "409":
          description: Other remote configuration management job is currently being
            executed
      security:
      - Api-Token: []
      summary: Creates a new remote configuration management job
      tags:
      - ActiveGates - Remote configuration management
      x-permissions:
      - environment:roles:viewer
      x-supports-personal-access-token: true
      x-token-scopes:
      - activeGates.write
  /activeGates/remoteConfigurationManagement/current:
    get:
      description: "The currently running remote configuration management job may\
        \ be related to ActiveGates or OneAgents. There is a limit of one concurrent\
        \ remote configuration management job, regardless of the entity type."
      operationId: getCurrentRemoteIdentityOperationJob
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/RemoteConfigurationManagementJob'
          description: Success
        "204":
          description: 'No remote configuration management job is currently running '
      security:
      - Api-Token: []
      summary: Gets remote configuration management job that is currently running
      tags:
      - ActiveGates - Remote configuration management
      x-permissions:
      - environment:roles:viewer
      x-supports-personal-access-token: true
      x-token-scopes:
      - activeGates.read
  /activeGates/remoteConfigurationManagement/preview:
    post:
      operationId: createRemoteIdentityOperationPreview
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/RemoteConfigurationManagementOperationActiveGateRequest'
        description: "JSON body of the request, containing remote configuration management\
          \ job definition."
        required: true
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/RemoteConfigurationManagementPreviewList'
          description: Success
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/RemoteConfigurationManagementValidationResult'
          description: Failed. The input is invalid.
      security:
      - Api-Token: []
      summary: "Creates a preview for remote configuration management job - applicable\
        \ only to network zone, host group and ActiveGate group"
      tags:
      - ActiveGates - Remote configuration management
      x-permissions:
      - environment:roles:viewer
      x-supports-personal-access-token: true
      x-token-scopes:
      - activeGates.write
  /activeGates/remoteConfigurationManagement/validator:
    post:
      operationId: validateRemoteIdentityOperation
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/RemoteConfigurationManagementOperationActiveGateRequest'
        description: "JSON body of the request, containing remote configuration management\
          \ job definition."
        required: true
      responses:
        "204":
          description: Success. Response doesn't have a body.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/RemoteConfigurationManagementValidationResult'
          description: Failed. The input is invalid.
      security:
      - Api-Token: []
      summary: Validates the payload for the `POST /activeGates/remoteConfigurationManagement`
        request.
      tags:
      - ActiveGates - Remote configuration management
      x-permissions:
      - environment:roles:viewer
      x-supports-personal-access-token: true
      x-token-scopes:
      - activeGates.write
  /activeGates/remoteConfigurationManagement/{id}:
    get:
      operationId: getRemoteIdentityOperationJob
      parameters:
      - description: The ID of the required remote configuration management job.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/RemoteConfigurationManagementJob'
          description: Success
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The requested resource doesn't exist.
      security:
      - Api-Token: []
      summary: Gets the specified remote configuration management job
      tags:
      - ActiveGates - Remote configuration management
      x-permissions:
      - environment:roles:viewer
      x-supports-personal-access-token: true
      x-token-scopes:
      - activeGates.read
  /activeGates/tokenEnforcement:
    get:
      operationId: getTokenEnforcement
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ActiveGateTokenEnforcement'
          description: Success. The response contains the status of ActiveGate tokens
            enforcement
      security:
      - Api-Token: []
      summary: Gets the status of ActiveGate tokens enforcement
      tags:
      - ActiveGates - ActiveGate tokens enforcement
      x-supports-personal-access-token: true
      x-token-scopes:
      - activeGates.read
  /activeGates/updateJobs:
    get:
      description: The response includes ActiveGates that have both completed (successful
        and failed) jobs and jobs in progress.
      operationId: getAllUpdateJobList
      parameters:
      - description: "The start of the requested timeframe for update jobs. \n\nYou\
          \ can use one of the following formats: \n* Timestamp in UTC milliseconds.\
          \ \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time\
          \ zone is specified, UTC is used. You can use a space character instead\
          \ of the `T`. Seconds and fractions of a second are optional. \n* Relative\
          \ timeframe, back from now. The format is `now-NU/A`, where `N` is the amount\
          \ of time, `U` is the unit of time, and `A` is an alignment. The alignment\
          \ rounds all the smaller values to the nearest zero in the past. For example,\
          \ `now-1y/w` is one year back, aligned by a week. \nYou can also specify\
          \ relative timeframe without an alignment: `now-NU`. \nSupported time units\
          \ for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours\
          \ \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years\
          \ \n\nIf not set, the relative timeframe of one day is used (`now-1d`).\
          \ \n\nMaximum timeframe is 31 days."
        explode: true
        in: query
        name: from
        required: false
        schema:
          type: string
        style: form
      - description: "The end of the requested timeframe for update jobs. \n\nYou\
          \ can use one of the following formats: \n* Timestamp in UTC milliseconds.\
          \ \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time\
          \ zone is specified, UTC is used. You can use a space character instead\
          \ of the `T`. Seconds and fractions of a second are optional. \n* Relative\
          \ timeframe, back from now. The format is `now-NU/A`, where `N` is the amount\
          \ of time, `U` is the unit of time, and `A` is an alignment. The alignment\
          \ rounds all the smaller values to the nearest zero in the past. For example,\
          \ `now-1y/w` is one year back, aligned by a week. \nYou can also specify\
          \ relative timeframe without an alignment: `now-NU`. \nSupported time units\
          \ for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours\
          \ \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years\
          \ \n\nIf not set, the current timestamp is used."
        explode: true
        in: query
        name: to
        required: false
        schema:
          type: string
        style: form
      - description: "Filters the resulting set of update jobs by the specified initial\
          \ version. \n\n Specify the comparison operator here."
        explode: true
        in: query
        name: startVersionCompareType
        required: false
        schema:
          default: EQUAL
          enum:
          - EQUAL
          - GREATER
          - GREATER_EQUAL
          - LOWER
          - LOWER_EQUAL
          type: string
        style: form
      - description: Filters the resulting set of update-jobs by the initial version
          (required format `<major>.<minor>.<revision>`).
        explode: true
        in: query
        name: startVersion
        required: false
        schema:
          type: string
        style: form
      - description: Filters the resulting set of update-jobs by the update type.
        example: ACTIVE_GATE
        explode: true
        in: query
        name: updateType
        required: false
        schema:
          enum:
          - ACTIVE_GATE
          - REMOTE_PLUGIN_AGENT
          - SYNTHETIC
          - Z_REMOTE
          type: string
        style: form
      - description: "Filters the resulting set of update jobs by the specified target\
          \ version. \n\n Specify the comparison operator here."
        explode: true
        in: query
        name: targetVersionCompareType
        required: false
        schema:
          default: EQUAL
          enum:
          - EQUAL
          - GREATER
          - GREATER_EQUAL
          - LOWER
          - LOWER_EQUAL
          type: string
        style: form
      - description: Filters the resulting set of update-jobs by the target version
          (required format `<major>.<minor>.<revision>`).
        explode: true
        in: query
        name: targetVersion
        required: false
        schema:
          type: string
        style: form
      - description: "If `true`, filters the resulting set of update jobs to the most\
          \ recent update of each type."
        explode: true
        in: query
        name: lastUpdates
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/UpdateJobsAll'
          description: Success
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid.
      security:
      - Api-Token: []
      summary: List ActiveGates with update jobs
      tags:
      - ActiveGates - Auto-update jobs
      x-permissions:
      - environment:roles:manage-settings
      x-supports-personal-access-token: true
      x-token-scopes:
      - activeGates.read
  /activeGates/{agId}:
    get:
      operationId: getOneActiveGateById
      parameters:
      - description: The ID of the required ActiveGate.
        explode: false
        in: path
        name: agId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ActiveGate'
          description: Success
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Not found. See response body for details.
      security:
      - Api-Token: []
      summary: Gets the details of the specified ActiveGate
      tags:
      - ActiveGates
      x-permissions:
      - environment:roles:manage-settings
      x-supports-personal-access-token: true
      x-token-scopes:
      - activeGates.read
  /activeGates/{agId}/autoUpdate:
    get:
      operationId: getAutoUpdateConfigById
      parameters:
      - description: The ID of the required ActiveGate.
        explode: false
        in: path
        name: agId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ActiveGateAutoUpdateConfig'
          description: Success
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Not found. See response body for details.
      security:
      - Api-Token: []
      summary: Gets the configuration of auto-update for the specified ActiveGate
      tags:
      - ActiveGates - Auto-update configuration
      x-permissions:
      - environment:roles:manage-settings
      x-supports-personal-access-token: true
      x-token-scopes:
      - activeGates.read
    put:
      operationId: putAutoUpdateConfigById
      parameters:
      - description: The ID of the required ActiveGate.
        explode: false
        in: path
        name: agId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/ActiveGateAutoUpdateConfig'
        description: "JSON body of the request, containing auto update parameters."
        required: true
      responses:
        "204":
          description: Success. The auto-update configuration have been updated. Response
            doesn't have a body.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid.
      security:
      - Api-Token: []
      summary: Updates the configuration of auto-update for the specified ActiveGate
      tags:
      - ActiveGates - Auto-update configuration
      x-permissions:
      - environment:roles:manage-settings
      x-supports-personal-access-token: true
      x-token-scopes:
      - activeGates.write
  /activeGates/{agId}/autoUpdate/validator:
    post:
      operationId: validateAutoUpdateConfigById
      parameters:
      - description: The ID of the required ActiveGate.
        explode: false
        in: path
        name: agId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/ActiveGateAutoUpdateConfig'
        description: "JSON body of the request, containing auto update parameters."
        required: true
      responses:
        "204":
          description: Validated. The submitted auto-update configuration is valid.
            Response doesn't have a body.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid.
      security:
      - Api-Token: []
      summary: "Validates the payload for the `POST /activeGates/{agId}/autoUpdate`\
        \ request."
      tags:
      - ActiveGates - Auto-update configuration
      x-permissions:
      - environment:roles:manage-settings
      x-supports-personal-access-token: true
      x-token-scopes:
      - activeGates.write
  /activeGates/{agId}/updateJobs:
    get:
      description: The job can update the ActiveGate to the specified version or the
        latest available one.
      operationId: getUpdateJobListByAgId
      parameters:
      - description: The ID of the required ActiveGate.
        explode: false
        in: path
        name: agId
        required: true
        schema:
          type: string
        style: simple
      - description: "The start of the requested timeframe for update jobs. \n\nYou\
          \ can use one of the following formats: \n* Timestamp in UTC milliseconds.\
          \ \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time\
          \ zone is specified, UTC is used. You can use a space character instead\
          \ of the `T`. Seconds and fractions of a second are optional. \n* Relative\
          \ timeframe, back from now. The format is `now-NU/A`, where `N` is the amount\
          \ of time, `U` is the unit of time, and `A` is an alignment. The alignment\
          \ rounds all the smaller values to the nearest zero in the past. For example,\
          \ `now-1y/w` is one year back, aligned by a week. \nYou can also specify\
          \ relative timeframe without an alignment: `now-NU`. \nSupported time units\
          \ for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours\
          \ \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years\
          \ \n\nIf not set, the relative timeframe of one week is used (`now-1w`).\
          \ \n\nMaximum timeframe is 31 days."
        explode: true
        in: query
        name: from
        required: false
        schema:
          type: string
        style: form
      - description: "The end of the requested timeframe for update jobs. \n\nYou\
          \ can use one of the following formats: \n* Timestamp in UTC milliseconds.\
          \ \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time\
          \ zone is specified, UTC is used. You can use a space character instead\
          \ of the `T`. Seconds and fractions of a second are optional. \n* Relative\
          \ timeframe, back from now. The format is `now-NU/A`, where `N` is the amount\
          \ of time, `U` is the unit of time, and `A` is an alignment. The alignment\
          \ rounds all the smaller values to the nearest zero in the past. For example,\
          \ `now-1y/w` is one year back, aligned by a week. \nYou can also specify\
          \ relative timeframe without an alignment: `now-NU`. \nSupported time units\
          \ for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours\
          \ \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years\
          \ \n\nIf not set, the current timestamp is used."
        explode: true
        in: query
        name: to
        required: false
        schema:
          type: string
        style: form
      - description: "Filters the resulting set of update jobs by the specified initial\
          \ version. \n\n Specify the comparison operator here."
        explode: true
        in: query
        name: startVersionCompareType
        required: false
        schema:
          default: EQUAL
          enum:
          - EQUAL
          - GREATER
          - GREATER_EQUAL
          - LOWER
          - LOWER_EQUAL
          type: string
        style: form
      - description: Filters the resulting set of update-jobs by the initial version
          (required format `<major>.<minor>.<revision>`).
        explode: true
        in: query
        name: startVersion
        required: false
        schema:
          type: string
        style: form
      - description: Filters the resulting set of update-jobs by the update type.
        example: ACTIVE_GATE
        explode: true
        in: query
        name: updateType
        required: false
        schema:
          enum:
          - ACTIVE_GATE
          - REMOTE_PLUGIN_AGENT
          - SYNTHETIC
          - Z_REMOTE
          type: string
        style: form
      - description: "Filters the resulting set of update jobs by the specified target\
          \ version. \n\n Specify the comparison operator here."
        explode: true
        in: query
        name: targetVersionCompareType
        required: false
        schema:
          default: EQUAL
          enum:
          - EQUAL
          - GREATER
          - GREATER_EQUAL
          - LOWER
          - LOWER_EQUAL
          type: string
        style: form
      - description: Filters the resulting set of update-jobs by the target version
          (required format `<major>.<minor>.<revision>`).
        explode: true
        in: query
        name: targetVersion
        required: false
        schema:
          type: string
        style: form
      - description: "If `true`, filters the resulting set of update jobs to the most\
          \ recent update of each type."
        explode: true
        in: query
        name: lastUpdates
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/UpdateJobList'
          description: Success
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Not found. See response body for details.
      security:
      - Api-Token: []
      summary: Lists update jobs for the specified ActiveGate
      tags:
      - ActiveGates - Auto-update jobs
      x-permissions:
      - environment:roles:manage-settings
      x-supports-personal-access-token: true
      x-token-scopes:
      - activeGates.read
    post:
      operationId: createUpdateJobForAg
      parameters:
      - description: The ID of the required ActiveGate.
        explode: false
        in: path
        name: agId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/UpdateJob'
        description: "JSON body of the request, containing update-job parameters."
        required: true
      responses:
        "201":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/UpdateJob'
          description: Success. The update-job have been created.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid.
      security:
      - Api-Token: []
      summary: Creates a new update job for the specified ActiveGate
      tags:
      - ActiveGates - Auto-update jobs
      x-permissions:
      - environment:roles:manage-settings
      x-supports-personal-access-token: true
      x-token-scopes:
      - activeGates.write
  /activeGates/{agId}/updateJobs/validator:
    post:
      operationId: validateUpdateJobForAg
      parameters:
      - description: The ID of the required ActiveGate.
        explode: false
        in: path
        name: agId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/UpdateJob'
        description: "JSON body of the request, containing update-job parameters."
        required: true
      responses:
        "204":
          description: Validated. The submitted update-job is valid. Response doesn't
            have a body.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid.
      security:
      - Api-Token: []
      summary: "Validates the payload for the `POST /activeGates/{agId}/updateJobs`\
        \ request."
      tags:
      - ActiveGates - Auto-update jobs
      x-permissions:
      - environment:roles:manage-settings
      x-supports-personal-access-token: true
      x-token-scopes:
      - activeGates.write
  /activeGates/{agId}/updateJobs/{jobId}:
    delete:
      operationId: deleteUpdateJobByJobIdForAg
      parameters:
      - description: The ID of the required ActiveGate.
        explode: false
        in: path
        name: agId
        required: true
        schema:
          type: string
        style: simple
      - description: A unique identifier for a update-job of ActiveGate.
        explode: false
        in: path
        name: jobId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Success. The update-job have been deleted. Response doesn't
            have a body.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid.
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Not found. See response body for details.
      security:
      - Api-Token: []
      summary: Deletes the specified update job
      tags:
      - ActiveGates - Auto-update jobs
      x-permissions:
      - environment:roles:manage-settings
      x-supports-personal-access-token: true
      x-token-scopes:
      - activeGates.write
    get:
      operationId: getUpdateJobByJobIdForAg
      parameters:
      - description: The ID of the required ActiveGate.
        explode: false
        in: path
        name: agId
        required: true
        schema:
          type: string
        style: simple
      - description: A unique identifier for a update-job of ActiveGate.
        explode: false
        in: path
        name: jobId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/UpdateJob'
          description: Success
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Not found. See response body for details.
      security:
      - Api-Token: []
      summary: Gets the parameters of the specified update job
      tags:
      - ActiveGates - Auto-update jobs
      x-permissions:
      - environment:roles:manage-settings
      x-supports-personal-access-token: true
      x-token-scopes:
      - activeGates.read
  /apiTokens:
    get:
      description: "You can limit the output by using pagination: \n1. Specify the\
        \ number of results per page in the **pageSize** query parameter. \n2. Use\
        \ the cursor from the **nextPageKey** field of the previous response in the\
        \ **nextPageKey** query parameter to obtain subsequent pages."
      operationId: listApiTokens
      parameters:
      - description: "The cursor for the next page of results. You can find it in\
          \ the **nextPageKey** field of the previous response. \n\nThe first page\
          \ is always returned if you don't specify the **nextPageKey** query parameter.\
          \ \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must\
          \ omit all other query parameters. "
        explode: true
        in: query
        name: nextPageKey
        required: false
        schema:
          type: string
        style: form
      - description: "The amount of API tokens in a single response payload. \n\n\
          The maximal allowed page size is 10000 and the minimal allowed page size\
          \ is 100. \n\nIf not set, 200 is used."
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          format: int64
          maximum: 10000
          type: integer
        style: form
      - description: "Filters the resulting sets of tokens. Only tokens matching the\
          \ specified criteria are included into response. \n\nYou can set one or\
          \ more of the following criteria: \n\n* Owner: `owner(\"value\")`. The user\
          \ that owns the token. Case-sensitive.\n* Personal access token: `personalAccessToken(false)`.\
          \ Set to `true` to include only personal access tokens or to `false` to\
          \ include only API tokens.\n* Token scope: `scope(\"scope1\",\"scope2\"\
          )`. If several values are specified, the **OR** logic applies. \n\nTo set\
          \ multiple criteria, separate them with commas (`,`). Only results matching\
          \ **all** criteria are included into response."
        explode: true
        in: query
        name: apiTokenSelector
        required: false
        schema:
          type: string
        style: form
      - description: "Specifies the fields to be included in the response.\n\nThe\
          \ following fields are included by default: \n\n* `id` \n* `name` \n* `enabled`\
          \ \n* `owner` \n* `creationDate` \n\nTo remove fields from the response,\
          \ specify them with the minus (`-`) operator as a comma-separated list (for\
          \ example, `-creationDate,-owner`). \n\nYou can include additional fields:\
          \ \n\n* `personalAccessToken` \n* `expirationDate` \n* `lastUsedDate` \n\
          * `lastUsedIpAddress` \n* `modifiedDate` \n* `scopes` \n\n* `additionalMetadata`\
          \ \n\nTo add fields to the response, specify them with the plus (`+`) operator\
          \ as a comma-separated list (for example, `+expirationDate,+scopes`). You\
          \ can combine adding and removing of fields (for example, `+scopes,-creationDate`).\
          \ \n\nAlternatively, you can define the desired set of fields in the response.\
          \ Specify the required fields as a comma-separated list, without operators\
          \ (for example, `creationDate,expirationDate,owner`). The ID is always included\
          \ in the response. \n\nThe **fields** string must be URL-encoded."
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "Filters tokens based on the last usage time. \nThe start of\
          \ the requested timeframe. \n\nYou can use one of the following formats:\
          \ \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`.\
          \ If no time zone is specified, UTC is used. You can use a space character\
          \ instead of the `T`. Seconds and fractions of a second are optional. \n\
          * Relative timeframe, back from now. The format is `now-NU/A`, where `N`\
          \ is the amount of time, `U` is the unit of time, and `A` is an alignment.\
          \ The alignment rounds all the smaller values to the nearest zero in the\
          \ past. For example, `now-1y/w` is one year back, aligned by a week. \n\
          You can also specify relative timeframe without an alignment: `now-NU`.\
          \ \nSupported time units for the relative timeframe are: \n   * `m`: minutes\
          \ \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months\
          \ \n   * `y`: years \n\n"
        explode: true
        in: query
        name: from
        required: false
        schema:
          type: string
        style: form
      - description: "Filters tokens based on the last usage time. \nThe end of the\
          \ requested timeframe. \n\nYou can use one of the following formats: \n\
          * Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`.\
          \ If no time zone is specified, UTC is used. You can use a space character\
          \ instead of the `T`. Seconds and fractions of a second are optional. \n\
          * Relative timeframe, back from now. The format is `now-NU/A`, where `N`\
          \ is the amount of time, `U` is the unit of time, and `A` is an alignment.\
          \ The alignment rounds all the smaller values to the nearest zero in the\
          \ past. For example, `now-1y/w` is one year back, aligned by a week. \n\
          You can also specify relative timeframe without an alignment: `now-NU`.\
          \ \nSupported time units for the relative timeframe are: \n   * `m`: minutes\
          \ \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months\
          \ \n   * `y`: years \n\nIf not set, the current timestamp is used."
        explode: true
        in: query
        name: to
        required: false
        schema:
          type: string
        style: form
      - description: "The sort order of the token list. \n\nYou can sort by the following\
          \ properties with a sign prefix for the sort order: \n\n * `name`: token\
          \ name (`+` a...z or `-` z...a) \n * `lastUsedDate` last used (`+` never\
          \ used tokens first `-` most recently used tokens first) \n * `creationDate`\
          \ (`+` oldest tokens first `-` newest tokens first) \n * `expirationDate`\
          \ (`+` tokens that expire soon first `-` unlimited tokens first) \n * `modifiedDate`\
          \ last modified (`+` never modified tokens first `-` most recently modified\
          \ tokens first) \n\nIf no prefix is set, + is used. \n\nIf not set, tokens\
          \ are sorted by creation date with newest first."
        explode: true
        in: query
        name: sort
        required: false
        schema:
          default: -creationDate
          type: string
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ApiTokenList'
          description: Success
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid.
      security:
      - Api-Token: []
      summary: Lists all available API tokens
      tags:
      - Access Tokens - API tokens
      x-allow-access-with-management-zone-permissions: true
      x-permissions:
      - environment:roles:viewer
      x-supports-personal-access-token: true
      x-token-scopes:
      - apiTokens.read
    post:
      description: "The newly created token will be owned by the same user who owns\
        \ the token used for authentication of the call. \n\n Creating personal access\
        \ tokens requires the `environment:roles:viewer` permission. Creating access\
        \ tokens requires the `environment:roles:manage-settings` permission."
      operationId: createApiToken
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/ApiTokenCreate'
        description: The JSON body of the request. Contains parameters of the new
          API token.
        required: true
      responses:
        "201":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ApiTokenCreated'
          description: Success. The token has been created. The body of the response
            contains the token secret.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid.
      security:
      - Api-Token: []
      summary: Creates a new API token
      tags:
      - Access Tokens - API tokens
      x-allow-access-with-management-zone-permissions: true
      x-permissions:
      - environment:roles:viewer
      x-supports-personal-access-token: true
      x-token-scopes:
      - apiTokens.write
  /apiTokens/lookup:
    post:
      operationId: lookupApiToken
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/ApiTokenSecret'
        description: The JSON body of the request. Contains the required token.
        required: true
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ApiToken'
          description: Success
        "404":
          description: Failed. The requested resource doesn't exist.
      security:
      - Api-Token: []
      summary: Gets API token metadata by token secret
      tags:
      - Access Tokens - API tokens
      x-allow-access-with-management-zone-permissions: true
      x-token-scopes: []
  /apiTokens/{id}:
    delete:
      operationId: deleteApiToken
      parameters:
      - description: "The ID of the token to be deleted. \n\nYou can specify either\
          \ the ID or the secret of the token. \n\nYou can't delete the token you're\
          \ using for authentication of the request."
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Success. Response doesn't have a body.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. You can't delete the token you're using for authentication
            of the request.
        "404":
          description: Failed. The requested resource doesn't exist.
      security:
      - Api-Token: []
      summary: Deletes an API token
      tags:
      - Access Tokens - API tokens
      x-allow-access-with-management-zone-permissions: true
      x-permissions:
      - environment:roles:viewer
      x-supports-personal-access-token: true
      x-token-scopes:
      - apiTokens.write
    get:
      description: The token secret is **not** exposed.
      operationId: getApiToken
      parameters:
      - description: The ID of the token.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ApiToken'
          description: Success
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid.
        "404":
          description: Failed. The requested resource doesn't exist.
      security:
      - Api-Token: []
      summary: Gets API token metadata by token ID
      tags:
      - Access Tokens - API tokens
      x-allow-access-with-management-zone-permissions: true
      x-permissions:
      - environment:roles:viewer
      x-supports-personal-access-token: true
      x-token-scopes:
      - apiTokens.read
    put:
      operationId: updateApiToken
      parameters:
      - description: "The ID of the token to be updated. \n\n You can't disable the\
          \ token you're using for authentication of the request."
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/ApiTokenUpdate'
        description: The JSON body of the request. Contains updated parameters of
          the API token.
        required: true
      responses:
        "204":
          description: Success. Response doesn't have a body.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid.
      security:
      - Api-Token: []
      summary: Updates an API token
      tags:
      - Access Tokens - API tokens
      x-allow-access-with-management-zone-permissions: true
      x-permissions:
      - environment:roles:viewer
      x-supports-personal-access-token: true
      x-token-scopes:
      - apiTokens.write
  /attacks:
    get:
      operationId: getAttacks
      parameters:
      - description: "The cursor for the next page of results. You can find it in\
          \ the **nextPageKey** field of the previous response. \n\nThe first page\
          \ is always returned if you don't specify the **nextPageKey** query parameter.\
          \ \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must\
          \ omit all other query parameters. "
        explode: true
        in: query
        name: nextPageKey
        required: false
        schema:
          type: string
        style: form
      - description: "The amount of attacks in a single response payload. \n\nThe\
          \ maximal allowed page size is 500. \n\nIf not set, 100 is used."
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: "Defines the scope of the query. Only attacks matching the specified\
          \ criteria are included in the response. You can add one or more of the\
          \ following criteria. Values are *not* case-sensitive and the `EQUALS` operator\
          \ is used unless otherwise specified.\n\n* State: `state(\"value\")`. The\
          \ state of the attack. Possible values are `EXPLOITED`, `BLOCKED`, and `ALLOWLISTED`.\n\
          * Attack Type: `attackType(\"value\")`. The type of the attack. Find the\
          \ possible values in the description of the **attackType** field of the\
          \ response.\n* Country Code: `countryCode(\"value\")`. The country code\
          \ of the attacker. Supported values include all ISO-3166-1 alpha-2 country\
          \ codes (2-letter). Supplying empty filter value `countryCode()` will return\
          \ attacks, where location is not available.\n* Request path contains: `requestPathContains(\"\
          value\")`. Filters for a substring in the request path. The `CONTAINS` operator\
          \ is used. A maximum of 48 characters are allowed.\n* Process group name\
          \ contains: `processGroupNameContains(\"value\")`. Filters for a substring\
          \ in the targeted process group's name. The `CONTAINS` operator is used.\n\
          * Vulnerability ID: `vulnerabilityId(\"123456789\")`. The exact ID of the\
          \ vulnerability.\n* Source IPs: `sourceIps(\"93.184.216.34\", \"63.124.6.12\"\
          )`. The exact IPv4/IPv6 addresses of the attacker.\n* Management zone ID:\
          \ `managementZoneIds(\"mzId-1\", \"mzId-2\")`.\n* Management zone name:\
          \ `managementZones(\"name-1\", \"name-2\")`. Values are case sensitive.\n\
          * Technology: `technology(\"technology-1\", \"technology-2\")`. Find the\
          \ possible values in the description of the **technology** field of the\
          \ response. The `EQUALS` operator is used.\n\nTo set several criteria, separate\
          \ them with a comma (`,`). Only results matching (**all** criteria are included\
          \ in the response.\n\nSpecify the value of a criterion as a quoted string.\
          \ The following special characters must be escaped with a tilde (`~`) inside\
          \ quotes:\n* Tilde `~` \n* Quote `\"`"
        explode: true
        in: query
        name: attackSelector
        required: false
        schema:
          type: string
        style: form
      - description: "Specifies one or more fields for sorting the attack list. Multiple\
          \ fields can be concatenated using a comma (`,`) as a separator (e.g. `+state,-timestamp`).\n\
          \nYou can sort by the following properties with a sign prefix for the sorting\
          \ order. \n\n* `displayId`: The attack's display ID.\n* `displayName`: The\
          \ attack's display name.\n* `attackType`: The type of the attack (e.g. SQL_INJECTION,\
          \ JNDI_INJECTION, etc.).\n* `state`: The state of the attack. (`+` low severity\
          \ state first `-` high severity state first)\n* `sourceIp`: The IP address\
          \ of the attacker. Sorts by the numerical IP value.\n* `requestPath`: The\
          \ request path where the attack was started.\n* `timestamp`: When the attack\
          \ was executed. (`+` old attacks first or `-` new attacks first)\nIf no\
          \ prefix is set, `+` is used."
        explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      - description: |
          A list of additional attack properties you can add to the response.

          The following properties are available (all other properties are always included and you can't remove them from the response):

          * `attackTarget`: The targeted host/database of an attack.
          * `request`: The request that was sent from the attacker.
          * `entrypoint`: The entry point used by an attacker to start a specific attack.
          * `vulnerability`: The vulnerability utilized by the attack.
          * `securityProblem`: The related security problem.
          * `attacker`: The attacker of an attack.
          * `managementZones`: The related management zones.
          * `affectedEntities`: The affected entities of an attack.

          To add properties, specify them in a comma-separated list and prefix each property with a plus (for example, `+attackTarget,+securityProblem`).
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "The start of the requested timeframe. \n\nYou can use one of\
          \ the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable\
          \ format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified,\
          \ UTC is used. You can use a space character instead of the `T`. Seconds\
          \ and fractions of a second are optional. \n* Relative timeframe, back from\
          \ now. The format is `now-NU/A`, where `N` is the amount of time, `U` is\
          \ the unit of time, and `A` is an alignment. The alignment rounds all the\
          \ smaller values to the nearest zero in the past. For example, `now-1y/w`\
          \ is one year back, aligned by a week. \nYou can also specify relative timeframe\
          \ without an alignment: `now-NU`. \nSupported time units for the relative\
          \ timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days\
          \ \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set,\
          \ the relative timeframe of thirty days is used (`now-30d`)."
        explode: true
        in: query
        name: from
        required: false
        schema:
          type: string
        style: form
      - description: "The end of the requested timeframe. \n\nYou can use one of the\
          \ following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable\
          \ format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified,\
          \ UTC is used. You can use a space character instead of the `T`. Seconds\
          \ and fractions of a second are optional. \n* Relative timeframe, back from\
          \ now. The format is `now-NU/A`, where `N` is the amount of time, `U` is\
          \ the unit of time, and `A` is an alignment. The alignment rounds all the\
          \ smaller values to the nearest zero in the past. For example, `now-1y/w`\
          \ is one year back, aligned by a week. \nYou can also specify relative timeframe\
          \ without an alignment: `now-NU`. \nSupported time units for the relative\
          \ timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days\
          \ \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set,\
          \ the current timestamp is used."
        explode: true
        in: query
        name: to
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/AttackList'
          description: Success
      security:
      - Api-Token: []
      summary: Lists all attacks | maturity=EARLY_ADOPTER
      tags:
      - Attacks
      x-allow-access-with-management-zone-permissions: true
      x-maturity: EARLY_ADOPTER
      x-permissions:
      - environment:roles:manage-security-problems
      - environment:roles:view-security-problems
      x-supports-personal-access-token: true
      x-token-scopes:
      - attacks.read
  /attacks/{id}:
    get:
      operationId: getAttack
      parameters:
      - description: The ID of the attack.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: |
          A list of additional attack properties you can add to the response.

          The following properties are available (all other properties are always included and you can't remove them from the response):

          * `attackTarget`: The targeted host/database of an attack.
          * `request`: The request that was sent from the attacker.
          * `entrypoint`: The entry point used by an attacker to start a specific attack.
          * `vulnerability`: The vulnerability utilized by the attack.
          * `securityProblem`: The related security problem.
          * `attacker`: The attacker of an attack.
          * `managementZones`: The related management zones.

          To add properties, specify them in a comma-separated list and prefix each property with a plus (for example, `+attackTarget,+securityProblem`).
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Attack'
          description: Success
      security:
      - Api-Token: []
      summary: Gets the specified attack | maturity=EARLY_ADOPTER
      tags:
      - Attacks
      x-allow-access-with-management-zone-permissions: true
      x-maturity: EARLY_ADOPTER
      x-permissions:
      - environment:roles:manage-security-problems
      - environment:roles:view-security-problems
      x-supports-personal-access-token: true
      x-token-scopes:
      - attacks.read
  /auditlogs:
    get:
      description: "You can limit the output by using pagination: \n1. Specify the\
        \ number of results per page in the **pageSize** query parameter. \n2. Use\
        \ the cursor from the **nextPageKey** field of the previous response in the\
        \ **nextPageKey** query parameter to obtain subsequent pages."
      operationId: getLogs
      parameters:
      - description: "The cursor for the next page of results. You can find it in\
          \ the **nextPageKey** field of the previous response. \n\nThe first page\
          \ is always returned if you don't specify the **nextPageKey** query parameter.\
          \ \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must\
          \ omit all other query parameters. "
        explode: true
        in: query
        name: nextPageKey
        required: false
        schema:
          type: string
        style: form
      - description: "The amount of log entries in a single response payload. \n\n\
          The maximal allowed page size is 5000. \n\nIf not set, 1000 is used."
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: "Filters the audit log. You can use the following criteria: \n\
          * User: `user(\"userIdentification\")`. The `EQUALS` operator applies. \n\
          * Event type: `eventType(\"value\")`. The `EQUALS` operator applies. \n\
          * Category of a logged operation: `category(\"value\")`. The `EQUALS` operator\
          \ applies. \n* Entity ID: `entityId(\"id\")`. The `CONTAINS` operator applies.\
          \ \n\nFor each criterion, you can specify multiple alternatives with comma-separated\
          \ values. In this case, the OR logic applies. For example, `eventType(\"\
          CREATE\",\"UPDATE\")` means eventType can be \"CREATE\" or \"UPDATE\". \n\
          \nYou can specify multiple comma-separated criteria, such as `eventType(\"\
          CREATE\",\"UPDATE\"),category(\"CONFIG\")`. Only results matching **all**\
          \ criteria are included in response. \n\nSpecify the value of a criterion\
          \ as a quoted string. The following special characters must be escaped with\
          \ a tilde (`~`) inside quotes: \n* Tilde `~` \n* Quote `\"`"
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: "The start of the requested timeframe. \n\nYou can use one of\
          \ the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable\
          \ format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified,\
          \ UTC is used. You can use a space character instead of the `T`. Seconds\
          \ and fractions of a second are optional. \n* Relative timeframe, back from\
          \ now. The format is `now-NU/A`, where `N` is the amount of time, `U` is\
          \ the unit of time, and `A` is an alignment. The alignment rounds all the\
          \ smaller values to the nearest zero in the past. For example, `now-1y/w`\
          \ is one year back, aligned by a week. \nYou can also specify relative timeframe\
          \ without an alignment: `now-NU`. \nSupported time units for the relative\
          \ timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days\
          \ \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set,\
          \ the relative timeframe of two weeks is used (`now-2w`)."
        explode: true
        in: query
        name: from
        required: false
        schema:
          type: string
        style: form
      - description: "The end of the requested timeframe. \n\nYou can use one of the\
          \ following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable\
          \ format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified,\
          \ UTC is used. You can use a space character instead of the `T`. Seconds\
          \ and fractions of a second are optional. \n* Relative timeframe, back from\
          \ now. The format is `now-NU/A`, where `N` is the amount of time, `U` is\
          \ the unit of time, and `A` is an alignment. The alignment rounds all the\
          \ smaller values to the nearest zero in the past. For example, `now-1y/w`\
          \ is one year back, aligned by a week. \nYou can also specify relative timeframe\
          \ without an alignment: `now-NU`. \nSupported time units for the relative\
          \ timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days\
          \ \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set,\
          \ the current timestamp is used."
        explode: true
        in: query
        name: to
        required: false
        schema:
          type: string
        style: form
      - description: "The sorting of audit log entries: \n* `timestamp`: Oldest first.\
          \ \n* `-timestamp`: Newest first. \n\nIf not set, the newest first sorting\
          \ is applied."
        explode: true
        in: query
        name: sort
        required: false
        schema:
          default: -timestamp
          type: string
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/AuditLog'
          description: Success
      security:
      - Api-Token: []
      summary: Gets the audit log of your Dynatrace environment | maturity=EARLY_ADOPTER
      tags:
      - Audit Logs
      x-maturity: EARLY_ADOPTER
      x-token-scopes:
      - auditLogs.read
  /auditlogs/{id}:
    get:
      operationId: getLog
      parameters:
      - description: The ID of the required log entry.
        explode: false
        in: path
        name: id
        required: true
        schema:
          maxLength: 19
          minLength: 0
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/AuditLogEntry'
          description: Success
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. Invalid ID format.
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The requested resource doesn't exist.
      security:
      - Api-Token: []
      summary: Gets the specified entry of the audit log | maturity=EARLY_ADOPTER
      tags:
      - Audit Logs
      x-maturity: EARLY_ADOPTER
      x-token-scopes:
      - auditLogs.read
  /bizevents/ingest:
    post:
      description: "The ingestion of business events consumes [Davis Data Units](https://dt-url.net/ddu)\
        \ (DDUs) from the business events pool."
      operationId: ingest_1
      requestBody:
        content:
          application/cloudevent+json:
            example:
              specversion: "1.0"
              id: "1"
              source: custom.source
              type: com.mycompany.shop.checkout
              dtcontext: "dt.session_id=\"234234234324235345345\",dt.entity.rum_application=\"\
                APPLICATION-53453458340758\",host.name=\"123.123.123.123\""
              dataschema: http://dynatrace.com/schema/bizevents/generic/1.0
              traceparent: 00-4bf92f3577b34da6a3ce929d0e0e4736-00f067aa0ba902b7-00
              data:
                id: OR-838475
                paymentType: paypal
                plannedDeliveryDate: 01.01.2021
                total: 234.0
            schema:
              $ref: '#/components/schemas/CloudEvent'
          application/cloudevent-batch+json:
            example:
            - specversion: "1.0"
              id: "1"
              source: custom.provider
              type: com.easytravel.funnel.product-view
              data: just a string
            - specversion: "1.0"
              id: "2"
              source: custom.provider
              type: com.easytravel.frontend.booking-process-triggered
              data_base64: SGkgdGhlcmUsIEkgYW0geW91ciBteXN0aWNhbCwgdW5rbm93biBjb250ZW50
            schema:
              items:
                $ref: '#/components/schemas/CloudEvent'
              type: array
          application/json; charset=utf-8:
            example:
              id: "1"
              paymentType: paypal
              plannedDeliveryDate: 01.01.2021
              event.provider: custom.provider
              total: 234.0
              customer:
                firstName: John
                lastName: Doe
              orderItemsProductIDs:
              - PR-102002002
              - QZ-123232
            schema:
              description: |-
                Can be either a Json-Object or an Array of Json-Objects.
                Following properties have special semantics:
                - time - Timestamp in millis, will be set if missing
                - event.id - Will be auto-generated if missing
                - event.provider - Defaults to 'unknown' if missing
                - event.type - Defaults to 'unknown' if missing
                - event.kind - Always overridden to 'BIZ_EVENT'

                Any other keys will be transferred as event properties.
              type: object
        description: The Business Event
        required: true
      responses:
        "202":
          content:
            application/json; charset=utf-8:
              example: {}
          description: The provided business events are all accepted and will be processed.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/BizEventIngestResult'
          description: Some business events are invalid. Valid business events are
            accepted and will be processed.
      summary: Ingests a business event
      tags:
      - Business Events
      x-only-visible-in-saas: true
  /credentials:
    get:
      description: The credentials set itself (username/certificate and password)
        is not included in the response.
      operationId: listCredentials
      parameters:
      - description: Filters the result by the specified credentials type.
        explode: true
        in: query
        name: type
        required: false
        schema:
          enum:
          - CERTIFICATE
          - USERNAME_PASSWORD
          - TOKEN
          type: string
        style: form
      - description: "Filters the result by the name. When in quotation marks, whole\
          \ phrase is taken. Case insensitive."
        explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: Filters credentials accessible to the user (owned by the user
          or the ones that are accessible for all).
        explode: true
        in: query
        name: user
        required: false
        schema:
          type: string
        style: form
      - description: Filters credentials with specified scope.
        explode: true
        in: query
        name: scope
        required: false
        schema:
          type: string
        style: form
      - description: "The cursor for the next page of results. You can find it in\
          \ the **nextPageKey** field of the previous response. \n\nThe first page\
          \ is always returned if you don't specify the **nextPageKey** query parameter.\
          \ \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must\
          \ omit all other query parameters. "
        explode: true
        in: query
        name: nextPageKey
        required: false
        schema:
          type: string
        style: form
      - description: "The amount of credentials in a single response payload. \n\n\
          The maximal allowed page size is 500. \n\nIf not set, 100 is used."
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          format: int64
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/CredentialsList'
          description: Success
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid.
      security:
      - Api-Token: []
      summary: Lists all sets of credentials for synthetic monitors stored in your
        environment.
      tags:
      - Credential vault
      x-token-scopes:
      - credentialVault.read
    post:
      description: The body must not provide an ID. An ID is assigned automatically
        by the Dynatrace server.
      operationId: createCredentials
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/Credentials'
        description: The JSON body of the request. Contains parameters of the new
          credentials set.
        required: true
      responses:
        "201":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/CredentialsId'
          description: Success. The new credentials set has been created. The response
            contains the ID of the set.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid.
      security:
      - Api-Token: []
      summary: Creates a new credentials set.
      tags:
      - Credential vault
      x-token-scopes:
      - credentialVault.write
  /credentials/{id}:
    delete:
      description: Provide credential ID in the path.
      operationId: removeCredentials
      parameters:
      - description: The ID of the credentials set to be deleted.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Success. The credentials set has been deleted. Response doesn't
            have a body.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid.
        "500":
          description: Failed. Could not delete the credential.
      security:
      - Api-Token: []
      summary: Deletes the specified credentials set
      tags:
      - Credential vault
      x-token-scopes:
      - credentialVault.write
    get:
      description: The credentials set itself (e.g. username/certificate and password)
        is not included in the response.
      operationId: getCredentials
      parameters:
      - description: The Dynatrace entity ID of the required credentials set.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/CredentialsResponseElement'
          description: Success. The response contains the metadata of the credentials
            set.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid.
      security:
      - Api-Token: []
      summary: Gets the metadata of the specified credentials set.
      tags:
      - Credential vault
      x-token-scopes:
      - credentialVault.read
    put:
      description: The body must not provide an ID. The ID should be provided in the
        path.
      operationId: updateCredentials
      parameters:
      - description: The Dynatrace entity ID of the credentials set to be updated.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/Credentials'
        description: The JSON body of the request. Contains updated parameters of
          the credentials set.
        required: true
      responses:
        "201":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/CredentialsId'
          description: Success. The new credentials set has been created. The response
            contains the ID of the set.
        "204":
          description: Success. The credentials set has been updated. Response doesn't
            have a body.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid.
      security:
      - Api-Token: []
      summary: Updates the specified credentials set.
      tags:
      - Credential vault
      x-token-scopes:
      - credentialVault.write
  /credentials/{id}/details:
    get:
      description: "The credentials set including username/certificate, password or\
        \ token is included in the response."
      operationId: getCredentialsDetails
      parameters:
      - description: The Dynatrace entity ID of the required credentials set.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/AbstractCredentialsResponseElement'
          description: Success. The response contains the details of the credentials
            set.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid. E.g. Requested credentials with
            unsupported scope. Only APP_ENGINE scope is supported.
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. Requested credentials belong to another user.
      security:
      - Api-Token: []
      summary: Gets the details of the specified credentials set.
      tags:
      - Credential vault
      x-token-scopes:
      - credentialVault.read
  /davis/securityAdvices:
    get:
      description: "You can narrow down the output by providing the management zone\
        \ and pagination. If you specify a management zone, only problems originating\
        \ from that zone are included to the request."
      operationId: getAdviceForSecurityProblems
      parameters:
      - description: "To specify management zones, use one of the options listed below.\
          \ For each option you can specify multiple comma-separated values. If several\
          \ values are specified, the **OR** logic applies. All values are case-sensitive\
          \ and must be quoted. \n\n* Management zone ID: ids(\"mzId-1\", \"mzId-2\"\
          ). \n* Management zone names: names(\"mz-1\", \"mz-2\"). \n\nYou can specify\
          \ several comma-separated criteria (for example, `names(\"myMz\"),ids(\"\
          9130632296508575249\")`)."
        explode: true
        in: query
        name: managementZoneFilter
        required: false
        schema:
          type: string
        style: form
      - description: "The cursor for the next page of results. You can find it in\
          \ the **nextPageKey** field of the previous response. \n\nThe first page\
          \ is always returned if you don't specify the **nextPageKey** query parameter.\
          \ \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must\
          \ omit all other query parameters. "
        explode: true
        in: query
        name: nextPageKey
        required: false
        schema:
          type: string
        style: form
      - description: "The amount of security advices in a single response payload.\
          \ \n\nThe maximal allowed page size is 500. \n\nIf not set, 5 is used."
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          format: int64
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/DavisSecurityAdviceList'
          description: Success
      security:
      - Api-Token: []
      summary: Provides advice for security problems.
      tags:
      - Davis security advisor
      x-allow-access-with-management-zone-permissions: true
      x-permissions:
      - environment:roles:manage-security-problems
      - environment:roles:view-security-problems
      x-supports-personal-access-token: true
      x-token-scopes:
      - securityProblems.read
  /entities:
    get:
      description: "Lists entities observed within the specified timeframe along with\
        \ their properties. \n\nWhen you query entities of the `SERVICE_METHOD` type,\
        \ only the following requests are returned: \n\n* [Key requests](https://dt-url.net/a903u9s)\
        \ \n* Top X requests that are used for [baselining](https://dt-url.net/0j23uqb)\
        \ \n* Requests that have caused a [problem](https://dt-url.net/pf43uqg) \n\
        \nYou can limit the output by using pagination: \n1. Specify the number of\
        \ results per page in the **pageSize** query parameter. \n2. Use the cursor\
        \ from the **nextPageKey** field of the previous response in the **nextPageKey**\
        \ query parameter to obtain subsequent pages."
      operationId: getEntities
      parameters:
      - description: "The cursor for the next page of results. You can find it in\
          \ the **nextPageKey** field of the previous response. \n\nThe first page\
          \ is always returned if you don't specify the **nextPageKey** query parameter.\
          \ \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must\
          \ omit all other query parameters. "
        explode: true
        in: query
        name: nextPageKey
        required: false
        schema:
          type: string
        style: form
      - description: "The amount of entities. \n\nIf not set, 50 is used."
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: "Defines the scope of the query. Only entities matching the specified\
          \ criteria are included into response. \n\nYou must set one of these criteria:\
          \ \n\n* Entity type: `type(\"TYPE\")` \n* Dynatrace entity ID: `entityId(\"\
          id\")`. You can specify several IDs, separated by a comma (`entityId(\"\
          id-1\",\"id-2\")`). All requested entities must be of the same type. \n\n\
          You can add one or more of the following criteria. Values are case-sensitive\
          \ and the `EQUALS` operator is used unless otherwise specified. \n\n* Tag:\
          \ `tag(\"value\")`. Tags in `[context]key:value`, `key:value`, and `value`\
          \ formats are detected and parsed automatically. Any colons (`:`) that are\
          \ part of the key or value must be escaped with a backslash(`\\`). Otherwise,\
          \ it will be interpreted as the separator between the key and the value.\
          \ All tag values are case-sensitive. \n* Management zone ID: `mzId(123)`\
          \ \n* Management zone name: `mzName(\"value\")`\n* Entity name: \n\t* `entityName.equals`:\
          \ performs a non-casesensitive `EQUALS` query. \n\t* `entityName.startsWith`:\
          \ changes the operator to `BEGINS WITH`. \n\t* `entityName.in`: enables\
          \ you to provide multiple values. The `EQUALS` operator applies. \n\t* `caseSensitive(entityName.equals(\"\
          value\"))`: takes any entity name criterion as an argument and makes the\
          \ value case-sensitive.\n* Health state (HEALTHY,UNHEALTHY): `healthState(\"\
          HEALTHY\")`\n* First seen timestamp: `firstSeenTms.<operator>(now-3h)`.\
          \ Use any timestamp format from the **from**/**to** parameters. \n\tThe\
          \ following operators are available:\n\t* `lte`: earlier than or at the\
          \ specified time\n\t* `lt`: earlier than the specified time\n\t* `gte`:\
          \ later than or at the specified time\n\t* `gt`: later than the specified\
          \ time\n* Entity attribute: `<attribute>(\"value1\",\"value2\")` and `<attribute>.exists()`.\
          \ To fetch the list of available attributes, execute the [GET entity type](https://dt-url.net/2ka3ivt)\
          \ request and check the **properties** field of the response. \n* Relationships:\
          \ `fromRelationships.<relationshipName>()` and `toRelationships.<relationshipName>()`.\
          \ This criterion takes an entity selector as an attribute. To fetch the\
          \ list of available relationships, execute the [GET entity type](https://dt-url.net/2ka3ivt)\
          \ request and check the **fromRelationships** and **toRelationships** fields.\n\
          * Negation: `not(<criterion>)`. Inverts any criterion except for **type**.\
          \ \n\nFor more information, see [Entity selector](https://dt-url.net/apientityselector)\
          \ in Dynatrace Documentation. \n\nTo set several criteria, separate them\
          \ with a comma (`,`). For example, `type(\"HOST\"),healthState(\"HEALTHY\"\
          )`. Only results matching **all** criteria are included in the response.\
          \ \n\nThe maximum string length is 2,000 characters. \n\nThe field is **required**\
          \ when you're querying the first page of results."
        explode: true
        in: query
        name: entitySelector
        required: false
        schema:
          type: string
        style: form
      - description: "The start of the requested timeframe. \n\nYou can use one of\
          \ the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable\
          \ format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified,\
          \ UTC is used. You can use a space character instead of the `T`. Seconds\
          \ and fractions of a second are optional. \n* Relative timeframe, back from\
          \ now. The format is `now-NU/A`, where `N` is the amount of time, `U` is\
          \ the unit of time, and `A` is an alignment. The alignment rounds all the\
          \ smaller values to the nearest zero in the past. For example, `now-1y/w`\
          \ is one year back, aligned by a week. \nYou can also specify relative timeframe\
          \ without an alignment: `now-NU`. \nSupported time units for the relative\
          \ timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days\
          \ \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set,\
          \ the relative timeframe of three days is used (`now-3d`)."
        explode: true
        in: query
        name: from
        required: false
        schema:
          type: string
        style: form
      - description: "The end of the requested timeframe. \n\nYou can use one of the\
          \ following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable\
          \ format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified,\
          \ UTC is used. You can use a space character instead of the `T`. Seconds\
          \ and fractions of a second are optional. \n* Relative timeframe, back from\
          \ now. The format is `now-NU/A`, where `N` is the amount of time, `U` is\
          \ the unit of time, and `A` is an alignment. The alignment rounds all the\
          \ smaller values to the nearest zero in the past. For example, `now-1y/w`\
          \ is one year back, aligned by a week. \nYou can also specify relative timeframe\
          \ without an alignment: `now-NU`. \nSupported time units for the relative\
          \ timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days\
          \ \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set,\
          \ the current timestamp is used."
        explode: true
        in: query
        name: to
        required: false
        schema:
          type: string
        style: form
      - description: "Defines the list of entity properties included in the response.\
          \ The ID and the name of an entity are **always** included to the response.\
          \ \n\nTo add properties, list them with leading plus `+`. You can specify\
          \ several properties, separated by a comma (for example `fields=+lastSeenTms,+properties.BITNESS`).\
          \ \n\nUse the [GET entity type](https://dt-url.net/2ka3ivt) request to fetch\
          \ the list of properties available for your entity type. Fields from the\
          \ **properties** object must be specified in the `properties.FIELD` format\
          \ (for example, `properties.BITNESS`)."
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "Defines the ordering of the entities returned. \n\nThis field\
          \ is **optional**, each field has a sign prefix (+/-), which corresponds\
          \ to sorting order ( + for ascending and - for descending). If no sign prefix\
          \ is set, then default ascending sorting order will be applied. \n\nCurrently\
          \ ordering is only available for the display name (for example `sort=name\
          \ or sort =+name for ascending, sort=-name for descending`)"
        explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/EntitiesList'
          description: Success
      security:
      - Api-Token: []
      summary: Gets the information about monitored entities
      tags:
      - Monitored entities
      x-allow-access-with-management-zone-permissions: true
      x-permissions:
      - environment:roles:viewer
      x-supports-personal-access-token: true
      x-token-scopes:
      - entities.read
  /entities/custom:
    post:
      operationId: pushCustomDevice
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/CustomDeviceCreation'
        description: The JSON body of the request. Contains parameters of a custom
          device.
        required: true
      responses:
        "201":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/CustomDeviceCreationResult'
          description: Success
        "204":
          description: Success
        "400":
          description: Failed. The input is invalid.
      security:
      - Api-Token: []
      summary: Creates or updates a custom device
      tags:
      - Monitored entities
      x-allow-access-with-management-zone-permissions: true
      x-permissions:
      - environment:roles:manage-settings
      x-supports-personal-access-token: true
      x-token-scopes:
      - entities.write
  /entities/{entityId}:
    get:
      operationId: getEntity
      parameters:
      - description: The ID of the required entity.
        explode: false
        in: path
        name: entityId
        required: true
        schema:
          type: string
        style: simple
      - description: "The start of the requested timeframe. \n\nYou can use one of\
          \ the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable\
          \ format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified,\
          \ UTC is used. You can use a space character instead of the `T`. Seconds\
          \ and fractions of a second are optional. \n* Relative timeframe, back from\
          \ now. The format is `now-NU/A`, where `N` is the amount of time, `U` is\
          \ the unit of time, and `A` is an alignment. The alignment rounds all the\
          \ smaller values to the nearest zero in the past. For example, `now-1y/w`\
          \ is one year back, aligned by a week. \nYou can also specify relative timeframe\
          \ without an alignment: `now-NU`. \nSupported time units for the relative\
          \ timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days\
          \ \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set,\
          \ the relative timeframe of three days is used (`now-3d`)."
        explode: true
        in: query
        name: from
        required: false
        schema:
          type: string
        style: form
      - description: "The end of the requested timeframe. \n\nYou can use one of the\
          \ following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable\
          \ format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified,\
          \ UTC is used. You can use a space character instead of the `T`. Seconds\
          \ and fractions of a second are optional. \n* Relative timeframe, back from\
          \ now. The format is `now-NU/A`, where `N` is the amount of time, `U` is\
          \ the unit of time, and `A` is an alignment. The alignment rounds all the\
          \ smaller values to the nearest zero in the past. For example, `now-1y/w`\
          \ is one year back, aligned by a week. \nYou can also specify relative timeframe\
          \ without an alignment: `now-NU`. \nSupported time units for the relative\
          \ timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days\
          \ \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set,\
          \ the current timestamp is used."
        explode: true
        in: query
        name: to
        required: false
        schema:
          type: string
        style: form
      - description: "Defines the list of entity properties included in the response.\
          \ The ID and the name of an entity are **always** included to the response.\
          \ \n\nTo add properties, list them with leading plus `+`. You can specify\
          \ several properties, separated by a comma (for example `fields=+lastSeenTms,+properties.BITNESS`).\
          \ \n\nUse the [GET entity type](https://dt-url.net/2ka3ivt) request to fetch\
          \ the list of properties available for your entity type. Fields from the\
          \ **properties** object must be specified in the `properties.FIELD` format\
          \ (for example, `properties.BITNESS`)."
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Entity'
          description: Success
      security:
      - Api-Token: []
      summary: Gets the properties of the specified monitored entity
      tags:
      - Monitored entities
      x-allow-access-with-management-zone-permissions: true
      x-permissions:
      - environment:roles:viewer
      x-supports-personal-access-token: true
      x-token-scopes:
      - entities.read
  /entityTypes:
    get:
      description: "You can limit the output by using pagination: \n1. Specify the\
        \ number of results per page in the **pageSize** query parameter. \n2. Use\
        \ the cursor from the **nextPageKey** field of the previous response in the\
        \ **nextPageKey** query parameter to obtain subsequent pages."
      operationId: getEntityTypes
      parameters:
      - description: "The cursor for the next page of results. You can find it in\
          \ the **nextPageKey** field of the previous response. \n\nThe first page\
          \ is always returned if you don't specify the **nextPageKey** query parameter.\
          \ \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must\
          \ omit all other query parameters. "
        explode: true
        in: query
        name: nextPageKey
        required: false
        schema:
          type: string
        style: form
      - description: "The amount of entity types in a single response payload. \n\n\
          The maximal allowed page size is 500. \n\nIf not set, 50 is used."
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          format: int64
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/EntityTypeList'
          description: Success
        "400":
          description: Failed. There are no more entity types to export.
      security:
      - Api-Token: []
      summary: Gets a list of properties for all entity types
      tags:
      - Monitored entities
      x-allow-access-with-management-zone-permissions: true
      x-permissions:
      - environment:roles:viewer
      x-supports-personal-access-token: true
      x-token-scopes:
      - entities.read
  /entityTypes/{type}:
    get:
      operationId: getEntityType
      parameters:
      - description: The required entity type.
        explode: false
        in: path
        name: type
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/EntityType'
          description: Success
        "400":
          description: Failed. The requested monitored entity type is not exportable
            or doesn't exist.
      security:
      - Api-Token: []
      summary: Gets a list of properties for the specified entity type
      tags:
      - Monitored entities
      x-allow-access-with-management-zone-permissions: true
      x-permissions:
      - environment:roles:viewer
      x-supports-personal-access-token: true
      x-token-scopes:
      - entities.read
  /eventProperties:
    get:
      operationId: getEventProperties
      parameters:
      - description: "The cursor for the next page of results. You can find it in\
          \ the **nextPageKey** field of the previous response. \n\nThe first page\
          \ is always returned if you don't specify the **nextPageKey** query parameter.\
          \ \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must\
          \ omit all other query parameters. "
        explode: true
        in: query
        name: nextPageKey
        required: false
        schema:
          type: string
        style: form
      - description: "The amount of event properties in a single response payload.\
          \ \n\nThe maximal allowed page size is 500. \n\nIf not set, 100 is used."
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          format: int64
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/EventPropertiesList'
          description: Success
      security:
      - Api-Token: []
      summary: Lists all event properties
      tags:
      - Events
      x-allow-access-with-management-zone-permissions: true
      x-permissions:
      - environment:roles:viewer
      x-supports-personal-access-token: true
      x-token-scopes:
      - events.read
  /eventProperties/{propertyKey}:
    get:
      operationId: getEventProperty
      parameters:
      - description: The event property key you're inquiring.
        explode: false
        in: path
        name: propertyKey
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/EventPropertyDetails'
          description: Success
      security:
      - Api-Token: []
      summary: Gets the details of an event property
      tags:
      - Events
      x-allow-access-with-management-zone-permissions: true
      x-permissions:
      - environment:roles:viewer
      x-supports-personal-access-token: true
      x-token-scopes:
      - events.read
  /eventTypes:
    get:
      operationId: getEventTypes
      parameters:
      - description: "The cursor for the next page of results. You can find it in\
          \ the **nextPageKey** field of the previous response. \n\nThe first page\
          \ is always returned if you don't specify the **nextPageKey** query parameter.\
          \ \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must\
          \ omit all other query parameters. "
        explode: true
        in: query
        name: nextPageKey
        required: false
        schema:
          type: string
        style: form
      - description: "The amount of event types in a single response payload. \n\n\
          The maximal allowed page size is 500. \n\nIf not set, 100 is used."
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          format: int64
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/EventTypeList'
          description: Success
      security:
      - Api-Token: []
      summary: Lists all event types
      tags:
      - Events
      x-allow-access-with-management-zone-permissions: true
      x-permissions:
      - environment:roles:viewer
      x-supports-personal-access-token: true
      x-token-scopes:
      - events.read
  /eventTypes/{eventType}:
    get:
      operationId: getEventType
      parameters:
      - description: The event type you're inquiring.
        explode: false
        in: path
        name: eventType
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/EventType'
          description: Success
      security:
      - Api-Token: []
      summary: Gets the properties of an event type
      tags:
      - Events
      x-allow-access-with-management-zone-permissions: true
      x-permissions:
      - environment:roles:viewer
      x-supports-personal-access-token: true
      x-token-scopes:
      - events.read
  /events:
    get:
      operationId: getEvents
      parameters:
      - description: "The cursor for the next page of results. You can find it in\
          \ the **nextPageKey** field of the previous response. \n\nThe first page\
          \ is always returned if you don't specify the **nextPageKey** query parameter.\
          \ \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must\
          \ omit all other query parameters. "
        explode: true
        in: query
        name: nextPageKey
        required: false
        schema:
          type: string
        style: form
      - description: "The amount of events in a single response payload. \n\nThe maximal\
          \ allowed page size is 1000. \n\nIf not set, 100 is used."
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: "The start of the requested timeframe. \n\nYou can use one of\
          \ the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable\
          \ format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified,\
          \ UTC is used. You can use a space character instead of the `T`. Seconds\
          \ and fractions of a second are optional. \n* Relative timeframe, back from\
          \ now. The format is `now-NU/A`, where `N` is the amount of time, `U` is\
          \ the unit of time, and `A` is an alignment. The alignment rounds all the\
          \ smaller values to the nearest zero in the past. For example, `now-1y/w`\
          \ is one year back, aligned by a week. \nYou can also specify relative timeframe\
          \ without an alignment: `now-NU`. \nSupported time units for the relative\
          \ timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days\
          \ \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set,\
          \ the relative timeframe of two hours is used (`now-2h`)."
        explode: true
        in: query
        name: from
        required: false
        schema:
          type: string
        style: form
      - description: "The end of the requested timeframe. \n\nYou can use one of the\
          \ following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable\
          \ format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified,\
          \ UTC is used. You can use a space character instead of the `T`. Seconds\
          \ and fractions of a second are optional. \n* Relative timeframe, back from\
          \ now. The format is `now-NU/A`, where `N` is the amount of time, `U` is\
          \ the unit of time, and `A` is an alignment. The alignment rounds all the\
          \ smaller values to the nearest zero in the past. For example, `now-1y/w`\
          \ is one year back, aligned by a week. \nYou can also specify relative timeframe\
          \ without an alignment: `now-NU`. \nSupported time units for the relative\
          \ timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days\
          \ \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set,\
          \ the current timestamp is used."
        explode: true
        in: query
        name: to
        required: false
        schema:
          type: string
        style: form
      - description: "Defines the scope of the query. Only events matching the specified\
          \ criteria are included in the response.\n\nYou can add one or several of\
          \ the criteria listed below. For each criterion you can specify multiple\
          \ comma-separated values, unless stated otherwise. If several values are\
          \ specified, the **OR** logic applies.\n* Event ID: `eventId(\"id-1\", \"\
          id-2\")`.\n* ID of related entity: `entityId(\"id-1\", \"id-2\")`.\n* Event\
          \ status: `status(\"OPEN\")` or `status(\"CLOSED\")`. You can specify only\
          \ one status.\n* Management zone ID: `managementZoneId(\"123\", \"321\"\
          )`.\n* Event type: `eventType(\"event-type\")`. You can specify only one\
          \ event type. You can fetch the list of possible event types with the [GET\
          \ event types](https://dt-url.net/qc03u6w) call. \n* Correlation ID: `correlationId(\"\
          id-1\", \"id-2\")`.\n* Happened during maintenance (true, false): `underMaintenance(true)`.\
          \ \n* Notifications are suppressed (true, false): `suppressAlert(true)`.\
          \ \n* Problem creation is suppressed (true, false): `suppressProblem(true)`.\
          \ \n* Frequent event (true, false): `frequentEvent(true)`. \n* Event property:\
          \ `property.<key>(\"value-1\", \"value-2\")`.\n\nTo set several criteria,\
          \ separate them with commas (`,`). Only results matching **all** criteria\
          \ are included in the response. \n\n"
        explode: true
        in: query
        name: eventSelector
        required: false
        schema:
          type: string
        style: form
      - description: "The entity scope of the query. You must set one of these criteria:\
          \ \n\n* Entity type: `type(\"TYPE\")` \n* Dynatrace entity ID: `entityId(\"\
          id\")`. You can specify several IDs, separated by a comma (`entityId(\"\
          id-1\",\"id-2\")`). All requested entities must be of the same type. \n\n\
          You can add one or more of the following criteria. Values are case-sensitive\
          \ and the `EQUALS` operator is used unless otherwise specified. \n\n* Tag:\
          \ `tag(\"value\")`. Tags in `[context]key:value`, `key:value`, and `value`\
          \ formats are detected and parsed automatically. Any colons (`:`) that are\
          \ part of the key or value must be escaped with a backslash(`\\`). Otherwise,\
          \ it will be interpreted as the separator between the key and the value.\
          \ All tag values are case-sensitive. \n* Management zone ID: `mzId(123)`\
          \ \n* Management zone name: `mzName(\"value\")`\n* Entity name: \n\t* `entityName.equals`:\
          \ performs a non-casesensitive `EQUALS` query. \n\t* `entityName.startsWith`:\
          \ changes the operator to `BEGINS WITH`. \n\t* `entityName.in`: enables\
          \ you to provide multiple values. The `EQUALS` operator applies. \n\t* `caseSensitive(entityName.equals(\"\
          value\"))`: takes any entity name criterion as an argument and makes the\
          \ value case-sensitive.\n* Health state (HEALTHY,UNHEALTHY): `healthState(\"\
          HEALTHY\")`\n* First seen timestamp: `firstSeenTms.<operator>(now-3h)`.\
          \ Use any timestamp format from the **from**/**to** parameters. \n\tThe\
          \ following operators are available:\n\t* `lte`: earlier than or at the\
          \ specified time\n\t* `lt`: earlier than the specified time\n\t* `gte`:\
          \ later than or at the specified time\n\t* `gt`: later than the specified\
          \ time\n* Entity attribute: `<attribute>(\"value1\",\"value2\")` and `<attribute>.exists()`.\
          \ To fetch the list of available attributes, execute the [GET entity type](https://dt-url.net/2ka3ivt)\
          \ request and check the **properties** field of the response. \n* Relationships:\
          \ `fromRelationships.<relationshipName>()` and `toRelationships.<relationshipName>()`.\
          \ This criterion takes an entity selector as an attribute. To fetch the\
          \ list of available relationships, execute the [GET entity type](https://dt-url.net/2ka3ivt)\
          \ request and check the **fromRelationships** and **toRelationships** fields.\n\
          * Negation: `not(<criterion>)`. Inverts any criterion except for **type**.\
          \ \n\nFor more information, see [Entity selector](https://dt-url.net/apientityselector)\
          \ in Dynatrace Documentation. \n\nTo set several criteria, separate them\
          \ with a comma (`,`). For example, `type(\"HOST\"),healthState(\"HEALTHY\"\
          )`. Only results matching **all** criteria are included in the response.\
          \ \n\nThe maximum string length is 2,000 characters. \n\nThe number of entities\
          \ that can be selected is limited to 10000."
        explode: true
        in: query
        name: entitySelector
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/EventList'
          description: Success. The response contains the list of events.
      security:
      - Api-Token: []
      summary: Lists events within the specified timeframe
      tags:
      - Events
      x-allow-access-with-management-zone-permissions: true
      x-permissions:
      - environment:roles:viewer
      x-supports-personal-access-token: true
      x-token-scopes:
      - events.read
  /events/ingest:
    post:
      description: "The ingestion of custom events consumes [Davis Data Units](https://dt-url.net/ddu)\
        \ (DDUs) from the events pool."
      operationId: createEvent
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/EventIngest'
        description: The JSON body of the request. Contains properties of the new
          event.
      responses:
        "201":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/EventIngestResults'
          description: The event ingest request was received by the server. The response
            body indicates for each event whether its creation was successful.
      security:
      - Api-Token: []
      summary: Ingests a custom event
      tags:
      - Events
      x-allow-access-with-management-zone-permissions: true
      x-permissions:
      - environment:roles:viewer
      - storage:events:write
      x-supports-personal-access-token: true
      x-token-scopes:
      - events.ingest
  /events/{eventId}:
    get:
      operationId: getEvent
      parameters:
      - description: The ID of the required event.
        explode: false
        in: path
        name: eventId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Event'
          description: Success. The response contains the configuration of the event.
      security:
      - Api-Token: []
      summary: Gets the properties of an event
      tags:
      - Events
      x-allow-access-with-management-zone-permissions: true
      x-permissions:
      - environment:roles:viewer
      x-supports-personal-access-token: true
      x-token-scopes:
      - events.read
  /extensions:
    get:
      operationId: listExtensions
      parameters:
      - description: "The cursor for the next page of results. You can find it in\
          \ the **nextPageKey** field of the previous response. \n\nThe first page\
          \ is always returned if you don't specify the **nextPageKey** query parameter.\
          \ \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must\
          \ omit all other query parameters. "
        explode: true
        in: query
        name: nextPageKey
        required: false
        schema:
          type: string
        style: form
      - description: "The amount of extensions in a single response payload. \n\n\
          The maximal allowed page size is 100. \n\nIf not set, 20 is used."
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: "Filters the resulting set of extensions 2.0 by name. You can\
          \ specify a partial name. In that case, the CONTAINS operator is used."
        explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ExtensionList'
          description: Success
      security:
      - Api-Token: []
      summary: Lists all the extensions 2.0 available in your environment
      tags:
      - Extensions 2.0
      x-permissions:
      - environment:roles:manage-settings
      x-supports-personal-access-token: true
      x-token-scopes:
      - extensions.read
    post:
      operationId: uploadExtension
      parameters:
      - description: Only run validation but do not persist the extension even if
          validation was successful.
        explode: true
        in: query
        name: validateOnly
        required: false
        schema:
          default: false
          type: boolean
        style: form
      requestBody:
        content:
          application/octet-stream:
            schema:
              format: binary
              type: string
          multipart/form-data:
            schema:
              deprecated: true
              format: binary
              required:
              - file
              type: string
        description: Extension 2.0 zip file to upload.
        required: true
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ExtensionUploadResponseDto'
          description: The extension is valid
        "201":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ExtensionUploadResponseDto'
          description: Success. The extension 2.0 has been uploaded.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input file is invalid.
        "409":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: "Upload not possible yet, please try again in a few seconds."
      security:
      - Api-Token: []
      summary: Uploads or verifies a new extension 2.0
      tags:
      - Extensions 2.0
      x-permissions:
      - environment:roles:manage-settings
      x-supports-personal-access-token: true
      x-token-scopes:
      - extensions.write
  /extensions/schemas:
    get:
      operationId: listSchemas
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/SchemasList'
          description: Success
      security:
      - Api-Token: []
      summary: Lists all the extension 2.0 schemas versions available in your environment
      tags:
      - Extensions 2.0
      x-permissions:
      - environment:roles:manage-settings
      x-supports-personal-access-token: true
      x-token-scopes:
      - extensions.read
  /extensions/schemas/{schemaVersion}:
    get:
      operationId: listSchemaFiles
      parameters:
      - description: The version of the schema.
        explode: false
        in: path
        name: schemaVersion
        required: true
        schema:
          pattern: "^(0|[1-9]\\d*)(\\.(0|[1-9]\\d*))?(\\.(0|[1-9]\\d*))?"
          type: string
        style: simple
      - description: "Accept header. Specifies part of the extension 2.0 that will\
          \ be returned: \n* application/json; charset=utf-8 - returns extension 2.0\
          \ metadata in JSON \n* application/octet-stream - returns extension 2.0\
          \ zip package stored on the server."
        explode: false
        in: header
        name: Accept
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/SchemaFiles'
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/SchemaFiles'
          description: Success
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The requested resource doesn't exist.
        "406":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Not acceptable
      security:
      - Api-Token: []
      summary: Lists all the files available for the specified extension 2.0 schema
        version
      tags:
      - Extensions 2.0
      x-permissions:
      - environment:roles:manage-settings
      x-supports-personal-access-token: true
      x-token-scopes:
      - extensions.read
  /extensions/schemas/{schemaVersion}/{fileName}:
    get:
      operationId: getSchemaFile
      parameters:
      - description: The version of the schema.
        explode: false
        in: path
        name: schemaVersion
        required: true
        schema:
          pattern: "^(0|[1-9]\\d*)(\\.(0|[1-9]\\d*))?(\\.(0|[1-9]\\d*))?"
          type: string
        style: simple
      - description: The name of the schema file.
        explode: false
        in: path
        name: fileName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/JsonNode'
          description: Success
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The requested resource doesn't exist.
      security:
      - Api-Token: []
      summary: Gets the extension 2.0 schema file in the specified version
      tags:
      - Extensions 2.0
      x-permissions:
      - environment:roles:manage-settings
      x-supports-personal-access-token: true
      x-token-scopes:
      - extensions.read
  /extensions/{extensionName}:
    get:
      operationId: listExtensionVersions
      parameters:
      - description: "The cursor for the next page of results. You can find it in\
          \ the **nextPageKey** field of the previous response. \n\nThe first page\
          \ is always returned if you don't specify the **nextPageKey** query parameter.\
          \ \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must\
          \ omit all other query parameters. "
        explode: true
        in: query
        name: nextPageKey
        required: false
        schema:
          type: string
        style: form
      - description: "The amount of extensions in a single response payload. \n\n\
          The maximal allowed page size is 100. \n\nIf not set, 20 is used."
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: The name of the requested extension 2.0.
        explode: false
        in: path
        name: extensionName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ExtensionList'
          description: Success
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The requested resource doesn't exist.
      security:
      - Api-Token: []
      summary: Lists all versions of the extension 2.0
      tags:
      - Extensions 2.0
      x-permissions:
      - environment:roles:manage-settings
      x-supports-personal-access-token: true
      x-token-scopes:
      - extensions.read
  /extensions/{extensionName}/environmentConfiguration:
    delete:
      operationId: deleteEnvironmentConfiguration
      parameters:
      - description: The name of the requested extension 2.0.
        explode: false
        in: path
        name: extensionName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ExtensionEnvironmentConfigurationVersion'
          description: Success. Environment configuration deactivated.
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The requested resource doesn't exist.
      security:
      - Api-Token: []
      summary: Deactivates the environment configuration of the specified extension
        2.0
      tags:
      - Extensions 2.0
      x-permissions:
      - environment:roles:manage-settings
      x-supports-personal-access-token: true
      x-token-scopes:
      - extensionEnvironment.write
      - extensions.write
    get:
      operationId: getActiveEnvironmentConfiguration
      parameters:
      - description: The name of the requested extension 2.0.
        explode: false
        in: path
        name: extensionName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ExtensionEnvironmentConfigurationVersion'
          description: Success
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The requested resource doesn't exist.
      security:
      - Api-Token: []
      summary: Gets the active environment configuration version of the specified
        extension 2.0
      tags:
      - Extensions 2.0
      x-permissions:
      - environment:roles:manage-settings
      x-supports-personal-access-token: true
      x-token-scopes:
      - extensionEnvironment.read
      - extensions.read
    post:
      operationId: activateExtensionEnvironmentConfiguration
      parameters:
      - description: The name of the requested extension 2.0.
        explode: false
        in: path
        name: extensionName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/ExtensionEnvironmentConfigurationVersion'
        description: The version of the requested environment configuration.
        required: true
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ExtensionEnvironmentConfigurationVersion'
          description: Success. Environment configuration created.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid.
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The requested resource doesn't exist.
      security:
      - Api-Token: []
      summary: Activates the environment configuration from the specified version
        of the extension 2.0
      tags:
      - Extensions 2.0
      x-permissions:
      - environment:roles:manage-settings
      x-supports-personal-access-token: true
      x-token-scopes:
      - extensionEnvironment.write
      - extensions.write
    put:
      operationId: updateExtensionEnvironmentConfiguration
      parameters:
      - description: The name of the requested extension 2.0.
        explode: false
        in: path
        name: extensionName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/ExtensionEnvironmentConfigurationVersion'
        description: The version of the requested environment configuration.
        required: true
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ExtensionEnvironmentConfigurationVersion'
          description: Success. Environment configuration updated.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid.
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The requested resource doesn't exist.
      security:
      - Api-Token: []
      summary: Updates the active environment configuration version of the extension
        2.0
      tags:
      - Extensions 2.0
      x-permissions:
      - environment:roles:manage-settings
      x-supports-personal-access-token: true
      x-token-scopes:
      - extensionEnvironment.write
      - extensions.write
  /extensions/{extensionName}/environmentConfiguration/assets:
    get:
      operationId: getEnvironmentConfigurationAssetsInfo
      parameters:
      - description: The name of the requested extension 2.0.
        explode: false
        in: path
        name: extensionName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ExtensionAssetsDto'
          description: Success
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The requested resource doesn't exist.
      security:
      - Api-Token: []
      summary: Gets the information about assets in an active extension 2.0
      tags:
      - Extensions 2.0
      x-permissions:
      - environment:roles:manage-settings
      x-supports-personal-access-token: true
      x-token-scopes:
      - extensionEnvironment.read
      - extensions.read
  /extensions/{extensionName}/environmentConfiguration/events:
    get:
      deprecated: true
      operationId: getEnvironmentConfigurationEvents
      parameters:
      - description: The name of the requested extension 2.0.
        explode: false
        in: path
        name: extensionName
        required: true
        schema:
          type: string
        style: simple
      - description: "The start of the requested timeframe. \n\nYou can use one of\
          \ the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable\
          \ format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified,\
          \ UTC is used. You can use a space character instead of the `T`. Seconds\
          \ and fractions of a second are optional. \n* Relative timeframe, back from\
          \ now. The format is `now-NU/A`, where `N` is the amount of time, `U` is\
          \ the unit of time, and `A` is an alignment. The alignment rounds all the\
          \ smaller values to the nearest zero in the past. For example, `now-1y/w`\
          \ is one year back, aligned by a week. \nYou can also specify relative timeframe\
          \ without an alignment: `now-NU`. \nSupported time units for the relative\
          \ timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days\
          \ \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set,\
          \ the relative timeframe of two hours is used (`now-2h`)."
        explode: true
        in: query
        name: from
        required: false
        schema:
          type: string
        style: form
      - description: "The end of the requested timeframe. \n\nYou can use one of the\
          \ following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable\
          \ format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified,\
          \ UTC is used. You can use a space character instead of the `T`. Seconds\
          \ and fractions of a second are optional. \n* Relative timeframe, back from\
          \ now. The format is `now-NU/A`, where `N` is the amount of time, `U` is\
          \ the unit of time, and `A` is an alignment. The alignment rounds all the\
          \ smaller values to the nearest zero in the past. For example, `now-1y/w`\
          \ is one year back, aligned by a week. \nYou can also specify relative timeframe\
          \ without an alignment: `now-NU`. \nSupported time units for the relative\
          \ timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days\
          \ \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set,\
          \ the current timestamp is used."
        explode: true
        in: query
        name: to
        required: false
        schema:
          type: string
        style: form
      - description: Content of the event
        explode: true
        in: query
        name: content
        required: false
        schema:
          type: string
        style: form
      - description: Status of the event
        explode: true
        in: query
        name: status
        required: false
        schema:
          enum:
          - ERROR
          - INFO
          - NONE
          - WARN
          type: string
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ExtensionEventsList'
          description: List of the latest extension environment configuration events
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The requested resource doesn't exist.
      security:
      - Api-Token: []
      summary: List of the latest extension environment configuration events
      tags:
      - Extensions 2.0
      x-permissions:
      - environment:roles:manage-settings
      x-supports-personal-access-token: true
      x-token-scopes:
      - extensionEnvironment.read
      - extensions.read
  /extensions/{extensionName}/monitoringConfigurations:
    get:
      operationId: extensionMonitoringConfigurations
      parameters:
      - description: "The cursor for the next page of results. You can find it in\
          \ the **nextPageKey** field of the previous response. \n\nThe first page\
          \ is always returned if you don't specify the **nextPageKey** query parameter.\
          \ \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must\
          \ omit all other query parameters. "
        explode: true
        in: query
        name: nextPageKey
        required: false
        schema:
          type: string
        style: form
      - description: "The amount of extensions in a single response payload. \n\n\
          The maximal allowed page size is 100. \n\nIf not set, 20 is used."
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: The name of the requested extension 2.0.
        explode: false
        in: path
        name: extensionName
        required: true
        schema:
          type: string
        style: simple
      - description: Filters the resulting set of configurations by extension 2.0
          version.
        explode: true
        in: query
        name: version
        required: false
        schema:
          type: string
        style: form
      - description: Filters the resulting set of configurations by the active state.
        explode: true
        in: query
        name: active
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ExtensionMonitoringConfigurationsList'
          description: Success
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid.
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The requested resource doesn't exist.
      security:
      - Api-Token: []
      summary: Lists all the monitoring configurations of the specified extension
        2.0
      tags:
      - Extensions 2.0
      x-permissions:
      - environment:roles:manage-settings
      x-supports-personal-access-token: true
      x-token-scopes:
      - extensionConfigurations.read
    post:
      operationId: createMonitoringConfiguration
      parameters:
      - description: The name of the requested extension 2.0.
        explode: false
        in: path
        name: extensionName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              items:
                $ref: '#/components/schemas/MonitoringConfigurationDto'
              type: array
        description: "JSON body of the request, containing monitoring configuration\
          \ parameters."
        required: true
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                items:
                  $ref: '#/components/schemas/MonitoringConfigurationResponse'
                type: array
          description: Success
        "207":
          content:
            application/json; charset=utf-8:
              schema:
                items:
                  $ref: '#/components/schemas/createMonitoringConfiguration_207_response_inner'
                type: array
          description: "Multi-Status, if not all requests resulted in the same status"
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The requested resource doesn't exist.
      security:
      - Api-Token: []
      summary: Creates new monitoring configuration for the specified extension 2.0
      tags:
      - Extensions 2.0
      x-permissions:
      - environment:roles:manage-settings
      x-supports-personal-access-token: true
      x-token-scopes:
      - extensionConfigurations.write
  /extensions/{extensionName}/monitoringConfigurations/{configurationId}:
    delete:
      operationId: removeMonitoringConfiguration
      parameters:
      - description: The name of the requested extension 2.0.
        explode: false
        in: path
        name: extensionName
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of the requested monitoring configuration.
        explode: false
        in: path
        name: configurationId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Success. Response doesn't have a body.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid.
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The requested resource doesn't exist.
      security:
      - Api-Token: []
      summary: Deletes the specified monitoring configuration
      tags:
      - Extensions 2.0
      x-permissions:
      - environment:roles:manage-settings
      x-supports-personal-access-token: true
      x-token-scopes:
      - extensionConfigurations.write
    get:
      operationId: monitoringConfigurationDetails
      parameters:
      - description: The name of the requested extension 2.0.
        explode: false
        in: path
        name: extensionName
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of the requested monitoring configuration.
        explode: false
        in: path
        name: configurationId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ExtensionMonitoringConfiguration'
          description: Success
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The requested resource doesn't exist.
      security:
      - Api-Token: []
      summary: Gets the details of the specified monitoring configuration
      tags:
      - Extensions 2.0
      x-permissions:
      - environment:roles:manage-settings
      x-supports-personal-access-token: true
      x-token-scopes:
      - extensionConfigurations.read
    put:
      operationId: updateMonitoringConfiguration
      parameters:
      - description: The name of the requested extension 2.0.
        explode: false
        in: path
        name: extensionName
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of the requested monitoring configuration.
        explode: false
        in: path
        name: configurationId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/MonitoringConfigurationUpdateDto'
        description: "JSON body of the request, containing monitoring configuration\
          \ parameters."
        required: true
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/MonitoringConfigurationResponse'
          description: Success
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid.
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The requested resource doesn't exist.
      security:
      - Api-Token: []
      summary: Updates the specified monitoring configuration
      tags:
      - Extensions 2.0
      x-permissions:
      - environment:roles:manage-settings
      x-supports-personal-access-token: true
      x-token-scopes:
      - extensionConfigurations.write
  /extensions/{extensionName}/monitoringConfigurations/{configurationId}/events:
    get:
      deprecated: true
      operationId: getExtensionMonitoringConfigurationEvents
      parameters:
      - description: The name of the requested extension 2.0.
        explode: false
        in: path
        name: extensionName
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of the requested monitoring configuration.
        explode: false
        in: path
        name: configurationId
        required: true
        schema:
          type: string
        style: simple
      - description: "The start of the requested timeframe. \n\nYou can use one of\
          \ the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable\
          \ format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified,\
          \ UTC is used. You can use a space character instead of the `T`. Seconds\
          \ and fractions of a second are optional. \n* Relative timeframe, back from\
          \ now. The format is `now-NU/A`, where `N` is the amount of time, `U` is\
          \ the unit of time, and `A` is an alignment. The alignment rounds all the\
          \ smaller values to the nearest zero in the past. For example, `now-1y/w`\
          \ is one year back, aligned by a week. \nYou can also specify relative timeframe\
          \ without an alignment: `now-NU`. \nSupported time units for the relative\
          \ timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days\
          \ \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set,\
          \ the relative timeframe of two hours is used (`now-2h`)."
        explode: true
        in: query
        name: from
        required: false
        schema:
          type: string
        style: form
      - description: "The end of the requested timeframe. \n\nYou can use one of the\
          \ following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable\
          \ format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified,\
          \ UTC is used. You can use a space character instead of the `T`. Seconds\
          \ and fractions of a second are optional. \n* Relative timeframe, back from\
          \ now. The format is `now-NU/A`, where `N` is the amount of time, `U` is\
          \ the unit of time, and `A` is an alignment. The alignment rounds all the\
          \ smaller values to the nearest zero in the past. For example, `now-1y/w`\
          \ is one year back, aligned by a week. \nYou can also specify relative timeframe\
          \ without an alignment: `now-NU`. \nSupported time units for the relative\
          \ timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days\
          \ \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set,\
          \ the current timestamp is used."
        explode: true
        in: query
        name: to
        required: false
        schema:
          type: string
        style: form
      - description: |-
          Host that uses this monitoring configuration.

          Example: `HOST-ABCDEF0123456789`
        explode: true
        in: query
        name: dt.entity.host
        required: false
        schema:
          type: string
        style: form
      - description: |-
          Hexadecimal ID of Active Gate that uses this monitoring configuration.

          Example: `0x1a2b3c4d`
        explode: true
        in: query
        name: dt.active_gate.id
        required: false
        schema:
          type: string
        style: form
      - description: |-
          Data source that uses this monitoring configuration.

          Example: `snmp`
        explode: true
        in: query
        name: dt.extension.ds
        required: false
        schema:
          type: string
        style: form
      - description: Content of the event
        explode: true
        in: query
        name: content
        required: false
        schema:
          type: string
        style: form
      - description: Status of the event
        explode: true
        in: query
        name: status
        required: false
        schema:
          enum:
          - ERROR
          - INFO
          - NONE
          - WARN
          type: string
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ExtensionEventsList'
          description: Success
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The requested resource doesn't exist.
      security:
      - Api-Token: []
      summary: Gets the list of the events linked to specific monitoring configuration
      tags:
      - Extensions 2.0
      x-permissions:
      - environment:roles:manage-settings
      x-supports-personal-access-token: true
      x-token-scopes:
      - extensionConfigurations.read
  /extensions/{extensionName}/monitoringConfigurations/{configurationId}/status:
    get:
      operationId: getExtensionMonitoringConfigurationStatus
      parameters:
      - description: The name of the requested extension 2.0.
        explode: false
        in: path
        name: extensionName
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of the requested monitoring configuration.
        explode: false
        in: path
        name: configurationId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ExtensionStatusDto'
          description: Success
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The requested resource doesn't exist.
      security:
      - Api-Token: []
      summary: Gets the most recent status of the execution of given monitoring configuration
      tags:
      - Extensions 2.0
      x-permissions:
      - environment:roles:manage-settings
      x-supports-personal-access-token: true
      x-token-scopes:
      - extensionConfigurations.read
  /extensions/{extensionName}/{extensionVersion}:
    delete:
      operationId: removeExtension
      parameters:
      - description: The name of the requested extension 2.0.
        explode: false
        in: path
        name: extensionName
        required: true
        schema:
          type: string
        style: simple
      - description: The version of the requested extension 2.0
        explode: false
        in: path
        name: extensionVersion
        required: true
        schema:
          pattern: "^(0|[1-9]\\d*)(\\.(0|[1-9]\\d*))?(\\.(0|[1-9]\\d*))?"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Extension'
          description: Success. The extension 2.0 version has been deleted.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid.
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The requested resource doesn't exist.
      security:
      - Api-Token: []
      summary: Deletes the specified version of the extension 2.0
      tags:
      - Extensions 2.0
      x-permissions:
      - environment:roles:manage-settings
      x-supports-personal-access-token: true
      x-token-scopes:
      - extensions.write
    get:
      operationId: extensionDetails
      parameters:
      - description: The name of the requested extension 2.0.
        explode: false
        in: path
        name: extensionName
        required: true
        schema:
          type: string
        style: simple
      - description: The version of the requested extension 2.0
        explode: false
        in: path
        name: extensionVersion
        required: true
        schema:
          pattern: "^(0|[1-9]\\d*)(\\.(0|[1-9]\\d*))?(\\.(0|[1-9]\\d*))?"
          type: string
        style: simple
      - description: "Accept header. Specifies part of the extension 2.0 that will\
          \ be returned: \n* application/json; charset=utf-8 - returns extension 2.0\
          \ metadata in JSON \n* application/octet-stream - returns extension 2.0\
          \ zip package stored on the server."
        explode: false
        in: header
        name: Accept
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Extension'
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/Extension'
          description: Success
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The requested resource doesn't exist.
        "406":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Not acceptable
      security:
      - Api-Token: []
      summary: Gets details of the specified version of the extension 2.0
      tags:
      - Extensions 2.0
      x-permissions:
      - environment:roles:manage-settings
      x-supports-personal-access-token: true
      x-token-scopes:
      - extensions.read
  /extensions/{extensionName}/{extensionVersion}/schema:
    get:
      operationId: extensionConfigurationSchema
      parameters:
      - description: The name of the requested extension 2.0.
        explode: false
        in: path
        name: extensionName
        required: true
        schema:
          type: string
        style: simple
      - description: The version of the requested extension 2.0
        explode: false
        in: path
        name: extensionVersion
        required: true
        schema:
          pattern: "^(0|[1-9]\\d*)(\\.(0|[1-9]\\d*))?(\\.(0|[1-9]\\d*))?"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/SchemaDefinitionRestDto'
          description: Success
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The requested resource doesn't exist.
      security:
      - Api-Token: []
      summary: Gets the configuration schema of the specified version of the extension
        2.0
      tags:
      - Extensions 2.0
      x-permissions:
      - environment:roles:manage-settings
      x-supports-personal-access-token: true
      x-token-scopes:
      - extensionConfigurations.read
  /hub/assets/images/{encodedUrl}:
    get:
      operationId: getImage
      parameters:
      - explode: false
        in: path
        name: encodedUrl
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: OK
        "404":
          description: Not found
      security:
      - Api-Token: []
      summary: |-
        Retrieves the image associated with the given url.
        Can only obtain images used in hub items.
      tags:
      - Hub items
      x-permissions:
      - environment:roles:viewer
      x-supports-personal-access-token: true
      x-token-scopes:
      - hub.read
  /hub/categories:
    get:
      operationId: listCategories
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/CategoryList'
          description: OK
        "503":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Unavailable
      security:
      - Api-Token: []
      summary: Lists all the available category groupings of items
      tags:
      - Hub items
      x-permissions:
      - environment:roles:viewer
      x-supports-personal-access-token: true
      x-token-scopes:
      - hub.read
  /hub/extensions1/{extension1FQN}:
    get:
      operationId: getDetails
      parameters:
      - description: Fully qualified name of the extension1/plugin
        explode: false
        in: path
        name: extension1FQN
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ItemDetails'
          description: OK
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Not found
        "503":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Unavailable
      security:
      - Api-Token: []
      summary: The details of the given extension version 1
      tags:
      - Hub items
      x-permissions:
      - environment:roles:viewer
      x-supports-personal-access-token: true
      x-token-scopes:
      - hub.read
  /hub/extensions1/{extension1FQN}/releases/{version}:
    get:
      operationId: getArtifact
      parameters:
      - description: Fully qualified name of the extension1/plugin
        explode: false
        in: path
        name: extension1FQN
        required: true
        schema:
          type: string
        style: simple
      - description: Version of the release of the extension1/plugin
        explode: false
        in: path
        name: version
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/zip: {}
          description: Ok - download file
        "404":
          content:
            application/zip:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Not found
        "503":
          content:
            application/zip:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Unavailable
      security:
      - Api-Token: []
      summary: Artifact of the given version of an item
      tags:
      - Hub items
      x-permissions:
      - environment:roles:viewer
      x-supports-personal-access-token: true
      x-token-scopes:
      - hub.read
  /hub/extensions2/{extensionName}:
    get:
      operationId: getExtensionDetails
      parameters:
      - description: Fully qualified name of the extension
        explode: false
        in: path
        name: extensionName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ItemDetails'
          description: OK
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Bad request
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Not found
        "503":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Unavailable
      security:
      - Api-Token: []
      summary: The details of the given extension
      tags:
      - Hub items
      x-permissions:
      - environment:roles:viewer
      x-supports-personal-access-token: true
      x-token-scopes:
      - hub.read
  /hub/extensions2/{extensionName}/actions/addToEnvironment:
    post:
      operationId: addToEnvironment
      parameters:
      - description: Fully qualified name of the extension
        explode: false
        in: path
        name: extensionName
        required: true
        schema:
          type: string
        style: simple
      - description: Version of the extension. Fallback to the evaluated recommended
          version when the version is not provided
        explode: true
        in: query
        name: extensionVersion
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/RegisteredExtensionResultDto'
          description: OK
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Bad request
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Not found
        "503":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Unavailable
      security:
      - Api-Token: []
      summary: Registers the given extension version in the environment (using the
        recommended version if no other release is registered)
      tags:
      - Hub items
      x-permissions:
      - environment:roles:viewer
      x-supports-personal-access-token: true
      x-token-scopes:
      - hub.install
  /hub/extensions2/{extensionName}/actions/update:
    post:
      operationId: update
      parameters:
      - description: Fully qualified name of the extension
        explode: false
        in: path
        name: extensionName
        required: true
        schema:
          type: string
        style: simple
      - description: Version of the extension. Fallback to the evaluated recommended
          version when the version is not provided
        explode: true
        in: query
        name: extensionVersion
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/RegisteredExtensionResultDto'
          description: OK
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Bad request
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Not found
        "503":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Unavailable
      security:
      - Api-Token: []
      summary: Updates the given extension to the latest compatible published version
      tags:
      - Hub items
      x-permissions:
      - environment:roles:viewer
      x-supports-personal-access-token: true
      x-token-scopes:
      - hub.install
  /hub/extensions2/{extensionName}/metadata:
    put:
      operationId: uploadMetadataForExtension
      parameters:
      - description: Fully qualified name of the extension
        explode: false
        in: path
        name: extensionName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/uploadMetadataForExtension_request'
      responses:
        "204":
          description: Extension metadata uploaded
      security:
      - Api-Token: []
      summary: Create/Replace metadata for an extension that does not have Dynatrace
        distributed metadata.
      tags:
      - Hub items
      x-permissions:
      - environment:roles:viewer
      x-supports-personal-access-token: true
      x-token-scopes:
      - hub.write
  /hub/extensions2/{extensionName}/releases/{version}/releaseNotes:
    put:
      operationId: updateReleaseNotes
      parameters:
      - description: Fully qualified name of the extension
        explode: false
        in: path
        name: extensionName
        required: true
        schema:
          type: string
        style: simple
      - description: Version of the extension release
        explode: false
        in: path
        name: version
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/ExtensionReleaseNotes'
        description: The JSON body of the request. Contains the markdown for release
          notes
      responses:
        "204":
          description: Extension release notes updated
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Bad request
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Not found
        "503":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Unavailable
      security:
      - Api-Token: []
      summary: Sets or updates the release notes of the specified extension release
      tags:
      - Hub items
      x-permissions:
      - environment:roles:viewer
      x-supports-personal-access-token: true
      x-token-scopes:
      - hub.write
  /hub/items:
    get:
      operationId: listItems
      parameters:
      - description: "The cursor for the next page of results. You can find it in\
          \ the **nextPageKey** field of the previous response. \n\nThe first page\
          \ is always returned if you don't specify the **nextPageKey** query parameter.\
          \ \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must\
          \ omit all other query parameters. "
        explode: true
        in: query
        name: nextPageKey
        required: false
        schema:
          type: string
        style: form
      - description: "The amount of hub items in a single response payload. \n\nThe\
          \ maximal allowed page size is 100. \n\nIf not set, 20 is used."
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: "If provided, will filter out results based on the given item\
          \ type."
        explode: true
        in: query
        name: itemType
        required: false
        schema:
          enum:
          - EXTENSION1
          - EXTENSION2
          - TECHNOLOGY
          type: string
        style: form
      - description: |-
          Filter the results for items matching the query string within id, name, author, description or any tag.
          - Case insensitive
          - Spaces in the query string will lead to an intersection of the results of each term
        explode: true
        in: query
        name: query
        required: false
        schema:
          type: string
        style: form
      - description: |-
          If provided, will restrict the result to Extensions 2.0 that have the respective installed state.
          - Only applies if itemType filter is not set or EXTENSION2
        explode: true
        in: query
        name: installed
        required: false
        schema:
          type: boolean
        style: form
      - description: |-
          If provided, will filter items that belong to the given category.
          - This overrides the itemType or installed filters
          - For a list of category ids refer to /categories
          - Will return the items in the order of the category
        explode: true
        in: query
        name: categoryId
        required: false
        schema:
          type: string
        style: form
      - description: "If provided, will skip the desired number of results, allowing\
          \ for pagination in combination with page size"
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ItemList'
          description: OK
        "503":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Unavailable
      security:
      - Api-Token: []
      summary: Lists all the available items in your environment
      tags:
      - Hub items
      x-permissions:
      - environment:roles:viewer
      x-supports-personal-access-token: true
      x-token-scopes:
      - hub.read
  /hub/technologies/{slug}:
    get:
      operationId: getTechnologyDetails
      parameters:
      - description: Slug of the technology to be fetched
        explode: false
        in: path
        name: slug
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ItemDetails'
          description: OK
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Not found
        "503":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Unavailable
      security:
      - Api-Token: []
      summary: The details of the given technology
      tags:
      - Hub items
      x-permissions:
      - environment:roles:viewer
      x-supports-personal-access-token: true
      x-token-scopes:
      - hub.read
  /jsMappingFiles:
    get:
      operationId: getJavaScriptMappingFilesMetadata
      parameters:
      - description: "The cursor for the next page of results. You can find it in\
          \ the **nextPageKey** field of the previous response. \n\nThe first page\
          \ is always returned if you don't specify the **nextPageKey** query parameter.\
          \ \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must\
          \ omit all other query parameters. "
        explode: true
        in: query
        name: nextPageKey
        required: false
        schema:
          type: string
        style: form
      - description: "The amount of JavaScript mapping files in a single response\
          \ payload. \n\nThe maximal allowed page size is 100. \n\nIf not set, 20\
          \ is used."
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: Filters the resulting set of JavaScript mapping files by the
          minified JavaScript file URL. Only equals are taken into account.
        explode: true
        in: query
        name: minifiedJsFileUrl
        required: false
        schema:
          type: string
        style: form
      - description: Filters the resulting set of JavaScript mapping files by file
          type.
        explode: true
        in: query
        name: fileType
        required: false
        schema:
          enum:
          - MINIFIED
          - SOURCE
          - SOURCEMAP
          type: string
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/JavaScriptMappingFileListDto'
          description: Success.
      security:
      - Api-Token: []
      summary: Lists metadata of JavaScript mapping files | maturity=EARLY_ADOPTER
      tags:
      - JavaScript mapping files
      x-maturity: EARLY_ADOPTER
      x-supports-personal-access-token: true
      x-token-scopes:
      - javaScriptMappingFiles.read
  /jsMappingFiles/{minifiedJsFileUrl}/{fileType}:
    delete:
      operationId: deleteJavaScriptMappingFile
      parameters:
      - description: The URL of the minified JavaScript file.
        explode: false
        in: path
        name: minifiedJsFileUrl
        required: true
        schema:
          type: string
        style: simple
      - description: The type of the JavaScript mapping file.
        explode: false
        in: path
        name: fileType
        required: true
        schema:
          enum:
          - MINIFIED
          - SOURCE
          - SOURCEMAP
          type: string
        style: simple
      responses:
        "200":
          description: Success. File deleted.
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The requested resource doesn't exist.
      security:
      - Api-Token: []
      summary: Deletes the specified JavaScript mapping file | maturity=EARLY_ADOPTER
      tags:
      - JavaScript mapping files
      x-maturity: EARLY_ADOPTER
      x-supports-personal-access-token: true
      x-token-scopes:
      - javaScriptMappingFiles.write
    put:
      operationId: uploadJavaScriptMappingFile
      parameters:
      - description: The URL of the minified JavaScript file.
        explode: false
        in: path
        name: minifiedJsFileUrl
        required: true
        schema:
          type: string
        style: simple
      - description: The type of the JavaScript mapping file.
        explode: false
        in: path
        name: fileType
        required: true
        schema:
          enum:
          - MINIFIED
          - SOURCE
          - SOURCEMAP
          type: string
        style: simple
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/uploadJavaScriptMappingFile_request'
      responses:
        "200":
          description: Success. The file has been uploaded and stored. Existing file
            replaced.
        "201":
          description: Success. The file has been uploaded and stored.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid.
        "413":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The symbol file storage quota is exhausted.
      security:
      - Api-Token: []
      summary: Uploads new or updates existing JavaScript mapping file | maturity=EARLY_ADOPTER
      tags:
      - JavaScript mapping files
      x-maturity: EARLY_ADOPTER
      x-supports-personal-access-token: true
      x-token-scopes:
      - javaScriptMappingFiles.write
  /jsMappingFiles/{minifiedJsFileUrl}/{fileType}/metadata:
    put:
      operationId: updateJavaScriptMappingFileMetadata
      parameters:
      - description: The URL of the minified JavaScript file.
        explode: false
        in: path
        name: minifiedJsFileUrl
        required: true
        schema:
          type: string
        style: simple
      - description: The type of the JavaScript mapping file.
        explode: false
        in: path
        name: fileType
        required: true
        schema:
          enum:
          - MINIFIED
          - SOURCE
          - SOURCEMAP
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JavaScriptMappingFileMetadataDto'
        description: The JSON body of the request. Contains updated metadata of the
          file.
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/JavaScriptMappingFileDto'
          description: Success. Metadata updated.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid.
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The requested resource doesn't exist.
      security:
      - Api-Token: []
      summary: Updates metadata of the specified JavaScript mapping file | maturity=EARLY_ADOPTER
      tags:
      - JavaScript mapping files
      x-maturity: EARLY_ADOPTER
      x-supports-personal-access-token: true
      x-token-scopes:
      - javaScriptMappingFiles.write
  /logs/aggregate:
    get:
      description: "Returns the aggregated number of occurrences of log values divided\
        \ into time slots. \n\nIt is possible that the timeframe covered by results\
        \ exceeds the specified timeframe. In that case the request returns fewer\
        \ time slots than specified in the **timeBuckets** query parameter.\n\nIf\
        \ *Log Management and Analytics, powered by Grail* is enabled, then an OAuth\
        \ token is required with *storage:logs:read* and *storage:buckets:read* scopes."
      operationId: getLogHistogramData
      parameters:
      - description: "The start of the requested timeframe. \n\nYou can use one of\
          \ the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable\
          \ format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified,\
          \ UTC is used. You can use a space character instead of the `T`. Seconds\
          \ and fractions of a second are optional. \n* Relative timeframe, back from\
          \ now. The format is `now-NU/A`, where `N` is the amount of time, `U` is\
          \ the unit of time, and `A` is an alignment. The alignment rounds all the\
          \ smaller values to the nearest zero in the past. For example, `now-1y/w`\
          \ is one year back, aligned by a week. \nYou can also specify relative timeframe\
          \ without an alignment: `now-NU`. \nSupported time units for the relative\
          \ timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days\
          \ \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set,\
          \ the relative timeframe of two weeks is used (`now-2w`)."
        explode: true
        in: query
        name: from
        required: false
        schema:
          type: string
        style: form
      - description: "The end of the requested timeframe. \n\nYou can use one of the\
          \ following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable\
          \ format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified,\
          \ UTC is used. You can use a space character instead of the `T`. Seconds\
          \ and fractions of a second are optional. \n* Relative timeframe, back from\
          \ now. The format is `now-NU/A`, where `N` is the amount of time, `U` is\
          \ the unit of time, and `A` is an alignment. The alignment rounds all the\
          \ smaller values to the nearest zero in the past. For example, `now-1y/w`\
          \ is one year back, aligned by a week. \nYou can also specify relative timeframe\
          \ without an alignment: `now-NU`. \nSupported time units for the relative\
          \ timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days\
          \ \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set,\
          \ the current timestamp is used."
        explode: true
        in: query
        name: to
        required: false
        schema:
          type: string
        style: form
      - description: "The log search query. \n\nThe query must use the [Dynatrace\
          \ search query language](https://dt-url.net/pe03s6f)."
        explode: true
        in: query
        name: query
        required: false
        schema:
          default: ""
          type: string
        style: form
      - description: "The number of time slots in the result. \n\nThe query timeframe\
          \ is divided equally into the specified number of slots. \n\nThe minimum\
          \ length of a slot is 1 ms. \n\nIf not set, 1 is used."
        explode: true
        in: query
        name: timeBuckets
        required: false
        schema:
          default: 1
          format: int32
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: "The maximum number of values in each group. \n\nYou can get\
          \ up to 100 values per group. \n\nIf not set, 10 is used."
        explode: true
        in: query
        name: maxGroupValues
        required: false
        schema:
          default: 10
          format: int32
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: "The groupings to be included in the response. \n\nYou can specify\
          \ several groups in the following format: `groupBy=status&groupBy=log.source`.\
          \ \n\nIf not set, all possible groups are returned. You can use this option\
          \ to check for possible grouping values. \n\nUnique log data attributes\
          \ (high-cardinality attributes) for example, `span_id` or `trace_id` cannot\
          \ be used for grouping."
        explode: true
        in: query
        name: groupBy
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/AggregatedLog'
          description: Success
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid.
      security:
      - Api-Token: []
      summary: Gets aggregated log records | maturity=EARLY_ADOPTER
      tags:
      - Logs
      x-allow-access-with-management-zone-permissions: true
      x-maturity: EARLY_ADOPTER
      x-token-scopes:
      - logs.read
  /logs/export:
    get:
      description: |-
        Returns the first *X* records (specified in the **pageSize** query parameter).

         Unlike the **search** API, this API does not split the result into slices and has no limit for the total number of records. Log records are sorted by the criteria specified in the **sort** query parameter.

         In order to fetch large amount of records (exceeding the **pageSize** value), one should repeat the **export** call with **nextPageKey** param.

        Disabled on *Log Management and Analytics, powered by Grail*.
      operationId: exportLogRecords
      parameters:
      - description: "The start of the requested timeframe. \n\nYou can use one of\
          \ the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable\
          \ format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified,\
          \ UTC is used. You can use a space character instead of the `T`. Seconds\
          \ and fractions of a second are optional. \n* Relative timeframe, back from\
          \ now. The format is `now-NU/A`, where `N` is the amount of time, `U` is\
          \ the unit of time, and `A` is an alignment. The alignment rounds all the\
          \ smaller values to the nearest zero in the past. For example, `now-1y/w`\
          \ is one year back, aligned by a week. \nYou can also specify relative timeframe\
          \ without an alignment: `now-NU`. \nSupported time units for the relative\
          \ timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days\
          \ \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set,\
          \ the relative timeframe of two weeks is used (`now-2w`)."
        explode: true
        in: query
        name: from
        required: false
        schema:
          type: string
        style: form
      - description: "The end of the requested timeframe. \n\nYou can use one of the\
          \ following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable\
          \ format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified,\
          \ UTC is used. You can use a space character instead of the `T`. Seconds\
          \ and fractions of a second are optional. \n* Relative timeframe, back from\
          \ now. The format is `now-NU/A`, where `N` is the amount of time, `U` is\
          \ the unit of time, and `A` is an alignment. The alignment rounds all the\
          \ smaller values to the nearest zero in the past. For example, `now-1y/w`\
          \ is one year back, aligned by a week. \nYou can also specify relative timeframe\
          \ without an alignment: `now-NU`. \nSupported time units for the relative\
          \ timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days\
          \ \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set,\
          \ the current timestamp is used."
        explode: true
        in: query
        name: to
        required: false
        schema:
          type: string
        style: form
      - description: "The cursor for the next page of results. You can find it in\
          \ the **nextPageKey** field of the previous response. \n\nThe first page\
          \ is always returned if you don't specify the **nextPageKey** query parameter.\
          \ \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must\
          \ omit all other query parameters. "
        explode: true
        in: query
        name: nextPageKey
        required: false
        schema:
          type: string
        style: form
      - description: The number of results per result page.
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          default: 1000
          format: int64
          maximum: 5000
          minimum: 1
          type: integer
        style: form
      - description: "The log search query. \n\nThe query must use the [Dynatrace\
          \ search query language](https://dt-url.net/pe03s6f)."
        explode: true
        in: query
        name: query
        required: false
        schema:
          default: ""
          type: string
        style: form
      - description: "Defines the ordering of the log records.\n\nEach field has a\
          \ sign prefix (+/-) for sorting order. If no sign prefix is set, then the\
          \ `+` option will be applied. \n\nCurrently, ordering is available only\
          \ for the timestamp (+timestamp for the oldest records first, or -timestamp\
          \ for the newest records first). \n\nWhen millisecond resolution provided\
          \ by the timestamp is not enough, log records are sorted based on the order\
          \ in which they appear in the log source (remote process writing to REST\
          \ API endpoint or remote process from which logs are collected)."
        explode: true
        in: query
        name: sort
        required: false
        schema:
          default: -timestamp
          pattern: "^[+-]?[a-z]+$"
          type: string
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ExportedLogRecordList'
          description: Success
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid.
        "501":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: "Failed. The server either does not recognize the request method,\
            \ or it lacks the ability to fulfill the request. May happen when Grail\
            \ log storage is enabled."
      security:
      - Api-Token: []
      summary: Exports log records | maturity=EARLY_ADOPTER
      tags:
      - Logs
      x-allow-access-with-management-zone-permissions: true
      x-maturity: EARLY_ADOPTER
      x-token-scopes:
      - logs.read
  /logs/ingest:
    post:
      description: "Ingested logs are stored in the indexed log storage. \n\nThis\
        \ endpoint requires an ActiveGate with the **Log Analytics Collector** module\
        \ enabled. \n\nThe maximum payload size of a single request is **5 MB**. Requests\
        \ with a greater payload are rejected, and the API returns a 413 response\
        \ code.\n\nIf the ingested payload is a JSON array, the maximum array size\
        \ is **50000**. Requests with a greater payload are rejected, and the API\
        \ returns a 413 response code.\n\n<br />**Log events per minute (SaaS)**:\
        \ \n\nGrail tenants: no limit, other tenants: 1M per minute by default. \n\
        \nIf your log data stream within your cluster exceeds the limit, all log events\
        \ above the limit are ignored. \n\n<br />**Log events per minute (Managed)**:\
        \ \n\n1k/minute per cluster by default. \n\nIf your log data stream within\
        \ your cluster exceeds the limit, all log events above the limit are ignored.\
        \ \n\nIf you increase resources (RAM) in your nodes, you can increase the\
        \ limit based on the cluster resources size using an API call or Cluster Management\
        \ Console (CMC). \n\n<br />Refresh cluster limit using the API call \n\nSee\
        \ [Update log events per cluster for Log Monitoring](https://dt-url.net/f123yeu).\
        \ \n\n<br />Refresh cluster limit using Cluster Management Console (CMC) \n\
        \n1. In the CMC, select **Environments** and the environment for which you\
        \ wish to update the total log events per cluster. \n\n2. On the environment\
        \ details page, in the **Cluster overload prevention settings** section, select\
        \ the **Refresh cluster limit**. \n\n**High-cardinality attributes:** \n\n\
        Unique log data attributes (high-cardinality attributes) such as `span_id`\
        \ and `trace_id` generate unnecessarily excessive facet lists that may impact\
        \ log viewer performance. Because of this, they aren't listed in log viewer\
        \ facets. You can still use them in a log viewer advanced search query. \n\
        \n"
      operationId: storeLog
      requestBody:
        content:
          application/json; charset=utf-8:
            examples:
              JSON array representing two events.:
                description: JSON array representing two events.
                summary: JSON format
                value:
                - content: "Exception: Custom error log sent via Generic Log Ingest"
                  log.source: /var/log/syslog
                  timestamp: 2022-01-17T22:12:31.0000
                  severity: error
                  custom.attribute: attribute value
                - content: "Exception: Custom error log sent via Generic Log Ingest"
                  log.source: /var/log/syslog
                  timestamp: 2022-01-17T22:12:35.0000
                - content: "Exception: Custom error log sent via Generic Log Ingest"
                  log.source: /var/log/syslog
                - content: "Exception: Custom error log sent via Generic Log Ingest"
            schema:
              $ref: '#/components/schemas/LogMessageJson'
          text/plain; charset=utf-8:
            examples:
              Plain text message representing a single log event:
                description: Plain text message representing a single log event
                summary: Plain text format
                value: example log content
            schema:
              $ref: '#/components/schemas/LogMessagePlain'
        description: "The body of the request. Contains one or more log events to\
          \ be ingested. \n\nThe endpoint accepts one of the following payload types,\
          \ defined by the **Accept** header: \n\n* `text/plain`: supports only one\
          \ log event. \n* `application/json`: supports multiple log events in a single\
          \ payload."
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/SuccessEnvelope'
          description: "Only a part of input events were ingested due to event invalidity.\
            \ For details, check the response body."
        "204":
          description: Success. Response doesn't have a body.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid.
        "402":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: "Failed. You can't add more logs to the storage, because you\
            \ are out of [Davis Data Units](https://dt-url.net/dduLog) (DDU). Purchase\
            \ additional DDUs."
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The requested resource doesn't exist. This may happen
            when no ActiveGate is available with the Log Analytics Collector module
            enabled.
        "413":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. Request payload size is too big. This may happen when
            the payload byte size exceeds the limit or when the ingested payload is
            a JSON array with the size exceeding the limit.
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. Too Many Requests. This may happen when ActiveGate
            is unable to process more requests at the moment or when log ingest is
            disabled.
        "501":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: "Failed. The server either does not recognize the request method,\
            \ or it lacks the ability to fulfil the request. May happen when indexed\
            \ log storage is not enabled."
        "503":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The server is currently unable to handle the request.
            This may happen when ActiveGate is overloaded.
      security:
      - Api-Token: []
      summary: Pushes log records to Dynatrace
      tags:
      - Logs
      x-token-scopes:
      - logs.ingest
  /logs/search:
    get:
      description: "Returns the first *X* records (specified in the **limit** query\
        \ parameter). Log records are sorted by the criteria specified in the **sort**\
        \ query parameter. \n\nIf the query is too large to be processed in a single\
        \ request, it is divided into slices. In that case the first response contains\
        \ the **nextSliceKey** cursor for the second slice. Use it in the **nextSliceKey**\
        \ query parameter to obtain the second slice, which contains **nextSliceKey**\
        \ cursor for the third slice, and so on. \n\nResults can be distributed unevenly\
        \ between slices and some slices might be empty.\n\nIf *Log Management and\
        \ Analytics, powered by Grail* is enabled, then an OAuth token is required\
        \ with *storage:logs:read* and *storage:buckets:read* scopes."
      operationId: getLogRecords
      parameters:
      - description: "The start of the requested timeframe. \n\nYou can use one of\
          \ the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable\
          \ format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified,\
          \ UTC is used. You can use a space character instead of the `T`. Seconds\
          \ and fractions of a second are optional. \n* Relative timeframe, back from\
          \ now. The format is `now-NU/A`, where `N` is the amount of time, `U` is\
          \ the unit of time, and `A` is an alignment. The alignment rounds all the\
          \ smaller values to the nearest zero in the past. For example, `now-1y/w`\
          \ is one year back, aligned by a week. \nYou can also specify relative timeframe\
          \ without an alignment: `now-NU`. \nSupported time units for the relative\
          \ timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days\
          \ \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set,\
          \ the relative timeframe of two weeks is used (`now-2w`)."
        explode: true
        in: query
        name: from
        required: false
        schema:
          type: string
        style: form
      - description: "The end of the requested timeframe. \n\nYou can use one of the\
          \ following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable\
          \ format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified,\
          \ UTC is used. You can use a space character instead of the `T`. Seconds\
          \ and fractions of a second are optional. \n* Relative timeframe, back from\
          \ now. The format is `now-NU/A`, where `N` is the amount of time, `U` is\
          \ the unit of time, and `A` is an alignment. The alignment rounds all the\
          \ smaller values to the nearest zero in the past. For example, `now-1y/w`\
          \ is one year back, aligned by a week. \nYou can also specify relative timeframe\
          \ without an alignment: `now-NU`. \nSupported time units for the relative\
          \ timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days\
          \ \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set,\
          \ the current timestamp is used."
        explode: true
        in: query
        name: to
        required: false
        schema:
          type: string
        style: form
      - description: "The desired amount of log records. \n\nThe maximal allowed limit\
          \ is 1000. \n\nIf not set, 1000 is used."
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 1000
          format: int32
          maximum: 1000
          minimum: 1
          type: integer
        style: form
      - description: "The log search query. \n\nThe query must use the [Dynatrace\
          \ search query language](https://dt-url.net/pe03s6f)."
        explode: true
        in: query
        name: query
        required: false
        schema:
          default: ""
          type: string
        style: form
      - description: "Defines the ordering of the log records.\n\nEach field has a\
          \ sign prefix (+/-) for sorting order. If no sign prefix is set, then the\
          \ `+` option will be applied. \n\nCurrently, ordering is available only\
          \ for the timestamp (+timestamp for the oldest records first, or -timestamp\
          \ for the newest records first). \n\nWhen millisecond resolution provided\
          \ by the timestamp is not enough, log records are sorted based on the order\
          \ in which they appear in the log source (remote process writing to REST\
          \ API endpoint or remote process from which logs are collected)."
        explode: true
        in: query
        name: sort
        required: false
        schema:
          default: -timestamp
          pattern: "^[+-]?[a-z]+$"
          type: string
        style: form
      - description: "The cursor for the next slice of results. You can find it in\
          \ the **nextSliceKey** field of the previous response. \n\nThe first slice\
          \ is always returned if you don't specify this parameter. \n\nIf this parameter\
          \ is set, all other query parameters are ignored."
        explode: true
        in: query
        name: nextSliceKey
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/LogRecordsList'
          description: Success
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid.
      security:
      - Api-Token: []
      summary: Reads log records | maturity=EARLY_ADOPTER
      tags:
      - Logs
      x-allow-access-with-management-zone-permissions: true
      x-maturity: EARLY_ADOPTER
      x-token-scopes:
      - logs.read
  /metrics:
    get:
      description: "You can narrow down the output by selecting metrics in the **metricSelector**\
        \ field. \n\nYou can additionally limit the output by using pagination: \n\
        \n1. Specify the number of results per page in the **pageSize** query parameter.\
        \ \n\n2. Then use the cursor from the **nextPageKey** field of the response\
        \ in the **nextPageKey** query parameter to obtain subsequent pages. All other\
        \ query parameters must be omitted."
      operationId: allMetrics
      parameters:
      - description: "The cursor for the next page of results. You can find it in\
          \ the **nextPageKey** field of the previous response. \n\nThe first page\
          \ is always returned if you don't specify the **nextPageKey** query parameter.\
          \ \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must\
          \ omit all other query parameters. "
        explode: true
        in: query
        name: nextPageKey
        required: false
        schema:
          type: string
        style: form
      - description: "The amount of metric schemata in a single response payload.\
          \ \n\nThe maximal allowed page size is 500. \n\nIf not set, 100 is used.\n\
          \n If a value higher than 500 is used, only 500 results per page are returned."
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: "Selects metrics for the query by their keys.\n\n You can specify\
          \ multiple metric keys separated by commas (for example, `metrickey1,metrickey2`).\
          \ To select multiple metrics belonging to the same parent, list the last\
          \ part of the required metric keys in parentheses, separated by commas,\
          \ while keeping the common part untouched. For example, to list the `builtin:host.cpu.idle`\
          \ and `builtin:host.cpu.user` metric, write: `builtin:host.cpu.(idle,user)`.\
          \ \n\nYou can select a full set of related metrics by using a trailing asterisk\
          \ (`*`) wildcard. For example, `builtin:host.*` selects all host-based metrics\
          \ and `builtin:*` selects all Dynatrace-provided metrics. \n\nYou can set\
          \ additional transformation operators, separated by a colon (`:`). See [Metrics\
          \ selector transformations](https://dt-url.net/metricSelector) in Dynatrace\
          \ Documentation for additional information on available result transformations\
          \ and syntax.\n\n Only `aggregation`, `merge`, `parents`, and `splitBy`\
          \ transformations are supported by this endpoint.\n\n If the metric key\
          \ contains any symbols you must quote (`\"`) the key. The following characters\
          \ inside of a quoted metric key must be escaped with a tilde (`~`):\n\n\
          * Quotes (`\"`)\n* Tildes (`~`) \n\nFor example, to query the metric with\
          \ the key of **ext:selfmonitoring.jmx.Agents: Type \"APACHE\"** you must\
          \ specify this selector: \n\n `\"ext:selfmonitoring.jmx.Agents: Type ~\"\
          APACHE~\"\"` \n\n\n\n To find metrics based on a search term, rather than\
          \ metricId, use the **text** query parameter instead of this one."
        explode: true
        in: query
        name: metricSelector
        required: false
        schema:
          type: string
        style: form
      - description: "Metric registry search term. Only show metrics that contain\
          \ the term in their key, display name, or description. Use the `metricSelector`\
          \ parameter instead of this one to select a complete metric hierarchy instead\
          \ of doing a text-based search."
        explode: true
        in: query
        name: text
        required: false
        schema:
          type: string
        style: form
      - description: "Defines the list of metric properties included in the response.\
          \ \n\n`metricId` is **always** included in the result. The following additional\
          \ properties are available: \n\n* `displayName`: The name of the metric\
          \ in the user interface. Enabled by default. \n* `description`: A short\
          \ description of the metric. Enabled by default. \n* `unit`: The unit of\
          \ the metric. Enabled by default. \n* `tags`: The tags of the metric. \n\
          + `dduBillable`:  An indicator whether the usage of metric consumes [Davis\
          \ data units](https://dt-url.net/ddu). Deprecated and always `false` for\
          \ Dynatrace Platform Subscription. Superseded by `billable`. \n+ `billable`:\
          \  An indicator whether the usage of metric is billable. \n* `created`:\
          \  The timestamp (UTC milliseconds) when the metrics has been created. \n\
          * `lastWritten`:  The timestamp (UTC milliseconds) when metric data points\
          \ have been written for the last time. \n* `aggregationTypes`: The list\
          \ of allowed aggregations for the metric. Note that it may be different\
          \ after a [transformation](https://dt-url.net/metricSelector) is applied.\
          \ \n* `defaultAggregation`: The default aggregation of the metric. It is\
          \ used when no aggregation is specified or the `:auto` transformation is\
          \ set. \n* `dimensionDefinitions`: The fine metric division (for example,\
          \ process group and process ID for some process-related metric). \n* `transformations`:\
          \ A list of [transformations](https://dt-url.net/metricSelector) that can\
          \ be applied to the metric.\n* `entityType`: A list of entity types supported\
          \ by the metric.\n* `minimumValue`: The minimum allowed value of the metric.\n\
          * `maximumValue`: The maximum allowed value of the metric.\n* `rootCauseRelevant`:\
          \ Whether (true or false) the metric is related to a root cause of a problem.\
          \ A root-cause relevant metric represents a strong indicator for a faulty\
          \ component.\n* `impactRelevant`: Whether (true or false) the metric is\
          \ relevant to a problem's impact. An impact-relevant metric is highly dependent\
          \ on other metrics and changes because an underlying root-cause metric has\
          \ changed.\n* `metricValueType`: The type of the metric's value. You have\
          \ these options:\n\t * `score`: A score metric is a metric where high values\
          \ indicate a good situation, while low values indicate trouble. An example\
          \ of such a metric is a success rate.\n\t * `error`: An error metric is\
          \ a metric where high values indicate trouble, while low values indicate\
          \ a good situation. An example of such a metric is an error count.\n* `latency`:\
          \ The latency of the metric, in minutes. The latency is the expected reporting\
          \ delay (for example, caused by constraints of cloud vendors or other third-party\
          \ data sources) between the observation of a metric data point and its availability\
          \ in Dynatrace. The allowed value range is from `1` to `60` minutes.\n*\
          \ `metricSelector`: The underlying metric selector used by a func: metric.\n\
          * `scalar`: Indicates whether the metric expression resolves to a scalar\
          \ (`true`) or to a series (`false`). \nA scalar result always contains one\
          \ data point. The amount of data points in a series result depends on the\
          \ resolution you're using. \n* `resolutionInfSupported`: If `true`, resolution=Inf\
          \ can be applied to the metric query. \n\nTo add properties, list them with\
          \ leading plus `+`. To exclude default properties, list them with leading\
          \ minus `-`.\n\nTo specify several properties, join them with a comma (for\
          \ example `fields=+aggregationTypes,-description`).\n\nIf you specify just\
          \ one property, the response contains the metric key and the specified property.\
          \ To return metric keys only, specify `metricId` here."
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "Filters the resulted set of metrics to those that have data\
          \ points within the specified timeframe. \n\nYou can use one of the following\
          \ formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format\
          \ of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC\
          \ is used. You can use a space character instead of the `T`. Seconds and\
          \ fractions of a second are optional. \n* Relative timeframe, back from\
          \ now. The format is `now-NU/A`, where `N` is the amount of time, `U` is\
          \ the unit of time, and `A` is an alignment. The alignment rounds all the\
          \ smaller values to the nearest zero in the past. For example, `now-1y/w`\
          \ is one year back, aligned by a week. \nYou can also specify relative timeframe\
          \ without an alignment: `now-NU`. \nSupported time units for the relative\
          \ timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days\
          \ \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\n"
        explode: true
        in: query
        name: writtenSince
        required: false
        schema:
          type: string
        style: form
      - description: "The metadata scope of the query. Only metrics with specified\
          \ properties are included to the response. \n\nYou can set one or more of\
          \ the following criteria. Values are case-sensitive and the `EQUALS` operator\
          \ is used. If several values are specified, the **OR** logic applies. \n\
          \n* `unit(\"unit-1\",\"unit-2\")` \n* `tags(\"tag-1\",\"tag-2\")` \n* `dimensionKey(\"\
          dimkey-1\",\"dimkey-2\")`. The filtering applies only to dimensions that\
          \ were written within the last 14 days. \n* `custom(\"true\")`. \"true\"\
          \ to include only user-defined metrics metrics (without namespace or with\
          \ `ext:`, `calc:`, `func:`, `appmon:`), \"false\" to filter them out. \n\
          \n* `exported(\"true\")`. \"true\" to include only exported metrics, \"\
          false\" to filter them out. \n\nTo set several criteria, separate them with\
          \ a comma (`,`). For example, `tags(\"feature\",\"cloud\"),unit(\"Percent\"\
          ),dimensionKey(\"location\"),custom(\"true\")`. Only results matching **all**\
          \ criteria are included in response. \n\nFor example, to list metrics that\
          \ have the tags **feature** AND **cloud** with a unit of **Percent** OR\
          \ **MegaByte** AND a dimension with a dimension key **location**, use this\
          \ **metadataSelector**: `tags(\"feature\"),unit(\"Percent\",\"MegaByte\"\
          ),tags(\"cloud\"),dimensionKey(\"location\")`."
        explode: true
        in: query
        name: metadataSelector
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/MetricDescriptorCollection'
            text/csv; header=absent; charset=utf-8:
              schema:
                $ref: '#/components/schemas/MetricDescriptorCollection'
            text/csv; header=present; charset=utf-8:
              schema:
                $ref: '#/components/schemas/MetricDescriptorCollection'
          description: Success
        "400":
          description: Syntax or validation error. **metricSelector** or **fields**
            have syntactic or semantic errors.
        "404":
          description: A metric has not been found.
        "406":
          description: Not acceptable. The requested media type is not supported.
            Check the **Accept** header of your request.
      security:
      - Api-Token: []
      summary: Lists all available metrics
      tags:
      - Metrics
      x-token-scopes:
      - metrics.read
  /metrics/ingest:
    post:
      operationId: ingest
      requestBody:
        content:
          text/plain; charset=utf-8:
            example: "server.cpu.temperature,cpu.id=0 42"
            schema:
              type: string
        description: "Data points, provided in the [line protocol](https://dt-url.net/5d63ic1).\
          \ Each line represents a single data point."
        required: true
      responses:
        "202":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ValidationResponse'
          description: The provided metric data points are accepted and will be processed
            in the background.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ValidationResponse'
          description: Some data points are invalid. Valid data points are accepted
            and will be processed in the background.
      security:
      - Api-Token: []
      summary: Pushes metric data points to Dynatrace
      tags:
      - Metrics
      x-token-scopes:
      - metrics.ingest
  /metrics/query:
    get:
      description: "The following limits apply: \n* The amount of aggregated data\
        \ points in the response is limited to 1,000 \n* The amount of series in the\
        \ response is limited to 1,000 \n   * The amount of data points per series\
        \ is limited to 10,080 (minutes of one week) \n   * The overall amount of\
        \ data points is limited to 100,000 \n\nThe **dataPointCountRatio** specifies\
        \ the ratio of queried data points divided by the maximum number of data points\
        \ per metric that are allowed in a single query.\nThe **dimensionCountRatio**\
        \ specifies the ratio of queried dimension tuples divided by the maximum number\
        \ of dimension tuples allowed in a single query."
      operationId: query
      parameters:
      - description: "Selects metrics for the query by their keys. You can select\
          \ up to 10 metrics for one query.\n\n You can specify multiple metric keys\
          \ separated by commas (for example, `metrickey1,metrickey2`). To select\
          \ multiple metrics belonging to the same parent, list the last part of the\
          \ required metric keys in parentheses, separated by commas, while keeping\
          \ the common part untouched. For example, to list the `builtin:host.cpu.idle`\
          \ and `builtin:host.cpu.user` metric, write: `builtin:host.cpu.(idle,user)`.\
          \ \n\n\n\n If the metric key contains any symbols you must quote (`\"`)\
          \ the key. The following characters inside of a quoted metric key must be\
          \ escaped with a tilde (`~`):\n\n* Quotes (`\"`)\n* Tildes (`~`) \n\nFor\
          \ example, to query the metric with the key of **ext:selfmonitoring.jmx.Agents:\
          \ Type \"APACHE\"** you must specify this selector: \n\n `\"ext:selfmonitoring.jmx.Agents:\
          \ Type ~\"APACHE~\"\"` \n\nYou can set additional transformation operators,\
          \ separated by a colon (`:`). See [Metrics selector transformations](https://dt-url.net/metricSelector)\
          \ in Dynatrace Documentation for additional information on available result\
          \ transformations and syntax."
        explode: true
        in: query
        name: metricSelector
        required: false
        schema:
          type: string
        style: form
      - description: "The desired resolution of data points. \n\nYou can use one of\
          \ the following options: \n* The desired amount of data points. This is\
          \ the default option. This is a reference number of points, which is not\
          \ necessarily equal to the number of the returned data points. \n* The desired\
          \ timespan between data points. This is a reference timespan, which is not\
          \ necessarily equal to the returned timespan. To use this option, specify\
          \ the unit of the timespan. \n\nValid units for the timespan are: \n* `m`:\
          \ minutes \n* `h`: hours \n* `d`: days \n* `w`: weeks \n* `M`: months \n\
          * `q`: quarters \n* `y`: years \n\nIf not set, the default is **120 data\
          \ points**.\n\nFor example: \n\n* Get data points which are 10 minutes apart:\
          \ `resolution=10m` \n* Get data points which are 3 weeks apart: `resolution=3w`"
        explode: true
        in: query
        name: resolution
        required: false
        schema:
          type: string
        style: form
      - description: "The start of the requested timeframe. \n\nYou can use one of\
          \ the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable\
          \ format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified,\
          \ UTC is used. You can use a space character instead of the `T`. Seconds\
          \ and fractions of a second are optional. \n* Relative timeframe, back from\
          \ now. The format is `now-NU/A`, where `N` is the amount of time, `U` is\
          \ the unit of time, and `A` is an alignment. The alignment rounds all the\
          \ smaller values to the nearest zero in the past. For example, `now-1y/w`\
          \ is one year back, aligned by a week. \nYou can also specify relative timeframe\
          \ without an alignment: `now-NU`. \nSupported time units for the relative\
          \ timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days\
          \ \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set,\
          \ the relative timeframe of two hours is used (`now-2h`)."
        explode: true
        in: query
        name: from
        required: false
        schema:
          type: string
        style: form
      - description: "The end of the requested timeframe. \n\nYou can use one of the\
          \ following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable\
          \ format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified,\
          \ UTC is used. You can use a space character instead of the `T`. Seconds\
          \ and fractions of a second are optional. \n* Relative timeframe, back from\
          \ now. The format is `now-NU/A`, where `N` is the amount of time, `U` is\
          \ the unit of time, and `A` is an alignment. The alignment rounds all the\
          \ smaller values to the nearest zero in the past. For example, `now-1y/w`\
          \ is one year back, aligned by a week. \nYou can also specify relative timeframe\
          \ without an alignment: `now-NU`. \nSupported time units for the relative\
          \ timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days\
          \ \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set,\
          \ the current timestamp is used."
        explode: true
        in: query
        name: to
        required: false
        schema:
          type: string
        style: form
      - description: "Specifies the entity scope of the query. Only data points delivered\
          \ by matched entities are included in response. \n\nYou must set one of\
          \ these criteria: \n\n* Entity type: `type(\"TYPE\")` \n* Dynatrace entity\
          \ ID: `entityId(\"id\")`. You can specify several IDs, separated by a comma\
          \ (`entityId(\"id-1\",\"id-2\")`). All requested entities must be of the\
          \ same type. \n\nYou can add one or more of the following criteria. Values\
          \ are case-sensitive and the `EQUALS` operator is used unless otherwise\
          \ specified. \n\n* Tag: `tag(\"value\")`. Tags in `[context]key:value`,\
          \ `key:value`, and `value` formats are detected and parsed automatically.\
          \ Any colons (`:`) that are part of the key or value must be escaped with\
          \ a backslash(`\\`). Otherwise, it will be interpreted as the separator\
          \ between the key and the value. All tag values are case-sensitive. \n*\
          \ Management zone ID: `mzId(123)` \n* Management zone name: `mzName(\"value\"\
          )`\n* Entity name: \n\t* `entityName.equals`: performs a non-casesensitive\
          \ `EQUALS` query. \n\t* `entityName.startsWith`: changes the operator to\
          \ `BEGINS WITH`. \n\t* `entityName.in`: enables you to provide multiple\
          \ values. The `EQUALS` operator applies. \n\t* `caseSensitive(entityName.equals(\"\
          value\"))`: takes any entity name criterion as an argument and makes the\
          \ value case-sensitive.\n* Health state (HEALTHY,UNHEALTHY): `healthState(\"\
          HEALTHY\")`\n* First seen timestamp: `firstSeenTms.<operator>(now-3h)`.\
          \ Use any timestamp format from the **from**/**to** parameters. \n\tThe\
          \ following operators are available:\n\t* `lte`: earlier than or at the\
          \ specified time\n\t* `lt`: earlier than the specified time\n\t* `gte`:\
          \ later than or at the specified time\n\t* `gt`: later than the specified\
          \ time\n* Entity attribute: `<attribute>(\"value1\",\"value2\")` and `<attribute>.exists()`.\
          \ To fetch the list of available attributes, execute the [GET entity type](https://dt-url.net/2ka3ivt)\
          \ request and check the **properties** field of the response. \n* Relationships:\
          \ `fromRelationships.<relationshipName>()` and `toRelationships.<relationshipName>()`.\
          \ This criterion takes an entity selector as an attribute. To fetch the\
          \ list of available relationships, execute the [GET entity type](https://dt-url.net/2ka3ivt)\
          \ request and check the **fromRelationships** and **toRelationships** fields.\n\
          * Negation: `not(<criterion>)`. Inverts any criterion except for **type**.\
          \ \n\nFor more information, see [Entity selector](https://dt-url.net/apientityselector)\
          \ in Dynatrace Documentation. \n\nTo set several criteria, separate them\
          \ with a comma (`,`). For example, `type(\"HOST\"),healthState(\"HEALTHY\"\
          )`. Only results matching **all** criteria are included in the response.\
          \ \n\nThe maximum string length is 2,000 characters. \n\nUse the [`GET /metrics/{metricId}`](https://dt-url.net/6z23ifk)\
          \ call to fetch the list of possible entity types for your metric. \n\n\
          To set a universal scope matching all entities, omit this parameter."
        explode: true
        in: query
        name: entitySelector
        required: false
        schema:
          type: string
        style: form
      - description: "The management zone scope of the query. Only metrics data relating\
          \ to the specified management zones are included to the response. \n\nYou\
          \ can set one or more of the following criteria. Values are case-sensitive\
          \ and the `EQUALS` operator is used. If several values are specified, the\
          \ **OR** logic applies. \n\n* `mzId(123,456)` \n* `mzName(\"name-1\",\"\
          name-2\")` \nTo set several criteria, separate them with a comma (`,`).\
          \ For example, `mzName(\"name-1\",\"name-2\"),mzId(1234)`. Only results\
          \ matching **all** of the criteria are included in the response.For example,\
          \ to list metrics that have the id **123** OR **234** AND the name **name-1**\
          \ OR **name-2**, use this **mzSelector**: `mzId(123,234),mzName(\"name-1\"\
          ,\"name-2\")."
        explode: true
        in: query
        name: mzSelector
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/MetricData'
            text/csv; header=absent; charset=utf-8:
              schema:
                $ref: '#/components/schemas/MetricData'
            text/csv; header=present; charset=utf-8:
              schema:
                $ref: '#/components/schemas/MetricData'
          description: Success
        "400":
          description: "Syntax or validation error. From and to parameters, entitySelector\
            \ or resolution are incorrect individually or in their combined meaning."
        "404":
          description: A metric has not been found.
        "406":
          description: Not acceptable. The requested media type is not supported.
            Check the **Accept** header of your request.
      security:
      - Api-Token: []
      summary: Gets data points of the specified metrics
      tags:
      - Metrics
      x-token-scopes:
      - metrics.read
  /metrics/{metricKey}:
    delete:
      description: Deletion cannot be undone! You can't delete a metric if it has
        data points ingested within the last two hours.
      operationId: delete
      parameters:
      - description: "The key of the required metric. \n\n"
        explode: false
        in: path
        name: metricKey
        required: true
        schema:
          type: string
        style: simple
      responses:
        "202":
          description: Success. The deletion of the metric has been triggered.
        "400":
          description: Failed. The metric has been written within the last two hours.
        "404":
          description: Failed. The metric cannot be found or the key cannot be parsed.
        "500":
          description: Failed. The deletion of metric dimensions failed.
      security:
      - Api-Token: []
      summary: Deletes the specified metric
      tags:
      - Metrics
      x-token-scopes:
      - metrics.write
    get:
      operationId: metric
      parameters:
      - description: "The key of the required metric. \n\nYou can set additional transformation\
          \ operators, separated by a colon (`:`). See [Metrics selector transformations](https://dt-url.net/metricSelector)\
          \ in Dynatrace Documentation for additional information on available result\
          \ transformations and syntax."
        explode: false
        in: path
        name: metricKey
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/MetricDescriptor'
            text/csv; header=absent; charset=utf-8:
              schema:
                $ref: '#/components/schemas/MetricDescriptor'
            text/csv; header=present; charset=utf-8:
              schema:
                $ref: '#/components/schemas/MetricDescriptor'
          description: Success
        "404":
          description: A metric has not been found.
        "406":
          description: Not acceptable. The requested media type is not supported.
            Check the **Accept** header of your request.
      security:
      - Api-Token: []
      summary: Gets the descriptor of the specified metric
      tags:
      - Metrics
      x-token-scopes:
      - metrics.read
  /monitoringstate:
    get:
      description: Only process group instances are supported.
      operationId: getStates
      parameters:
      - description: "Specifies the process group instances where you're querying\
          \ the state. Use the `PROCESS_GROUP_INSTANCE` entity type. \n\nYou must\
          \ set one of these criteria: \n\n* Entity type: `type(\"TYPE\")` \n* Dynatrace\
          \ entity ID: `entityId(\"id\")`. You can specify several IDs, separated\
          \ by a comma (`entityId(\"id-1\",\"id-2\")`). All requested entities must\
          \ be of the same type. \n\nYou can add one or more of the following criteria.\
          \ Values are case-sensitive and the `EQUALS` operator is used unless otherwise\
          \ specified. \n\n* Tag: `tag(\"value\")`. Tags in `[context]key:value`,\
          \ `key:value`, and `value` formats are detected and parsed automatically.\
          \ Any colons (`:`) that are part of the key or value must be escaped with\
          \ a backslash(`\\`). Otherwise, it will be interpreted as the separator\
          \ between the key and the value. All tag values are case-sensitive. \n*\
          \ Management zone ID: `mzId(123)` \n* Management zone name: `mzName(\"value\"\
          )`\n* Entity name: \n\t* `entityName.equals`: performs a non-casesensitive\
          \ `EQUALS` query. \n\t* `entityName.startsWith`: changes the operator to\
          \ `BEGINS WITH`. \n\t* `entityName.in`: enables you to provide multiple\
          \ values. The `EQUALS` operator applies. \n\t* `caseSensitive(entityName.equals(\"\
          value\"))`: takes any entity name criterion as an argument and makes the\
          \ value case-sensitive.\n* Health state (HEALTHY,UNHEALTHY): `healthState(\"\
          HEALTHY\")`\n* First seen timestamp: `firstSeenTms.<operator>(now-3h)`.\
          \ Use any timestamp format from the **from**/**to** parameters. \n\tThe\
          \ following operators are available:\n\t* `lte`: earlier than or at the\
          \ specified time\n\t* `lt`: earlier than the specified time\n\t* `gte`:\
          \ later than or at the specified time\n\t* `gt`: later than the specified\
          \ time\n* Entity attribute: `<attribute>(\"value1\",\"value2\")` and `<attribute>.exists()`.\
          \ To fetch the list of available attributes, execute the [GET entity type](https://dt-url.net/2ka3ivt)\
          \ request and check the **properties** field of the response. \n* Relationships:\
          \ `fromRelationships.<relationshipName>()` and `toRelationships.<relationshipName>()`.\
          \ This criterion takes an entity selector as an attribute. To fetch the\
          \ list of available relationships, execute the [GET entity type](https://dt-url.net/2ka3ivt)\
          \ request and check the **fromRelationships** and **toRelationships** fields.\n\
          * Negation: `not(<criterion>)`. Inverts any criterion except for **type**.\
          \ \n\nFor more information, see [Entity selector](https://dt-url.net/apientityselector)\
          \ in Dynatrace Documentation. \n\nTo set several criteria, separate them\
          \ with a comma (`,`). For example, `type(\"HOST\"),healthState(\"HEALTHY\"\
          )`. Only results matching **all** criteria are included in the response.\
          \ \n\nThe maximum string length is 2,000 characters. \n\n"
        explode: true
        in: query
        name: entitySelector
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/MonitoredStates'
          description: Success
        "503":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Unavailable
      security:
      - Api-Token: []
      summary: Lists monitoring states of entities
      tags:
      - Monitored entities - Monitoring state
      x-allow-access-with-management-zone-permissions: true
      x-permissions:
      - environment:roles:viewer
      x-supports-personal-access-token: true
      x-token-scopes:
      - entities.read
  /networkZoneSettings:
    get:
      operationId: getNetworkZoneSettings
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/NetworkZoneSettings'
          description: Success
      security:
      - Api-Token: []
      summary: Gets the global configuration of network zones
      tags:
      - Network zones
      x-permissions:
      - environment:roles:viewer
      x-supports-personal-access-token: true
      x-token-scopes:
      - networkZones.read
    put:
      operationId: updateNetworkZoneSettings
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/NetworkZoneSettings'
        description: The JSON body of the request. Contains global configuration of
          network zones.
        required: true
      responses:
        "204":
          description: Success. The global network zones configuration has been updated.
            Response doesn't have a body.
      security:
      - Api-Token: []
      summary: Updates the global configuration of network zones
      tags:
      - Network zones
      x-permissions:
      - environment:roles:manage-settings
      x-supports-personal-access-token: true
      x-token-scopes:
      - networkZones.write
  /networkZones:
    get:
      operationId: getAllNetworkZones
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/NetworkZoneList'
          description: Success
      security:
      - Api-Token: []
      summary: Lists all existing network zones
      tags:
      - Network zones
      x-permissions:
      - environment:roles:viewer
      x-supports-personal-access-token: true
      x-token-scopes:
      - networkZones.read
  /networkZones/{id}:
    delete:
      description: "You can only delete an empty network zone (a zone that no ActiveGate\
        \ or OneAgent is using). \n\n If the network zone is used as an alternative\
        \ zone for any OneAgent, it will be automatically removed from the list of\
        \ possible alternatives."
      operationId: deleteNetworkZone
      parameters:
      - description: The ID of the network zone to be deleted.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Deleted. Response doesn't have a body.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. See error message in the response body for details.
      security:
      - Api-Token: []
      summary: Deletes the specified network zone
      tags:
      - Network zones
      x-permissions:
      - environment:roles:manage-settings
      x-supports-personal-access-token: true
      x-token-scopes:
      - networkZones.write
    get:
      operationId: getSingleNetworkZone
      parameters:
      - description: The ID of the required network zone.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/NetworkZone'
          description: Success
      security:
      - Api-Token: []
      summary: Gets parameters of the specified network zone
      tags:
      - Network zones
      x-permissions:
      - environment:roles:viewer
      x-supports-personal-access-token: true
      x-token-scopes:
      - networkZones.read
    put:
      description: "If the network zone with the specified ID does not exist, a new\
        \ network zone is created. \n\n The ID is not case sensitive. Dynatrace stores\
        \ the ID in lowercase."
      operationId: createOrUpdateNetworkZone
      parameters:
      - description: "The ID of the network zone to be updated. \n\n If you set the\
          \ ID in the body as well, it must match this ID. \n\n The ID is not case\
          \ sensitive. Dynatrace stores the ID in lowercase."
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/NetworkZone'
        description: The JSON body of the request. Contains parameters of the network
          zone.
        required: true
      responses:
        "201":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/EntityShortRepresentation'
          description: Success. The new network zone has been created. The response
            body contains the ID of the new network zone.
        "204":
          description: Success. The network zone has been updated. Response doesn't
            have a body.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid.
      security:
      - Api-Token: []
      summary: Updates an existing network zone or creates a new one
      tags:
      - Network zones
      x-permissions:
      - environment:roles:manage-settings
      x-supports-personal-access-token: true
      x-token-scopes:
      - networkZones.write
  /networkZones/{id}/hostConnectionStatistics:
    get:
      operationId: getHostStats
      parameters:
      - description: The ID of the required network zone.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: "Filters the resulting set of hosts: \n\n* `all`: All hosts using\
          \ the zone. \n* `configuredButNotConnectedOnly`: Hosts from the network\
          \ zone that use other zones. \n* `connectedAsAlternativeOnly`: Hosts that\
          \ use the network zone as an alternative. \n* `connectedAsFailoverOnly`:\
          \ Hosts from other zones that use the zone (not configured as an alternative)\
          \ even though ActiveGates of higher priority are available. \n* `connectedAsFailoverWithoutOwnActiveGatesOnly`:\
          \ Hosts from other zones that use the zone (not configured as an alternative)\
          \ and **no** ActiveGates of higher priority are available. \n\nIf not set,\
          \ `all` is used."
        explode: true
        in: query
        name: filter
        required: false
        schema:
          default: all
          enum:
          - all
          - configuredButNotConnectedOnly
          - connectedAsAlternativeOnly
          - connectedAsFailoverOnly
          - connectedAsFailoverWithoutOwnActiveGatesOnly
          type: string
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/NetworkZoneConnectionStatistics'
          description: Success
      security:
      - Api-Token: []
      summary: Gets the statistics about hosts using the network zone
      tags:
      - Network zones
      x-permissions:
      - environment:roles:manage-settings
      x-supports-personal-access-token: true
      x-token-scopes:
      - networkZones.read
  /oneagents/remoteConfigurationManagement:
    get:
      description: The response includes finished jobs for the last 7 days.
      operationId: getRemoteIdentityOperations_1
      parameters:
      - description: "The start of the requested timeframe for a remote configuration\
          \ management job. \n\nYou can use one of the following formats: \n* Timestamp\
          \ in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`.\
          \ If no time zone is specified, UTC is used. You can use a space character\
          \ instead of the `T`. Seconds and fractions of a second are optional. \n\
          * Relative timeframe, back from now. The format is `now-NU/A`, where `N`\
          \ is the amount of time, `U` is the unit of time, and `A` is an alignment.\
          \ The alignment rounds all the smaller values to the nearest zero in the\
          \ past. For example, `now-1y/w` is one year back, aligned by a week. \n\
          You can also specify relative timeframe without an alignment: `now-NU`.\
          \ \nSupported time units for the relative timeframe are: \n   * `m`: minutes\
          \ \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months\
          \ \n   * `y`: years \n\n"
        explode: true
        in: query
        name: from
        required: false
        schema:
          type: string
        style: form
      - description: "The end of the requested timeframe for a remote configuration\
          \ management job. \n\nYou can use one of the following formats: \n* Timestamp\
          \ in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`.\
          \ If no time zone is specified, UTC is used. You can use a space character\
          \ instead of the `T`. Seconds and fractions of a second are optional. \n\
          * Relative timeframe, back from now. The format is `now-NU/A`, where `N`\
          \ is the amount of time, `U` is the unit of time, and `A` is an alignment.\
          \ The alignment rounds all the smaller values to the nearest zero in the\
          \ past. For example, `now-1y/w` is one year back, aligned by a week. \n\
          You can also specify relative timeframe without an alignment: `now-NU`.\
          \ \nSupported time units for the relative timeframe are: \n   * `m`: minutes\
          \ \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months\
          \ \n   * `y`: years \n\nIf not set, the current timestamp is used."
        explode: true
        in: query
        name: to
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/RemoteConfigurationManagementJobList'
          description: Success
      security:
      - Api-Token: []
      summary: Lists finished OneAgent remote configuration management jobs
      tags:
      - OneAgent - Remote configuration management
      x-permissions:
      - environment:roles:viewer
      x-supports-personal-access-token: true
      x-token-scopes:
      - oneAgents.read
    post:
      operationId: createRemoteIdentityOperationJob_1
      parameters:
      - description: One Agents will be restarted (`true`) or not (`false`) after
          configuration. By default OneAgents will be restarted when network zone
          or host group are reconfigured - the restart is required to apply the changes.
        explode: true
        in: query
        name: restart
        required: false
        schema:
          type: boolean
        style: form
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/RemoteConfigurationManagementOperationOneAgentRequest'
        description: "JSON body of the request, containing remote configuration management\
          \ job definition."
        required: true
      responses:
        "201":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/RemoteConfigurationManagementJob'
          description: Created
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/RemoteConfigurationManagementValidationResult'
          description: Failed. The input is invalid.
        "409":
          description: Other remote configuration management job is currently being
            executed
      security:
      - Api-Token: []
      summary: Creates a new remote configuration management job
      tags:
      - OneAgent - Remote configuration management
      x-permissions:
      - environment:roles:viewer
      x-supports-personal-access-token: true
      x-token-scopes:
      - oneAgents.write
  /oneagents/remoteConfigurationManagement/current:
    get:
      description: "The currently running remote configuration management job may\
        \ be related to ActiveGates or OneAgents. There is a limit of one concurrent\
        \ remote configuration management job, regardless of the entity type."
      operationId: getCurrentRemoteIdentityOperationJob_1
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/RemoteConfigurationManagementJob'
          description: Success
        "204":
          description: 'No remote configuration management job is currently running '
      security:
      - Api-Token: []
      summary: Gets remote configuration management job that is currently running
      tags:
      - OneAgent - Remote configuration management
      x-permissions:
      - environment:roles:viewer
      x-supports-personal-access-token: true
      x-token-scopes:
      - oneAgents.read
  /oneagents/remoteConfigurationManagement/preview:
    post:
      operationId: createRemoteIdentityOperationPreview_1
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/RemoteConfigurationManagementOperationOneAgentRequest'
        description: "JSON body of the request, containing remote configuration management\
          \ job definition."
        required: true
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/RemoteConfigurationManagementPreviewList'
          description: Success
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/RemoteConfigurationManagementValidationResult'
          description: Failed. The input is invalid.
        "422":
          description: Endpoint was executed for not supported operation type
      security:
      - Api-Token: []
      summary: "Creates a preview for remote configuration management job - applicable\
        \ only to network zone, host group and ActiveGate group"
      tags:
      - OneAgent - Remote configuration management
      x-permissions:
      - environment:roles:viewer
      x-supports-personal-access-token: true
      x-token-scopes:
      - oneAgents.write
  /oneagents/remoteConfigurationManagement/validator:
    post:
      operationId: validateRemoteIdentityOperation_1
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/RemoteConfigurationManagementOperationOneAgentRequest'
        description: "JSON body of the request, containing remote configuration management\
          \ job definition."
        required: true
      responses:
        "204":
          description: Success. Response doesn't have a body.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/RemoteConfigurationManagementValidationResult'
          description: Failed. The input is invalid.
      security:
      - Api-Token: []
      summary: Validates the payload for the `POST /oneagents/remoteConfigurationManagement`
        request.
      tags:
      - OneAgent - Remote configuration management
      x-permissions:
      - environment:roles:viewer
      x-supports-personal-access-token: true
      x-token-scopes:
      - oneAgents.write
  /oneagents/remoteConfigurationManagement/{id}:
    get:
      operationId: getRemoteIdentityOperationJob_1
      parameters:
      - description: The ID of the required remote configuration management job.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/RemoteConfigurationManagementJob'
          description: Success
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The requested resource doesn't exist.
      security:
      - Api-Token: []
      summary: Gets the specified remote configuration management job
      tags:
      - OneAgent - Remote configuration management
      x-permissions:
      - environment:roles:viewer
      x-supports-personal-access-token: true
      x-token-scopes:
      - oneAgents.read
  /otlp/v1/logs:
    post:
      description: This endpoint can be targeted by OpenTelemetry log exporters.
      operationId: ingestLog
      requestBody:
        content:
          application/x-protobuf:
            schema:
              items:
                format: byte
                type: string
              type: array
        description: An ExportLogsServiceRequest message in binary protobuf format.
        required: true
      responses:
        "200":
          description: The request has been received and will be processed.
        "400":
          description: The request could not be processed. This may happen if the
            message is malformed.
        "413":
          description: The OTLP message exceeded the payload size limit.
        "500":
          description: The request could not be processed due to an internal server
            error.
        "503":
          description: The service is currently unavailable.
      security:
      - Api-Token: []
      summary: Implementation of the OTLP/HTTP protocol for logs ingest.
      tags:
      - OpenTelemetry Protocol (OTLP) Logs Ingest
      x-token-scopes:
      - logs.ingest
  /otlp/v1/metrics:
    post:
      description: This endpoint can be targeted by OpenTelemetry metric exporters.
      operationId: ingestMetric
      requestBody:
        content:
          application/x-protobuf:
            schema:
              items:
                format: byte
                type: string
              type: array
        description: An ExportMetricServiceRequest message in binary protobuf format.
        required: true
      responses:
        "200":
          description: The request has been received and will be processed.
        "400":
          description: The request could not be processed. This may happen if the
            message is malformed.
        "413":
          description: The OTLP message exceeded the payload size limit.
        "500":
          description: The request could not be processed due to an internal server
            error.
        "503":
          description: The service is currently unavailable. This may happen if the
            module is paused.
      security:
      - Api-Token: []
      summary: Implementation of the OTLP/HTTP protocol for metric ingest.
      tags:
      - OpenTelemetry Protocol (OTLP) Metric Ingest
      x-token-scopes:
      - metrics.ingest
  /otlp/v1/traces:
    post:
      description: This endpoint can be targeted by OpenTelemetry trace exporters.
      operationId: ingestTrace
      requestBody:
        content:
          application/x-protobuf:
            schema:
              items:
                format: byte
                type: string
              type: array
        description: An ExportTraceServiceRequest message in binary protobuf format.
        required: true
      responses:
        "200":
          description: The request has been received and will be processed.
        "400":
          description: The request could not be processed. This may happen if the
            message is malformed.
        "413":
          description: The OTLP message exceeded the payload size limit.
        "500":
          description: The request could not be processed due to an internal server
            error.
        "503":
          description: The service is currently unavailable.
      security:
      - Api-Token: []
      summary: Implementation of the OTLP/HTTP protocol for trace ingest.
      tags:
      - OpenTelemetry Protocol (OTLP) Trace Ingest
      x-token-scopes:
      - openTelemetryTrace.ingest
  /problems:
    get:
      operationId: getProblems
      parameters:
      - description: "A list of additional problem properties you can add to the response.\
          \ \n\nThe following properties are available (all other properties are always\
          \ included and you can't remove them from the response): \n\n* `evidenceDetails`:\
          \ The details of the root cause.\n* `impactAnalysis`: The impact analysis\
          \ of the problem on other entities/users.\n* `recentComments`: A list of\
          \ the most recent comments to the problem.\n\nTo add properties, specify\
          \ them as a comma-separated list (for example, `evidenceDetails,impactAnalysis`).\n\
          \n The field is valid only for the current page of results. You must set\
          \ it for each page you're requesting."
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "The cursor for the next page of results. You can find it in\
          \ the **nextPageKey** field of the previous response. \n\nThe first page\
          \ is always returned if you don't specify the **nextPageKey** query parameter.\
          \ \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must\
          \ omit all other query parameters except the optional **fields** parameter.\
          \ \n"
        explode: true
        in: query
        name: nextPageKey
        required: false
        schema:
          type: string
        style: form
      - description: "The amount of problems in a single response payload. \n\nThe\
          \ maximal allowed page size is 500. \n\nIf not set, 50 is used."
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: "The start of the requested timeframe. \n\nYou can use one of\
          \ the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable\
          \ format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified,\
          \ UTC is used. You can use a space character instead of the `T`. Seconds\
          \ and fractions of a second are optional. \n* Relative timeframe, back from\
          \ now. The format is `now-NU/A`, where `N` is the amount of time, `U` is\
          \ the unit of time, and `A` is an alignment. The alignment rounds all the\
          \ smaller values to the nearest zero in the past. For example, `now-1y/w`\
          \ is one year back, aligned by a week. \nYou can also specify relative timeframe\
          \ without an alignment: `now-NU`. \nSupported time units for the relative\
          \ timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days\
          \ \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set,\
          \ the relative timeframe of two hours is used (`now-2h`)."
        explode: true
        in: query
        name: from
        required: false
        schema:
          type: string
        style: form
      - description: "The end of the requested timeframe. \n\nYou can use one of the\
          \ following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable\
          \ format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified,\
          \ UTC is used. You can use a space character instead of the `T`. Seconds\
          \ and fractions of a second are optional. \n* Relative timeframe, back from\
          \ now. The format is `now-NU/A`, where `N` is the amount of time, `U` is\
          \ the unit of time, and `A` is an alignment. The alignment rounds all the\
          \ smaller values to the nearest zero in the past. For example, `now-1y/w`\
          \ is one year back, aligned by a week. \nYou can also specify relative timeframe\
          \ without an alignment: `now-NU`. \nSupported time units for the relative\
          \ timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days\
          \ \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set,\
          \ the current timestamp is used."
        explode: true
        in: query
        name: to
        required: false
        schema:
          type: string
        style: form
      - description: "Defines the scope of the query. Only problems matching the specified\
          \ criteria are included into response. \n\nYou can add one or several of\
          \ the criteria listed below. For each criterion you can specify multiple\
          \ comma-separated values, unless stated otherwise. If several values are\
          \ specified, the **OR** logic applies. All values must be quoted. \n* Status:\
          \ `status(\"open\")` or `status(\"closed\")`. You can specify only one status.\
          \ \n* Severity level: `severityLevel(\"level-1\",\"level-2\")`. Find the\
          \ possible values in the description of the **severityLevel** field of the\
          \ response.\n* Impact level: `impactLevel(\"level-11\",\"level-2\")` Find\
          \ the possible values in the description of the **impactLevel** field of\
          \ the response.\n* Root cause entity: `rootCauseEntity(\"id-1\", \"id-2\"\
          )`. \n* Management zone ID: `managementZoneIds(\"mZId-1\", \"mzId-2\")`.\
          \ \n* Management zone name: `managementZones(\"value-1\",\"value-2\")`.\
          \ \n* Impacted entities: `impactedEntities(\"id-1\", \"id-2\")`. \n* Affected\
          \ entities: `affectedEntities(\"id-1\", \"id-2\")`. \n* Type of affected\
          \ entities: `affectedEntityTypes(\"value-1\",\"value-2\")`. \n* Problem\
          \ ID: `problemId(\"id-1\", \"id-2\")`. \n* Alerting profile ID: `problemFilterIds(\"\
          id-1\", \"id-2\")`. \n* Alerting profile name (contains, case-insensitive):\
          \ `problemFilterNames(\"value-1\",\"value-2\")`. \n* Alerting profile name\
          \ (exact match, case-insensitive): `problemFilterNames.equals(\"value-1\"\
          ,\"value-2\")`. \n* Entity tags: `entityTags(\"[context]key:value\",\"key:value\"\
          )`. Tags in `[context]key:value`, `key:value`, and `value` formats are detected\
          \ and parsed automatically. If a value-only tag has a colon (`:`) in it,\
          \ you must escape the colon with a backslash(`\\`). Otherwise, the tag will\
          \ be parsed as a `key:value tag`. All tag values are case-sensitive.\n*\
          \ Display ID of the problem: `displayId(\"id-1\", \"id-2\")`. \n* Under\
          \ maintenance: `underMaintenance(true|false)`. Shows (true) or hides (false)\
          \ all problems created during maintenance mode.\n* Text search: `text(\"\
          value\")`. Text search on the following fields: problem title, event titles,\
          \ displayId and the id of affected and impacted entities. The text search\
          \ is case insensitive, partial matching and based on a relevance score.\
          \ Therefore the `relevance` sort option should be used to get the most relevant\
          \ problems first. The special characters `~` and `\"` need to be escaped\
          \ using a `~` (e.g. double quote search `text(\"~\"\")`). The search value\
          \ is limited to 30 characters.\n\nTo set several criteria, separate them\
          \ with a comma (`,`). Only results matching **all** criteria are included\
          \ in the response. \n\n"
        explode: true
        in: query
        name: problemSelector
        required: false
        schema:
          type: string
        style: form
      - description: "The entity scope of the query. You must set one of these criteria:\
          \ \n\n* Entity type: `type(\"TYPE\")` \n* Dynatrace entity ID: `entityId(\"\
          id\")`. You can specify several IDs, separated by a comma (`entityId(\"\
          id-1\",\"id-2\")`). All requested entities must be of the same type. \n\n\
          You can add one or more of the following criteria. Values are case-sensitive\
          \ and the `EQUALS` operator is used unless otherwise specified. \n\n* Tag:\
          \ `tag(\"value\")`. Tags in `[context]key:value`, `key:value`, and `value`\
          \ formats are detected and parsed automatically. Any colons (`:`) that are\
          \ part of the key or value must be escaped with a backslash(`\\`). Otherwise,\
          \ it will be interpreted as the separator between the key and the value.\
          \ All tag values are case-sensitive. \n* Management zone ID: `mzId(123)`\
          \ \n* Management zone name: `mzName(\"value\")`\n* Entity name: \n\t* `entityName.equals`:\
          \ performs a non-casesensitive `EQUALS` query. \n\t* `entityName.startsWith`:\
          \ changes the operator to `BEGINS WITH`. \n\t* `entityName.in`: enables\
          \ you to provide multiple values. The `EQUALS` operator applies. \n\t* `caseSensitive(entityName.equals(\"\
          value\"))`: takes any entity name criterion as an argument and makes the\
          \ value case-sensitive.\n* Health state (HEALTHY,UNHEALTHY): `healthState(\"\
          HEALTHY\")`\n* First seen timestamp: `firstSeenTms.<operator>(now-3h)`.\
          \ Use any timestamp format from the **from**/**to** parameters. \n\tThe\
          \ following operators are available:\n\t* `lte`: earlier than or at the\
          \ specified time\n\t* `lt`: earlier than the specified time\n\t* `gte`:\
          \ later than or at the specified time\n\t* `gt`: later than the specified\
          \ time\n* Entity attribute: `<attribute>(\"value1\",\"value2\")` and `<attribute>.exists()`.\
          \ To fetch the list of available attributes, execute the [GET entity type](https://dt-url.net/2ka3ivt)\
          \ request and check the **properties** field of the response. \n* Relationships:\
          \ `fromRelationships.<relationshipName>()` and `toRelationships.<relationshipName>()`.\
          \ This criterion takes an entity selector as an attribute. To fetch the\
          \ list of available relationships, execute the [GET entity type](https://dt-url.net/2ka3ivt)\
          \ request and check the **fromRelationships** and **toRelationships** fields.\n\
          * Negation: `not(<criterion>)`. Inverts any criterion except for **type**.\
          \ \n\nFor more information, see [Entity selector](https://dt-url.net/apientityselector)\
          \ in Dynatrace Documentation. \n\nTo set several criteria, separate them\
          \ with a comma (`,`). For example, `type(\"HOST\"),healthState(\"HEALTHY\"\
          )`. Only results matching **all** criteria are included in the response.\
          \ \n\nThe maximum string length is 2,000 characters. \n\nThe maximum number\
          \ of entities that may be selected is limited to 10000.\n\n"
        explode: true
        in: query
        name: entitySelector
        required: false
        schema:
          type: string
        style: form
      - description: "Specifies a set of comma-separated (`,`) fields for sorting\
          \ in the problem list.\n\nYou can sort by the following properties with\
          \ a sign prefix for the sorting order. \n\n * `status`: problem status (`+`\
          \ open problems first or `-` closed problems first)\n * `startTime`: problem\
          \ start time (`+` old problems first or `-` new problems first) \n * `relevance`:\
          \ problem relevance (`+` least relevant problems first or `-` most relevant\
          \ problems first) - can be used only in combination with text search \n\n\
          If no prefix is set, `+` is used. \n\nYou can specify several levels of\
          \ sorting. For example, `+status,-startTime` sorts problems by status, open\
          \ problems first. Within the status, problems are sorted by start time,\
          \ oldest first."
        explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Problems'
          description: Success
      security:
      - Api-Token: []
      summary: Lists problems observed within the specified timeframe
      tags:
      - Problems
      x-allow-access-with-management-zone-permissions: true
      x-permissions:
      - environment:roles:viewer
      x-supports-personal-access-token: true
      x-token-scopes:
      - problems.read
  /problems/{problemId}:
    get:
      operationId: getProblem
      parameters:
      - description: The ID of the required problem.
        explode: false
        in: path
        name: problemId
        required: true
        schema:
          type: string
        style: simple
      - description: "A list of additional problem properties you can add to the response.\
          \ \n\nThe following properties are available (all other properties are always\
          \ included and you can't remove them from the response): \n\n* `evidenceDetails`:\
          \ The details of the root cause.\n* `impactAnalysis`: The impact analysis\
          \ of the problem on other entities/users.\n* `recentComments`: A list of\
          \ the most recent comments to the problem.\n\nTo add properties, specify\
          \ them as a comma-separated list (for example, `evidenceDetails,impactAnalysis`)."
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Problem'
          description: Success
      security:
      - Api-Token: []
      summary: Gets the properties of the specified problem
      tags:
      - Problems
      x-allow-access-with-management-zone-permissions: true
      x-permissions:
      - environment:roles:viewer
      x-supports-personal-access-token: true
      x-token-scopes:
      - problems.read
  /problems/{problemId}/close:
    post:
      operationId: closeProblem
      parameters:
      - description: The ID of the required problem.
        explode: false
        in: path
        name: problemId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/ProblemCloseRequestDtoImpl'
        description: The JSON body of the request. Contains the closing comment on
          the problem.
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ProblemCloseResult'
          description: Success
        "204":
          description: The problem is closed already the request hasn't been executed.
      security:
      - Api-Token: []
      summary: Closes the specified problem and adds a closing comment on it
      tags:
      - Problems
      x-allow-access-with-management-zone-permissions: true
      x-permissions:
      - environment:roles:manage-settings
      x-supports-personal-access-token: true
      x-token-scopes:
      - problems.write
  /problems/{problemId}/comments:
    get:
      operationId: getComments
      parameters:
      - description: The ID of the required problem.
        explode: false
        in: path
        name: problemId
        required: true
        schema:
          type: string
        style: simple
      - description: "The cursor for the next page of results. You can find it in\
          \ the **nextPageKey** field of the previous response. \n\nThe first page\
          \ is always returned if you don't specify the **nextPageKey** query parameter.\
          \ \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must\
          \ omit all other query parameters except the optional **fields** parameter.\
          \ \n"
        explode: true
        in: query
        name: nextPageKey
        required: false
        schema:
          type: string
        style: form
      - description: "The amount of comments in a single response payload. \n\nThe\
          \ maximal allowed page size is 500. \n\nIf not set, 10 is used."
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          format: int64
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/CommentsList'
          description: Success
      security:
      - Api-Token: []
      summary: Gets all comments on the specified problem
      tags:
      - Problems
      x-allow-access-with-management-zone-permissions: true
      x-permissions:
      - environment:roles:viewer
      x-supports-personal-access-token: true
      x-token-scopes:
      - problems.read
    post:
      operationId: createComment
      parameters:
      - description: The ID of the required problem.
        explode: false
        in: path
        name: problemId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/CommentRequestDtoImpl'
        description: The JSON body of the request. Contains the comment to be added.
      responses:
        "201":
          description: Success. The comment has been added.
      security:
      - Api-Token: []
      summary: Adds a new comment on the specified problem
      tags:
      - Problems
      x-allow-access-with-management-zone-permissions: true
      x-permissions:
      - environment:roles:viewer
      x-supports-personal-access-token: true
      x-token-scopes:
      - problems.write
  /problems/{problemId}/comments/{commentId}:
    delete:
      operationId: deleteComment
      parameters:
      - description: The ID of the required problem.
        explode: false
        in: path
        name: problemId
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of the required comment.
        explode: false
        in: path
        name: commentId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Success. The comment has been deleted.
      security:
      - Api-Token: []
      summary: Deletes the specified comment from a problem
      tags:
      - Problems
      x-allow-access-with-management-zone-permissions: true
      x-permissions:
      - environment:roles:viewer
      x-supports-personal-access-token: true
      x-token-scopes:
      - problems.write
    get:
      operationId: getComment
      parameters:
      - description: The ID of the required problem.
        explode: false
        in: path
        name: problemId
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of the required comment.
        explode: false
        in: path
        name: commentId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Comment'
          description: Success
      security:
      - Api-Token: []
      summary: Gets the specified comment on a problem
      tags:
      - Problems
      x-allow-access-with-management-zone-permissions: true
      x-permissions:
      - environment:roles:viewer
      x-supports-personal-access-token: true
      x-token-scopes:
      - problems.read
    put:
      operationId: updateComment
      parameters:
      - description: The ID of the required problem.
        explode: false
        in: path
        name: problemId
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of the required comment.
        explode: false
        in: path
        name: commentId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/CommentRequestDtoImpl'
        description: The JSON body of the request. Contains the updated comment.
      responses:
        "204":
          description: Success. The comment has been updated.
      security:
      - Api-Token: []
      summary: Updates the specified comment on a problem
      tags:
      - Problems
      x-allow-access-with-management-zone-permissions: true
      x-permissions:
      - environment:roles:viewer
      x-supports-personal-access-token: true
      x-token-scopes:
      - problems.write
  /releases:
    get:
      operationId: getReleases
      parameters:
      - description: "The start of the requested timeframe. \n\nYou can use one of\
          \ the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable\
          \ format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified,\
          \ UTC is used. You can use a space character instead of the `T`. Seconds\
          \ and fractions of a second are optional. \n* Relative timeframe, back from\
          \ now. The format is `now-NU/A`, where `N` is the amount of time, `U` is\
          \ the unit of time, and `A` is an alignment. The alignment rounds all the\
          \ smaller values to the nearest zero in the past. For example, `now-1y/w`\
          \ is one year back, aligned by a week. \nYou can also specify relative timeframe\
          \ without an alignment: `now-NU`. \nSupported time units for the relative\
          \ timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days\
          \ \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set,\
          \ the relative timeframe of two weeks is used (`now-2w`)."
        explode: true
        in: query
        name: from
        required: false
        schema:
          type: string
        style: form
      - description: "The end of the requested timeframe. \n\nYou can use one of the\
          \ following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable\
          \ format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified,\
          \ UTC is used. You can use a space character instead of the `T`. Seconds\
          \ and fractions of a second are optional. \n* Relative timeframe, back from\
          \ now. The format is `now-NU/A`, where `N` is the amount of time, `U` is\
          \ the unit of time, and `A` is an alignment. The alignment rounds all the\
          \ smaller values to the nearest zero in the past. For example, `now-1y/w`\
          \ is one year back, aligned by a week. \nYou can also specify relative timeframe\
          \ without an alignment: `now-NU`. \nSupported time units for the relative\
          \ timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days\
          \ \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set,\
          \ the current timestamp is used."
        explode: true
        in: query
        name: to
        required: false
        schema:
          type: string
        style: form
      - description: "The cursor for the next page of results. You can find it in\
          \ the **nextPageKey** field of the previous response. \n\nThe first page\
          \ is always returned if you don't specify the **nextPageKey** query parameter.\
          \ \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must\
          \ omit all other query parameters. "
        explode: true
        in: query
        name: nextPageKey
        required: false
        schema:
          type: string
        style: form
      - description: "The amount of Releases in a single response payload. \n\nThe\
          \ maximal allowed page size is 1000. \n\nIf not set, 100 is used."
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: Get your Releases (`false`) or a set of demo Releases (`true`).
        explode: true
        in: query
        name: demo
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: "Defines the scope of the query. Only Releases matching the provided\
          \ criteria are included in the response.\n\nYou can add one or several of\
          \ the criteria listed below.\n* Management zone: type(PROCESS_GROUP_INSTANCE),mzName(\"\
          ManagementZone-A\"). Filters for all releases in the given management zone.\
          \ The filter is case-sensitive.\n* Monitoring state: monitoringState(\"\
          Active\") or monitoringState(\"Inactive\"). You can specify only one monitoring\
          \ state. \n* Health state: healthState(\"HEALTHY\") or healthState(\"UNHEALTHY\"\
          ). You can specify only one health state.\n* Security vulnerability: affectedBySecurityProblem(\"\
          Detected\") or affectedBySecurityProblem(\"Not detected\"). You can specify\
          \ only one security vulnerability state.\n* Name: entityName(\"name\").\
          \ Filters for all releases that contain the given value in their name. The\
          \ filter is case-insensitive.\n* Entity ID: entityId(\"id\").\n* Product:\
          \ releasesProduct(\"product\"). Filters for all releases that contain the\
          \ given value in their product. The filter is case-insensitive.\n* Stage:\
          \ releasesStage(\"stage\"). Filters for all releases that contain the given\
          \ value in their stage. The filter is case-insensitive.\n* Version: releasesVersion(\"\
          version\"). Filters for all releases that contain the given value in their\
          \ version. The filter is case-insensitive.\n\nTo set several criteria, separate\
          \ them with comma (,). Only results matching all criteria are included in\
          \ the response.\ne.g., .../api/v2/releases?releasesSelector=name(\"Server\"\
          ),monitoringState(\"Active\"),healthState(\"HEALTHY\"),releasesVersion(\"\
          1.0.7\").\n\nThe special characters ~ and \" need to be escaped using a\
          \ ~ (e.g. double quote search entityName(\"~\"\")."
        explode: true
        in: query
        name: releasesSelector
        required: false
        schema:
          default: ""
          type: string
        style: form
      - description: |-
          Specifies the field that is used for sorting the releases list.
          The field has a sign prefix (+/-) which corresponds to the sorting order ('+' for ascending and '-' for descending). If no sign prefix is set, then the default ascending sorting order will be applied. You can sort by the following properties:
          * 'product': Product name
          * 'name': Release name
          * 'stage': Stage name
          * 'version': Version
          * 'instances': Instances
          * 'traffic': Traffic

          If not set, the ascending order sorting for name is applied.
        explode: true
        in: query
        name: sort
        required: false
        schema:
          default: name
          type: string
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Releases'
          description: Success
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid.
      security:
      - Api-Token: []
      summary: Returns all releases
      tags:
      - Releases
      x-allow-access-with-management-zone-permissions: true
      x-permissions:
      - environment:roles:viewer
      x-supports-personal-access-token: true
      x-token-scopes:
      - releases.read
  /rum/cities/{countryCode}:
    get:
      operationId: getRegionsAndCities
      parameters:
      - description: "The ISO code of the required country. \n\n To fetch the list\
          \ of available country codes, use the [GET all countries](https://dt-url.net/37030go)\
          \ request."
        explode: false
        in: path
        name: countryCode
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/CountryWithRegionsWithCities'
          description: Success. The response contains the list of country's cities.
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The requested resource doesn't exist.
      security:
      - Api-Token: []
      summary: Lists all cities of a country
      tags:
      - Geographic regions
      x-supports-personal-access-token: true
      x-token-scopes:
      - geographicRegions.read
  /rum/cities/{countryCode}/{regionCode}:
    get:
      operationId: getCities
      parameters:
      - description: "The ISO code of the required country. \n\n To fetch the list\
          \ of available country codes, use the [GET all countries](https://dt-url.net/37030go)\
          \ request."
        explode: false
        in: path
        name: countryCode
        required: true
        schema:
          type: string
        style: simple
      - description: "The code of the required region. \n\n To fetch the list of available\
          \ region codes, use the [GET regions of the country](https://dt-url.net/az230x0)\
          \ request."
        explode: false
        in: path
        name: regionCode
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/CountryWithRegionsWithCities'
          description: Success. The response contains the list of region's cities.
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The requested resource doesn't exist.
      security:
      - Api-Token: []
      summary: Lists all cities of a country's region
      tags:
      - Geographic regions
      x-supports-personal-access-token: true
      x-token-scopes:
      - geographicRegions.read
  /rum/countries:
    get:
      operationId: getCountries
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/CountryList'
          description: Success. The response contains the list of countries.
      security:
      - Api-Token: []
      summary: Lists all countries
      tags:
      - Geographic regions
      x-supports-personal-access-token: true
      x-token-scopes:
      - geographicRegions.read
  /rum/regions:
    get:
      operationId: getRegions
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/CountryListWithRegions'
          description: Success. The response contains the list of countries with regional
            divisions.
      security:
      - Api-Token: []
      summary: Lists all countries along with their regions
      tags:
      - Geographic regions
      x-supports-personal-access-token: true
      x-token-scopes:
      - geographicRegions.read
  /rum/regions/{countryCode}:
    get:
      operationId: getRegionsOfCountry
      parameters:
      - description: "The ISO code of the required country. \n\n To fetch the list\
          \ of available country codes, use the [GET all countries](https://dt-url.net/37030go)\
          \ request."
        explode: false
        in: path
        name: countryCode
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/CountryWithRegions'
          description: Success. The response contains the list of country's regions.
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The requested resource doesn't exist.
      security:
      - Api-Token: []
      summary: Lists all regions of a country
      tags:
      - Geographic regions
      x-supports-personal-access-token: true
      x-token-scopes:
      - geographicRegions.read
  /securityProblems:
    get:
      operationId: getSecurityProblems
      parameters:
      - description: "The cursor for the next page of results. You can find it in\
          \ the **nextPageKey** field of the previous response. \n\nThe first page\
          \ is always returned if you don't specify the **nextPageKey** query parameter.\
          \ \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must\
          \ omit all other query parameters. "
        explode: true
        in: query
        name: nextPageKey
        required: false
        schema:
          type: string
        style: form
      - description: "The amount of security problems in a single response payload.\
          \ \n\nThe maximal allowed page size is 500. \n\nIf not set, 100 is used."
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: "Defines the scope of the query. Only security problems matching\
          \ the specified criteria are included in the response.\n\nYou can add one\
          \ or more of the following criteria. Values are *not* case-sensitive and\
          \ the `EQUALS` operator is used unless otherwise specified.\n\n* Status:\
          \ `status(\"value\")`. Find the possible values in the description of the\
          \ **status** field of the response. If not set, all security problems are\
          \ returned.\n* Muted: `muted(\"value\")`. Possible values are `TRUE` or\
          \ `FALSE`.\n* Risk level: `riskLevel(\"value\")`. The Davis risk level.\
          \ Find the possible values in the description of the **riskLevel** field\
          \ of the response.\n* Minimum risk score: `minRiskScore(\"5.5\")`. The Davis\
          \ minimum risk score. The `GREATER THAN OR EQUAL TO` operator is used. Specify\
          \ a number between `1.0` and `10.0`.\n* Maximum risk score: `maxRiskScore(\"\
          5.5\")`. The Davis maximum risk score. The `LESS THAN` operator is used.\
          \ Specify a number between `1.0` and `10.0`.\n* Base risk level: `baseRiskLevel(\"\
          value\")`. The Base risk level from the CVSS. Find the possible values in\
          \ the description of the **riskLevel** field of the response.\n* Minimum\
          \ base risk score: `minBaseRiskScore(\"5.5\")`. The minimum base risk score\
          \ from the CVSS. The `GREATER THAN OR EQUAL TO` operator is used. Specify\
          \ a number between `1.0` and `10.0`.\n* Maximum base risk score: `maxBaseRiskScore(\"\
          5.5\")`. The maximum base risk score from the CVSS. The `LESS THAN` operator\
          \ is used. Specify a number between `1.0` and `10.0`.\n* External vulnerability\
          \ ID contains: `externalVulnerabilityIdContains(\"id-1\")`. The `CONTAINS`\
          \ operator is used. Maximum value length is 48 characters.\n* External vulnerability\
          \ ID: `externalVulnerabilityId(\"id-1\", \"id-2\")`. \n* CVE ID: `cveId(\"\
          id\")`.\n* Risk assessment `riskAssessment(\"value-1\", \"value-2\")` Possible\
          \ values are `EXPOSED`, `SENSITIVE`, `EXPLOIT`, `VULNERABLE_FUNCTION_IN_USE`\
          \ and `ACCURACY_REDUCED`.\n* Related host ID: `relatedHostIds(\"value-1\"\
          , \"value-2\")`. Specify Dynatrace entity IDs here.\n* Related host name:\
          \ `relatedHostNames(\"value-1\", \"value-2\")`. Values are case-sensitive.\n\
          * Related host name contains: `relatedHostNameContains(\"value-1\")`. The\
          \ `CONTAINS` operator is used.\n* Related Kubernetes cluster ID: `relatedKubernetesClusterIds(\"\
          value-1\", \"value-2\")`. Specify Dynatrace entity IDs here.\n* Related\
          \ Kubernetes cluster name: `relatedKubernetesClusterNames(\"value-1\", \"\
          value-2\")`. Values are case-sensitive.\n* Related Kubernetes cluster name\
          \ contains: `relatedKubernetesClusterNameContains(\"value-1\")`. The `CONTAINS`\
          \ operator is used.\n* Related Kubernetes workload ID: `relatedKubernetesWorkloadIds(\"\
          value-1\", \"value-2\")`. Specify Dynatrace entity IDs here.\n* Related\
          \ Kubernetes workload name: `relatedKubernetesWorkloadNames(\"value-1\"\
          , \"value-2\")`. Values are case-sensitive.\n* Related Kubernetes workload\
          \ name contains: `relatedKubernetesWorkloadNameContains(\"value-1\")`. The\
          \ `CONTAINS` operator is used.\n* Management zone ID: `managementZoneIds(\"\
          mzId-1\", \"mzId-2\")`.\n* Management zone name: `managementZones(\"name-1\"\
          , \"name-2\")`. Values are case-sensitive.\n* Affected process group instance\
          \ ID: `affectedPgiIds(\"pgiId-1\", \"pgiId-2\")`. Specify Dynatrace entity\
          \ IDs here.\n* Affected process group ID: `affectedPgIds(\"pgId-1\", \"\
          pgId-2\")`. Specify Dynatrace entity IDs here.\n* Affected process group\
          \ name: `affectedPgNames(\"name-1\", \"name-2\")`. Values are case-sensitive.\n\
          * Affected process group name contains: `affectedPgNameContains(\"name-1\"\
          )`. The `CONTAINS` operator is used.\n* Vulnerable component ID: `vulnerableComponentIds(\"\
          componentId-1\", \"componentId-2\")`. Specify component IDs here.\n* Vulnerable\
          \ component name: `vulnerableComponentNames(\"name-1\", \"name-2\")`. Values\
          \ are case-sensitive.\n* Vulnerable component name contains: `vulnerableComponentNameContains(\"\
          name-1\")`. The `CONTAINS` operator is used.\n* Host tags: `hostTags(\"\
          hostTag-1\")`. The `CONTAINS` operator is used. Maximum value length is\
          \ 48 characters.\n* Process group tags: `pgTags(\"pgTag-1\")`. The `CONTAINS`\
          \ operator is used. Maximum value length is 48 characters.\n* Process group\
          \ instance tags: `pgiTags(\"pgiTag-1\")`. The `CONTAINS` operator is used.\
          \ Maximum value length is 48 characters.\n* Tags: `tags(\"tag-1\")`. The\
          \ `CONTAINS` operator is used. This selector picks hosts, process groups,\
          \ and process group instances at the same time. Maximum value length is\
          \ 48 characters.\n* Display ID: `displayIds(\"S-1234\", \"S-5678\")`. The\
          \ `EQUALS` operator is used.\n* Security problem ID: `securityProblemIds(\"\
          12544152654387159360\", \"5904857564184044850\")`. The `EQUALS` operator\
          \ is used.\n* Technology: `technology(\"technology-1\", \"technology-2\"\
          )`. Find the possible values in the description of the **technology** field\
          \ of the response. The `EQUALS` operator is used.\n* Vulnerability type:\
          \ `vulnerabilityType(\"type-1\", \"type-2\")`. Possible values are `THIRD_PARTY`,\
          \ `CODE_LEVEL`, `RUNTIME`.\n\nRisk score and risk category are mutually\
          \ exclusive (cannot be used at the same time).\n\nTo set several criteria,\
          \ separate them with a comma (`,`). Only results matching **all** criteria\
          \ are included in the response.\n\nSpecify the value of a criterion as a\
          \ quoted string. The following special characters must be escaped with a\
          \ tilde (`~`) inside quotes:\n* Tilde `~` \n* Quote `\"`"
        explode: true
        in: query
        name: securityProblemSelector
        required: false
        schema:
          type: string
        style: form
      - description: "Specifies one or more fields for sorting the security problem\
          \ list. Multiple fields can be concatenated using a comma (`,`) as a separator\
          \ (e.g. `+status,-timestamp`).\n\nYou can sort by the following properties\
          \ with a sign prefix for the sorting order. \n\n* `status`: The security\
          \ problem status (`+` open first or `-` resolved first) \n* `muted`: The\
          \ security problem mute state (`+` unmuted first or `-` muted first) \n\
          * `technology`: The security problem technology \n* `firstSeenTimestamp`:\
          \ The timestamp of the first occurrence of the security problem (`+` new\
          \ problems first or `-` old problems first) \n* `lastUpdatedTimestamp`:\
          \ The timestamp of the last update of the security problem (`+` recently\
          \ updated problems first or `-`  earlier updated problems first)\n* `securityProblemId`:\
          \ The auto-generated ID of the security problem (`+` lower number first\
          \ or `-` higher number first) \n* `externalVulnerabilityId`: The ID of the\
          \ external vulnerability (`+` lower number first or `-` higher number first)\
          \ \n* `displayId`: The display ID (`+` lower number first or `-` higher\
          \ number first) \n* `riskAssessment.riskScore`: The Davis security score\
          \ (`+` lower score first or `-` higher score first) \n* `riskAssessment.riskLevel`:\
          \ The Davis security level (`+` lower level first or `-` higher level first)\
          \ \n* `riskAssessment.exposure`: Whether the problem is exposed to the internet\
          \ \n* `riskAssessment.dataAssets`: Whether data assets are affected \n*\
          \ `riskAssessment.vulnerableFunctionUsage`: Whether vulnerable functions\
          \ are used \n* `riskAssessment.assessmentAccuracy`: The assessments accuracy\
          \ (`+` less accuracy first or `-` more accuracy first) \n* `globalCounts.affectedNodes`:\
          \ Number of affected nodes (`+` lower number first or `-` higher number\
          \ first) \n* `globalCounts.affectedProcessGroupInstances`: Number of affected\
          \ process group instances (`+` lower number first or `-` higher number first)\
          \ \n* `globalCounts.affectedProcessGroups`: Number of affected process groups\
          \ (`+` lower number first or `-` higher number first) \n* `globalCounts.exposedProcessGroups`:\
          \ Number of exposed process groups (`+` lower number first or `-` higher\
          \ number first) \n* `globalCounts.reachableDataAssets`: Number of reachable\
          \ data assets (`+` lower number first or `-` higher number first) \n* `globalCounts.relatedApplications`:\
          \ Number of related applications (`+` lower number first or `-` higher number\
          \ first) \n* `globalCounts.relatedAttacks`: Number of attacks on the security\
          \ problem (`+` lower number first or `-` higher number first) \n* `globalCounts.relatedHosts`:\
          \ Number of related hosts (`+` lower number first or `-` higher number first)\
          \ \n* `globalCounts.relatedKubernetesClusters`: Number of related Kubernetes\
          \ cluster (`+` lower number first or `-` higher number first) \n* `globalCounts.relatedKubernetesWorkloads`:\
          \ Number of related Kubernetes workloads (`+` lower number first or `-`\
          \ higher number first) \n* `globalCounts.relatedServices`: Number of related\
          \ services (`+` lower number first or `-` higher number first) \n* `globalCounts.vulnerableComponents`:\
          \ Number of vulnerable components (`+` lower number first or `-` higher\
          \ number first) \n\nIf no prefix is set, `+` is used."
        explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      - description: |
          A list of additional security problem properties you can add to the response.

          The following properties are available (all other properties are always included and you can't remove them from the response):

          * `riskAssessment`: A risk assessment of the security problem.
          * `managementZones`: The management zone where the security problem occurred.
          * `codeLevelVulnerabilityDetails`: Details of the code-level vulnerability.
          * `globalCounts`: Globally calculated statistics about the security problem. No management zone information is taken into account.

          To add properties, specify them in a comma-separated list and prefix each property with a plus (for example, `+riskAssessment,+managementZones`).
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "The start of the requested timeframe. \n\nYou can use one of\
          \ the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable\
          \ format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified,\
          \ UTC is used. You can use a space character instead of the `T`. Seconds\
          \ and fractions of a second are optional. \n* Relative timeframe, back from\
          \ now. The format is `now-NU/A`, where `N` is the amount of time, `U` is\
          \ the unit of time, and `A` is an alignment. The alignment rounds all the\
          \ smaller values to the nearest zero in the past. For example, `now-1y/w`\
          \ is one year back, aligned by a week. \nYou can also specify relative timeframe\
          \ without an alignment: `now-NU`. \nSupported time units for the relative\
          \ timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days\
          \ \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set,\
          \ the relative timeframe of thirty days is used (`now-30d`)."
        explode: true
        in: query
        name: from
        required: false
        schema:
          type: string
        style: form
      - description: "The end of the requested timeframe. \n\nYou can use one of the\
          \ following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable\
          \ format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified,\
          \ UTC is used. You can use a space character instead of the `T`. Seconds\
          \ and fractions of a second are optional. \n* Relative timeframe, back from\
          \ now. The format is `now-NU/A`, where `N` is the amount of time, `U` is\
          \ the unit of time, and `A` is an alignment. The alignment rounds all the\
          \ smaller values to the nearest zero in the past. For example, `now-1y/w`\
          \ is one year back, aligned by a week. \nYou can also specify relative timeframe\
          \ without an alignment: `now-NU`. \nSupported time units for the relative\
          \ timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days\
          \ \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set,\
          \ the current timestamp is used.\n\nThe end of the timeframe must not be\
          \ older than 365 days."
        explode: true
        in: query
        name: to
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/SecurityProblemList'
          description: Success. The response contains the list of security problems.
      security:
      - Api-Token: []
      summary: Lists all security problems
      tags:
      - Security problems
      x-allow-access-with-management-zone-permissions: true
      x-permissions:
      - environment:roles:manage-security-problems
      - environment:roles:view-security-problems
      x-supports-personal-access-token: true
      x-token-scopes:
      - securityProblems.read
  /securityProblems/mute:
    post:
      operationId: bulkMuteSecurityProblems
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/SecurityProblemsBulkMute'
        description: The JSON body of the request. Contains the muting information.
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/SecurityProblemsBulkMuteResponse'
          description: Success. The security problem(s) have been muted.
      security:
      - Api-Token: []
      summary: Mutes several security problems
      tags:
      - Security problems
      x-permissions:
      - environment:roles:manage-security-problems
      x-supports-personal-access-token: true
      x-token-scopes:
      - securityProblems.write
  /securityProblems/unmute:
    post:
      operationId: bulkUnmuteSecurityProblems
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/SecurityProblemsBulkUnmute'
        description: The JSON body of the request. Contains the un-muting information.
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/SecurityProblemsBulkUnmuteResponse'
          description: Success. The security problem(s) have been un-muted.
      security:
      - Api-Token: []
      summary: Un-mutes several security problems
      tags:
      - Security problems
      x-permissions:
      - environment:roles:manage-security-problems
      x-supports-personal-access-token: true
      x-token-scopes:
      - securityProblems.write
  /securityProblems/{id}:
    get:
      operationId: getSecurityProblem
      parameters:
      - description: The ID of the required security problem.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: "A list of additional security problem properties you can add\
          \ to the response.\n\nThe following properties are available (all other\
          \ properties are always included and you can't remove them from the response):\n\
          \n* `riskAssessment`: A risk assessment of the security problem.\n* `managementZones`:\
          \ The management zone where the security problem occurred.\n* `codeLevelVulnerabilityDetails`:\
          \ Details of the code-level vulnerability.\n* `globalCounts`: Globally calculated\
          \ statistics about the security problem. No management zone information\
          \ is taken into account.\n* `filteredCounts`: Statistics about the security\
          \ problem, filtered by the management zone and timeframe start ('from')\
          \ query parameters. \n* `description`: The description of the vulnerability.\n\
          * `events`: The security problem's last 10 events within the last 365 days,\
          \ sorted from newest to oldest.\n* `vulnerableComponents`: A list of vulnerable\
          \ components of the security problem within the provided filter range. \n\
          * `affectedEntities`: A list of affected entities of the security problem\
          \ within the provided filter range. \n* `exposedEntities`: A list of exposed\
          \ entities of the security problem within the provided filter range. \n\
          * `reachableDataAssets`: A list of data assets reachable by affected entities\
          \ of the security problem within the provided filter range. \n* `relatedEntities`:\
          \ A list of related entities of the security problem within the provided\
          \ filter range. \n* `relatedContainerImages`: A list of related container\
          \ images of the security problem within the provided filter range. \n* `relatedAttacks`:\
          \ A list of attacks detected on the exposed security problem. \n* `entryPoints`:\
          \ A list of entry points and a flag which indicates whether this list was\
          \ truncated or not.\n\nTo add properties, specify them in a comma-separated\
          \ list and prefix each property with a plus (for example, `+riskAssessment,+managementZones`).\n"
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "Based on the timeframe start the affected-, related- and vulnerable\
          \ entities are being calculated.\nYou can use one of the following formats:\
          \ \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`.\
          \ If no time zone is specified, UTC is used. You can use a space character\
          \ instead of the `T`. Seconds and fractions of a second are optional. \n\
          * Relative timeframe, back from now. The format is `now-NU/A`, where `N`\
          \ is the amount of time, `U` is the unit of time, and `A` is an alignment.\
          \ The alignment rounds all the smaller values to the nearest zero in the\
          \ past. For example, `now-1y/w` is one year back, aligned by a week. \n\
          You can also specify relative timeframe without an alignment: `now-NU`.\
          \ \nSupported time units for the relative timeframe are: \n   * `m`: minutes\
          \ \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months\
          \ \n   * `y`: years \n\nIf not set, the default timeframe start of 24 hours\
          \ in the past is used (`now-24h`).\n\nThe timeframe start must not be older\
          \ than 365 days."
        explode: true
        in: query
        name: from
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/SecurityProblemDetails'
          description: Success. The response contains parameters of the security problem.
      security:
      - Api-Token: []
      summary: Gets parameters of a security problem
      tags:
      - Security problems
      x-allow-access-with-management-zone-permissions: true
      x-permissions:
      - environment:roles:manage-security-problems
      - environment:roles:view-security-problems
      x-supports-personal-access-token: true
      x-token-scopes:
      - securityProblems.read
  /securityProblems/{id}/events:
    get:
      operationId: getEventsForSecurityProblem
      parameters:
      - description: The ID of the required security problem.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: "The start of the requested timeframe. \n\nYou can use one of\
          \ the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable\
          \ format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified,\
          \ UTC is used. You can use a space character instead of the `T`. Seconds\
          \ and fractions of a second are optional. \n* Relative timeframe, back from\
          \ now. The format is `now-NU/A`, where `N` is the amount of time, `U` is\
          \ the unit of time, and `A` is an alignment. The alignment rounds all the\
          \ smaller values to the nearest zero in the past. For example, `now-1y/w`\
          \ is one year back, aligned by a week. \nYou can also specify relative timeframe\
          \ without an alignment: `now-NU`. \nSupported time units for the relative\
          \ timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days\
          \ \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set,\
          \ the relative timeframe of thirty days is used (`now-30d`)."
        explode: true
        in: query
        name: from
        required: false
        schema:
          type: string
        style: form
      - description: "The end of the requested timeframe. \n\nYou can use one of the\
          \ following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable\
          \ format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified,\
          \ UTC is used. You can use a space character instead of the `T`. Seconds\
          \ and fractions of a second are optional. \n* Relative timeframe, back from\
          \ now. The format is `now-NU/A`, where `N` is the amount of time, `U` is\
          \ the unit of time, and `A` is an alignment. The alignment rounds all the\
          \ smaller values to the nearest zero in the past. For example, `now-1y/w`\
          \ is one year back, aligned by a week. \nYou can also specify relative timeframe\
          \ without an alignment: `now-NU`. \nSupported time units for the relative\
          \ timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days\
          \ \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set,\
          \ the current timestamp is used."
        explode: true
        in: query
        name: to
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/SecurityProblemEventsList'
          description: Success. The response contains the list of security problem
            events.
      security:
      - Api-Token: []
      summary: Lists all events of a security problem
      tags:
      - Security problems
      x-allow-access-with-management-zone-permissions: true
      x-permissions:
      - environment:roles:manage-security-problems
      - environment:roles:view-security-problems
      x-supports-personal-access-token: true
      x-token-scopes:
      - securityProblems.read
  /securityProblems/{id}/mute:
    post:
      operationId: muteSecurityProblem
      parameters:
      - description: The ID of the required security problem.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/SecurityProblemMute'
        description: The JSON body of the request. Contains the muting information.
      responses:
        "200":
          description: Success. The security problem has been muted.
        "204":
          description: Not executed. The security problem is already muted.
      security:
      - Api-Token: []
      summary: Mutes a security problem
      tags:
      - Security problems
      x-permissions:
      - environment:roles:manage-security-problems
      x-supports-personal-access-token: true
      x-token-scopes:
      - securityProblems.write
  /securityProblems/{id}/remediationItems:
    get:
      operationId: getRemediationItems
      parameters:
      - description: The ID of the required third-party security problem.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: "Defines the scope of the query. Only remediable entities matching\
          \ the specified criteria are included in the response.\n\nYou can add one\
          \ or more of the following criteria. Values are *not* case-sensitive and\
          \ the `EQUALS` operator is used unless otherwise specified.\n\n* Vulnerability\
          \ state: `vulnerabilityState(\"value\")`. Find the possible values in the\
          \ description of the **vulnerabilityState** field of the response. If not\
          \ set, all entities are returned.\n* Muted: `muted(\"value\")`. Possible\
          \ values are `TRUE` or `FALSE`.\n* Reachable data asset assessment: `assessment.dataAssets(\"\
          value\")` Possible values are `REACHABLE`, and `NOT_DETECTED`.\n* Network\
          \ exposure assessment: `assessment.exposure(\"value\")` Possible values\
          \ are `PUBLIC_NETWORK`, and `NOT_DETECTED`.\n* Vulnerable function usage\
          \ assessment: `assessment.vulnerableFunctionUsage(\"value\")` Possible values\
          \ are `IN_USE`, and `NOT_IN_USE`.\n* Vulnerable function in use contains:\
          \ `assessment.vulnerableFunctionInUseContains(\"value\")`. Possible values\
          \ are `class::function`, `class::` and `function`. The `CONTAINS` operator\
          \ is used. Only vulnerable functions in use are considered.\n* Assessment\
          \ accuracy: `assessment.accuracy(\"value\")` Possible values are `FULL`\
          \ and `REDUCED`.\n* Entity name contains: `entityNameContains(\"value-1\"\
          )`. The `CONTAINS` operator is used.\n\nTo set several criteria, separate\
          \ them with a comma (`,`). Only results matching **all** criteria are included\
          \ in the response.\n\nSpecify the value of a criterion as a quoted string.\
          \ The following special characters must be escaped with a tilde (`~`) inside\
          \ quotes:\n* Tilde `~` \n* Quote `\"`"
        explode: true
        in: query
        name: remediationItemSelector
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/RemediationItemList'
          description: Success. The response contains the list of remediation items
            of a problem.
      security:
      - Api-Token: []
      summary: Lists remediation items of a third-party security problem
      tags:
      - Security problems
      x-allow-access-with-management-zone-permissions: true
      x-permissions:
      - environment:roles:manage-security-problems
      - environment:roles:view-security-problems
      x-supports-personal-access-token: true
      x-token-scopes:
      - securityProblems.read
  /securityProblems/{id}/remediationItems/mute:
    post:
      operationId: bulkMuteRemediationItems
      parameters:
      - description: The ID of the required third-party security problem.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/RemediationItemsBulkMute'
        description: The JSON body of the request. Contains the muting information.
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/RemediationItemsBulkMuteResponse'
          description: Success. The remediation item(s) have been muted.
      security:
      - Api-Token: []
      summary: Mutes several remediation items
      tags:
      - Security problems
      x-allow-access-with-management-zone-permissions: true
      x-permissions:
      - environment:roles:manage-security-problems
      x-supports-personal-access-token: true
      x-token-scopes:
      - securityProblems.write
  /securityProblems/{id}/remediationItems/unmute:
    post:
      operationId: bulkUnmuteRemediationItems
      parameters:
      - description: The ID of the required third-party security problem.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/RemediationItemsBulkUnmute'
        description: The JSON body of the request. Contains the un-muting information.
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/RemediationItemsBulkUnmuteResponse'
          description: 'Success. The remediation item(s) have been un-muted. '
      security:
      - Api-Token: []
      summary: Un-mutes several remediation items
      tags:
      - Security problems
      x-allow-access-with-management-zone-permissions: true
      x-permissions:
      - environment:roles:manage-security-problems
      x-supports-personal-access-token: true
      x-token-scopes:
      - securityProblems.write
  /securityProblems/{id}/remediationItems/{remediationItemId}:
    get:
      operationId: getRemediationItem
      parameters:
      - description: The ID of the required third-party security problem.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of the remediation item.
        explode: false
        in: path
        name: remediationItemId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/RemediationDetailsItem'
          description: Success. The response contains details of a single remediation
            item of a security problem.
      security:
      - Api-Token: []
      summary: Gets parameters of a remediation item of a security problem
      tags:
      - Security problems
      x-allow-access-with-management-zone-permissions: true
      x-permissions:
      - environment:roles:manage-security-problems
      - environment:roles:view-security-problems
      x-supports-personal-access-token: true
      x-token-scopes:
      - securityProblems.read
  /securityProblems/{id}/remediationItems/{remediationItemId}/muteState:
    put:
      operationId: setRemediationItemMuteState
      parameters:
      - description: The ID of the required third-party security problem.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of the remediation item.
        explode: false
        in: path
        name: remediationItemId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/RemediationItemMuteStateChange'
        description: The JSON body of the request. Contains the mute state information
          to be applied.
      responses:
        "200":
          description: Success. The requested mute state has been applied to the remediation
            item.
        "204":
          description: Not executed. The remediation item was previously put into
            the requested mute state by the same user with the same reason and comment.
      security:
      - Api-Token: []
      summary: Sets the mute state of a remediation item
      tags:
      - Security problems
      x-allow-access-with-management-zone-permissions: true
      x-permissions:
      - environment:roles:manage-security-problems
      x-supports-personal-access-token: true
      x-token-scopes:
      - securityProblems.write
  /securityProblems/{id}/remediationItems/{remediationItemId}/remediationProgressEntities:
    get:
      operationId: getRemediationProgressEntities
      parameters:
      - description: The ID of the required third-party security problem.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of the remediation item.
        explode: false
        in: path
        name: remediationItemId
        required: true
        schema:
          type: string
        style: simple
      - description: "Defines the scope of the query. Only remediation progress entities\
          \ matching the specified criteria are included in the response.\n\nYou can\
          \ add one or more of the following criteria. Values are *not* case-sensitive\
          \ and the `EQUALS` operator is used unless otherwise specified.\n\n* State:\
          \ `state(\"value\")`. Possible values the **state** field are `AFFECTED`\
          \ and `UNAFFECTED`. If not set, all entities are returned.\n* Vulnerable\
          \ function usage assessment: `assessment.vulnerableFunctionUsage(\"value\"\
          )` Possible values are `IN_USE`, and `NOT_IN_USE`.\n* Vulnerable function\
          \ in use contains: `assessment.vulnerableFunctionInUseContains(\"value\"\
          )`. Possible values are `class::function`, `class::` and `function`. The\
          \ `CONTAINS` operator is used. Only vulnerable functions in use are considered.\n\
          * Entity name contains: `entityNameContains(\"value-1\")`. The `CONTAINS`\
          \ operator is used.\n\nTo set several criteria, separate them with a comma\
          \ (`,`). Only results matching **all** criteria are included in the response.\n\
          \nSpecify the value of a criterion as a quoted string. The following special\
          \ characters must be escaped with a tilde (`~`) inside quotes:\n* Tilde\
          \ `~` \n* Quote `\"`"
        explode: true
        in: query
        name: remediationProgressEntitySelector
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/RemediationProgressEntityList'
          description: Success. The response contains a list of remediation progress
            entities of a remediation item of a security problem. The number of entities
            returned is limited.
      security:
      - Api-Token: []
      summary: Lists remediation progress entities
      tags:
      - Security problems
      x-allow-access-with-management-zone-permissions: true
      x-permissions:
      - environment:roles:manage-security-problems
      - environment:roles:view-security-problems
      x-supports-personal-access-token: true
      x-token-scopes:
      - securityProblems.read
  /securityProblems/{id}/unmute:
    post:
      operationId: unmuteSecurityProblem
      parameters:
      - description: The ID of the required security problem.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/SecurityProblemUnmute'
        description: The JSON body of the request. Contains the un-muting information.
      responses:
        "200":
          description: Success. The security problem has been un-muted.
        "204":
          description: Not executed. The security problem is already un-muted.
      security:
      - Api-Token: []
      summary: Un-mutes a security problem
      tags:
      - Security problems
      x-permissions:
      - environment:roles:manage-security-problems
      x-supports-personal-access-token: true
      x-token-scopes:
      - securityProblems.write
  /securityProblems/{id}/vulnerableFunctions:
    get:
      operationId: getVulnerableFunctions
      parameters:
      - description: The ID of the required third-party security problem.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: "Defines the scope of the query. Only vulnerable functions matching\
          \ the specified criteria are included in the response.\n\nYou can add the\
          \ following criteria. Values are *not* case sensitive and the `EQUALS` operator\
          \ is used unless otherwise specified.\n\n* Management zone ID: `managementZoneIds(\"\
          mzId-1\", \"mzId-2\")`.\n* Management zone name: `managementZones(\"name-1\"\
          , \"name-2\")`. Values are case sensitive.\n* Process group ID: `processGroupIds(\"\
          pgId-1\", \"pgId-2\")`. Specify Dynatrace entity IDs here.\n* Process group\
          \ name: `processGroupNames(\"name-1\", \"name-2\")`. Values are case sensitive.\n\
          * Process group name contains: `processGroupNameContains(\"name-1\")`. The\
          \ `CONTAINS` operator is used.\n\nSpecify the value of a criterion as a\
          \ quoted string. The following special characters must be escaped with a\
          \ tilde (`~`) inside quotes:\n* Tilde `~` \n* Quote `\"`"
        explode: true
        in: query
        name: vulnerableFunctionsSelector
        required: false
        schema:
          type: string
        style: form
      - description: |-
          Defines additional grouping types in which vulnerable functions should be displayed.

          You can add one of the following grouping types.

          * Process group: `PROCESS_GROUP`
        explode: true
        in: query
        name: groupBy
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/VulnerableFunctionsContainer'
          description: Success. The response contains the list of vulnerable functions.
      security:
      - Api-Token: []
      summary: Lists all vulnerable functions and their usage for a third-party security
        problem
      tags:
      - Security problems
      x-allow-access-with-management-zone-permissions: true
      x-permissions:
      - environment:roles:manage-security-problems
      - environment:roles:view-security-problems
      x-supports-personal-access-token: true
      x-token-scopes:
      - securityProblems.read
  /settings/effectiveValues:
    get:
      description: |-
        Lists effective settings values for selected schemas at a selected scope (or entity). This operation evaluates the hierarchy of persisted objects (see [/settings/objects](#/Settings%20-%20Objects/getSettingsObjects))

        It will always return a result for a schema/scope combination, even if the schema would not be relevant to the given scope/entity.

        If no object along the hierarchy is persisted, the default value as defined in the schema will be returned.
      operationId: getEffectiveSettingsValues
      parameters:
      - description: "A list of comma-separated schema IDs to which the requested\
          \ objects belong. \n\nOnly considered on load of the first page, when the\
          \ **nextPageKey** is not set."
        explode: true
        in: query
        name: schemaIds
        required: false
        schema:
          type: string
        style: form
      - description: "The scope that the requested objects target. \n\nThe selection\
          \ only matches objects directly targeting the specified scope. For example,\
          \ `environment` will not match objects that target a host within environment.\
          \ For more details, please see [Dynatrace Documentation](https://dt-url.net/ky03459).\
          \ \n\nTo load the first page, when the **nextPageKey** is not set, this\
          \ parameter is required. "
        explode: true
        in: query
        name: scope
        required: false
        schema:
          type: string
        style: form
      - description: "A list of fields to be included to the response. The provided\
          \ set of fields replaces the default set. \n\n Specify the required top-level\
          \ fields, separated by commas (for example, `origin,value`).\n\nSupported\
          \ fields: `summary`, `searchSummary`, `created`, `modified`, `createdBy`,\
          \ `modifiedBy`, `author`, `origin`, `schemaId`, `schemaVersion`, `value`,\
          \ `externalId`."
        explode: true
        in: query
        name: fields
        required: false
        schema:
          default: "origin,value"
          type: string
        style: form
      - description: "The cursor for the next page of results. You can find it in\
          \ the **nextPageKey** field of the previous response. \n\nThe first page\
          \ is always returned if you don't specify the **nextPageKey** query parameter.\
          \ \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must\
          \ omit all other query parameters. "
        explode: true
        in: query
        name: nextPageKey
        required: false
        schema:
          type: string
        style: form
      - description: "The amount of settings objects in a single response payload.\
          \ \n\nThe maximal allowed page size is 500. \n\nIf not set, 100 is used."
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          format: int64
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/EffectiveSettingsValuesList'
          description: Success
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The specified schema or scope is not found.
      security:
      - Api-Token: []
      summary: Lists effective settings values
      tags:
      - Settings - Objects
      x-allow-access-with-management-zone-permissions: true
      x-permissions:
      - environment:roles:manage-settings
      - settings:objects:read
      x-supports-personal-access-token: true
      x-token-scopes:
      - settings.read
  /settings/objects:
    get:
      description: |-
        Lists persisted settings objects for selected schemas at selected scopes (or entities).

        If nothing is persisted or if all persisted settings objects are not accessible due to missing permissions, no items will be returned.

        To query the effective values (including schema defaults) please see [/settings/effectiveValues](#/Settings%20-%20Objects/getEffectiveSettingsValues).
      operationId: getSettingsObjects
      parameters:
      - description: "A list of comma-separated schema IDs to which the requested\
          \ objects belong. \n\nTo load the first page, when the **nextPageKey** is\
          \ not set, either this parameter or **scopes** is required. \n\nTo load\
          \ all objects belonging to the given schema IDs leave the **scopes** parameter\
          \ empty."
        explode: true
        in: query
        name: schemaIds
        required: false
        schema:
          type: string
        style: form
      - description: "A list of comma-separated scopes, that the requested objects\
          \ target. \n\nThe selection only matches objects directly targeting the\
          \ specified scopes. For example, `environment` will not match objects that\
          \ target a host within environment. For more details, please see [Dynatrace\
          \ Documentation](https://dt-url.net/ky03459). \n\nTo load the first page,\
          \ when the **nextPageKey** is not set, either this parameter or **schemaIds**\
          \ is required. \n\nTo load all objects belonging to the given scopes leave\
          \ the **schemaIds** parameter empty."
        explode: true
        in: query
        name: scopes
        required: false
        schema:
          type: string
        style: form
      - description: "A list of comma-separated external IDs that the requested objects\
          \ have. \n\nEach external ID has a maximum length of 500 characters.\n\n\
          Only considered on load of the first page, when the **nextPageKey** is not\
          \ set."
        explode: true
        in: query
        name: externalIds
        required: false
        schema:
          type: string
        style: form
      - description: "A list of fields to be included to the response. The provided\
          \ set of fields replaces the default set. \n\n Specify the required top-level\
          \ fields, separated by commas (for example, `objectId,value`).\n\nSupported\
          \ fields: `objectId`, `summary`, `searchSummary`, `created`, `modified`,\
          \ `createdBy`, `modifiedBy`, `author`, `updateToken`, `scope`, `modificationInfo`,\
          \ `schemaId`, `schemaVersion`, `value`, `externalId`."
        explode: true
        in: query
        name: fields
        required: false
        schema:
          default: "objectId,value"
          type: string
        style: form
      - description: "The cursor for the next page of results. You can find it in\
          \ the **nextPageKey** field of the previous response. \n\nThe first page\
          \ is always returned if you don't specify the **nextPageKey** query parameter.\
          \ \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must\
          \ omit all other query parameters. "
        explode: true
        in: query
        name: nextPageKey
        required: false
        schema:
          type: string
        style: form
      - description: "The amount of settings objects in a single response payload.\
          \ \n\nThe maximal allowed page size is 500. \n\nIf not set, 100 is used."
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          format: int64
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ObjectsList'
          description: Success. Accessible objects returned.
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. Forbidden.
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The specified schema or scope is not found.
      security:
      - Api-Token: []
      summary: Lists persisted settings objects
      tags:
      - Settings - Objects
      x-allow-access-with-management-zone-permissions: true
      x-permissions:
      - environment:roles:manage-settings
      - settings:objects:read
      x-supports-personal-access-token: true
      x-token-scopes:
      - settings.read
    post:
      description: You can upload several objects at once. In that case each object
        returns its own response code. Check the response body for details.
      operationId: postSettingsObjects
      parameters:
      - description: "If `true`, the request runs only validation of the submitted\
          \ settings objects, without saving them."
        explode: true
        in: query
        name: validateOnly
        required: false
        schema:
          default: false
          type: boolean
        style: form
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              items:
                $ref: '#/components/schemas/SettingsObjectCreate'
              type: array
        description: The JSON body of the request. Contains the settings objects.
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                items:
                  $ref: '#/components/schemas/SettingsObjectResponse'
                type: array
          description: Success
        "207":
          content:
            application/json; charset=utf-8:
              schema:
                items:
                  $ref: '#/components/schemas/SettingsObjectResponse'
                type: array
          description: "Multi-status: different objects in the payload resulted in\
            \ different statuses."
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                items:
                  $ref: '#/components/schemas/SettingsObjectResponse'
                type: array
          description: Failed. Schema validation failed.
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. Forbidden.
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                items:
                  $ref: '#/components/schemas/SettingsObjectResponse'
                type: array
          description: Failed. The requested resource doesn't exist.
        "409":
          content:
            application/json; charset=utf-8:
              schema:
                items:
                  $ref: '#/components/schemas/SettingsObjectResponse'
                type: array
          description: Failed. Conflicting resource.
      security:
      - Api-Token: []
      summary: Creates a new settings object
      tags:
      - Settings - Objects
      x-allow-access-with-management-zone-permissions: true
      x-permissions:
      - environment:roles:manage-settings
      - settings:objects:write
      x-supports-personal-access-token: true
      x-token-scopes:
      - settings.write
  /settings/objects/{objectId}:
    delete:
      operationId: deleteSettingsObjectByObjectId
      parameters:
      - description: The ID of the required settings object.
        explode: false
        in: path
        name: objectId
        required: true
        schema:
          type: string
        style: simple
      - description: "The update token of the object. You can use it to detect simultaneous\
          \ modifications by different users. \n\nIt is generated upon retrieval (GET\
          \ requests). If set on update (PUT request) or deletion, the update/deletion\
          \ will be allowed only if there wasn't any change between the retrieval\
          \ and the update. \n\nIf omitted on update/deletion, the operation overrides\
          \ the current value or deletes it without any checks."
        explode: true
        in: query
        name: updateToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "204":
          description: Success. Response doesn't have a body.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/SettingsObjectResponse'
          description: Failed. Schema validation failed.
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. Forbidden.
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/SettingsObjectResponse'
          description: Failed. The requested resource doesn't exist.
        "409":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/SettingsObjectResponse'
          description: Failed. Conflicting resource.
      security:
      - Api-Token: []
      summary: Deletes the specified settings object
      tags:
      - Settings - Objects
      x-allow-access-with-management-zone-permissions: true
      x-permissions:
      - environment:roles:manage-settings
      - settings:objects:write
      x-supports-personal-access-token: true
      x-token-scopes:
      - settings.write
    get:
      operationId: getSettingsObjectByObjectId
      parameters:
      - description: The ID of the required settings object.
        explode: false
        in: path
        name: objectId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/SettingsObject'
          description: Success
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. Forbidden.
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: No object available for the given objectId
      security:
      - Api-Token: []
      summary: Gets the specified settings object
      tags:
      - Settings - Objects
      x-allow-access-with-management-zone-permissions: true
      x-permissions:
      - environment:roles:manage-settings
      - settings:objects:read
      x-supports-personal-access-token: true
      x-token-scopes:
      - settings.read
    put:
      description: "To update a property of the `secret` type you need to pass the\
        \ new value unmasked. To keep the current value, send the current masked secret.\
        \ You can obtain it via [GET an object](https://dt-url.net/kj036oj) endpoint.\
        \ \n\nSome schemas don't allow passing of the masked secret. In that case\
        \ you need to send the unmasked secret with every update of the object."
      operationId: putSettingsObjectByObjectId
      parameters:
      - description: The ID of the required settings object.
        explode: false
        in: path
        name: objectId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/SettingsObjectUpdate'
        description: The JSON body of the request. Contains updated parameters of
          the settings object.
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/SettingsObjectResponse'
          description: Success
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/SettingsObjectResponse'
          description: Failed. Schema validation failed.
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. Forbidden.
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/SettingsObjectResponse'
          description: Failed. The requested resource doesn't exist.
        "409":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/SettingsObjectResponse'
          description: Failed. Conflicting resource.
      security:
      - Api-Token: []
      summary: Updates an existing settings object
      tags:
      - Settings - Objects
      x-allow-access-with-management-zone-permissions: true
      x-permissions:
      - environment:roles:manage-settings
      - settings:objects:write
      x-supports-personal-access-token: true
      x-token-scopes:
      - settings.write
  /settings/schemas:
    get:
      operationId: getAvailableSchemaDefinitions
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/SchemaList'
          description: Success
      security:
      - Api-Token: []
      summary: Lists available settings schemas
      tags:
      - Settings - Schemas
      x-allow-access-with-management-zone-permissions: true
      x-permissions:
      - environment:roles:manage-settings
      - settings:schemas:read
      x-supports-personal-access-token: true
      x-token-scopes:
      - settings.read
  /settings/schemas/{schemaId}:
    get:
      operationId: getSchemaDefinition
      parameters:
      - description: The ID of the required schema.
        explode: false
        in: path
        name: schemaId
        required: true
        schema:
          type: string
        style: simple
      - description: "The version of the required schema. \n\n If not set, the most\
          \ recent version is returned."
        explode: true
        in: query
        name: schemaVersion
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/SchemaDefinitionRestDto'
          description: Success
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. Forbidden.
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The specified schema doesn't exist.
      security:
      - Api-Token: []
      summary: Gets parameters of the specified settings schema
      tags:
      - Settings - Schemas
      x-allow-access-with-management-zone-permissions: true
      x-permissions:
      - environment:roles:manage-settings
      - settings:schemas:read
      x-supports-personal-access-token: true
      x-token-scopes:
      - settings.read
  /slo:
    get:
      description: "By default the values are calculated for the SLO's own timeframe.\
        \ You can use a custom timeframe: \n\n1. Set the **timeFrame** parameter to\
        \ `GTF`. \n2. Provide the timeframe in **from** and **to** parameters."
      operationId: getSlo
      parameters:
      - description: "The cursor for the next page of results. You can find it in\
          \ the **nextPageKey** field of the previous response. \n\nThe first page\
          \ is always returned if you don't specify the **nextPageKey** query parameter.\
          \ \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must\
          \ omit all other query parameters. "
        explode: true
        in: query
        name: nextPageKey
        required: false
        schema:
          type: string
        style: form
      - description: "The amount of SLOs in a single response payload. \n\nThe maximal\
          \ allowed page size is 10000. \n\nIf not set, 10 is used."
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: "The start of the requested timeframe. \n\nYou can use one of\
          \ the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable\
          \ format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified,\
          \ UTC is used. You can use a space character instead of the `T`. Seconds\
          \ and fractions of a second are optional. \n* Relative timeframe, back from\
          \ now. The format is `now-NU/A`, where `N` is the amount of time, `U` is\
          \ the unit of time, and `A` is an alignment. The alignment rounds all the\
          \ smaller values to the nearest zero in the past. For example, `now-1y/w`\
          \ is one year back, aligned by a week. \nYou can also specify relative timeframe\
          \ without an alignment: `now-NU`. \nSupported time units for the relative\
          \ timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days\
          \ \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set,\
          \ the relative timeframe of two weeks is used (`now-2w`)."
        explode: true
        in: query
        name: from
        required: false
        schema:
          type: string
        style: form
      - description: "The end of the requested timeframe. \n\nYou can use one of the\
          \ following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable\
          \ format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified,\
          \ UTC is used. You can use a space character instead of the `T`. Seconds\
          \ and fractions of a second are optional. \n* Relative timeframe, back from\
          \ now. The format is `now-NU/A`, where `N` is the amount of time, `U` is\
          \ the unit of time, and `A` is an alignment. The alignment rounds all the\
          \ smaller values to the nearest zero in the past. For example, `now-1y/w`\
          \ is one year back, aligned by a week. \nYou can also specify relative timeframe\
          \ without an alignment: `now-NU`. \nSupported time units for the relative\
          \ timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days\
          \ \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set,\
          \ the current timestamp is used."
        explode: true
        in: query
        name: to
        required: false
        schema:
          type: string
        style: form
      - description: "The scope of the query. Only SLOs matching the provided criteria\
          \ are included in the response. \n\nYou can add one or several of the criteria\
          \ listed below.\n* SLO ID: `id(\"id-1\",\"id-2\")`.\n* Name: `name(\"name\"\
          )`. Filters for an SLO with the given name. The filter is case-sensitive.\n\
          * Health state: `healthState(\"HEALTHY\")` or `healthState(\"UNHEALTHY\"\
          )`. Filters for SLOs that have no related open problems (`HEALTHY`) or SLOs\
          \ that have related open problems (`UNHEALTHY`). You can specify only one\
          \ health state.\n* Text: `text(\"value\")`. Filters for all SLOs that contain\
          \ the given value in their name or description. The filter is case-insensitive.\n\
          * Problem: `problemDisplayName(\"value\")`. Filters for all SLOs that are\
          \ related to a given problem display name (e.g. P-12345).\n* Management\
          \ zone name: `managementZone(\"MZ-A\")`. Filters for all SLOs that are related\
          \ to the given management zone name.\n* Management zone ID: `managementZoneID(\"\
          123\")`. Filters for all SLOs that are related to the given management zone\
          \ ID.\n\nTo set several criteria, separate them with comma (`,`). Only SLOs\
          \ matching all criteria are included in the response. Examples:\n* .../api/v2/slo?sloSelector=name(\"\
          Service Availability\")\n* .../api/v2/slo?sloSelector=id(\"id\")\n* .../api/v2/slo?sloSelector=text(\"\
          Description\"),healthState(\"HEALTHY\").\n\nThe special characters `~` and\
          \ `\"` need to be escaped using a `~` (e.g. double quote search `text(\"\
          ~\"\")`)."
        explode: true
        in: query
        name: sloSelector
        required: false
        schema:
          default: ""
          type: string
        style: form
      - description: "The sorting of SLO entries: \n* `name`: Names in ascending order.\
          \ \n* `-name`: Names in descending order. \n\nIf not set, the ascending\
          \ order is used."
        explode: true
        in: query
        name: sort
        required: false
        schema:
          default: name
          type: string
        style: form
      - description: "The timeframe to calculate the SLO values: \n\n* `CURRENT`:\
          \ SLO's own timeframe. \n* `GTF`: timeframe specified by **from** and **to**\
          \ parameters. \n\nIf not set, the `CURRENT` value is used."
        explode: true
        in: query
        name: timeFrame
        required: false
        schema:
          default: CURRENT
          enum:
          - CURRENT
          - GTF
          type: string
        style: form
      - description: Get your SLOs (`false`) or a set of demo SLOs (`true`).
        explode: true
        in: query
        name: demo
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Get your SLOs without them being evaluated (`false`) or with
          evaluations (`true`) with maximum `pageSize` of 25.
        explode: true
        in: query
        name: evaluate
        required: false
        schema:
          default: "false"
          enum:
          - "true"
          - "false"
          type: string
        style: form
      - description: "Get your enabled SLOs (`true`), disabled ones (`false`) or both\
          \ enabled and disabled ones (`all`)."
        explode: true
        in: query
        name: enabledSlos
        required: false
        schema:
          default: "true"
          enum:
          - "true"
          - "false"
          - all
          type: string
        style: form
      - description: Get your global SLOs (`true`) regardless of the selected filter
          or filter them out (`false`).
        explode: true
        in: query
        name: showGlobalSlos
        required: false
        schema:
          default: true
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/SLOs'
          description: Success. The response contains the parameters and calculated
            values of the requested SLO.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid.
      security:
      - Api-Token: []
      summary: Lists all available SLOs along with calculated values
      tags:
      - Service-level objectives
      x-allow-access-with-management-zone-permissions: true
      x-permissions:
      - environment:roles:viewer
      x-supports-personal-access-token: true
      x-token-scopes:
      - slo.read
    post:
      operationId: createSlo
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/SloConfigItemDtoImpl'
        description: The JSON body of the request. Contains the parameters of the
          new SLO.
        required: true
      responses:
        "201":
          description: Success. The new SLO has been created. Response doesn't have
            a body. The **location** response header contains the ID of the new SLO.
          headers:
            location:
              description: The location of the new resource created by this request.
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid.
        "409":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. Conflicting resource.
        "500":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Internal server error.
      security:
      - Api-Token: []
      summary: Creates a new SLO
      tags:
      - Service-level objectives
      x-allow-access-with-management-zone-permissions: true
      x-permissions:
      - environment:roles:manage-settings
      x-supports-personal-access-token: true
      x-token-scopes:
      - slo.write
  /slo/{id}:
    delete:
      operationId: deleteSlo
      parameters:
      - description: The ID of the required SLO.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "204":
          description: Success. The SLO has been deleted. Response doesn't have a
            body.
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The requested resource doesn't exist.
        "409":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. Conflicting resource.
        "500":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Internal server error.
      security:
      - Api-Token: []
      summary: Deletes an SLO
      tags:
      - Service-level objectives
      x-allow-access-with-management-zone-permissions: true
      x-permissions:
      - environment:roles:manage-settings
      x-supports-personal-access-token: true
      x-token-scopes:
      - slo.write
    get:
      description: "If **from** and **to** parameters are provided, the SLO is calculated\
        \ for that timeframe; otherwise the SLO's own timeframe is used."
      operationId: getSloById
      parameters:
      - description: "The start of the requested timeframe. \n\nYou can use one of\
          \ the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable\
          \ format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified,\
          \ UTC is used. You can use a space character instead of the `T`. Seconds\
          \ and fractions of a second are optional. \n* Relative timeframe, back from\
          \ now. The format is `now-NU/A`, where `N` is the amount of time, `U` is\
          \ the unit of time, and `A` is an alignment. The alignment rounds all the\
          \ smaller values to the nearest zero in the past. For example, `now-1y/w`\
          \ is one year back, aligned by a week. \nYou can also specify relative timeframe\
          \ without an alignment: `now-NU`. \nSupported time units for the relative\
          \ timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days\
          \ \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set,\
          \ the relative timeframe of two weeks is used (`now-2w`)."
        explode: true
        in: query
        name: from
        required: false
        schema:
          type: string
        style: form
      - description: "The end of the requested timeframe. \n\nYou can use one of the\
          \ following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable\
          \ format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified,\
          \ UTC is used. You can use a space character instead of the `T`. Seconds\
          \ and fractions of a second are optional. \n* Relative timeframe, back from\
          \ now. The format is `now-NU/A`, where `N` is the amount of time, `U` is\
          \ the unit of time, and `A` is an alignment. The alignment rounds all the\
          \ smaller values to the nearest zero in the past. For example, `now-1y/w`\
          \ is one year back, aligned by a week. \nYou can also specify relative timeframe\
          \ without an alignment: `now-NU`. \nSupported time units for the relative\
          \ timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days\
          \ \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set,\
          \ the current timestamp is used."
        explode: true
        in: query
        name: to
        required: false
        schema:
          type: string
        style: form
      - description: The ID of the required SLO.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: "The timeframe to calculate the SLO values: \n\n* `CURRENT`:\
          \ SLO's own timeframe. \n* `GTF`: timeframe specified by **from** and **to**\
          \ parameters. \n\nIf not set, the `CURRENT` value is used."
        explode: true
        in: query
        name: timeFrame
        required: false
        schema:
          default: CURRENT
          enum:
          - CURRENT
          - GTF
          type: string
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/SLO'
          description: Success. The response contains the parameters and calculated
            values of the requested SLO.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid.
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The requested resource doesn't exist.
      security:
      - Api-Token: []
      summary: Gets parameters and calculated values of a specific SLO
      tags:
      - Service-level objectives
      x-allow-access-with-management-zone-permissions: true
      x-permissions:
      - environment:roles:viewer
      x-supports-personal-access-token: true
      x-token-scopes:
      - slo.read
    put:
      operationId: updateSloById
      parameters:
      - description: The ID of the required SLO.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/SloConfigItemDtoImpl'
        description: The JSON body of the request. Contains the updated parameters
          of the SLO.
        required: true
      responses:
        "200":
          description: Success
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid.
        "404":
          description: Failed. The requested resource doesn't exist.
        "500":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Internal server error.
      security:
      - Api-Token: []
      summary: Updates an existing SLO
      tags:
      - Service-level objectives
      x-allow-access-with-management-zone-permissions: true
      x-permissions:
      - environment:roles:manage-settings
      x-supports-personal-access-token: true
      x-token-scopes:
      - slo.write
  /slo/{id}/alert:
    post:
      operationId: createAlert
      parameters:
      - description: "The start of the requested timeframe. \n\nYou can use one of\
          \ the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable\
          \ format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified,\
          \ UTC is used. You can use a space character instead of the `T`. Seconds\
          \ and fractions of a second are optional. \n* Relative timeframe, back from\
          \ now. The format is `now-NU/A`, where `N` is the amount of time, `U` is\
          \ the unit of time, and `A` is an alignment. The alignment rounds all the\
          \ smaller values to the nearest zero in the past. For example, `now-1y/w`\
          \ is one year back, aligned by a week. \nYou can also specify relative timeframe\
          \ without an alignment: `now-NU`. \nSupported time units for the relative\
          \ timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days\
          \ \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set,\
          \ the relative timeframe of two weeks is used (`now-2w`)."
        explode: true
        in: query
        name: from
        required: false
        schema:
          type: string
        style: form
      - description: "The end of the requested timeframe. \n\nYou can use one of the\
          \ following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable\
          \ format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified,\
          \ UTC is used. You can use a space character instead of the `T`. Seconds\
          \ and fractions of a second are optional. \n* Relative timeframe, back from\
          \ now. The format is `now-NU/A`, where `N` is the amount of time, `U` is\
          \ the unit of time, and `A` is an alignment. The alignment rounds all the\
          \ smaller values to the nearest zero in the past. For example, `now-1y/w`\
          \ is one year back, aligned by a week. \nYou can also specify relative timeframe\
          \ without an alignment: `now-NU`. \nSupported time units for the relative\
          \ timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days\
          \ \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set,\
          \ the current timestamp is used."
        explode: true
        in: query
        name: to
        required: false
        schema:
          type: string
        style: form
      - description: "The timeframe to calculate the SLO values: \n\n* `CURRENT`:\
          \ SLO's own timeframe. \n* `GTF`: timeframe specified by **from** and **to**\
          \ parameters. \n\nIf not set, the `CURRENT` value is used."
        explode: true
        in: query
        name: timeFrame
        required: false
        schema:
          default: CURRENT
          enum:
          - CURRENT
          - GTF
          type: string
        style: form
      - description: The ID of the required SLO.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/AbstractSloAlertDto'
        description: The JSON body of the request. Contains the parameters of the
          new SLO alert.
        required: true
      responses:
        "201":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/EntityShortRepresentation'
          description: Success. The new alert has been created. The response contains
            the parameters of the new alert. The **location** response header contains
            the ID of the new alert.
          headers:
            location:
              description: The location of the new resource created by this request.
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The input is invalid.
        "404":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. The requested resource doesn't exist.
        "412":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Precondition for creating an SLO alert not fulfilled. The SLO
            func metric cannot be created or is not created by the SLO.
        "500":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Internal server error.
      security:
      - Api-Token: []
      summary: Creates an alert of the provided alert type for an SLO
      tags:
      - Service-level objectives
      x-allow-access-with-management-zone-permissions: true
      x-permissions:
      - environment:roles:manage-settings
      x-supports-personal-access-token: true
      x-token-scopes:
      - slo.write
  /synthetic/config:
    get:
      operationId: getConfiguration
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/SyntheticConfigDto'
          description: Success. The response contains synthetic related parameters
            defined for whole tenant.
      security:
      - Api-Token: []
      summary: Gets set of synthetic related parameters defined for whole tenant (affects
        all monitors and all private locations). | maturity=EARLY_ADOPTER
      tags:
      - "Synthetic - Locations, nodes, and configuration"
      x-maturity: EARLY_ADOPTER
      x-token-scopes:
      - syntheticLocations.read
    put:
      operationId: updateConfiguration
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/SyntheticConfigDto'
      responses:
        "204":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/SyntheticConfigDto'
          description: Success. The set of synthetic related parameters has been updated.
            Response doesn't have a body.
      security:
      - Api-Token: []
      summary: Updates set of synthetic related parameters defined for whole tenant
        (affects all monitors and all private locations). | maturity=EARLY_ADOPTER
      tags:
      - "Synthetic - Locations, nodes, and configuration"
      x-maturity: EARLY_ADOPTER
      x-token-scopes:
      - syntheticLocations.write
  /synthetic/execution/{monitorId}/{resultType}:
    get:
      operationId: getExecutionResult
      parameters:
      - description: Identifier of the HTTP monitor for which last execution result
          is returned.
        explode: false
        in: path
        name: monitorId
        required: true
        schema:
          type: string
        style: simple
      - description: Defines the result type of the last HTTP monitor's execution.
        explode: false
        in: path
        name: resultType
        required: true
        schema:
          enum:
          - SUCCESS
          - FAILED
          type: string
        style: simple
      - description: Filters the results to those executed by specified Synthetic
          location. Specify the ID of the location.
        explode: true
        in: query
        name: locationId
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/MonitorExecutionResults'
          description: Success. The response contains detailed data.
      security:
      - Api-Token: []
      summary: Gets detailed information about the last execution of the specified
        HTTP monitor
      tags:
      - Synthetic - HTTP monitor executions
      x-token-scopes:
      - DataExport
      - ExternalSyntheticIntegration
      - ReadSyntheticData
  /synthetic/executions:
    get:
      operationId: getExecutions
      parameters:
      - description: Filters the resulting set of executions by their stage.
        explode: true
        in: query
        name: executionStage
        required: false
        schema:
          enum:
          - TRIGGERED
          - EXECUTED
          - DATA_RETRIEVED
          type: string
        style: form
      - description: "The start of the requested timeframe for scheduling timestamps.\
          \ \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds.\
          \ \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time\
          \ zone is specified, UTC is used. You can use a space character instead\
          \ of the `T`. Seconds and fractions of a second are optional. \n* Relative\
          \ timeframe, back from now. The format is `now-NU/A`, where `N` is the amount\
          \ of time, `U` is the unit of time, and `A` is an alignment. The alignment\
          \ rounds all the smaller values to the nearest zero in the past. For example,\
          \ `now-1y/w` is one year back, aligned by a week. \nYou can also specify\
          \ relative timeframe without an alignment: `now-NU`. \nSupported time units\
          \ for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours\
          \ \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years\
          \ \n\nIf not set, the maximum relative timeframe of six hours is used (`now-6h`)."
        explode: true
        in: query
        name: schedulingFrom
        required: false
        schema:
          type: string
        style: form
      - description: "The end of the requested timeframe for scheduling timestamps.\
          \ \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds.\
          \ \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time\
          \ zone is specified, UTC is used. You can use a space character instead\
          \ of the `T`. Seconds and fractions of a second are optional. \n* Relative\
          \ timeframe, back from now. The format is `now-NU/A`, where `N` is the amount\
          \ of time, `U` is the unit of time, and `A` is an alignment. The alignment\
          \ rounds all the smaller values to the nearest zero in the past. For example,\
          \ `now-1y/w` is one year back, aligned by a week. \nYou can also specify\
          \ relative timeframe without an alignment: `now-NU`. \nSupported time units\
          \ for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours\
          \ \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years\
          \ \n\nIf not set, the current timestamp is used."
        explode: true
        in: query
        name: schedulingTo
        required: false
        schema:
          type: string
        style: form
      - description: "The start of the requested timeframe for execution timestamps.\
          \ \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds.\
          \ \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time\
          \ zone is specified, UTC is used. You can use a space character instead\
          \ of the `T`. Seconds and fractions of a second are optional. \n* Relative\
          \ timeframe, back from now. The format is `now-NU/A`, where `N` is the amount\
          \ of time, `U` is the unit of time, and `A` is an alignment. The alignment\
          \ rounds all the smaller values to the nearest zero in the past. For example,\
          \ `now-1y/w` is one year back, aligned by a week. \nYou can also specify\
          \ relative timeframe without an alignment: `now-NU`. \nSupported time units\
          \ for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours\
          \ \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years\
          \ \n\nIf not set, the maximum relative timeframe of six hours is used (`now-6h`)."
        explode: true
        in: query
        name: executionFrom
        required: false
        schema:
          type: string
        style: form
      - description: "The end of the requested timeframe for execution timestamps.\
          \ \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds.\
          \ \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time\
          \ zone is specified, UTC is used. You can use a space character instead\
          \ of the `T`. Seconds and fractions of a second are optional. \n* Relative\
          \ timeframe, back from now. The format is `now-NU/A`, where `N` is the amount\
          \ of time, `U` is the unit of time, and `A` is an alignment. The alignment\
          \ rounds all the smaller values to the nearest zero in the past. For example,\
          \ `now-1y/w` is one year back, aligned by a week. \nYou can also specify\
          \ relative timeframe without an alignment: `now-NU`. \nSupported time units\
          \ for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours\
          \ \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years\
          \ \n\nIf not set, the current timestamp is used."
        explode: true
        in: query
        name: executionTo
        required: false
        schema:
          type: string
        style: form
      - description: "The start of the requested timeframe for data delivering timestamps.\
          \ \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds.\
          \ \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time\
          \ zone is specified, UTC is used. You can use a space character instead\
          \ of the `T`. Seconds and fractions of a second are optional. \n* Relative\
          \ timeframe, back from now. The format is `now-NU/A`, where `N` is the amount\
          \ of time, `U` is the unit of time, and `A` is an alignment. The alignment\
          \ rounds all the smaller values to the nearest zero in the past. For example,\
          \ `now-1y/w` is one year back, aligned by a week. \nYou can also specify\
          \ relative timeframe without an alignment: `now-NU`. \nSupported time units\
          \ for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours\
          \ \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years\
          \ \n\nIf not set, the maximum relative timeframe of six hours is used (`now-6h`)."
        explode: true
        in: query
        name: dataDeliveryFrom
        required: false
        schema:
          type: string
        style: form
      - description: "The end of the requested timeframe for data delivering timestamps.\
          \ \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds.\
          \ \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time\
          \ zone is specified, UTC is used. You can use a space character instead\
          \ of the `T`. Seconds and fractions of a second are optional. \n* Relative\
          \ timeframe, back from now. The format is `now-NU/A`, where `N` is the amount\
          \ of time, `U` is the unit of time, and `A` is an alignment. The alignment\
          \ rounds all the smaller values to the nearest zero in the past. For example,\
          \ `now-1y/w` is one year back, aligned by a week. \nYou can also specify\
          \ relative timeframe without an alignment: `now-NU`. \nSupported time units\
          \ for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours\
          \ \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years\
          \ \n\nIf not set, the current timestamp is used."
        explode: true
        in: query
        name: dataDeliveryTo
        required: false
        schema:
          type: string
        style: form
      - description: Filters the resulting set of the executions by batch. Specify
          the ID of the batch.
        explode: true
        in: query
        name: batchId
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: Filters the resulting set of the executions by monitor synthetic
          monitor. Specify the ID of the monitor.
        explode: true
        in: query
        name: monitorId
        required: false
        schema:
          type: string
        style: form
      - description: Filters the resulting set of the executions by Synthetic location.
          Specify the ID of the location.
        explode: true
        in: query
        name: locationId
        required: false
        schema:
          type: string
        style: form
      - description: Filters the resulting set of executions by scheduled user.
        explode: true
        in: query
        name: userId
        required: false
        schema:
          type: string
        style: form
      - description: Filters the resulting set of the executions by the source of
          the triggering request.
        explode: true
        in: query
        name: source
        required: false
        schema:
          enum:
          - API
          - UI
          type: string
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/SyntheticOnDemandExecutions'
          description: Success
      security:
      - Api-Token: []
      summary: Gets the list of all on-demand executions of synthetic monitors
      tags:
      - Synthetic - On-demand monitor executions
      x-token-scopes:
      - syntheticExecutions.read
      - ExternalSyntheticIntegration
      - ReadSyntheticData
  /synthetic/executions/batch:
    post:
      operationId: execute
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/SyntheticOnDemandExecutionRequest'
        description: The JSON body of the request. Contains the parameters of the
          triggered on-demand execution.
      responses:
        "201":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/SyntheticOnDemandExecutionResult'
          description: Success. The monitor's execution response details
      security:
      - Api-Token: []
      summary: Triggers on-demand executions for synthetic monitors
      tags:
      - Synthetic - On-demand monitor executions
      x-token-scopes:
      - syntheticExecutions.write
      - ExternalSyntheticIntegration
  /synthetic/executions/batch/{batchId}:
    get:
      operationId: getBatch
      parameters:
      - description: The batch identifier of the executions.
        explode: false
        in: path
        name: batchId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/SyntheticOnDemandBatchStatus'
          description: Success
      security:
      - Api-Token: []
      summary: Gets summary information and the list of failed executions for the
        given batch ID
      tags:
      - Synthetic - On-demand monitor executions
      x-token-scopes:
      - syntheticExecutions.read
      - ExternalSyntheticIntegration
      - ReadSyntheticData
  /synthetic/executions/{executionId}:
    get:
      operationId: getExecution
      parameters:
      - description: The identifier of the on-demand execution.
        explode: false
        in: path
        name: executionId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/SyntheticOnDemandExecution'
          description: Success. The response contains basic information about the
            on-demand execution.
      security:
      - Api-Token: []
      summary: Gets basic results of the specified on-demand execution
      tags:
      - Synthetic - On-demand monitor executions
      x-token-scopes:
      - syntheticExecutions.read
      - ExternalSyntheticIntegration
      - ReadSyntheticData
  /synthetic/executions/{executionId}/fullReport:
    get:
      operationId: getExecutionFullReport
      parameters:
      - description: The identifier of the on-demand execution.
        explode: false
        in: path
        name: executionId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/SyntheticOnDemandExecution'
          description: Success. The response contains detailed information about the
            on-demand execution.
      security:
      - Api-Token: []
      summary: Gets detailed results of the specified on-demand execution
      tags:
      - Synthetic - On-demand monitor executions
      x-token-scopes:
      - syntheticExecutions.read
      - ExternalSyntheticIntegration
      - ReadSyntheticData
  /synthetic/locations:
    get:
      operationId: getLocations
      parameters:
      - description: Filters the resulting set of locations to those which are hosted
          on a specific cloud platform.
        explode: true
        in: query
        name: cloudPlatform
        required: false
        schema:
          enum:
          - AWS
          - AZURE
          - ALIBABA
          - GOOGLE_CLOUD
          - OTHER
          type: string
        style: form
      - description: Filters the resulting set of locations to those of a specific
          type.
        explode: true
        in: query
        name: type
        required: false
        schema:
          enum:
          - PUBLIC
          - PRIVATE
          type: string
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/SyntheticLocations'
          description: Success
      security:
      - Api-Token: []
      summary: Lists all synthetic locations (both public and private) available for
        your environment
      tags:
      - "Synthetic - Locations, nodes, and configuration"
      x-token-scopes:
      - syntheticLocations.read
    post:
      operationId: addLocation
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/PrivateSyntheticLocation'
        description: The JSON body of the request. Contains parameters of the new
          private synthetic location.
      responses:
        "201":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/SyntheticLocationIdsDto'
          description: Success. The private location has been created. The response
            contains the ID of the new location.
      security:
      - Api-Token: []
      summary: Creates a new private synthetic location
      tags:
      - "Synthetic - Locations, nodes, and configuration"
      x-token-scopes:
      - syntheticLocations.write
  /synthetic/locations/commands/apply:
    get:
      operationId: getLocationDemploymentApplyCommands
      parameters:
      - description: "Container platform, currently supported are: KUBERNETES and\
          \ OPENSHIFT. Default value is KUBERNETES."
        explode: true
        in: query
        name: platform
        required: false
        schema:
          type: string
        style: form
      - description: Namespace
        explode: true
        in: query
        name: namespace
        required: false
        schema:
          type: string
        style: form
      - description: Filename
        explode: true
        in: query
        name: filename
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            text/plain: {}
          description: Success. The response contains the list of commands that needs
            to be executed to deploy a synthetic location.
      security:
      - Api-Token: []
      summary: Gets list of commands to deploy synthetic location in Kubernetes/Openshift
        cluster | maturity=EARLY_ADOPTER
      tags:
      - "Synthetic - Locations, nodes, and configuration"
      x-maturity: EARLY_ADOPTER
      x-token-scopes:
      - syntheticLocations.read
  /synthetic/locations/status:
    get:
      operationId: getLocationsStatus
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/SyntheticPublicLocationsStatus'
          description: Success. The response contains the public locations status.
      security:
      - Api-Token: []
      summary: Checks the status of public synthetic locations
      tags:
      - "Synthetic - Locations, nodes, and configuration"
      x-token-scopes:
      - syntheticLocations.read
    put:
      operationId: updateLocationsStatus
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/SyntheticPublicLocationsStatus'
        description: The new status of public synthetic locations.
      responses:
        "204":
          description: Success. Locations status has been updated.
        "409":
          description: Conflict. Public locations couldn't be disabled because there
            are monitors assigned to them.
      security:
      - Api-Token: []
      summary: Changes the status of public synthetic locations
      tags:
      - "Synthetic - Locations, nodes, and configuration"
      x-token-scopes:
      - syntheticLocations.write
  /synthetic/locations/{locationId}:
    delete:
      operationId: removeLocation
      parameters:
      - description: The Dynatrace entity ID of the private synthetic location to
          be deleted.
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Success. The location has been deleted. Response doesn't have
            a body.
      security:
      - Api-Token: []
      summary: Deletes the specified private synthetic location
      tags:
      - "Synthetic - Locations, nodes, and configuration"
      x-token-scopes:
      - syntheticLocations.write
    get:
      operationId: getLocation
      parameters:
      - description: The Dynatrace entity ID of the required location.
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/SyntheticLocation'
          description: Success. The response contains parameters of the synthetic
            location.
      security:
      - Api-Token: []
      summary: Gets properties of the specified location
      tags:
      - "Synthetic - Locations, nodes, and configuration"
      x-token-scopes:
      - syntheticLocations.read
    put:
      description: For public locations you can only change the location status.
      operationId: updateLocation
      parameters:
      - description: The Dynatrace entity ID of the synthetic location to be updated.
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/SyntheticLocationUpdate'
        description: The JSON body of the request. Contains updated parameters of
          the location.
      responses:
        "204":
          description: Success. The location has been updated. Response doesn't have
            a body.
      security:
      - Api-Token: []
      summary: Updates the specified synthetic location
      tags:
      - "Synthetic - Locations, nodes, and configuration"
      x-token-scopes:
      - syntheticLocations.write
  /synthetic/locations/{locationId}/commands/delete:
    get:
      operationId: getLocationDemploymentDeleteCommands
      parameters:
      - description: The Dynatrace entity ID of the required location.
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: "Container platform, currently supported are: KUBERNETES and\
          \ OPENSHIFT. Default value is KUBERNETES."
        explode: true
        in: query
        name: platform
        required: false
        schema:
          type: string
        style: form
      - description: Namespace
        explode: true
        in: query
        name: namespace
        required: false
        schema:
          type: string
        style: form
      - description: Filename
        explode: true
        in: query
        name: filename
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            text/plain: {}
          description: Success. The response contains the list of commands that needs
            to be executed to delete a synthetic location.
      security:
      - Api-Token: []
      summary: Gets list of commands to delete synthetic location in Kubernetes/Openshift
        cluster | maturity=EARLY_ADOPTER
      tags:
      - "Synthetic - Locations, nodes, and configuration"
      x-maturity: EARLY_ADOPTER
      x-token-scopes:
      - syntheticLocations.read
  /synthetic/locations/{locationId}/yaml:
    get:
      operationId: getLocationDemploymentYaml
      parameters:
      - description: The Dynatrace entity ID of the required location.
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: "Container platform, currently supported are: KUBERNETES and\
          \ OPENSHIFT. Default value is KUBERNETES."
        explode: true
        in: query
        name: platform
        required: false
        schema:
          type: string
        style: form
      - description: Active gate name
        explode: true
        in: query
        name: activeGateName
        required: false
        schema:
          type: string
        style: form
      - description: Namespace
        explode: true
        in: query
        name: namespace
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/yaml: {}
          description: Success. The response contains the content of deployment yaml
            file.
      security:
      - Api-Token: []
      summary: Gets yaml file content to deploy location in Kubernetes/Openshift cluster
        | maturity=EARLY_ADOPTER
      tags:
      - "Synthetic - Locations, nodes, and configuration"
      x-maturity: EARLY_ADOPTER
      x-token-scopes:
      - syntheticLocations.read
  /synthetic/nodes:
    get:
      operationId: getNodes
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Nodes'
          description: Success
      security:
      - Api-Token: []
      summary: Lists all synthetic nodes available in your environment
      tags:
      - "Synthetic - Locations, nodes, and configuration"
      x-token-scopes:
      - syntheticLocations.read
  /synthetic/nodes/{nodeId}:
    get:
      operationId: getNode
      parameters:
      - description: The ID of the required synthetic node.
        explode: false
        in: path
        name: nodeId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Node'
          description: Success
      security:
      - Api-Token: []
      summary: Lists properties of the specified synthetic node
      tags:
      - "Synthetic - Locations, nodes, and configuration"
      x-token-scopes:
      - syntheticLocations.read
  /tags:
    delete:
      operationId: deleteTags
      parameters:
      - description: "The key of the tag to be deleted. \n\nIf **deleteAllWithKey**\
          \ is `true`, then all tags with this key are deleted. Otherwise, only tags\
          \ with exact match of key **and** value are deleted. \n\nFor value-only\
          \ tags, specify the value here."
        explode: true
        in: query
        name: key
        required: true
        schema:
          minLength: 1
          type: string
        style: form
      - description: "The value of the tag to be deleted. The value is ignored if\
          \ **deleteAllWithKey** is `true`. \n\nFor value-only tags, specify the value\
          \ in the **key** parameter."
        explode: true
        in: query
        name: value
        required: false
        schema:
          type: string
        style: form
      - description: "* If `true`, all tags with the specified key are deleted, regardless\
          \ of the value. \n* If `false`, only tags with exact match of key **and**\
          \ value are deleted. \n\nIf not set, `false` is used."
        explode: true
        in: query
        name: deleteAllWithKey
        required: false
        schema:
          type: boolean
        style: form
      - description: "Specifies the entities where you want to delete tags. \n\nYou\
          \ must set one of these criteria: \n\n* Entity type: `type(\"TYPE\")` \n\
          * Dynatrace entity ID: `entityId(\"id\")`. You can specify several IDs,\
          \ separated by a comma (`entityId(\"id-1\",\"id-2\")`). All requested entities\
          \ must be of the same type. \n\nYou can add one or more of the following\
          \ criteria. Values are case-sensitive and the `EQUALS` operator is used\
          \ unless otherwise specified. \n\n* Tag: `tag(\"value\")`. Tags in `[context]key:value`,\
          \ `key:value`, and `value` formats are detected and parsed automatically.\
          \ Any colons (`:`) that are part of the key or value must be escaped with\
          \ a backslash(`\\`). Otherwise, it will be interpreted as the separator\
          \ between the key and the value. All tag values are case-sensitive. \n*\
          \ Management zone ID: `mzId(123)` \n* Management zone name: `mzName(\"value\"\
          )`\n* Entity name: \n\t* `entityName.equals`: performs a non-casesensitive\
          \ `EQUALS` query. \n\t* `entityName.startsWith`: changes the operator to\
          \ `BEGINS WITH`. \n\t* `entityName.in`: enables you to provide multiple\
          \ values. The `EQUALS` operator applies. \n\t* `caseSensitive(entityName.equals(\"\
          value\"))`: takes any entity name criterion as an argument and makes the\
          \ value case-sensitive.\n* Health state (HEALTHY,UNHEALTHY): `healthState(\"\
          HEALTHY\")`\n* First seen timestamp: `firstSeenTms.<operator>(now-3h)`.\
          \ Use any timestamp format from the **from**/**to** parameters. \n\tThe\
          \ following operators are available:\n\t* `lte`: earlier than or at the\
          \ specified time\n\t* `lt`: earlier than the specified time\n\t* `gte`:\
          \ later than or at the specified time\n\t* `gt`: later than the specified\
          \ time\n* Entity attribute: `<attribute>(\"value1\",\"value2\")` and `<attribute>.exists()`.\
          \ To fetch the list of available attributes, execute the [GET entity type](https://dt-url.net/2ka3ivt)\
          \ request and check the **properties** field of the response. \n* Relationships:\
          \ `fromRelationships.<relationshipName>()` and `toRelationships.<relationshipName>()`.\
          \ This criterion takes an entity selector as an attribute. To fetch the\
          \ list of available relationships, execute the [GET entity type](https://dt-url.net/2ka3ivt)\
          \ request and check the **fromRelationships** and **toRelationships** fields.\n\
          * Negation: `not(<criterion>)`. Inverts any criterion except for **type**.\
          \ \n\nFor more information, see [Entity selector](https://dt-url.net/apientityselector)\
          \ in Dynatrace Documentation. \n\nTo set several criteria, separate them\
          \ with a comma (`,`). For example, `type(\"HOST\"),healthState(\"HEALTHY\"\
          )`. Only results matching **all** criteria are included in the response.\
          \ \n\nThe maximum string length is 2,000 characters. \n\n"
        explode: true
        in: query
        name: entitySelector
        required: true
        schema:
          type: string
        style: form
      - description: "The start of the requested timeframe. \n\nYou can use one of\
          \ the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable\
          \ format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified,\
          \ UTC is used. You can use a space character instead of the `T`. Seconds\
          \ and fractions of a second are optional. \n* Relative timeframe, back from\
          \ now. The format is `now-NU/A`, where `N` is the amount of time, `U` is\
          \ the unit of time, and `A` is an alignment. The alignment rounds all the\
          \ smaller values to the nearest zero in the past. For example, `now-1y/w`\
          \ is one year back, aligned by a week. \nYou can also specify relative timeframe\
          \ without an alignment: `now-NU`. \nSupported time units for the relative\
          \ timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days\
          \ \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set,\
          \ the relative timeframe of 24 hours is used (`now-24h`)."
        explode: true
        in: query
        name: from
        required: false
        schema:
          type: string
        style: form
      - description: "The end of the requested timeframe. \n\nYou can use one of the\
          \ following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable\
          \ format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified,\
          \ UTC is used. You can use a space character instead of the `T`. Seconds\
          \ and fractions of a second are optional. \n* Relative timeframe, back from\
          \ now. The format is `now-NU/A`, where `N` is the amount of time, `U` is\
          \ the unit of time, and `A` is an alignment. The alignment rounds all the\
          \ smaller values to the nearest zero in the past. For example, `now-1y/w`\
          \ is one year back, aligned by a week. \nYou can also specify relative timeframe\
          \ without an alignment: `now-NU`. \nSupported time units for the relative\
          \ timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days\
          \ \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set,\
          \ the current timestamp is used."
        explode: true
        in: query
        name: to
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/DeletedEntityTags'
          description: Success
      security:
      - Api-Token: []
      summary: Deletes the specified tag from the specified entities
      tags:
      - Monitored entities - Custom tags
      x-allow-access-with-management-zone-permissions: true
      x-permissions:
      - environment:roles:manage-settings
      x-supports-personal-access-token: true
      x-token-scopes:
      - entities.write
    get:
      description: Automatically applied tags and imported tags are not included.
      operationId: getTags
      parameters:
      - description: "Specifies the entities where you want to read tags. \n\nYou\
          \ must set one of these criteria: \n\n* Entity type: `type(\"TYPE\")` \n\
          * Dynatrace entity ID: `entityId(\"id\")`. You can specify several IDs,\
          \ separated by a comma (`entityId(\"id-1\",\"id-2\")`). All requested entities\
          \ must be of the same type. \n\nYou can add one or more of the following\
          \ criteria. Values are case-sensitive and the `EQUALS` operator is used\
          \ unless otherwise specified. \n\n* Tag: `tag(\"value\")`. Tags in `[context]key:value`,\
          \ `key:value`, and `value` formats are detected and parsed automatically.\
          \ Any colons (`:`) that are part of the key or value must be escaped with\
          \ a backslash(`\\`). Otherwise, it will be interpreted as the separator\
          \ between the key and the value. All tag values are case-sensitive. \n*\
          \ Management zone ID: `mzId(123)` \n* Management zone name: `mzName(\"value\"\
          )`\n* Entity name: \n\t* `entityName.equals`: performs a non-casesensitive\
          \ `EQUALS` query. \n\t* `entityName.startsWith`: changes the operator to\
          \ `BEGINS WITH`. \n\t* `entityName.in`: enables you to provide multiple\
          \ values. The `EQUALS` operator applies. \n\t* `caseSensitive(entityName.equals(\"\
          value\"))`: takes any entity name criterion as an argument and makes the\
          \ value case-sensitive.\n* Health state (HEALTHY,UNHEALTHY): `healthState(\"\
          HEALTHY\")`\n* First seen timestamp: `firstSeenTms.<operator>(now-3h)`.\
          \ Use any timestamp format from the **from**/**to** parameters. \n\tThe\
          \ following operators are available:\n\t* `lte`: earlier than or at the\
          \ specified time\n\t* `lt`: earlier than the specified time\n\t* `gte`:\
          \ later than or at the specified time\n\t* `gt`: later than the specified\
          \ time\n* Entity attribute: `<attribute>(\"value1\",\"value2\")` and `<attribute>.exists()`.\
          \ To fetch the list of available attributes, execute the [GET entity type](https://dt-url.net/2ka3ivt)\
          \ request and check the **properties** field of the response. \n* Relationships:\
          \ `fromRelationships.<relationshipName>()` and `toRelationships.<relationshipName>()`.\
          \ This criterion takes an entity selector as an attribute. To fetch the\
          \ list of available relationships, execute the [GET entity type](https://dt-url.net/2ka3ivt)\
          \ request and check the **fromRelationships** and **toRelationships** fields.\n\
          * Negation: `not(<criterion>)`. Inverts any criterion except for **type**.\
          \ \n\nFor more information, see [Entity selector](https://dt-url.net/apientityselector)\
          \ in Dynatrace Documentation. \n\nTo set several criteria, separate them\
          \ with a comma (`,`). For example, `type(\"HOST\"),healthState(\"HEALTHY\"\
          )`. Only results matching **all** criteria are included in the response.\
          \ \n\nThe maximum string length is 2,000 characters. \n\n"
        explode: true
        in: query
        name: entitySelector
        required: true
        schema:
          type: string
        style: form
      - description: "The start of the requested timeframe. \n\nYou can use one of\
          \ the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable\
          \ format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified,\
          \ UTC is used. You can use a space character instead of the `T`. Seconds\
          \ and fractions of a second are optional. \n* Relative timeframe, back from\
          \ now. The format is `now-NU/A`, where `N` is the amount of time, `U` is\
          \ the unit of time, and `A` is an alignment. The alignment rounds all the\
          \ smaller values to the nearest zero in the past. For example, `now-1y/w`\
          \ is one year back, aligned by a week. \nYou can also specify relative timeframe\
          \ without an alignment: `now-NU`. \nSupported time units for the relative\
          \ timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days\
          \ \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set,\
          \ the relative timeframe of 24 hours is used (`now-24h`)."
        explode: true
        in: query
        name: from
        required: false
        schema:
          type: string
        style: form
      - description: "The end of the requested timeframe. \n\nYou can use one of the\
          \ following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable\
          \ format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified,\
          \ UTC is used. You can use a space character instead of the `T`. Seconds\
          \ and fractions of a second are optional. \n* Relative timeframe, back from\
          \ now. The format is `now-NU/A`, where `N` is the amount of time, `U` is\
          \ the unit of time, and `A` is an alignment. The alignment rounds all the\
          \ smaller values to the nearest zero in the past. For example, `now-1y/w`\
          \ is one year back, aligned by a week. \nYou can also specify relative timeframe\
          \ without an alignment: `now-NU`. \nSupported time units for the relative\
          \ timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days\
          \ \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set,\
          \ the current timestamp is used."
        explode: true
        in: query
        name: to
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/CustomEntityTags'
          description: Success
      security:
      - Api-Token: []
      summary: Gets a list of custom tags applied to the specified entities
      tags:
      - Monitored entities - Custom tags
      x-allow-access-with-management-zone-permissions: true
      x-permissions:
      - environment:roles:viewer
      x-supports-personal-access-token: true
      x-token-scopes:
      - entities.read
    post:
      description: All existing tags remain unaffected.
      operationId: postTags
      parameters:
      - description: "Specifies the entities where you want to update tags. \n\nYou\
          \ must set one of these criteria: \n\n* Entity type: `type(\"TYPE\")` \n\
          * Dynatrace entity ID: `entityId(\"id\")`. You can specify several IDs,\
          \ separated by a comma (`entityId(\"id-1\",\"id-2\")`). All requested entities\
          \ must be of the same type. \n\nYou can add one or more of the following\
          \ criteria. Values are case-sensitive and the `EQUALS` operator is used\
          \ unless otherwise specified. \n\n* Tag: `tag(\"value\")`. Tags in `[context]key:value`,\
          \ `key:value`, and `value` formats are detected and parsed automatically.\
          \ Any colons (`:`) that are part of the key or value must be escaped with\
          \ a backslash(`\\`). Otherwise, it will be interpreted as the separator\
          \ between the key and the value. All tag values are case-sensitive. \n*\
          \ Management zone ID: `mzId(123)` \n* Management zone name: `mzName(\"value\"\
          )`\n* Entity name: \n\t* `entityName.equals`: performs a non-casesensitive\
          \ `EQUALS` query. \n\t* `entityName.startsWith`: changes the operator to\
          \ `BEGINS WITH`. \n\t* `entityName.in`: enables you to provide multiple\
          \ values. The `EQUALS` operator applies. \n\t* `caseSensitive(entityName.equals(\"\
          value\"))`: takes any entity name criterion as an argument and makes the\
          \ value case-sensitive.\n* Health state (HEALTHY,UNHEALTHY): `healthState(\"\
          HEALTHY\")`\n* First seen timestamp: `firstSeenTms.<operator>(now-3h)`.\
          \ Use any timestamp format from the **from**/**to** parameters. \n\tThe\
          \ following operators are available:\n\t* `lte`: earlier than or at the\
          \ specified time\n\t* `lt`: earlier than the specified time\n\t* `gte`:\
          \ later than or at the specified time\n\t* `gt`: later than the specified\
          \ time\n* Entity attribute: `<attribute>(\"value1\",\"value2\")` and `<attribute>.exists()`.\
          \ To fetch the list of available attributes, execute the [GET entity type](https://dt-url.net/2ka3ivt)\
          \ request and check the **properties** field of the response. \n* Relationships:\
          \ `fromRelationships.<relationshipName>()` and `toRelationships.<relationshipName>()`.\
          \ This criterion takes an entity selector as an attribute. To fetch the\
          \ list of available relationships, execute the [GET entity type](https://dt-url.net/2ka3ivt)\
          \ request and check the **fromRelationships** and **toRelationships** fields.\n\
          * Negation: `not(<criterion>)`. Inverts any criterion except for **type**.\
          \ \n\nFor more information, see [Entity selector](https://dt-url.net/apientityselector)\
          \ in Dynatrace Documentation. \n\nTo set several criteria, separate them\
          \ with a comma (`,`). For example, `type(\"HOST\"),healthState(\"HEALTHY\"\
          )`. Only results matching **all** criteria are included in the response.\
          \ \n\nThe maximum string length is 2,000 characters. \n\n"
        explode: true
        in: query
        name: entitySelector
        required: true
        schema:
          type: string
        style: form
      - description: "The start of the requested timeframe. \n\nYou can use one of\
          \ the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable\
          \ format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified,\
          \ UTC is used. You can use a space character instead of the `T`. Seconds\
          \ and fractions of a second are optional. \n* Relative timeframe, back from\
          \ now. The format is `now-NU/A`, where `N` is the amount of time, `U` is\
          \ the unit of time, and `A` is an alignment. The alignment rounds all the\
          \ smaller values to the nearest zero in the past. For example, `now-1y/w`\
          \ is one year back, aligned by a week. \nYou can also specify relative timeframe\
          \ without an alignment: `now-NU`. \nSupported time units for the relative\
          \ timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days\
          \ \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set,\
          \ the relative timeframe of 24 hours is used (`now-24h`)."
        explode: true
        in: query
        name: from
        required: false
        schema:
          type: string
        style: form
      - description: "The end of the requested timeframe. \n\nYou can use one of the\
          \ following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable\
          \ format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified,\
          \ UTC is used. You can use a space character instead of the `T`. Seconds\
          \ and fractions of a second are optional. \n* Relative timeframe, back from\
          \ now. The format is `now-NU/A`, where `N` is the amount of time, `U` is\
          \ the unit of time, and `A` is an alignment. The alignment rounds all the\
          \ smaller values to the nearest zero in the past. For example, `now-1y/w`\
          \ is one year back, aligned by a week. \nYou can also specify relative timeframe\
          \ without an alignment: `now-NU`. \nSupported time units for the relative\
          \ timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days\
          \ \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set,\
          \ the current timestamp is used."
        explode: true
        in: query
        name: to
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/AddEntityTags'
        description: The JSON body of the request. Contains tags to be added to the
          matching entities.
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/AddedEntityTags'
          description: Success
      security:
      - Api-Token: []
      summary: Adds custom tags to the specified entities
      tags:
      - Monitored entities - Custom tags
      x-allow-access-with-management-zone-permissions: true
      x-permissions:
      - environment:roles:manage-settings
      x-supports-personal-access-token: true
      x-token-scopes:
      - entities.write
  /tenantTokenRotation/cancel:
    post:
      description: "To learn how to rotate tokens, see [Token rotation](https://dt-url.net/1543sf6)\
        \ in Dynatrace Documentation."
      operationId: cancelRotation
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/TenantTokenConfig'
          description: Success. Rotation process has been cancelled. The current tenant
            token remains valid.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. There is no ongoing rotation process.
      security:
      - Api-Token: []
      summary: Cancels tenant token rotation
      tags:
      - Access tokens - Tenant tokens
      x-token-scopes:
      - tenantTokenRotation.write
  /tenantTokenRotation/finish:
    post:
      description: "To learn how to rotate tokens, see [Token rotation](https://dt-url.net/1543sf6)\
        \ in Dynatrace Documentation."
      operationId: finishRotation
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/TenantTokenConfig'
          description: Success. The rotation process is completed. The **active**
            field of the response contains the new tenant token.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: No ongoing rotation process.
      security:
      - Api-Token: []
      summary: Finishes tenant token rotation
      tags:
      - Access tokens - Tenant tokens
      x-token-scopes:
      - tenantTokenRotation.write
  /tenantTokenRotation/start:
    post:
      description: "To learn how to rotate tokens, see [Token rotation](https://dt-url.net/1543sf6)\
        \ in Dynatrace Documentation."
      operationId: startRotation
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/TenantTokenConfig'
          description: Success. The new tenant token is created and will replace the
            old one. The **active** field of the response contains the new tenant
            token.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Failed. Another rotation process is already in progress.
      security:
      - Api-Token: []
      summary: Starts tenant token rotation
      tags:
      - Access tokens - Tenant tokens
      x-token-scopes:
      - tenantTokenRotation.write
  /units:
    get:
      description: |+
        You can narrow down the output by providing filter criteria in the **unitSelector** field.

      operationId: allUnits
      parameters:
      - description: "Selects units to be included to the response. Available criteria:\
          \ \n* Compatibility: `compatibleTo(\"unit\",\"display-format\")`. Returns\
          \ units that can be converted to the specified unit. The optional display\
          \ format (`binary` or `decimal`) argument is supported by bit- and byte-based\
          \ units and returns only units for the specified format."
        explode: true
        in: query
        name: unitSelector
        required: false
        schema:
          type: string
        style: form
      - description: "Defines the list of properties to be included in the response.\
          \ The ID of the unit is **always** included. The following additional properties\
          \ are available: \n\n* `displayName`: The display name of the unit. \n*\
          \ `symbol`: The symbol of the unit. \n* `description`: A short description\
          \ of the unit.\n\nBy default, the ID, the display name, and the symbol are\
          \ included. \n\nTo add properties, list them with leading plus `+`. To exclude\
          \ default properties, list them with leading minus `-`.\n\nTo specify several\
          \ properties, join them with a comma (for example `fields=+description,-symbol`).\n\
          \nIf you specify just one property, the response contains the unitId and\
          \ the specified property. To return unit IDs only, specify `unitId` here."
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/UnitList'
          description: Success
      security:
      - Api-Token: []
      summary: Lists all available units
      tags:
      - Metrics - Units
      x-allow-access-with-management-zone-permissions: true
      x-permissions:
      - environment:roles:viewer
      x-supports-personal-access-token: true
      x-token-scopes:
      - metrics.read
  /units/{unitId}:
    get:
      operationId: unit
      parameters:
      - description: The ID of the required unit.
        explode: false
        in: path
        name: unitId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Unit'
          description: Success
        "404":
          description: Not found. The requested resource is not found or the query
            is incorrect.
      security:
      - Api-Token: []
      summary: Gets the properties of the specified unit
      tags:
      - Metrics - Units
      x-allow-access-with-management-zone-permissions: true
      x-permissions:
      - environment:roles:viewer
      x-supports-personal-access-token: true
      x-token-scopes:
      - metrics.read
  /units/{unitId}/convert:
    get:
      description: "If no target unit is set, the request finds an appropriate target\
        \ unit automatically, taking into account the preferred number format (if\
        \ specified)."
      operationId: convert
      parameters:
      - description: The ID of the source unit.
        explode: false
        in: path
        name: unitId
        required: true
        schema:
          type: string
        style: simple
      - description: The value to be converted.
        explode: true
        in: query
        name: value
        required: true
        schema:
          format: double
          type: number
        style: form
      - description: "The ID of the target unit. \n\nIf not set, the request finds\
          \ an appropriate target unit automatically, based on the specified number\
          \ format."
        explode: true
        in: query
        name: targetUnit
        required: false
        schema:
          type: string
        style: form
      - description: "The preferred number format of the target value. You can specify\
          \ the following formats: \n\n* `binary` \n* `decimal` \n\n`Only used if\
          \ the target unit if not set."
        explode: true
        in: query
        name: numberFormat
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/UnitConversionResult'
          description: Success
        "404":
          description: Not found. The requested resource is not found or the query
            is incorrect.
      security:
      - Api-Token: []
      summary: Converts a value from a source unit into a target unit
      tags:
      - Metrics - Units
      x-allow-access-with-management-zone-permissions: true
      x-permissions:
      - environment:roles:viewer
      x-supports-personal-access-token: true
      x-token-scopes:
      - metrics.read
components:
  schemas:
    AbstractCredentialsResponseElement:
      description: Credentials set.
      discriminator:
        mapping:
          CERTIFICATE: '#/components/schemas/CredentialsDetailsCertificateResponseElement'
          PUBLIC_CERTIFICATE: '#/components/schemas/CredentialsDetailsCertificateResponseElement'
          TOKEN: '#/components/schemas/CredentialsDetailsTokenResponseElement'
          USERNAME_PASSWORD: '#/components/schemas/CredentialsDetailsUsernamePasswordResponseElement'
        propertyName: type
      example:
        certificate: c2FtcGxlX2NlcnRpZmljYXRlLg==
        certificateType: PKCS12
        credentialUsageSummary:
        - BROWSER_MONITOR: 2
          HTTP_MONITOR: 3
        description: Sample credentials for demo purposes.
        externalVault:
          passwordSecretName: password
          pathToCredentials: kv/credentials
          roleId: 00e4858c-ec33-bc99-4e7e-34de6967de6c
          secretId: CREDENTIALS_VAULT-XXXXXXXXXXXXXXXX
          sourceAuthMethod: HASHICORP_VAULT_APPROLE
          usernameSecretName: username
          vaultNamespace: admin
          vaultUrl: https://vault-cluster.vault.fb17d2fc-be92-4230-afa2-91dbfda3cbad.aws.hashicorp.cloud:8200
        id: CREDENTIALS_VAULT-C43F2C2E6395AD23
        name: Sample certificate credentials
        owner: user@domain.com
        ownerAccessOnly: true
        password: c2FtcGxlX3Bhc3N3b3JkLg==
        scope: SYNTHETIC
        type: CERTIFICATE
      properties:
        credentialUsageSummary:
          description: The list contains summary data related to the use of credentials.
          items:
            $ref: '#/components/schemas/CredentialUsageHandler'
          type: array
        description:
          description: A short description of the credentials set.
          type: string
        externalVault:
          $ref: '#/components/schemas/ExternalVaultConfig'
        id:
          description: The ID of the credentials set.
          type: string
        name:
          description: The name of the credentials set.
          type: string
        owner:
          description: The owner of the credential (user for which used API token
            was created).
          type: string
        ownerAccessOnly:
          description: Flag indicating that this credential is visible only to the
            owner.
          type: boolean
        scope:
          description: The scope of the credentials set.
          enum:
          - ALL
          - EXTENSION
          - SYNTHETIC
          - UNKNOWN
          type: string
        scopes:
          description: The set of scopes of the credentials set.
          items:
            description: The set of scopes of the credentials set.
            enum:
            - ALL
            - EXTENSION
            - SYNTHETIC
            - UNKNOWN
            type: string
          type: array
          uniqueItems: true
        type:
          description: "Defines the actual set of fields depending on the value. See\
            \ one of the following objects: \n\n* `USERNAME_PASSWORD` -> CredentialsDetailsUsernamePasswordResponseElement\
            \ \n* `CERTIFICATE` -> CredentialsDetailsCertificateResponseElement \n\
            * `TOKEN` -> CredentialsDetailsTokenResponseElement \n* `PUBLIC_CERTIFICATE`\
            \ -> CredentialsDetailsCertificateResponseElement \n"
          enum:
          - CERTIFICATE
          - PUBLIC_CERTIFICATE
          - TOKEN
          - USERNAME_PASSWORD
          type: string
      required:
      - credentialUsageSummary
      - description
      - name
      - owner
      - ownerAccessOnly
      - type
      type: object
    AbstractSloAlertDto:
      discriminator:
        mapping:
          BURN_RATE: '#/components/schemas/BurnRateAlert'
          STATUS: '#/components/schemas/StatusAlert'
        propertyName: alertType
      example:
        alertName: Payment service availability burn rate alert
        alertThreshold: 10.0
        alertType: BURN_RATE
      properties:
        alertName:
          description: Name of the alert.
          type: string
        alertThreshold:
          description: "Threshold of the alert. Status alerts trigger if they fall\
            \ below this value, burn rate alerts trigger if they exceed the value."
          format: double
          type: number
        alertType:
          description: "Defines the actual set of fields depending on the value. See\
            \ one of the following objects: \n\n* `BURN_RATE` -> BurnRateAlert \n\
            * `STATUS` -> StatusAlert \n"
          enum:
          - BURN_RATE
          - STATUS
          type: string
      required:
      - alertName
      - alertThreshold
      - alertType
      type: object
    ActiveGate:
      description: Parameters of the ActiveGate.
      example:
        activeGateTokens:
        - environmentId: environmentId
          id: dt0g02.4KWZO5EF
          state: ABSENT
        - environmentId: environmentId
          id: dt0g02.4KWZO5EF
          state: ABSENT
        environments:
        - environments
        - environments
        mainEnvironment: d1bf4a7e-666b-43af-9f45-718g98372e2f
        osArchitecture: X86
        loadBalancerAddresses:
        - loadBalancerAddresses
        - loadBalancerAddresses
        type: ENVIRONMENT
        networkZone: exampleNetworkZone
        version: 1.185.0.20200201-120000
        connectedHosts:
          number: 150
        modules:
        - misconfigured: true
          attributes:
            key: attributes
          type: KUBERNETES
          version: version
          enabled: true
        - misconfigured: true
          attributes:
            key: attributes
          type: KUBERNETES
          version: version
          enabled: true
        osBitness: "64"
        hostname: exampleHostname
        autoUpdateSettings:
          effectiveSetting: ENABLED
          setting: INHERITED
        containerized: true
        osType: WINDOWS
        offlineSince: 1582031917814
        id: 0x3efdd091
        networkAddresses:
        - networkAddresses
        - networkAddresses
        autoUpdateStatus: OUTDATED
        group: default
      properties:
        activeGateTokens:
          description: A list of the ActiveGate tokens.
          items:
            $ref: '#/components/schemas/ActiveGateTokenInfoDto'
          readOnly: true
          type: array
        autoUpdateSettings:
          $ref: '#/components/schemas/ActiveGateAutoUpdateConfig'
        autoUpdateStatus:
          description: The current status of auto-updates of the ActiveGate.
          enum:
          - INCOMPATIBLE
          - OUTDATED
          - SCHEDULED
          - SUPPRESSED
          - UNKNOWN
          - UP2DATE
          - UPDATE_IN_PROGRESS
          - UPDATE_PENDING
          - UPDATE_PROBLEM
          example: OUTDATED
          readOnly: true
          type: string
        connectedHosts:
          $ref: '#/components/schemas/ActiveGateConnectedHosts'
        containerized:
          description: ActiveGate is deployed in container (`true`) or not (`false`).
          readOnly: true
          type: boolean
        environments:
          description: A list of environments (specified by IDs) the ActiveGate can
            connect to.
          items:
            type: string
          readOnly: true
          type: array
        group:
          description: The group of the ActiveGate.
          example: default
          readOnly: true
          type: string
        hostname:
          description: The name of the host the ActiveGate is running on.
          example: exampleHostname
          readOnly: true
          type: string
        id:
          description: The ID of the ActiveGate.
          example: 0x3efdd091
          readOnly: true
          type: string
        loadBalancerAddresses:
          description: A list of Load Balancer addresses of the ActiveGate.
          items:
            type: string
          readOnly: true
          type: array
        mainEnvironment:
          description: The ID of the main environment for a multi-environment ActiveGate.
          example: d1bf4a7e-666b-43af-9f45-718g98372e2f
          readOnly: true
          type: string
        modules:
          description: A list of modules of the ActiveGate.
          items:
            $ref: '#/components/schemas/ActiveGateModule'
          readOnly: true
          type: array
        networkAddresses:
          description: A list of network addresses of the ActiveGate.
          items:
            type: string
          readOnly: true
          type: array
        networkZone:
          description: The network zone of the ActiveGate.
          example: exampleNetworkZone
          readOnly: true
          type: string
        offlineSince:
          description: "The timestamp since when the ActiveGate is offline. \n\n The\
            \ `null` value means the ActiveGate is online."
          example: 1582031917814
          format: int64
          readOnly: true
          type: integer
        osArchitecture:
          description: The OS architecture that the ActiveGate is running on.
          enum:
          - S390
          - X86
          example: X86
          readOnly: true
          type: string
        osBitness:
          description: The OS bitness that the ActiveGate is running on.
          enum:
          - "64"
          example: "64"
          readOnly: true
          type: string
        osType:
          description: The OS type that the ActiveGate is running on.
          enum:
          - LINUX
          - WINDOWS
          example: WINDOWS
          readOnly: true
          type: string
        type:
          description: The type of the ActiveGate.
          enum:
          - CLUSTER
          - ENVIRONMENT
          - ENVIRONMENT_MULTI
          example: ENVIRONMENT
          readOnly: true
          type: string
        version:
          description: The current version of the ActiveGate in the `<major>.<minor>.<revision>.<timestamp>`
            format.
          example: 1.185.0.20200201-120000
          readOnly: true
          type: string
      type: object
    ActiveGateAutoUpdateConfig:
      description: Configuration of the ActiveGate auto-updates.
      example:
        effectiveSetting: ENABLED
        setting: INHERITED
      properties:
        effectiveSetting:
          description: "The actual state of the ActiveGate auto-update. \n\nApplicable\
            \ only if the **setting** parameter is set to `INHERITED`. In that case,\
            \ the value is taken from the parent setting. Otherwise, it's just a duplicate\
            \ of the **setting** value."
          enum:
          - ENABLED
          - DISABLED
          example: ENABLED
          readOnly: true
          type: string
        setting:
          description: "The state of the ActiveGate auto-update: enabled, disabled,\
            \ or inherited. \n\nIf set to `INHERITED`, the setting is inherited from\
            \ the global configuration set on the environment or Managed cluster level."
          enum:
          - DISABLED
          - ENABLED
          - INHERITED
          example: INHERITED
          type: string
      readOnly: true
      required:
      - setting
      type: object
    ActiveGateConnectedHosts:
      description: Information about hosts currently connected to the ActiveGate
      example:
        number: 150
      properties:
        number:
          description: The number of hosts currently connected to the ActiveGate
          example: 150
          format: int32
          readOnly: true
          type: integer
      readOnly: true
      type: object
    ActiveGateGlobalAutoUpdateConfig:
      description: Global configuration of ActiveGates auto-update.
      example:
        metadata:
          currentConfigurationVersions:
          - 1.0.4
          - "1.23"
          configurationVersions:
          - 4
          - 2
          clusterVersion: 1.192.1
        globalSetting: ENABLED
      properties:
        globalSetting:
          description: "The state of auto-updates for all ActiveGates connected to\
            \ the environment or Managed cluster. \n\nThis setting is inherited by\
            \ all ActiveGates that have the `INHERITED` setting."
          enum:
          - ENABLED
          - DISABLED
          type: string
        metadata:
          $ref: '#/components/schemas/ConfigurationMetadata'
      required:
      - globalSetting
      type: object
    ActiveGateList:
      description: A list of ActiveGates.
      example:
        activeGates:
        - activeGateTokens:
          - environmentId: environmentId
            id: dt0g02.4KWZO5EF
            state: ABSENT
          - environmentId: environmentId
            id: dt0g02.4KWZO5EF
            state: ABSENT
          environments:
          - environments
          - environments
          mainEnvironment: d1bf4a7e-666b-43af-9f45-718g98372e2f
          osArchitecture: X86
          loadBalancerAddresses:
          - loadBalancerAddresses
          - loadBalancerAddresses
          type: ENVIRONMENT
          networkZone: exampleNetworkZone
          version: 1.185.0.20200201-120000
          connectedHosts:
            number: 150
          modules:
          - misconfigured: true
            attributes:
              key: attributes
            type: KUBERNETES
            version: version
            enabled: true
          - misconfigured: true
            attributes:
              key: attributes
            type: KUBERNETES
            version: version
            enabled: true
          osBitness: "64"
          hostname: exampleHostname
          autoUpdateSettings:
            effectiveSetting: ENABLED
            setting: INHERITED
          containerized: true
          osType: WINDOWS
          offlineSince: 1582031917814
          id: 0x3efdd091
          networkAddresses:
          - networkAddresses
          - networkAddresses
          autoUpdateStatus: OUTDATED
          group: default
        - activeGateTokens:
          - environmentId: environmentId
            id: dt0g02.4KWZO5EF
            state: ABSENT
          - environmentId: environmentId
            id: dt0g02.4KWZO5EF
            state: ABSENT
          environments:
          - environments
          - environments
          mainEnvironment: d1bf4a7e-666b-43af-9f45-718g98372e2f
          osArchitecture: X86
          loadBalancerAddresses:
          - loadBalancerAddresses
          - loadBalancerAddresses
          type: ENVIRONMENT
          networkZone: exampleNetworkZone
          version: 1.185.0.20200201-120000
          connectedHosts:
            number: 150
          modules:
          - misconfigured: true
            attributes:
              key: attributes
            type: KUBERNETES
            version: version
            enabled: true
          - misconfigured: true
            attributes:
              key: attributes
            type: KUBERNETES
            version: version
            enabled: true
          osBitness: "64"
          hostname: exampleHostname
          autoUpdateSettings:
            effectiveSetting: ENABLED
            setting: INHERITED
          containerized: true
          osType: WINDOWS
          offlineSince: 1582031917814
          id: 0x3efdd091
          networkAddresses:
          - networkAddresses
          - networkAddresses
          autoUpdateStatus: OUTDATED
          group: default
      properties:
        activeGates:
          description: A list of ActiveGates.
          items:
            $ref: '#/components/schemas/ActiveGate'
          readOnly: true
          type: array
      type: object
    ActiveGateModule:
      description: Information about ActiveGate module
      example:
        misconfigured: true
        attributes:
          key: attributes
        type: KUBERNETES
        version: version
        enabled: true
      properties:
        attributes:
          additionalProperties:
            description: The attributes of the ActiveGate module.
            readOnly: true
            type: string
          description: The attributes of the ActiveGate module.
          readOnly: true
          type: object
        enabled:
          description: The module is enabled (`true`) or disabled (`false`).
          readOnly: true
          type: boolean
        misconfigured:
          description: The module is misconfigured (`true`) or not (`false`).
          readOnly: true
          type: boolean
        type:
          description: The type of ActiveGate module.
          enum:
          - AWS
          - AZURE
          - BEACON_FORWARDER
          - CLOUD_FOUNDRY
          - DB_INSIGHT
          - EXTENSIONS_V1
          - EXTENSIONS_V2
          - KUBERNETES
          - LOGS
          - MEMORY_DUMPS
          - METRIC_API
          - ONE_AGENT_ROUTING
          - OTLP_INGEST
          - REST_API
          - SYNTHETIC
          - VMWARE
          - Z_OS
          example: KUBERNETES
          readOnly: true
          type: string
        version:
          description: The version of the ActiveGate module.
          readOnly: true
          type: string
      type: object
    ActiveGateToken:
      description: Metadata of an ActiveGate token.
      example:
        owner: john.smith
        lastUsedDate: 2020-11-23T08:15:30.144Z
        name: myToken
        seedToken: false
        id: dt0g02.4KWZO5EF
        creationDate: 2020-11-22T08:15:30.144Z
        activeGateType: ENVIRONMENT
        expirationDate: 2020-11-24T08:15:30.144Z
      properties:
        activeGateType:
          description: The type of the ActiveGate for which the token is valid.
          enum:
          - ENVIRONMENT
          - CLUSTER
          type: string
        creationDate:
          description: The token creation date in ISO 8601 format (`yyyy-MM-dd'T'HH:mm:ss.SSS'Z'`).
          example: 2020-11-22T08:15:30.144Z
          type: string
        expirationDate:
          description: "The token expiration date in ISO 8601 format (`yyyy-MM-dd'T'HH:mm:ss.SSS'Z'`).\
            \ \n\n If not set, the token never expires."
          example: 2020-11-24T08:15:30.144Z
          type: string
        id:
          description: "The ActiveGate token identifier, consisting of [prefix and\
            \ public part](https://dt-url.net/rn00tjg) of the token."
          example: dt0g02.4KWZO5EF
          type: string
        lastUsedDate:
          description: The token last used date in ISO 8601 format (`yyyy-MM-dd'T'HH:mm:ss.SSS'Z'`).
          example: 2020-11-23T08:15:30.144Z
          type: string
        name:
          description: The name of the token.
          example: myToken
          type: string
        owner:
          description: The owner of the token.
          example: john.smith
          type: string
        seedToken:
          description: The token is a seed token (`true`) or an individual token (`false`).
          example: false
          type: boolean
      required:
      - activeGateType
      - creationDate
      - id
      - name
      - owner
      type: object
    ActiveGateTokenCreate:
      description: Parameters of a new ActiveGate token.
      example:
        name: myToken
        seedToken: false
        activeGateType: ENVIRONMENT
        expirationDate: now+14d
      properties:
        activeGateType:
          description: The type of the ActiveGate for which the token is valid.
          enum:
          - ENVIRONMENT
          - CLUSTER
          type: string
        expirationDate:
          description: "The expiration date of the token. \n\nYou can use one of the\
            \ following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable\
            \ format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified,\
            \ UTC is used. You can use a space character instead of the `T`. Seconds\
            \ and fractions of a second are optional. \n* Relative timeframe, back\
            \ from now. The format is `now-NU/A`, where `N` is the amount of time,\
            \ `U` is the unit of time, and `A` is an alignment. The alignment rounds\
            \ all the smaller values to the nearest zero in the past. For example,\
            \ `now-1y/w` is one year back, aligned by a week. \nYou can also specify\
            \ relative timeframe without an alignment: `now-NU`. \nSupported time\
            \ units for the relative timeframe are: \n   * `m`: minutes \n   * `h`:\
            \ hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`:\
            \ years \n\nIf not set, the token never expires."
          example: now+14d
          type: string
        name:
          description: The name of the token.
          example: myToken
          type: string
        seedToken:
          description: "The token is a seed token (`true`) or an individual token\
            \ (`false`). \n\n We recommend the individual token option (false)."
          example: false
          type: boolean
      required:
      - activeGateType
      - name
      type: object
    ActiveGateTokenCreated:
      description: The newly created ActiveGate token.
      example:
        id: dt0g02.4KWZO5EF
        expirationDate: 2020-11-24T08:15:30.144Z
        token: dt0g02.4KWZO5EF.XT47R5DRADJIZUFOX4UDNOKTSUSABGLN7XSMJG7UXHRXKNY4WLORH4OF4T75MG7E
      properties:
        expirationDate:
          description: The token expiration date in ISO 8601 format (`yyyy-MM-dd'T'HH:mm:ss.SSS'Z'`).
          example: 2020-11-24T08:15:30.144Z
          type: string
        id:
          description: "The ActiveGate token identifier, consisting of [prefix and\
            \ public part](https://dt-url.net/rn00tjg) of the token."
          example: dt0g02.4KWZO5EF
          type: string
        token:
          description: The secret of the token.
          example: dt0g02.4KWZO5EF.XT47R5DRADJIZUFOX4UDNOKTSUSABGLN7XSMJG7UXHRXKNY4WLORH4OF4T75MG7E
          type: string
      required:
      - id
      - token
      type: object
    ActiveGateTokenEnforcement:
      description: The status of ActiveGate tokens enforcement.
      example:
        autoEnforced: true
        manualEnforced: true
        autoEnforcementEstimation:
          unit: DAYS
          value: 0
      properties:
        autoEnforced:
          description: "If `true`, ActiveGate tokens are enforced automatically."
          type: boolean
        autoEnforcementEstimation:
          $ref: '#/components/schemas/Duration'
        manualEnforced:
          description: "If `true`, ActiveGate tokens are manually enforced by user."
          type: boolean
      type: object
    ActiveGateTokenInfoDto:
      description: Information about ActiveGate token.
      example:
        environmentId: environmentId
        id: dt0g02.4KWZO5EF
        state: ABSENT
      properties:
        environmentId:
          description: "The environment ID to which the token belongs. \n\nOnly available\
            \ if more than one environment is supported."
          readOnly: true
          type: string
        id:
          description: "The ActiveGate token identifier, consisting of [prefix and\
            \ public part](https://dt-url.net/rn00tjg) of the token."
          example: dt0g02.4KWZO5EF
          readOnly: true
          type: string
        state:
          description: State of the ActiveGate token.
          enum:
          - ABSENT
          - EXPIRING
          - INVALID
          - UNKNOWN
          - UNSUPPORTED
          - VALID
          readOnly: true
          type: string
      type: object
    ActiveGateTokenList:
      description: A list of ActiveGate tokens.
      example:
        activeGateTokens:
          activeGateType: ENVIRONMENT
          creationDate: 2020-11-22T08:15:30.144Z
          expirationDate: 2020-11-24T08:15:30.144Z
          id: dt0g02.4KWZO5EF
          lastUsedDate: 2020-11-23T08:15:30.144Z
          name: myToken
          owner: john.smith
          seedToken: "false"
        nextPageKey: AAAAAAAAAAAAAABOAAAAAAAAAAAAAAA6ACQAEAAAABgACgAITFdXQk1BRzYAAAhtZXRhZGF0YQB___-bf___m3iIYxfF7xVQvY72rwblQkcAAwAAAAAAAADHAAAAZA==
        pageSize: 100
        totalCount: 1000
      properties:
        activeGateTokens:
          description: A list of ActiveGate tokens.
          items:
            $ref: '#/components/schemas/ActiveGateToken'
          properties:
            empty:
              type: boolean
          type: array
        nextPageKey:
          description: "The cursor for the next page of results. Has the value of\
            \ `null` on the last page. \n\nUse it in the **nextPageKey** query parameter\
            \ to obtain subsequent pages of the result."
          example: AQAAABQBAAAABQ==
          type: string
        pageSize:
          description: The number of entries per page.
          format: int32
          type: integer
        totalCount:
          description: The total number of entries in the result.
          format: int64
          type: integer
      required:
      - totalCount
      type: object
    AddEntityTag:
      description: The custom tag to be added to monitored entities.
      properties:
        key:
          description: The key of the custom tag to be added to monitored entities.
          minLength: 1
          type: string
        value:
          description: The value of the custom tag to be added to monitored entities.
            May be null
          type: string
      required:
      - key
      type: object
    AddEntityTags:
      description: A list of tags to be added to monitored entities.
      example:
        tags:
        - key: mainApp
        - key: bookings
          value: "42"
      properties:
        tags:
          description: A list of tags to be added to monitored entities.
          items:
            $ref: '#/components/schemas/AddEntityTag'
          maxItems: 1000
          minItems: 0
          type: array
      required:
      - tags
      type: object
    AddedEntityTags:
      description: A list of custom tags added to monitored entities.
      example:
        appliedTags:
        - context: CONTEXTLESS
          key: mainApp
          stringRepresentation: mainApp
        - context: CONTEXTLESS
          key: booking
          stringRepresentation: booking
        matchedEntitiesCount: 2
      properties:
        appliedTags:
          description: A list of added custom tags.
          items:
            $ref: '#/components/schemas/METag'
          properties:
            empty:
              type: boolean
          type: array
        matchedEntitiesCount:
          description: The number of monitored entities where the tags have been added.
          format: int64
          type: integer
      type: object
    AffectedEntities:
      description: Information about affected entities of an attack.
      example:
        processGroupInstance:
          name: name
          id: id
        processGroup:
          name: name
          id: id
      properties:
        processGroup:
          $ref: '#/components/schemas/AffectedEntity'
        processGroupInstance:
          $ref: '#/components/schemas/AffectedEntity'
      readOnly: true
      type: object
    AffectedEntity:
      description: Information about an affected entity.
      example:
        name: name
        id: id
      properties:
        id:
          description: The monitored entity ID of the affected entity.
          readOnly: true
          type: string
        name:
          description: The name of the affected entity.
          readOnly: true
          type: string
      readOnly: true
      type: object
    AggregatedLog:
      description: Aggregated log records.
      example:
        aggregationResult:
          hostId:
            "1597835271":
              localhost: "12"
            "1597835331":
              remotehost: "6"
          logLevel:
            "1597835271":
              ERROR: "1"
              INFO: "2"
            "1597835331":
              INFO: "17"
          logPath:
            "1597835271":
              /var/log/messages: "15"
              /var/log/syslog: "3"
            "1597835331":
              /var/log/messages: "15"
              /var/log/syslog: "3"
          processId:
            "1597835271":
              cassandra: "6"
            "1597835331":
              apache: "12"
              cassandra: "60"
      properties:
        aggregationResult:
          additionalProperties:
            additionalProperties:
              additionalProperties:
                description: Aggregated log records.
                format: int64
                type: integer
              description: Aggregated log records.
              type: object
            description: Aggregated log records.
            type: object
          description: Aggregated log records.
          type: object
      type: object
    AlertingProfileStub:
      description: Short representation of the alerting profile.
      example:
        name: name
        id: id
      properties:
        id:
          description: The ID of the alerting profile.
          type: string
        name:
          description: The name of the alerting profile.
          type: string
      required:
      - id
      type: object
    ApiToken:
      description: Metadata of an API token.
      example:
        owner: john.smith
        lastUsedDate: 2020-11-12T08:15:30.144Z
        lastUsedIpAddress: 34.197.2.44
        modifiedDate: 2020-11-12T08:15:30.144Z
        name: myToken
        additionalMetadata:
          dashboardId: 82402bab-7370-4359-924d-88ed13c8919a
        id: dt0c01.ST2EY72KQINMH574WMNVI7YN
        personalAccessToken: true
        scopes:
        - metrics.read
        - metrics.read
        creationDate: 2020-11-05T08:15:30.144Z
        enabled: true
        expirationDate: 2020-11-12T08:15:30.144Z
      properties:
        additionalMetadata:
          description: |-
            Contains additional properties for specific kinds of token. Examples:

            * A `dashboardId` property for dashboard sharing tokens.
            * A `reportId` property for report sharing tokens
          example:
            dashboardId: 82402bab-7370-4359-924d-88ed13c8919a
          type: object
        creationDate:
          description: Token creation date in ISO 8601 format (`yyyy-MM-dd'T'HH:mm:ss.SSS'Z'`)
          example: 2020-11-05T08:15:30.144Z
          type: string
        enabled:
          description: The token is enabled (`true`) or disabled (`false`).
          example: true
          type: boolean
        expirationDate:
          description: "Token expiration date in ISO 8601 format (`yyyy-MM-dd'T'HH:mm:ss.SSS'Z'`).\
            \ \n\n If not set, the token never expires."
          example: 2020-11-12T08:15:30.144Z
          type: string
        id:
          description: "The ID of the token, consisting of prefix and public part\
            \ of the token."
          example: dt0c01.ST2EY72KQINMH574WMNVI7YN
          type: string
        lastUsedDate:
          description: Token last used date in ISO 8601 format (`yyyy-MM-dd'T'HH:mm:ss.SSS'Z'`)
          example: 2020-11-12T08:15:30.144Z
          type: string
        lastUsedIpAddress:
          description: Token last used IP address.
          example: 34.197.2.44
          type: string
        modifiedDate:
          description: "Token last modified date in ISO 8601 format (`yyyy-MM-dd'T'HH:mm:ss.SSS'Z'`).\
            \ Updating scopes or name counts as modification, enabling or disabling\
            \ a token does not."
          example: 2020-11-12T08:15:30.144Z
          type: string
        name:
          description: The name of the token.
          example: myToken
          type: string
        owner:
          description: The owner of the token.
          example: john.smith
          type: string
        personalAccessToken:
          description: "The token is a [personal access token](https://dt-url.net/wm03sop)\
            \ (`true`) or an API token (`false`)."
          example: true
          type: boolean
        scopes:
          description: A list of scopes assigned to the token.
          items:
            enum:
            - ActiveGateCertManagement
            - AdvancedSyntheticIntegration
            - CaptureRequestData
            - DTAQLAccess
            - DataExport
            - DataImport
            - DataPrivacy
            - Davis
            - DiagnosticExport
            - DssFileManagement
            - ExternalSyntheticIntegration
            - InstallerDownload
            - LogExport
            - MemoryDump
            - Mobile
            - PluginUpload
            - ReadConfig
            - ReadSyntheticData
            - RestRequestForwarding
            - RumBrowserExtension
            - RumJavaScriptTagManagement
            - SupportAlert
            - TenantTokenManagement
            - UserSessionAnonymization
            - ViewDashboard
            - ViewReport
            - WriteConfig
            - WriteSyntheticData
            - activeGateTokenManagement.create
            - activeGateTokenManagement.read
            - activeGateTokenManagement.write
            - activeGates.read
            - activeGates.write
            - analyzers.read
            - analyzers.write
            - apiTokens.read
            - apiTokens.write
            - attacks.read
            - attacks.write
            - auditLogs.read
            - credentialVault.read
            - credentialVault.write
            - entities.read
            - entities.write
            - events.ingest
            - events.read
            - extensionConfigurations.read
            - extensionConfigurations.write
            - extensionEnvironment.read
            - extensionEnvironment.write
            - extensions.read
            - extensions.write
            - geographicRegions.read
            - hub.install
            - hub.read
            - hub.write
            - javaScriptMappingFiles.read
            - javaScriptMappingFiles.write
            - logs.ingest
            - logs.read
            - metrics.ingest
            - metrics.read
            - metrics.write
            - networkZones.read
            - networkZones.write
            - oneAgents.read
            - oneAgents.write
            - openTelemetryTrace.ingest
            - problems.read
            - problems.write
            - releases.read
            - securityProblems.read
            - securityProblems.write
            - settings.read
            - settings.write
            - slo.read
            - slo.write
            - syntheticExecutions.read
            - syntheticExecutions.write
            - syntheticLocations.read
            - syntheticLocations.write
            - tenantTokenRotation.write
            - traces.lookup
            example: metrics.read
            type: string
          type: array
      type: object
    ApiTokenCreate:
      description: Parameters of a new API token.
      example:
        name: tokenName
        personalAccessToken: false
        scopes:
        - metrics.read
        - metrics.read
        expirationDate: now+14d
      properties:
        expirationDate:
          description: "The expiration date of the token. \n\nYou can use one of the\
            \ following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable\
            \ format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified,\
            \ UTC is used. You can use a space character instead of the `T`. Seconds\
            \ and fractions of a second are optional. \n* Relative timeframe, back\
            \ from now. The format is `now-NU/A`, where `N` is the amount of time,\
            \ `U` is the unit of time, and `A` is an alignment. The alignment rounds\
            \ all the smaller values to the nearest zero in the past. For example,\
            \ `now-1y/w` is one year back, aligned by a week. \nYou can also specify\
            \ relative timeframe without an alignment: `now-NU`. \nSupported time\
            \ units for the relative timeframe are: \n   * `m`: minutes \n   * `h`:\
            \ hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`:\
            \ years \n\nIf not set, the token never expires."
          example: now+14d
          type: string
        name:
          description: The name of the token.
          example: tokenName
          type: string
        personalAccessToken:
          description: "The token is a personal access token (`true`) or an API token\
            \ (`false`). \n\n Personal access tokens are tied to the permissions of\
            \ their owner."
          example: false
          type: boolean
        scopes:
          description: "A list of the scopes to be assigned to the token.\n\n* `InstallerDownload`:\
            \ PaaS integration - Installer download. \n* `DataExport`: Access problem\
            \ and event feed, metrics, and topology. \n* `PluginUpload`: Upload Extension.\
            \ \n* `SupportAlert`: PaaS integration - Support alert. \n* `AdvancedSyntheticIntegration`:\
            \ Dynatrace module integration - Synthetic Classic. \n* `ExternalSyntheticIntegration`:\
            \ Create and read synthetic monitors, locations, and nodes. \n* `RumBrowserExtension`:\
            \ RUM Browser Extension. \n* `LogExport`: Read logs. \n* `ReadConfig`:\
            \ Read configuration. \n* `WriteConfig`: Write configuration. \n* `DTAQLAccess`:\
            \ User sessions. \n* `UserSessionAnonymization`: Anonymize user session\
            \ data for data privacy reasons. \n* `DataPrivacy`: Change data privacy\
            \ settings. \n* `CaptureRequestData`: Capture request data. \n* `Davis`:\
            \ Dynatrace module integration - Davis. \n* `DssFileManagement`: Mobile\
            \ symbolication file management. \n* `RumJavaScriptTagManagement`: Real\
            \ user monitoring JavaScript tag management. \n* `TenantTokenManagement`:\
            \ Token management. \n* `ActiveGateCertManagement`: ActiveGate certificate\
            \ management. \n* `RestRequestForwarding`: Fetch data from a remote environment.\
            \ \n* `ReadSyntheticData`: Read synthetic monitors, locations, and nodes.\
            \ \n* `DataImport`: Data ingest, e.g.: metrics and events. \n* `syntheticExecutions.write`:\
            \ Write synthetic monitor executions. \n* `syntheticExecutions.read`:\
            \ Read synthetic monitor execution results. \n* `auditLogs.read`: Read\
            \ audit logs. \n* `metrics.read`: Read metrics. \n* `metrics.write`: Write\
            \ metrics. \n* `entities.read`: Read entities. \n* `entities.write`: Write\
            \ entities. \n* `problems.read`: Read problems. \n* `problems.write`:\
            \ Write problems. \n* `events.read`: Read events. \n* `events.ingest`:\
            \ Ingest events. \n* `analyzers.read`: Read analyzers. \n* `analyzers.write`:\
            \ Write & execute analyzers. \n* `networkZones.read`: Read network zones.\
            \ \n* `networkZones.write`: Write network zones. \n* `activeGates.read`:\
            \ Read ActiveGates. \n* `activeGates.write`: Write ActiveGates. \n* `activeGateTokenManagement.read`:\
            \ Read ActiveGate tokens. \n* `activeGateTokenManagement.create`: Create\
            \ ActiveGate tokens. \n* `activeGateTokenManagement.write`: Write ActiveGate\
            \ tokens. \n* `credentialVault.read`: Read credential vault entries. \n\
            * `credentialVault.write`: Write credential vault entries. \n* `extensions.read`:\
            \ Read extensions. \n* `extensions.write`: Write extensions. \n* `extensionConfigurations.read`:\
            \ Read extension monitoring configurations. \n* `extensionConfigurations.write`:\
            \ Write extension monitoring configurations. \n* `extensionEnvironment.read`:\
            \ Read extension environment configurations. \n* `extensionEnvironment.write`:\
            \ Write extension environment configurations. \n* `metrics.ingest`: Ingest\
            \ metrics. \n* `attacks.read`: Read attacks. \n* `attacks.write`: Write\
            \ Application Protection settings. \n* `securityProblems.read`: Read security\
            \ problems. \n* `securityProblems.write`: Write security problems. \n\
            * `syntheticLocations.read`: Read synthetic locations. \n* `syntheticLocations.write`:\
            \ Write synthetic locations. \n* `settings.read`: Read settings. \n* `settings.write`:\
            \ Write settings. \n* `tenantTokenRotation.write`: Tenant token rotation.\
            \ \n* `slo.read`: Read SLO. \n* `slo.write`: Write SLO. \n* `releases.read`:\
            \ Read releases. \n* `apiTokens.read`: Read API tokens. \n* `apiTokens.write`:\
            \ Write API tokens. \n* `openTelemetryTrace.ingest`: Ingest OpenTelemetry\
            \ traces. \n* `logs.read`: Read logs. \n* `logs.ingest`: Ingest logs.\
            \ \n* `geographicRegions.read`: Read Geographic regions. \n* `oneAgents.read`:\
            \ Read OneAgents. \n* `oneAgents.write`: Write OneAgents. \n* `traces.lookup`:\
            \ Look up a single trace. \n* `hub.read`: Read Hub related data. \n* `hub.write`:\
            \ Manage metadata of Hub items. \n* `hub.install`: Install and update\
            \ Hub items. \n* `javaScriptMappingFiles.read`: Read JavaScript mapping\
            \ files. \n* `javaScriptMappingFiles.write`: Write JavaScript mapping\
            \ files. \n"
          items:
            enum:
            - InstallerDownload
            - DataExport
            - PluginUpload
            - SupportAlert
            - AdvancedSyntheticIntegration
            - ExternalSyntheticIntegration
            - RumBrowserExtension
            - LogExport
            - ReadConfig
            - WriteConfig
            - DTAQLAccess
            - UserSessionAnonymization
            - DataPrivacy
            - CaptureRequestData
            - Davis
            - DssFileManagement
            - RumJavaScriptTagManagement
            - TenantTokenManagement
            - ActiveGateCertManagement
            - RestRequestForwarding
            - ReadSyntheticData
            - DataImport
            - syntheticExecutions.write
            - syntheticExecutions.read
            - auditLogs.read
            - metrics.read
            - metrics.write
            - entities.read
            - entities.write
            - problems.read
            - problems.write
            - events.read
            - events.ingest
            - analyzers.read
            - analyzers.write
            - networkZones.read
            - networkZones.write
            - activeGates.read
            - activeGates.write
            - activeGateTokenManagement.read
            - activeGateTokenManagement.create
            - activeGateTokenManagement.write
            - credentialVault.read
            - credentialVault.write
            - extensions.read
            - extensions.write
            - extensionConfigurations.read
            - extensionConfigurations.write
            - extensionEnvironment.read
            - extensionEnvironment.write
            - metrics.ingest
            - attacks.read
            - attacks.write
            - securityProblems.read
            - securityProblems.write
            - syntheticLocations.read
            - syntheticLocations.write
            - settings.read
            - settings.write
            - tenantTokenRotation.write
            - slo.read
            - slo.write
            - releases.read
            - apiTokens.read
            - apiTokens.write
            - openTelemetryTrace.ingest
            - logs.read
            - logs.ingest
            - geographicRegions.read
            - oneAgents.read
            - oneAgents.write
            - traces.lookup
            - hub.read
            - hub.write
            - hub.install
            - javaScriptMappingFiles.read
            - javaScriptMappingFiles.write
            example: metrics.read
            type: string
          type: array
      required:
      - name
      - scopes
      type: object
    ApiTokenCreated:
      description: The newly created token.
      example:
        id: dt0c01.ST2EY72KQINMH574WMNVI7YN
        expirationDate: 2020-11-12T08:15:30.144Z
        token: dt0c01.ST2EY72KQINMH574WMNVI7YN.G3DFPBEJYMODIDAEX454M7YWBUVEFOWKPRVMWFASS64NFH52PX6BNDVFFM572RZM
      properties:
        expirationDate:
          description: The token expiration date in ISO 8601 format (`yyyy-MM-dd'T'HH:mm:ss.SSS'Z'`).
          example: 2020-11-12T08:15:30.144Z
          type: string
        id:
          description: "The ID of the token, consisting of prefix and public part\
            \ of the token."
          example: dt0c01.ST2EY72KQINMH574WMNVI7YN
          type: string
        token:
          description: The secret of the token.
          example: dt0c01.ST2EY72KQINMH574WMNVI7YN.G3DFPBEJYMODIDAEX454M7YWBUVEFOWKPRVMWFASS64NFH52PX6BNDVFFM572RZM
          type: string
      type: object
    ApiTokenList:
      description: A list of API tokens.
      example:
        apiTokens:
          additionalMetadata:
            dashboardId: 82402bab-7370-4359-924d-88ed13c8919a
          creationDate: 2020-11-05T08:15:30.144Z
          disabled: "false"
          expirationDate: 2020-11-12T08:15:30.144Z
          id: dt0c01.ST2EY72KQINMH574WMNVI7YN
          lastUsedDate: 2020-11-12T08:15:30.144Z
          lastUsedIpAddress: 34.197.2.44
          name: tokenName
          owner: john.smith
          personalAccessToken: "true"
          scopes:
          - metrics.read
        pageSize: "1"
        totalCount: "1"
      properties:
        apiTokens:
          description: A list of API tokens.
          items:
            $ref: '#/components/schemas/ApiToken'
          type: array
        nextPageKey:
          description: "The cursor for the next page of results. Has the value of\
            \ `null` on the last page. \n\nUse it in the **nextPageKey** query parameter\
            \ to obtain subsequent pages of the result."
          example: AQAAABQBAAAABQ==
          type: string
        pageSize:
          description: The number of entries per page.
          format: int32
          type: integer
        totalCount:
          description: The total number of entries in the result.
          format: int64
          type: integer
      required:
      - totalCount
      type: object
    ApiTokenSecret:
      example:
        token: dt0c01.ST2EY72KQINMH574WMNVI7YN.G3DFPBEJYMODIDAEX454M7YWBUVEFOWKPRVMWFASS64NFH52PX6BNDVFFM572RZM
      properties:
        token:
          description: The API token.
          example: dt0c01.ST2EY72KQINMH574WMNVI7YN.G3DFPBEJYMODIDAEX454M7YWBUVEFOWKPRVMWFASS64NFH52PX6BNDVFFM572RZM
          type: string
      required:
      - token
      type: object
    ApiTokenUpdate:
      description: The update of the API token.
      example:
        name: myToken
        scopes:
        - InstallerDownload
        - InstallerDownload
        enabled: true
      properties:
        enabled:
          description: The token is enabled (`true`) or disabled (`false`)
          example: true
          type: boolean
        name:
          description: The name of the token.
          example: myToken
          type: string
        scopes:
          description: "The list of scopes assigned to the token. \n\nApart from the\
            \ new scopes, you need to submit the existing scopes you want to keep,\
            \ too. Any existing scope, missing in the payload, is removed.\n\n* `InstallerDownload`:\
            \ PaaS integration - Installer download. \n* `DataExport`: Access problem\
            \ and event feed, metrics, and topology. \n* `PluginUpload`: Upload Extension.\
            \ \n* `SupportAlert`: PaaS integration - Support alert. \n* `AdvancedSyntheticIntegration`:\
            \ Dynatrace module integration - Synthetic Classic. \n* `ExternalSyntheticIntegration`:\
            \ Create and read synthetic monitors, locations, and nodes. \n* `RumBrowserExtension`:\
            \ RUM Browser Extension. \n* `LogExport`: Read logs. \n* `ReadConfig`:\
            \ Read configuration. \n* `WriteConfig`: Write configuration. \n* `DTAQLAccess`:\
            \ User sessions. \n* `UserSessionAnonymization`: Anonymize user session\
            \ data for data privacy reasons. \n* `DataPrivacy`: Change data privacy\
            \ settings. \n* `CaptureRequestData`: Capture request data. \n* `Davis`:\
            \ Dynatrace module integration - Davis. \n* `DssFileManagement`: Mobile\
            \ symbolication file management. \n* `RumJavaScriptTagManagement`: Real\
            \ user monitoring JavaScript tag management. \n* `TenantTokenManagement`:\
            \ Token management. \n* `ActiveGateCertManagement`: ActiveGate certificate\
            \ management. \n* `RestRequestForwarding`: Fetch data from a remote environment.\
            \ \n* `ReadSyntheticData`: Read synthetic monitors, locations, and nodes.\
            \ \n* `DataImport`: Data ingest, e.g.: metrics and events. \n* `syntheticExecutions.write`:\
            \ Write synthetic monitor executions. \n* `syntheticExecutions.read`:\
            \ Read synthetic monitor execution results. \n* `auditLogs.read`: Read\
            \ audit logs. \n* `metrics.read`: Read metrics. \n* `metrics.write`: Write\
            \ metrics. \n* `entities.read`: Read entities. \n* `entities.write`: Write\
            \ entities. \n* `problems.read`: Read problems. \n* `problems.write`:\
            \ Write problems. \n* `events.read`: Read events. \n* `events.ingest`:\
            \ Ingest events. \n* `analyzers.read`: Read analyzers. \n* `analyzers.write`:\
            \ Write & execute analyzers. \n* `networkZones.read`: Read network zones.\
            \ \n* `networkZones.write`: Write network zones. \n* `activeGates.read`:\
            \ Read ActiveGates. \n* `activeGates.write`: Write ActiveGates. \n* `activeGateTokenManagement.read`:\
            \ Read ActiveGate tokens. \n* `activeGateTokenManagement.create`: Create\
            \ ActiveGate tokens. \n* `activeGateTokenManagement.write`: Write ActiveGate\
            \ tokens. \n* `credentialVault.read`: Read credential vault entries. \n\
            * `credentialVault.write`: Write credential vault entries. \n* `extensions.read`:\
            \ Read extensions. \n* `extensions.write`: Write extensions. \n* `extensionConfigurations.read`:\
            \ Read extension monitoring configurations. \n* `extensionConfigurations.write`:\
            \ Write extension monitoring configurations. \n* `extensionEnvironment.read`:\
            \ Read extension environment configurations. \n* `extensionEnvironment.write`:\
            \ Write extension environment configurations. \n* `metrics.ingest`: Ingest\
            \ metrics. \n* `attacks.read`: Read attacks. \n* `attacks.write`: Write\
            \ Application Protection settings. \n* `securityProblems.read`: Read security\
            \ problems. \n* `securityProblems.write`: Write security problems. \n\
            * `syntheticLocations.read`: Read synthetic locations. \n* `syntheticLocations.write`:\
            \ Write synthetic locations. \n* `settings.read`: Read settings. \n* `settings.write`:\
            \ Write settings. \n* `tenantTokenRotation.write`: Tenant token rotation.\
            \ \n* `slo.read`: Read SLO. \n* `slo.write`: Write SLO. \n* `releases.read`:\
            \ Read releases. \n* `apiTokens.read`: Read API tokens. \n* `apiTokens.write`:\
            \ Write API tokens. \n* `openTelemetryTrace.ingest`: Ingest OpenTelemetry\
            \ traces. \n* `logs.read`: Read logs. \n* `logs.ingest`: Ingest logs.\
            \ \n* `geographicRegions.read`: Read Geographic regions. \n* `oneAgents.read`:\
            \ Read OneAgents. \n* `oneAgents.write`: Write OneAgents. \n* `traces.lookup`:\
            \ Look up a single trace. \n* `hub.read`: Read Hub related data. \n* `hub.write`:\
            \ Manage metadata of Hub items. \n* `hub.install`: Install and update\
            \ Hub items. \n* `javaScriptMappingFiles.read`: Read JavaScript mapping\
            \ files. \n* `javaScriptMappingFiles.write`: Write JavaScript mapping\
            \ files. \n"
          items:
            enum:
            - InstallerDownload
            - DataExport
            - PluginUpload
            - SupportAlert
            - AdvancedSyntheticIntegration
            - ExternalSyntheticIntegration
            - RumBrowserExtension
            - LogExport
            - ReadConfig
            - WriteConfig
            - DTAQLAccess
            - UserSessionAnonymization
            - DataPrivacy
            - CaptureRequestData
            - Davis
            - DssFileManagement
            - RumJavaScriptTagManagement
            - TenantTokenManagement
            - ActiveGateCertManagement
            - RestRequestForwarding
            - ReadSyntheticData
            - DataImport
            - syntheticExecutions.write
            - syntheticExecutions.read
            - auditLogs.read
            - metrics.read
            - metrics.write
            - entities.read
            - entities.write
            - problems.read
            - problems.write
            - events.read
            - events.ingest
            - analyzers.read
            - analyzers.write
            - networkZones.read
            - networkZones.write
            - activeGates.read
            - activeGates.write
            - activeGateTokenManagement.read
            - activeGateTokenManagement.create
            - activeGateTokenManagement.write
            - credentialVault.read
            - credentialVault.write
            - extensions.read
            - extensions.write
            - extensionConfigurations.read
            - extensionConfigurations.write
            - extensionEnvironment.read
            - extensionEnvironment.write
            - metrics.ingest
            - attacks.read
            - attacks.write
            - securityProblems.read
            - securityProblems.write
            - syntheticLocations.read
            - syntheticLocations.write
            - settings.read
            - settings.write
            - tenantTokenRotation.write
            - slo.read
            - slo.write
            - releases.read
            - apiTokens.read
            - apiTokens.write
            - openTelemetryTrace.ingest
            - logs.read
            - logs.ingest
            - geographicRegions.read
            - oneAgents.read
            - oneAgents.write
            - traces.lookup
            - hub.read
            - hub.write
            - hub.install
            - javaScriptMappingFiles.read
            - javaScriptMappingFiles.write
            type: string
          type: array
      type: object
    ApplicationImpact:
      allOf:
      - $ref: '#/components/schemas/Impact'
      description: Analysis of problem impact to an application.
      required:
      - estimatedAffectedUsers
      - impactType
      - impactedEntity
      type: object
    AppliedFilter:
      description: Optional filters that took effect.
      properties:
        appliedTo:
          description: "The keys of all metrics that this filter has been applied\
            \ to. \n\nCan contain multiple metrics for complex expressions and always\
            \ at least one key."
          items:
            description: "The keys of all metrics that this filter has been applied\
              \ to. \n\nCan contain multiple metrics for complex expressions and always\
              \ at least one key."
            type: string
          type: array
        filter:
          $ref: '#/components/schemas/Filter'
      required:
      - appliedTo
      type: object
    AssetInfo:
      description: Assets types and its count
      example:
        count: 0
        assetType: assetType
      properties:
        assetType:
          type: string
        count:
          format: int32
          type: integer
      type: object
    AssetInfoDto:
      description: Metadata for an extension asset.
      example:
        assetSchemaDetails:
          schemaId: schemaId
          scope: scope
          key: key
        displayName: displayName
        id: id
        type: ALERT
      properties:
        assetSchemaDetails:
          $ref: '#/components/schemas/AssetSchemaDetailsDto'
        displayName:
          description: User-friendly name of the asset.
          type: string
        id:
          description: ID of the asset. Identifies the asset in REST API and/or UI
            (where applicable).
          type: string
        type:
          description: The type of the asset.
          enum:
          - ALERT
          - DASHBOARD
          - DECLARATIVE_PROCESSES
          - GENERIC_RELATIONSHIP
          - GENERIC_TYPE
          - LIST_SCREEN_FILTERS
          - LIST_SCREEN_INJECTIONS
          - LIST_SCREEN_LAYOUT
          - LOG_EVENT
          - LOG_PROCESSING_RULE
          - METRIC_METADATA
          - METRIC_QUERY
          - SCREEN_ACTIONS
          - SCREEN_CHART_GROUPS
          - SCREEN_ENTITIES_LISTS
          - SCREEN_EVENTS_CARDS
          - SCREEN_FILTERS
          - SCREEN_HEALTH_CARDS
          - SCREEN_INJECTIONS
          - SCREEN_LAYOUT
          - SCREEN_LOGS_CARDS
          - SCREEN_MESSAGE_CARDS
          - SCREEN_METRIC_TABLES
          - SCREEN_PROBLEMS
          - SCREEN_PROPERTIES
          type: string
      type: object
    AssetSchemaDetailsDto:
      description: Settings schema details for asset
      example:
        schemaId: schemaId
        scope: scope
        key: key
      properties:
        key:
          description: Asset key
          type: string
        schemaId:
          description: Asset schema id
          type: string
        scope:
          description: Asset configuration scope
          type: string
      type: object
    Attack:
      description: Describes an attack.
      example:
        attackTarget:
          name: name
          entityId: entityId
        request:
          path: path
          protocolDetails:
            http:
              headers:
                truncationInfo:
                  truncated: true
                values:
                - name: name
                  value: value
                - name: name
                  value: value
              requestMethod: requestMethod
              parameters:
                truncationInfo:
                  truncated: true
                values:
                - name: name
                  value: value
                - name: name
                  value: value
          host: host
          url: url
        securityProblem:
          assessment:
            exposure: NOT_AVAILABLE
            dataAssets: NOT_AVAILABLE
            numberOfReachableDataAssets: 6
          securityProblemId: securityProblemId
        displayName: displayName
        attacker:
          sourceIp: sourceIp
          location:
            country: country
            city: city
            countryCode: countryCode
        technology: DOTNET
        vulnerability:
          codeLocation:
            parameterTypes:
              truncationInfo:
                truncated: true
              values:
              - values
              - values
            functionName: functionName
            displayName: displayName
            className: className
            lineNumber: 0
            returnType: returnType
          vulnerabilityId: vulnerabilityId
          displayName: displayName
          vulnerableFunctionInput:
            inputSegments:
            - type: MALICIOUS_INPUT
              value: value
            - type: MALICIOUS_INPUT
              value: value
            type: COMMAND
          vulnerableFunction:
            parameterTypes:
              truncationInfo:
                truncated: true
              values:
              - values
              - values
            functionName: functionName
            displayName: displayName
            className: className
            returnType: returnType
        affectedEntities:
          processGroupInstance:
            name: name
            id: id
          processGroup:
            name: name
            id: id
        attackType: COMMAND_INJECTION
        managementZones:
        - name: name
          id: id
        - name: name
          id: id
        entrypoint:
          codeLocation:
            parameterTypes:
              truncationInfo:
                truncated: true
              values:
              - values
              - values
            functionName: functionName
            displayName: displayName
            className: className
            lineNumber: 0
            returnType: returnType
          payload:
          - truncationInfo:
              truncated: true
            values:
            - name: name
              type: HTTP_BODY
              value: value
            - name: name
              type: HTTP_BODY
              value: value
          - truncationInfo:
              truncated: true
            values:
            - name: name
              type: HTTP_BODY
              value: value
            - name: name
              type: HTTP_BODY
              value: value
          entrypointFunction:
            parameterTypes:
              truncationInfo:
                truncated: true
              values:
              - values
              - values
            functionName: functionName
            displayName: displayName
            className: className
            returnType: returnType
        state: ALLOWLISTED
        displayId: displayId
        attackId: attackId
        timestamp: 1
      properties:
        affectedEntities:
          $ref: '#/components/schemas/AffectedEntities'
        attackId:
          description: The ID of the attack.
          readOnly: true
          type: string
        attackTarget:
          $ref: '#/components/schemas/AttackTarget'
        attackType:
          description: The type of the attack.
          enum:
          - COMMAND_INJECTION
          - JNDI_INJECTION
          - SQL_INJECTION
          readOnly: true
          type: string
        attacker:
          $ref: '#/components/schemas/Attacker'
        displayId:
          description: The display ID of the attack.
          readOnly: true
          type: string
        displayName:
          description: The display name of the attack.
          readOnly: true
          type: string
        entrypoint:
          $ref: '#/components/schemas/AttackEntrypoint'
        managementZones:
          description: A list of management zones which the affected entities belong
            to.
          items:
            $ref: '#/components/schemas/ManagementZone'
          readOnly: true
          type: array
        request:
          $ref: '#/components/schemas/RequestInformation'
        securityProblem:
          $ref: '#/components/schemas/AttackSecurityProblem'
        state:
          description: The state of the attack.
          enum:
          - ALLOWLISTED
          - BLOCKED
          - EXPLOITED
          readOnly: true
          type: string
        technology:
          description: The technology of the attack.
          enum:
          - DOTNET
          - JAVA
          readOnly: true
          type: string
        timestamp:
          description: The timestamp when the attack occurred.
          format: int64
          readOnly: true
          type: integer
        vulnerability:
          $ref: '#/components/schemas/Vulnerability'
      type: object
    AttackEntrypoint:
      description: Describes the entrypoint used by an attacker to start a specific
        attack.
      example:
        codeLocation:
          parameterTypes:
            truncationInfo:
              truncated: true
            values:
            - values
            - values
          functionName: functionName
          displayName: displayName
          className: className
          lineNumber: 0
          returnType: returnType
        payload:
        - truncationInfo:
            truncated: true
          values:
          - name: name
            type: HTTP_BODY
            value: value
          - name: name
            type: HTTP_BODY
            value: value
        - truncationInfo:
            truncated: true
          values:
          - name: name
            type: HTTP_BODY
            value: value
          - name: name
            type: HTTP_BODY
            value: value
        entrypointFunction:
          parameterTypes:
            truncationInfo:
              truncated: true
            values:
            - values
            - values
          functionName: functionName
          displayName: displayName
          className: className
          returnType: returnType
      properties:
        codeLocation:
          $ref: '#/components/schemas/CodeLocation'
        entrypointFunction:
          $ref: '#/components/schemas/FunctionDefinition'
        payload:
          description: All relevant payload data that has been sent during the attack.
          items:
            $ref: '#/components/schemas/AttackEntrypoint_payload_inner'
          readOnly: true
          type: array
      readOnly: true
      type: object
    AttackList:
      description: A list of attacks.
      example:
        nextPageKey: AQAAABQBAAAABQ==
        attacks:
        - attackTarget:
            name: name
            entityId: entityId
          request:
            path: path
            protocolDetails:
              http:
                headers:
                  truncationInfo:
                    truncated: true
                  values:
                  - name: name
                    value: value
                  - name: name
                    value: value
                requestMethod: requestMethod
                parameters:
                  truncationInfo:
                    truncated: true
                  values:
                  - name: name
                    value: value
                  - name: name
                    value: value
            host: host
            url: url
          securityProblem:
            assessment:
              exposure: NOT_AVAILABLE
              dataAssets: NOT_AVAILABLE
              numberOfReachableDataAssets: 6
            securityProblemId: securityProblemId
          displayName: displayName
          attacker:
            sourceIp: sourceIp
            location:
              country: country
              city: city
              countryCode: countryCode
          technology: DOTNET
          vulnerability:
            codeLocation:
              parameterTypes:
                truncationInfo:
                  truncated: true
                values:
                - values
                - values
              functionName: functionName
              displayName: displayName
              className: className
              lineNumber: 0
              returnType: returnType
            vulnerabilityId: vulnerabilityId
            displayName: displayName
            vulnerableFunctionInput:
              inputSegments:
              - type: MALICIOUS_INPUT
                value: value
              - type: MALICIOUS_INPUT
                value: value
              type: COMMAND
            vulnerableFunction:
              parameterTypes:
                truncationInfo:
                  truncated: true
                values:
                - values
                - values
              functionName: functionName
              displayName: displayName
              className: className
              returnType: returnType
          affectedEntities:
            processGroupInstance:
              name: name
              id: id
            processGroup:
              name: name
              id: id
          attackType: COMMAND_INJECTION
          managementZones:
          - name: name
            id: id
          - name: name
            id: id
          entrypoint:
            codeLocation:
              parameterTypes:
                truncationInfo:
                  truncated: true
                values:
                - values
                - values
              functionName: functionName
              displayName: displayName
              className: className
              lineNumber: 0
              returnType: returnType
            payload:
            - truncationInfo:
                truncated: true
              values:
              - name: name
                type: HTTP_BODY
                value: value
              - name: name
                type: HTTP_BODY
                value: value
            - truncationInfo:
                truncated: true
              values:
              - name: name
                type: HTTP_BODY
                value: value
              - name: name
                type: HTTP_BODY
                value: value
            entrypointFunction:
              parameterTypes:
                truncationInfo:
                  truncated: true
                values:
                - values
                - values
              functionName: functionName
              displayName: displayName
              className: className
              returnType: returnType
          state: ALLOWLISTED
          displayId: displayId
          attackId: attackId
          timestamp: 1
        - attackTarget:
            name: name
            entityId: entityId
          request:
            path: path
            protocolDetails:
              http:
                headers:
                  truncationInfo:
                    truncated: true
                  values:
                  - name: name
                    value: value
                  - name: name
                    value: value
                requestMethod: requestMethod
                parameters:
                  truncationInfo:
                    truncated: true
                  values:
                  - name: name
                    value: value
                  - name: name
                    value: value
            host: host
            url: url
          securityProblem:
            assessment:
              exposure: NOT_AVAILABLE
              dataAssets: NOT_AVAILABLE
              numberOfReachableDataAssets: 6
            securityProblemId: securityProblemId
          displayName: displayName
          attacker:
            sourceIp: sourceIp
            location:
              country: country
              city: city
              countryCode: countryCode
          technology: DOTNET
          vulnerability:
            codeLocation:
              parameterTypes:
                truncationInfo:
                  truncated: true
                values:
                - values
                - values
              functionName: functionName
              displayName: displayName
              className: className
              lineNumber: 0
              returnType: returnType
            vulnerabilityId: vulnerabilityId
            displayName: displayName
            vulnerableFunctionInput:
              inputSegments:
              - type: MALICIOUS_INPUT
                value: value
              - type: MALICIOUS_INPUT
                value: value
              type: COMMAND
            vulnerableFunction:
              parameterTypes:
                truncationInfo:
                  truncated: true
                values:
                - values
                - values
              functionName: functionName
              displayName: displayName
              className: className
              returnType: returnType
          affectedEntities:
            processGroupInstance:
              name: name
              id: id
            processGroup:
              name: name
              id: id
          attackType: COMMAND_INJECTION
          managementZones:
          - name: name
            id: id
          - name: name
            id: id
          entrypoint:
            codeLocation:
              parameterTypes:
                truncationInfo:
                  truncated: true
                values:
                - values
                - values
              functionName: functionName
              displayName: displayName
              className: className
              lineNumber: 0
              returnType: returnType
            payload:
            - truncationInfo:
                truncated: true
              values:
              - name: name
                type: HTTP_BODY
                value: value
              - name: name
                type: HTTP_BODY
                value: value
            - truncationInfo:
                truncated: true
              values:
              - name: name
                type: HTTP_BODY
                value: value
              - name: name
                type: HTTP_BODY
                value: value
            entrypointFunction:
              parameterTypes:
                truncationInfo:
                  truncated: true
                values:
                - values
                - values
              functionName: functionName
              displayName: displayName
              className: className
              returnType: returnType
          state: ALLOWLISTED
          displayId: displayId
          attackId: attackId
          timestamp: 1
        pageSize: 5
        totalCount: 5
      properties:
        attacks:
          description: A list of attacks.
          items:
            $ref: '#/components/schemas/Attack'
          readOnly: true
          type: array
        nextPageKey:
          description: "The cursor for the next page of results. Has the value of\
            \ `null` on the last page. \n\nUse it in the **nextPageKey** query parameter\
            \ to obtain subsequent pages of the result."
          example: AQAAABQBAAAABQ==
          type: string
        pageSize:
          description: The number of entries per page.
          format: int32
          type: integer
        totalCount:
          description: The total number of entries in the result.
          format: int64
          type: integer
      required:
      - totalCount
      type: object
    AttackRequestHeader:
      description: A header element of the attack's request.
      example:
        name: name
        value: value
      properties:
        name:
          description: The name of the header element.
          readOnly: true
          type: string
        value:
          description: The value of the header element.
          readOnly: true
          type: string
      readOnly: true
      type: object
    AttackSecurityProblem:
      description: Assessment information and the ID of a security problem related
        to an attack.
      example:
        assessment:
          exposure: NOT_AVAILABLE
          dataAssets: NOT_AVAILABLE
          numberOfReachableDataAssets: 6
        securityProblemId: securityProblemId
      properties:
        assessment:
          $ref: '#/components/schemas/AttackSecurityProblemAssessmentDto'
        securityProblemId:
          description: The security problem ID.
          readOnly: true
          type: string
      readOnly: true
      type: object
    AttackSecurityProblemAssessmentDto:
      description: The assessment of a security problem related to an attack.
      example:
        exposure: NOT_AVAILABLE
        dataAssets: NOT_AVAILABLE
        numberOfReachableDataAssets: 6
      properties:
        dataAssets:
          description: The reachability of data assets by the attacked target.
          enum:
          - NOT_AVAILABLE
          - NOT_DETECTED
          - REACHABLE
          readOnly: true
          type: string
        exposure:
          description: The level of exposure of the attacked target
          enum:
          - NOT_AVAILABLE
          - NOT_DETECTED
          - PUBLIC_NETWORK
          readOnly: true
          type: string
        numberOfReachableDataAssets:
          description: The number of data assets reachable by the attacked target.
          format: int32
          readOnly: true
          type: integer
      readOnly: true
      type: object
    AttackTarget:
      description: Information about the targeted host/database of an attack.
      example:
        name: name
        entityId: entityId
      properties:
        entityId:
          description: The monitored entity ID of the targeted host/database.
          readOnly: true
          type: string
        name:
          description: The name of the targeted host/database.
          readOnly: true
          type: string
      readOnly: true
      type: object
    Attacker:
      description: Attacker of an attack.
      example:
        sourceIp: sourceIp
        location:
          country: country
          city: city
          countryCode: countryCode
      properties:
        location:
          $ref: '#/components/schemas/AttackerLocation'
        sourceIp:
          description: The source IP of the attacker.
          readOnly: true
          type: string
      readOnly: true
      type: object
    AttackerLocation:
      description: Location of an attacker.
      example:
        country: country
        city: city
        countryCode: countryCode
      properties:
        city:
          description: City of the attacker.
          readOnly: true
          type: string
        country:
          description: The country of the attacker.
          readOnly: true
          type: string
        countryCode:
          description: "The country code of the country of the attacker, according\
            \ to the ISO 3166-1 Alpha-2 standard."
          readOnly: true
          type: string
      readOnly: true
      type: object
    AuditLog:
      description: The audit log of your environment.
      example:
        auditLogs:
        - category: CONFIG
          entityId: "MOBILE_RUM: MOBILE_APPLICATION-752C223D59734CD2"
          environmentId: prod-env-13
          eventType: UPDATE
          logId: "197425568800060000"
          patch:
          - oldValue: 20000
            op: replace
            path: /refreshTimeIntervalMillis
            value: 30000
          success: true
          timestamp: 1974255688445
          user: test.user@company.com
          userOrigin: webui (192.168.0.2)
          userType: USER_NAME
        nextPageKey: ___a7acX3q0AAAAAACJidWlsdGluOnNlcnZpY2lUVEJCUzBaNVIxVjJOSGt6Y3oyLTcwMUZWRkxlclH__9rtpxferQ
        pageSize: 5
        totalCount: 10
      properties:
        auditLogs:
          description: A list of audit log entries ordered by the creation timestamp.
          items:
            $ref: '#/components/schemas/AuditLogEntry'
          type: array
        nextPageKey:
          description: "The cursor for the next page of results. Has the value of\
            \ `null` on the last page. \n\nUse it in the **nextPageKey** query parameter\
            \ to obtain subsequent pages of the result."
          example: AQAAABQBAAAABQ==
          type: string
        pageSize:
          description: The number of entries per page.
          format: int32
          type: integer
        totalCount:
          description: The total number of entries in the result.
          format: int64
          type: integer
      required:
      - totalCount
      type: object
    AuditLogEntry:
      description: An entry of the audit log.
      example:
        category: CONFIG
        entityId: "MOBILE_RUM: MOBILE_APPLICATION-752C223D59734CD2"
        environmentId: prod-env-13
        eventType: UPDATE
        logId: "197425568800060000"
        patch:
        - oldValue: 20000
          op: replace
          path: /refreshTimeIntervalMillis
          value: 30000
        success: true
        timestamp: 1974255688445
        user: test.user@company.com
        userOrigin: webui (192.168.0.2)
        userType: USER_NAME
      properties:
        category:
          description: The category of the recorded operation.
          enum:
          - ACTIVE_GATE
          - AGENT
          - CONFIG
          - DEBUG_UI
          - MANUAL_TAGGING_SERVICE
          - TOKEN
          - WEB_UI
          readOnly: true
          type: string
        entityId:
          description: "The ID of an entity from the **category**. \n\nFor example,\
            \ it can be config ID for the `CONFIG` category or token ID for the `TOKEN`\
            \ category."
          readOnly: true
          type: string
        environmentId:
          description: The ID of the Dynatrace environment where the recorded operation
            occurred.
          readOnly: true
          type: string
        eventType:
          description: The type of the recorded operation.
          enum:
          - CREATE
          - DELETE
          - GENERAL
          - GET
          - LOGIN
          - LOGOUT
          - PATCH
          - POST
          - PUT
          - READ
          - REMOTE_CONFIGURATION_MANAGEMENT
          - REVOKE
          - TAG_ADD
          - TAG_REMOVE
          - TAG_UPDATE
          - UPDATE
          readOnly: true
          type: string
        logId:
          description: The ID of the log entry.
          maxLength: 19
          minLength: 0
          readOnly: true
          type: string
        message:
          description: The logged message.
          readOnly: true
          type: string
        patch:
          description: "The patch of the recorded operation as the JSON representation.\
            \ \n\nThe format is an enhanced RFC 6902. The patch also carries the previous\
            \ value in the **oldValue** field."
          readOnly: true
          type: object
        success:
          description: The recorded operation is successful (`true`) or failed (`false`).
          readOnly: true
          type: boolean
        timestamp:
          description: "The timestamp of the record creation, in UTC milliseconds."
          format: int64
          readOnly: true
          type: integer
        user:
          description: The ID of the user who performed the recorded operation.
          readOnly: true
          type: string
        userOrigin:
          description: The origin and the IP address of the **user**.
          readOnly: true
          type: string
        userType:
          description: The type of the authentication of the **user**.
          enum:
          - PUBLIC_TOKEN_IDENTIFIER
          - REQUEST_ID
          - SERVICE_NAME
          - TOKEN_HASH
          - USER_NAME
          readOnly: true
          type: string
      required:
      - category
      - environmentId
      - eventType
      - logId
      - success
      - timestamp
      - user
      - userType
      type: object
    AuthorDto:
      description: Extension author
      example:
        name: name
      properties:
        name:
          description: Author name
          type: string
      type: object
    AvailabilityEvidence:
      allOf:
      - $ref: '#/components/schemas/Evidence'
      - properties:
          endTime:
            description: "The end time of the evidence, in UTC milliseconds."
            format: int64
            type: integer
        type: object
      description: "The availability evidence of the problem. \n\nIndicates an entity\
        \ that has been unavailable during the problem lifespan and that might be\
        \ related to the root cause."
      required:
      - displayName
      - endTime
      - entity
      - evidenceType
      - rootCauseRelevant
      - startTime
      type: object
    AzureClientSecret:
      allOf:
      - $ref: '#/components/schemas/ExternalVault'
      - properties:
          clientId:
            description: Client (application) ID of Azure application in Azure Active
              Directory which has permission to access secrets in Azure Key Vault.
            type: string
          clientSecret:
            description: Client secret generated for Azure application in Azure Active
              Directory used for proving identity when requesting a token used later
              for accessing secrets in Azure Key Vault.
            type: string
          tenantId:
            description: Tenant (directory) ID of Azure application in Azure Active
              Directory which has permission to access secrets in Azure Key Vault.
            type: string
        type: object
      description: Synchronization credentials with Azure Key Vault using client secret
        authentication method
      type: object
    AzureClientSecretConfig:
      allOf:
      - $ref: '#/components/schemas/ExternalVaultConfig'
      - properties:
          clientId:
            type: string
          clientSecret:
            type: string
          tenantId:
            type: string
        type: object
      type: object
    BMAction:
      allOf:
      - $ref: '#/components/schemas/ExecutionStep'
      - properties:
          apdexType:
            description: The user experience index of the action.
            enum:
            - FRUSTRATED
            - SATISFIED
            - TOLERATING
            - UNKNOWN
            type: string
          cdnBusyTime:
            description: "The time spent waiting for CDN resources for the action,\
              \ in milliseconds."
            format: int32
            type: integer
          cdnResources:
            description: The number of resources fetched from a CDN for the action.
            format: int32
            type: integer
          clientTime:
            description: "The event startTime in client time, in milliseconds."
            format: int64
            type: integer
          cumulativeLayoutShift:
            description: "Cumulative layout shift: Available for Chromium-based browsers.\
              \ Measured using Google-provided APIs."
            format: double
            type: number
          customErrorCount:
            description: The total number of custom errors during the action.
            format: int32
            type: integer
          documentInteractiveTime:
            description: "The amount of time spent until the document for the action\
              \ became interactive, in milliseconds."
            format: int32
            type: integer
          domCompleteTime:
            description: "The amount of time until the DOM tree is completed, in milliseconds."
            format: int32
            type: integer
          domContentLoadedTime:
            description: "The amount of time until the DOM tree is loaded, in milliseconds."
            format: int32
            type: integer
          domain:
            description: The DNS domain where the action has been recorded
            type: string
          duration:
            description: "The duration of the action, in milliseconds"
            format: int64
            type: integer
          endTime:
            description: "The stop time of the action on the server, in UTC milliseconds"
            format: int64
            type: integer
          entryAction:
            type: boolean
          exitAction:
            type: boolean
          firstInputDelay:
            description: The first input delay (FID) is the time (in milliseconds)
              that the browser took to respond to the first user input.
            format: int32
            type: integer
          firstPartyBusyTime:
            description: "The time spent waiting for resources from the originating\
              \ server for the action, in milliseconds."
            format: int32
            type: integer
          firstPartyResources:
            description: The number of resources fetched from the originating server
              for the action.
            format: int32
            type: integer
          frontendTime:
            description: "The amount of time spent on the frontend rendering for the\
              \ action, in milliseconds."
            format: int32
            type: integer
          javascriptErrorCount:
            description: The total number of Javascript errors during the action.
            format: int32
            type: integer
          largestContentfulPaint:
            description: The largest contentful paint (LCP) is the time (in milliseconds)
              that the largest element on the page took to render.
            format: int32
            type: integer
          loadEventEnd:
            description: "The amount of time until the load event ended, in milliseconds."
            format: int32
            type: integer
          loadEventStart:
            description: "The amount of time until the load event started, in milliseconds."
            format: int32
            type: integer
          name:
            description: The name of the action.
            type: string
          navigationStartTime:
            description: "The timestamp of the navigation start, in UTC milliseconds."
            format: int64
            type: integer
          networkTime:
            description: "The amount of time spent on the data transfer for the action,\
              \ in milliseconds."
            format: int32
            type: integer
          referrer:
            description: The referrer.
            type: string
          requestErrorCount:
            description: The total number of request errors during the action.
            format: int32
            type: integer
          requestStart:
            description: "The amount of time until the request started, in milliseconds."
            format: int32
            type: integer
          responseEnd:
            description: "The amount of time until the response ended, in milliseconds."
            format: int32
            type: integer
          responseStart:
            description: "The amount of time until the response started, in milliseconds."
            format: int32
            type: integer
          serverTime:
            description: "The amount of time spent on the server-side processing for\
              \ the action, in milliseconds."
            format: int32
            type: integer
          speedIndex:
            description: A score indicating how quickly the page content is visually
              populated. A low speed index means that most parts of a page are rendering
              quickly.
            format: int32
            type: integer
          startSequenceNumber:
            description: The sequence number of the action (to get a kind of order).
            format: int32
            type: integer
          startTime:
            description: "The start time of the action on the server, in in UTC milliseconds."
            format: int64
            type: integer
          targetUrl:
            description: The URL of the action.
            type: string
          thirdPartyBusyTime:
            description: "The time spent waiting for third party resources for the\
              \ action, in milliseconds."
            format: int32
            type: integer
          thirdPartyResources:
            description: The number of third party resources loaded for the action.
            format: int32
            type: integer
          totalBlockingTime:
            description: The time between the moment when the browser receives a request
              to download a resource and the time that it actually starts downloading
              the resource in ms.
            format: int32
            type: integer
          type:
            description: The type of the action.
            enum:
            - Custom
            - EndVisit
            - Error
            - Load
            - RageClick
            - StandaloneAgentEvent
            - StandaloneHttpError
            - SyntheticHiddenAction
            - UserSessionProperties
            - ViewChangeEvent
            - VisitTag
            - Xhr
            type: string
          userActionPropertyCount:
            description: The total number of properties in the action.
            format: int32
            type: integer
          visuallyCompleteTime:
            description: "The amount of time until the page is visually complete,\
              \ in milliseconds."
            format: int32
            type: integer
        type: object
      description: Contains detailed information about Browser monitor action.
      required:
      - monitorType
      type: object
    BizEventIngestError:
      properties:
        id:
          type: string
        index:
          format: int32
          type: integer
        message:
          type: string
        source:
          type: string
      type: object
    BizEventIngestResult:
      description: Result received after ingesting business events.
      properties:
        errors:
          description: A list of business events ingest errors.
          items:
            $ref: '#/components/schemas/BizEventIngestError'
          type: array
      type: object
    BurnRateAlert:
      allOf:
      - $ref: '#/components/schemas/AbstractSloAlertDto'
      description: Parameters of an error budget burn rate alert.
      required:
      - alertName
      - alertThreshold
      - alertType
      type: object
    Category:
      description: A list of available categories.
      example:
        name: name
        description: description
        id: id
      properties:
        description:
          description: Description of the category
          type: string
        id:
          description: Id of the category
          type: string
        name:
          description: Name of the category
          type: string
      type: object
    CategoryList:
      example:
        items:
        - name: name
          description: description
          id: id
        - name: name
          description: description
          id: id
      properties:
        items:
          description: A list of available categories.
          items:
            $ref: '#/components/schemas/Category'
          type: array
      type: object
    CertificateCredentials:
      allOf:
      - $ref: '#/components/schemas/Credentials'
      - properties:
          certificate:
            description: The certificate in the string format.
            type: string
          certificateFormat:
            description: The certificate format.
            enum:
            - PEM
            - PKCS12
            - UNKNOWN
            type: string
          password:
            description: The password of the credential (Base64 encoded).
            type: string
        type: object
      description: A credentials set of the `CERTIFICATE` type.
      required:
      - certificate
      - certificateFormat
      - name
      - password
      - scope
      - scopes
      type: object
    City:
      description: Information about a city.
      example:
        latitude: 48.85599
        longitude: 2.3448
        name: Paris
      properties:
        latitude:
          description: The latitude of the city.
          format: float
          type: number
        longitude:
          description: The longitude of the city.
          format: float
          type: number
        name:
          description: The name of the city.
          type: string
      type: object
    CloudEvent:
      description: "CloudEvents is a [specification](https://github.com/cloudevents/spec/blob/v1.0/spec.json)\
        \ for describing event data in common formats to provide interoperability\
        \ across services, platforms and systems."
      example:
        data_base64: data_base64
        datacontenttype: datacontenttype
        data: "{}"
        dtcontext: dtcontext
        subject: subject
        traceparent: traceparent
        specversion: specversion
        id: id
        source: source
        time: 2000-01-23T04:56:07.000+00:00
        type: type
        dataschema: https://openapi-generator.tech
      properties:
        data:
          type: object
        data_base64:
          type: string
        datacontenttype:
          type: string
        dataschema:
          format: uri
          type: string
        dtcontext:
          description: Dynatrace context
          type: string
        id:
          minLength: 1
          type: string
        source:
          type: string
        specversion:
          minLength: 1
          type: string
        subject:
          minLength: 1
          type: string
        time:
          format: date-time
          type: string
        traceparent:
          description: "Trace related to this event. See [distributed tracing](https://github.com/cloudevents/spec/blob/main/cloudevents/extensions/distributed-tracing.md)\
            \ for further information."
          type: string
        type:
          minLength: 1
          type: string
      required:
      - id
      - source
      - specversion
      - type
      type: object
    CodeLevelVulnerabilityDetails:
      description: The details of a code-level vulnerability.
      example:
        vulnerabilityLocation: vulnerabilityLocation
        processGroups:
        - processGroups
        - processGroups
        shortVulnerabilityLocation: shortVulnerabilityLocation
        vulnerableFunctionInput:
          inputSegments:
          - type: MALICIOUS_INPUT
            value: value
          - type: MALICIOUS_INPUT
            value: value
          type: COMMAND
        processGroupIds:
        - processGroupIds
        - processGroupIds
        type: CMD_INJECTION
        vulnerableFunction: vulnerableFunction
      properties:
        processGroupIds:
          description: The list of encoded MEIdentifier of the process groups.
          items:
            type: string
          readOnly: true
          type: array
        processGroups:
          description: The list of affected process groups.
          items:
            type: string
          readOnly: true
          type: array
        shortVulnerabilityLocation:
          description: The code location of the vulnerability without package and
            parameter.
          readOnly: true
          type: string
        type:
          description: The type of code level vulnerability.
          enum:
          - CMD_INJECTION
          - IMPROPER_INPUT_VALIDATION
          - SQL_INJECTION
          readOnly: true
          type: string
        vulnerabilityLocation:
          description: The code location of the vulnerability.
          readOnly: true
          type: string
        vulnerableFunction:
          description: The vulnerable function of the vulnerability.
          readOnly: true
          type: string
        vulnerableFunctionInput:
          $ref: '#/components/schemas/VulnerableFunctionInput'
      readOnly: true
      type: object
    CodeLocation:
      description: Information about a code location.
      example:
        parameterTypes:
          truncationInfo:
            truncated: true
          values:
          - values
          - values
        functionName: functionName
        displayName: displayName
        className: className
        lineNumber: 0
        returnType: returnType
      properties:
        className:
          description: The fully qualified class name of the code location.
          readOnly: true
          type: string
        displayName:
          description: A human readable string representation of the code location.
          readOnly: true
          type: string
        functionName:
          description: The function/method name of the code location.
          readOnly: true
          type: string
        lineNumber:
          description: The line number of the code location.
          format: int32
          readOnly: true
          type: integer
        parameterTypes:
          $ref: '#/components/schemas/TruncatableListString'
        returnType:
          description: The return type of the function.
          readOnly: true
          type: string
      readOnly: true
      type: object
    Comment:
      description: The comment to a problem.
      example:
        createdAtTimestamp: 2
        authorName: authorName
        context: context
        id: id
        content: content
      properties:
        authorName:
          description: The user who wrote the comment.
          type: string
        content:
          description: The text of the comment.
          type: string
        context:
          description: The context of the comment.
          type: string
        createdAtTimestamp:
          description: "The timestamp of comment creation, in UTC milliseconds."
          format: int64
          type: integer
        id:
          description: The ID of the comment.
          type: string
      required:
      - createdAtTimestamp
      type: object
    CommentRequestDtoImpl:
      example:
        context: context
        message: message
      properties:
        context:
          description: The context of the comment.
          type: string
        message:
          description: The text of the comment.
          type: string
      required:
      - message
      type: object
    CommentsList:
      description: A list of comments.
      example:
        nextPageKey: AQAAABQBAAAABQ==
        comments:
        - createdAtTimestamp: 2
          authorName: authorName
          context: context
          id: id
          content: content
        - createdAtTimestamp: 2
          authorName: authorName
          context: context
          id: id
          content: content
        pageSize: 7
        totalCount: 9
      properties:
        comments:
          description: The result entries.
          items:
            $ref: '#/components/schemas/Comment'
          type: array
        nextPageKey:
          description: "The cursor for the next page of results. Has the value of\
            \ `null` on the last page. \n\nUse it in the **nextPageKey** query parameter\
            \ to obtain subsequent pages of the result."
          example: AQAAABQBAAAABQ==
          type: string
        pageSize:
          description: The number of entries per page.
          format: int32
          type: integer
        totalCount:
          description: The total number of entries in the result.
          format: int64
          type: integer
      required:
      - comments
      - totalCount
      type: object
    ComplexConstraint:
      description: A constraint on the values accepted for a complex settings property.
      example:
        customValidatorId: my-min-max
        customMessage: customMessage
        checkAllProperties: false
        minimumPropertyCount: 1
        type: CUSTOM_VALIDATOR_REF
        maximumPropertyCount: 2
        properties:
        - properties
        - properties
      properties:
        checkAllProperties:
          description: Defines if modification of any property triggers secret resubmission
            check.
          example: false
          type: boolean
        customMessage:
          description: A custom message for invalid values.
          type: string
        customValidatorId:
          description: The ID of a custom validator.
          example: my-min-max
          type: string
        maximumPropertyCount:
          description: The maximum number of properties that can be set.
          example: 2
          format: int32
          type: integer
        minimumPropertyCount:
          description: The minimum number of properties that must be set.
          example: 1
          format: int32
          type: integer
        properties:
          description: A list of properties (defined by IDs) that are used to check
            the constraint.
          items:
            description: A list of properties (defined by IDs) that are used to check
              the constraint.
            type: string
          type: array
        type:
          description: The type of the constraint.
          enum:
          - CUSTOM_VALIDATOR_REF
          - GREATER_THAN
          - GREATER_THAN_OR_EQUAL
          - LESS_THAN
          - LESS_THAN_OR_EQUAL
          - PROPERTY_COUNT_RANGE
          - SECRET_RESUBMISSION
          - UNKNOWN
          type: string
      required:
      - type
      type: object
    ConfigurationMetadata:
      description: Metadata useful for debugging
      example:
        currentConfigurationVersions:
        - 1.0.4
        - "1.23"
        configurationVersions:
        - 4
        - 2
        clusterVersion: 1.192.1
      properties:
        clusterVersion:
          description: Dynatrace version.
          example: 1.192.1
          type: string
        configurationVersions:
          description: A sorted list of the version numbers of the configuration.
          example:
          - 4
          - 2
          items:
            format: int64
            type: integer
          type: array
        currentConfigurationVersions:
          description: A sorted list of version numbers of the configuration.
          example:
          - 1.0.4
          - "1.23"
          items:
            type: string
          type: array
      readOnly: true
      type: object
    Constraint:
      description: A constraint on the values accepted for a settings property.
      example:
        customValidatorId: my-min-max
        minLength: 7
        pattern: "^([a-z]|[0-9]|\\-|\\_|\\+|\\.)+\\@([a-z]|[0-9]|-){2,}\\.([a-z]|[0-9]|-){2,}(\\\
          .[a-z]{2,})?$"
        customMessage: customConstraintMessage
        maximum: 200
        type: UNKNOWN
        minimum: 3
        maxLength: 20
        uniqueProperties:
        - my-prop-1
        - my-prop-2
      properties:
        customMessage:
          description: A custom message for invalid values.
          example: customConstraintMessage
          type: string
        customValidatorId:
          description: The ID of a custom validator.
          example: my-min-max
          type: string
        maxLength:
          description: The maximum allowed length of string values.
          example: 20
          format: int32
          type: integer
        maximum:
          description: The maximum allowed value.
          example: 200
          type: number
        minLength:
          description: The minimum required length of string values.
          example: 7
          format: int32
          type: integer
        minimum:
          description: The minimum allowed value.
          example: 3
          type: number
        pattern:
          description: The regular expression pattern for valid string values.
          example: "^([a-z]|[0-9]|\\-|\\_|\\+|\\.)+\\@([a-z]|[0-9]|-){2,}\\.([a-z]|[0-9]|-){2,}(\\\
            .[a-z]{2,})?$"
          type: string
        type:
          description: The type of the constraint.
          enum:
          - CUSTOM_VALIDATOR_REF
          - LENGTH
          - NOT_BLANK
          - NOT_EMPTY
          - NO_WHITESPACE
          - PATTERN
          - RANGE
          - REGEX
          - TRIMMED
          - UNIQUE
          - UNKNOWN
          example: UNKNOWN
          type: string
        uniqueProperties:
          description: A list of properties for which the combination of values must
            be unique.
          example:
          - my-prop-1
          - my-prop-2
          items:
            description: A list of properties for which the combination of values
              must be unique.
            example: "[\"my-prop-1\",\"my-prop-2\"]"
            type: string
          type: array
      required:
      - type
      type: object
    ConstraintViolation:
      description: A list of constraint violations
      example:
        path: path
        location: location
        message: message
        parameterLocation: HEADER
      properties:
        location:
          type: string
        message:
          type: string
        parameterLocation:
          enum:
          - HEADER
          - PATH
          - PAYLOAD_BODY
          - QUERY
          type: string
        path:
          type: string
      type: object
    Country:
      description: Information about a country.
      example:
        code: AT
        name: Austria
      properties:
        code:
          description: The ISO code of the country.
          type: string
        name:
          description: The name of the country.
          type: string
      type: object
    CountryList:
      description: The list of countries.
      example:
        countries:
        - code: FR
          name: France
        - code: BE
          name: Belgium
        countryCount: 252
      properties:
        countries:
          description: The list of countries.
          items:
            $ref: '#/components/schemas/Country'
          type: array
        countryCount:
          description: The number of countries.
          format: int32
          type: integer
      type: object
    CountryListWithRegions:
      description: A list of countries with their regions.
      example:
        countries:
        - code: FR
          name: France
          regionCount: 2
          regions:
          - code: ARA
            name: Auvergne-Rhone-Alpes
          - code: BFC
            name: Bourgogne-Franche-Comte
        - code: BE
          name: Belgium
          regionCount: 2
          regions:
          - code: "01"
            name: Antwerp Province
          - code: "11"
            name: Brussels Captial
        countryCount: 252
      properties:
        countries:
          description: The list of countries.
          items:
            $ref: '#/components/schemas/CountryRegions'
          type: array
        countryCount:
          description: The number of countries.
          format: int32
          type: integer
      type: object
    CountryRegions:
      description: Information about a country.
      example:
        code: FR
        name: France
        regionCount: 2
        regions:
        - code: ARA
          name: Auvergne-Rhone-Alpes
        - code: BFC
          name: Bourgogne-Franche-Comte
      properties:
        code:
          description: The ISO code of the country.
          type: string
        name:
          description: The name of the country.
          type: string
        regionCount:
          description: The number of regions in the country.
          format: int32
          type: integer
        regions:
          description: The list of regions in the country.
          items:
            $ref: '#/components/schemas/Region'
          type: array
      type: object
    CountryWithRegions:
      description: Information about a country.
      example:
        countryCode: FR
        countyName: France
        regionCount: 2
        regions:
        - code: ARA
          name: Auvergne-Rhone-Alpes
        - code: BFC
          name: Bourgogne-Franche-Comte
      properties:
        countryCode:
          description: The ISO code of the country.
          type: string
        countryName:
          description: The name of the country.
          type: string
        regionCount:
          description: The number of regions in the country.
          format: int32
          type: integer
        regions:
          description: The list of regions in the country.
          items:
            $ref: '#/components/schemas/Region'
          type: array
      type: object
    CountryWithRegionsWithCities:
      description: Information about a country.
      example:
        countryCode: FR
        countryName: France
        regionCount: 13
        regions:
        - cities:
          - latitude: 46.2806
            longitude: 6.7217
            name: Abondance
          - latitude: 46.1008
            longitude: 3.4463
            name: Abrest
          cityCount: 4
          code: ARA
          name: Auvergne-Rhone-Alpes
      properties:
        countryCode:
          description: The ISO code of the country.
          type: string
        countryName:
          description: The name of the country.
          type: string
        regionCount:
          description: The number of regions in the country.
          format: int32
          type: integer
        regions:
          description: The list of regions in the country.
          items:
            $ref: '#/components/schemas/RegionWithCities'
          type: array
      type: object
    CredentialUsageHandler:
      description: Keeps information about credential's usage.
      properties:
        count:
          description: The number of uses.
          format: int32
          type: integer
        type:
          description: Type of usage.
          type: string
      type: object
    Credentials:
      description: "A set of credentials for synthetic monitors. \n\nThe actual set\
        \ of fields depends on the type of credentials. Find the list of actual objects\
        \ in the description of the **type** field or see [Credential vault API -\
        \ JSON models](https://dt-url.net/2sa3sen)."
      discriminator:
        mapping:
          CERTIFICATE: '#/components/schemas/CertificateCredentials'
          PUBLIC_CERTIFICATE: '#/components/schemas/PublicCertificateCredentials'
          TOKEN: '#/components/schemas/TokenCredentials'
          USERNAME_PASSWORD: '#/components/schemas/UserPasswordCredentials'
        propertyName: type
      example:
        description: Sample set of credentials for API documentation
        name: Sample credentials
        ownerAccessOnly: true
        password: 1234abcd
        scope: SYNTHETIC
        scopes:
        - SYNTHETIC
        - EXTENSION_AUTHENTICATION
        type: USERNAME_PASSWORD
        user: john.smith
      properties:
        description:
          description: A short description of the credentials set.
          type: string
        id:
          description: The ID of the credentials set.
          type: string
        name:
          description: The name of the credentials set.
          type: string
        ownerAccessOnly:
          description: The credentials set is available to every user (`false`) or
            to owner only (`true`).
          type: boolean
        scope:
          deprecated: true
          description: The scope of the credentials set.
          enum:
          - ALL
          - EXTENSION
          - SYNTHETIC
          - UNKNOWN
          type: string
        scopes:
          description: The set of scopes of the credentials set.
          items:
            description: The set of scopes of the credentials set.
            enum:
            - ALL
            - EXTENSION
            - SYNTHETIC
            - UNKNOWN
            type: string
          type: array
          uniqueItems: true
        type:
          description: "Defines the actual set of fields depending on the value. See\
            \ one of the following objects: \n\n* `CERTIFICATE` -> CertificateCredentials\
            \ \n* `PUBLIC_CERTIFICATE` -> PublicCertificateCredentials \n* `USERNAME_PASSWORD`\
            \ -> UserPasswordCredentials \n* `TOKEN` -> TokenCredentials \n"
          enum:
          - CERTIFICATE
          - PUBLIC_CERTIFICATE
          - TOKEN
          - USERNAME_PASSWORD
          type: string
      required:
      - name
      - scope
      - scopes
      type: object
    CredentialsDetailsCertificateResponseElement:
      allOf:
      - $ref: '#/components/schemas/AbstractCredentialsResponseElement'
      - properties:
          certificate:
            description: Base64 encoded certificate bytes
            type: string
          certificateType:
            description: "Certificate type: PEM, PKCS12 or UNKNOWN"
            type: string
          password:
            description: Base64 encoded password
            type: string
        type: object
      description: Details of certificate credentials set.
      example:
        certificate: c2FtcGxlX2NlcnRpZmljYXRlLg==
        certificateType: PKCS12
        credentialUsageSummary:
        - BROWSER_MONITOR: 2
          HTTP_MONITOR: 3
        description: Sample credentials for demo purposes.
        externalVault:
          passwordSecretName: password
          pathToCredentials: kv/credentials
          roleId: 00e4858c-ec33-bc99-4e7e-34de6967de6c
          secretId: CREDENTIALS_VAULT-XXXXXXXXXXXXXXXX
          sourceAuthMethod: HASHICORP_VAULT_APPROLE
          usernameSecretName: username
          vaultNamespace: admin
          vaultUrl: https://vault-cluster.vault.fb17d2fc-be92-4230-afa2-91dbfda3cbad.aws.hashicorp.cloud:8200
        id: CREDENTIALS_VAULT-C43F2C2E6395AD23
        name: Sample certificate credentials
        owner: user@domain.com
        ownerAccessOnly: true
        password: c2FtcGxlX3Bhc3N3b3JkLg==
        scope: SYNTHETIC
        type: CERTIFICATE
      required:
      - credentialUsageSummary
      - description
      - name
      - owner
      - ownerAccessOnly
      - type
      type: object
    CredentialsDetailsTokenResponseElement:
      allOf:
      - $ref: '#/components/schemas/AbstractCredentialsResponseElement'
      - properties:
          token:
            description: Plain text token value
            type: string
        type: object
      description: Details of the token credentials set.
      example:
        credentialUsageSummary:
        - BROWSER_MONITOR: 2
          HTTP_MONITOR: 3
        description: Sample credentials for demo purposes.
        externalVault:
          passwordSecretName: password
          pathToCredentials: kv/credentials
          roleId: 00e4858c-ec33-bc99-4e7e-34de6967de6c
          secretId: CREDENTIALS_VAULT-XXXXXXXXXXXXXXXX
          sourceAuthMethod: HASHICORP_VAULT_APPROLE
          usernameSecretName: username
          vaultNamespace: admin
          vaultUrl: https://vault-cluster.vault.fb17d2fc-be92-4230-afa2-91dbfda3cbad.aws.hashicorp.cloud:8200
        id: CREDENTIALS_VAULT-C43F2C2E6395AD23
        name: Sample token credentials
        owner: user@domain.com
        ownerAccessOnly: true
        scope: SYNTHETIC
        token: sample_token
        type: TOKEN
      required:
      - credentialUsageSummary
      - description
      - name
      - owner
      - ownerAccessOnly
      - type
      type: object
    CredentialsDetailsUsernamePasswordResponseElement:
      allOf:
      - $ref: '#/components/schemas/AbstractCredentialsResponseElement'
      - properties:
          password:
            description: Plain text password value
            type: string
          username:
            description: Plain text username value
            type: string
        type: object
      description: Details of username and password credentials set.
      example:
        credentialUsageSummary:
        - BROWSER_MONITOR: 2
          HTTP_MONITOR: 3
        description: Sample credentials for demo purposes.
        externalVault:
          passwordSecretName: password
          pathToCredentials: kv/credentials
          roleId: 00e4858c-ec33-bc99-4e7e-34de6967de6c
          secretId: CREDENTIALS_VAULT-XXXXXXXXXXXXXXXX
          sourceAuthMethod: HASHICORP_VAULT_APPROLE
          usernameSecretName: username
          vaultNamespace: admin
          vaultUrl: https://vault-cluster.vault.fb17d2fc-be92-4230-afa2-91dbfda3cbad.aws.hashicorp.cloud:8200
        id: CREDENTIALS_VAULT-C43F2C2E6395AD23
        name: Sample username-password credentials
        owner: user@domain.com
        ownerAccessOnly: true
        password: sample_password
        scope: SYNTHETIC
        type: USERNAME_PASSWORD
        username: sample_user_name
      required:
      - credentialUsageSummary
      - description
      - name
      - owner
      - ownerAccessOnly
      - type
      type: object
    CredentialsId:
      description: A short representation of the credentials set.
      example:
        id: CREDENTIALS_VAULT-C43F2C2E6395AD23
      properties:
        id:
          description: The ID of the credentials set.
          type: string
      required:
      - id
      type: object
    CredentialsList:
      description: A list of credentials sets for Synthetic monitors.
      example:
        credentials:
        - credentialUsageSummary:
          - HTTP_MONITOR: 4
          description: Sample credentials for demo purposes
          id: CREDENTIALS_VAULT-E80203F993472E6D
          name: Sample username-password credentials
          owner: admin
          ownerAccessOnly: true
          scope: SYNTHETIC
          type: USERNAME_PASSWORD
        - credentialUsageSummary: []
          description: Sample credentials for demo purposes
          id: CREDENTIALS_VAULT-842DEF439999E15B
          name: Sample certificate credentials
          owner: John.Doe@domain.com
          ownerAccessOnly: true
          scope: EXTENSION
          type: CERTIFICATE
        - credentialUsageSummary:
          - BROWSER_MONITOR: 11
            HTTP_MONITOR: 4
          description: Sample token for demo purposes
          id: CREDENTIALS_VAULT-854345639999E15B
          name: Sample token credentials
          owner: John.Doe@domain.com
          ownerAccessOnly: true
          scope: SYNTHETIC
          type: TOKEN
      properties:
        credentials:
          description: A list of credentials sets for Synthetic monitors.
          items:
            $ref: '#/components/schemas/CredentialsResponseElement'
          type: array
        nextPageKey:
          type: string
        pageSize:
          format: int32
          type: integer
        totalCount:
          format: int64
          type: integer
      required:
      - credentials
      type: object
    CredentialsResponseElement:
      description: Metadata of the credentials set.
      example:
        credentialUsageSummary:
        - BROWSER_MONITOR: 2
          HTTP_MONITOR: 3
        description: Sample credentials for demo purposes.
        externalVault:
          passwordSecretName: password
          pathToCredentials: kv/credentials
          roleId: 00e4858c-ec33-bc99-4e7e-34de6967de6c
          secretId: CREDENTIALS_VAULT-XXXXXXXXXXXXXXXX
          sourceAuthMethod: HASHICORP_VAULT_APPROLE
          usernameSecretName: username
          vaultNamespace: admin
          vaultUrl: https://vault-cluster.vault.fb17d2fc-be92-4230-afa2-91dbfda3cbad.aws.hashicorp.cloud:8200
        id: CREDENTIALS_VAULT-C43F2C2E6395AD23
        name: Sample username-password credentials
        owner: user@domain.com
        ownerAccessOnly: true
        scope: SYNTHETIC
        type: USERNAME_PASSWORD
      properties:
        credentialUsageSummary:
          description: The list contains summary data related to the use of credentials.
          items:
            $ref: '#/components/schemas/CredentialUsageHandler'
          type: array
        description:
          description: A short description of the credentials set.
          type: string
        externalVault:
          $ref: '#/components/schemas/ExternalVaultConfig'
        id:
          description: The ID of the credentials set.
          type: string
        name:
          description: The name of the credentials set.
          type: string
        owner:
          description: The owner of the credential (user for which used API token
            was created).
          type: string
        ownerAccessOnly:
          description: Flag indicating that this credential is visible only to the
            owner.
          type: boolean
        scope:
          description: The scope of the credentials set.
          enum:
          - ALL
          - EXTENSION
          - SYNTHETIC
          - UNKNOWN
          type: string
        scopes:
          description: The set of scopes of the credentials set.
          items:
            description: The set of scopes of the credentials set.
            enum:
            - ALL
            - EXTENSION
            - SYNTHETIC
            - UNKNOWN
            type: string
          type: array
          uniqueItems: true
        type:
          description: The type of the credentials set.
          enum:
          - CERTIFICATE
          - PUBLIC_CERTIFICATE
          - TOKEN
          - UNKNOWN
          - USERNAME_PASSWORD
          type: string
      required:
      - credentialUsageSummary
      - description
      - name
      - owner
      - ownerAccessOnly
      - type
      type: object
    CustomApplicationImpact:
      allOf:
      - $ref: '#/components/schemas/Impact'
      description: Analysis of problem impact to a custom application.
      required:
      - estimatedAffectedUsers
      - impactType
      - impactedEntity
      type: object
    CustomDeviceCreation:
      description: Configuration of a custom device.
      example:
        configUrl: http://coffee-machine.dynatrace.internal.com/coffeemachine/manage
        customDeviceId: customDeviceId
        displayName: coffeeMachine
        dnsNames:
        - coffee-machine.dynatrace.internal.com
        faviconUrl: https://www.freefavicon.com/freefavicons/food/cup-of-coffee-152-78475.png
        group: myCustomDeviceGroup
        ipAddresses:
        - 10.0.0.1
        listenPorts:
        - 80
        properties: {}
        type: coffee machine
      properties:
        configUrl:
          description: "The URL of a configuration web page for the custom device,\
            \ such as a login page for a firewall or router."
          maxLength: 2048
          minLength: 0
          type: string
        customDeviceId:
          description: "The internal ID of the custom device. \n\n If you use the\
            \ ID of an existing device, the respective parameters will be updated."
          maxLength: 512
          minLength: 0
          type: string
        displayName:
          description: The name of the custom device to be displayed in the user interface.
          maxLength: 1024
          minLength: 0
          type: string
        dnsNames:
          description: "The list of DNS names related to the custom device. \n\nThese\
            \ names are used to automatically discover the horizontal communication\
            \ relationship between this component and all other observed components\
            \ within Smartscape. Once a connection is discovered, it is automatically\
            \ mapped and shown within Smartscape. \n\nIf you send a value, the existing\
            \ values will be overwritten. \n\nIf you send `null` or an empty value;\
            \ or omit this field, the existing values will be kept."
          items:
            type: string
          maxItems: 20
          minItems: 0
          type: array
          uniqueItems: true
        faviconUrl:
          description: The icon to be displayed for your custom component within Smartscape.
            Provide the full URL of the icon file.
          maxLength: 2048
          minLength: 0
          type: string
        group:
          description: "User defined group ID of entity. \n\nThe group ID helps to\
            \ keep a consistent picture of device-group relations. One of many cases\
            \ where a proper group is important is service detection: you can define\
            \ which custom devices should lead to the same service by defining the\
            \ same group ID for them. \n\nIf you set a group ID, it will be hashed\
            \ into the Dynatrace entity ID of the custom device. In that case the\
            \ custom device can only be part of one custom device group. \n\nIf you\
            \ don't set the group ID, Dynatrace will create it based on the ID or\
            \ type of the custom device. Also, the group will not be hashed into the\
            \ device ID which means the device may switch groups."
          maxLength: 512
          minLength: 0
          type: string
        ipAddresses:
          description: "The list of IP addresses that belong to the custom device.\
            \ \n\nThese addresses are used to automatically discover the horizontal\
            \ communication relationship between this component and all other observed\
            \ components within Smartscape. Once a connection is discovered, it is\
            \ automatically mapped and shown within Smartscape. \n\nIf you send a\
            \ value (including an empty value), the existing values will be overwritten.\
            \ \n\nIf you send `null` or omit this field, the existing values will\
            \ be kept."
          items:
            type: string
          maxItems: 100
          minItems: 0
          type: array
          uniqueItems: true
        listenPorts:
          description: "The list of ports the custom devices listens to. \n\nThese\
            \ ports are used to discover the horizontal communication relationship\
            \ between this component and all other observed components within Smartscape.\
            \ \n\nOnce a connection is discovered, it is automatically mapped and\
            \ shown within Smartscape. \n\nIf ports are specified, you should also\
            \ add at least one IP address or a DNS name for the custom device. \n\n\
            If you send a value, the existing values will be overwritten. \n\nIf you\
            \ send `null`, or an empty value, or omit this field, the existing values\
            \ will be kept."
          items:
            format: int32
            type: integer
          maxItems: 100
          minItems: 0
          type: array
          uniqueItems: true
        properties:
          additionalProperties:
            description: The list of key-value pair properties that will be shown
              beneath the infographics of your custom device.
            type: string
          description: The list of key-value pair properties that will be shown beneath
            the infographics of your custom device.
          type: object
        type:
          description: "The technology type definition of the custom device. \n\n\
            It must be the same technology type of the metric you're reporting. \n\
            \nIf you send a value, the existing value will be overwritten. \n\nIf\
            \ you send `null`, empty or omit this field, the existing value will be\
            \ kept."
          maxLength: 128
          minLength: 0
          type: string
      required:
      - customDeviceId
      - displayName
      type: object
    CustomDeviceCreationResult:
      description: The short representation of a newly created custom device.
      example:
        groupId: groupId
        entityId: entityId
      properties:
        entityId:
          description: The Dynatrace entity ID of the custom device.
          type: string
        groupId:
          description: The Dynatrace entity ID of the custom device group.
          type: string
      type: object
    CustomEntityTags:
      description: A list of custom tags.
      example:
        tags:
        - context: CONTEXTLESS
          key: mainApp
          stringRepresentation: mainApp
        - context: CONTEXTLESS
          key: bookings
          stringRepresentation: bookings
        totalCount: 2
      properties:
        tags:
          description: A list of custom tags.
          items:
            $ref: '#/components/schemas/METag'
          properties:
            empty:
              type: boolean
          type: array
          uniqueItems: true
        totalCount:
          description: The total number of tags in the response.
          format: int64
          type: integer
      required:
      - tags
      type: object
    CustomLogLine:
      description: A custom script log line
      properties:
        logLevel:
          description: Log level of the message
          type: string
        message:
          description: The message
          type: string
        timestamp:
          description: A timestamp of this log message
          format: int64
          type: integer
      type: object
    CyberArkAllowedLocationConfig:
      allOf:
      - $ref: '#/components/schemas/ExternalVaultConfig'
      - properties:
          accountName:
            type: string
          applicationId:
            type: string
          certificate:
            type: string
          folderName:
            type: string
          safeName:
            type: string
        type: object
      type: object
    CyberArkAllowedLocationDto:
      allOf:
      - $ref: '#/components/schemas/ExternalVault'
      - properties:
          accountName:
            description: "Account name that stores the username and password to retrieve\
              \ and synchronize with the Dynatrace Credential Vault: This is NOT the\
              \ name of the account logged into the CyberArk Central Credential Provider."
            type: string
          applicationId:
            description: Application ID connected to CyberArk Vault.
            type: string
          certificate:
            description: "[Optional] Certificate used for authentication to CyberArk\
              \ application. ID of certificate credential saved in Dynatrace CV."
            type: string
          folderName:
            description: "[Optional] Folder name where credentials in CyberArk Vault\
              \ are stored. Default folder name is 'Root'."
            type: string
          safeName:
            description: Safe name connected to CyberArk Vault.
            type: string
        type: object
      description: Synchronization credentials with CyberArk Vault using allowed machines
        (location) authentication method.
      required:
      - accountName
      - applicationId
      - safeName
      type: object
    CyberArkUsernamePassword:
      allOf:
      - $ref: '#/components/schemas/ExternalVault'
      - properties:
          accountName:
            description: "Account name that stores the username and password to retrieve\
              \ and synchronize with the Dynatrace Credential Vault: This is NOT the\
              \ name of the account logged into the CyberArk Central Credential Provider."
            type: string
          applicationId:
            description: Application ID connected to CyberArk Vault.
            type: string
          certificate:
            description: "[Optional] Certificate used for authentication to CyberArk\
              \ application. ID of certificate credential saved in Dynatrace CV."
            type: string
          folderName:
            description: "[Optional] Folder name where credentials in CyberArk Vault\
              \ are stored. Default folder name is 'Root'."
            type: string
          safeName:
            description: Safe name connected to CyberArk Vault.
            type: string
          usernamePasswordForCPM:
            description: Dynatrace credential ID of the username-password pair used
              for authentication to the CyberArk Central Credential Provider
            type: string
        type: object
      description: Synchronization credentials with CyberArk Vault using username
        password authentication method.
      required:
      - accountName
      - applicationId
      - safeName
      - usernamePasswordForCPM
      type: object
    CyberArkUsernamePasswordConfig:
      allOf:
      - $ref: '#/components/schemas/ExternalVaultConfig'
      - properties:
          accountName:
            type: string
          applicationId:
            type: string
          certificate:
            type: string
          folderName:
            type: string
          safeName:
            type: string
          usernamePasswordForCPM:
            type: string
        type: object
      type: object
    DatasourceDefinition:
      description: Configuration of a datasource for a property.
      example:
        filterProperties:
        - filterProperties
        - filterProperties
        identifier: identifier
        useApiSearch: true
        fullContext: true
        resetValue: ALWAYS
        validate: true
      properties:
        filterProperties:
          description: The properties to filter the datasource options on.
          items:
            description: The properties to filter the datasource options on.
            type: string
          type: array
          uniqueItems: true
        fullContext:
          description: Whether this datasource expects full setting payload as the
            context.
          type: boolean
        identifier:
          description: The identifier of a custom data source of the property's value.
          type: string
        resetValue:
          description: When to reset datasource value in the UI on filter change.
          enum:
          - ALWAYS
          - INVALID_ONLY
          - NEVER
          type: string
        useApiSearch:
          description: "If true, the datasource should use the api to filter the results\
            \ instead of client-side filtering."
          type: boolean
        validate:
          description: Whether to validate input to only allow values returned by
            the datasource.
          type: boolean
      required:
      - filterProperties
      - fullContext
      - identifier
      - useApiSearch
      - validate
      type: object
    DavisSecurityAdvice:
      description: Security advice from the Davis security advisor.
      example:
        high:
        - high
        - high
        critical:
        - critical
        - critical
        low:
        - low
        - low
        name: name
        medium:
        - medium
        - medium
        none:
        - none
        - none
        technology: DOTNET
        vulnerableComponent: vulnerableComponent
        adviceType: UPGRADE
      properties:
        adviceType:
          description: The type of the advice.
          enum:
          - UPGRADE
          readOnly: true
          type: string
        critical:
          description: "IDs of `critical` level [security problems](https://dt-url.net/p103u1h)\
            \ caused by vulnerable component."
          items:
            description: "IDs of `critical` level [security problems](https://dt-url.net/p103u1h)\
              \ caused by vulnerable component."
            readOnly: true
            type: string
          readOnly: true
          type: array
        high:
          description: "IDs of `high` level [security problems](https://dt-url.net/p103u1h)\
            \ caused by vulnerable component."
          items:
            description: "IDs of `high` level [security problems](https://dt-url.net/p103u1h)\
              \ caused by vulnerable component."
            readOnly: true
            type: string
          readOnly: true
          type: array
        low:
          description: "IDs of `low` level [security problems](https://dt-url.net/p103u1h)\
            \ caused by vulnerable component."
          items:
            description: "IDs of `low` level [security problems](https://dt-url.net/p103u1h)\
              \ caused by vulnerable component."
            readOnly: true
            type: string
          readOnly: true
          type: array
        medium:
          description: "IDs of `medium` level [security problems](https://dt-url.net/p103u1h)\
            \ caused by vulnerable component."
          items:
            description: "IDs of `medium` level [security problems](https://dt-url.net/p103u1h)\
              \ caused by vulnerable component."
            readOnly: true
            type: string
          readOnly: true
          type: array
        name:
          description: The name of the advice.
          readOnly: true
          type: string
        none:
          description: "IDs of `none` level [security problems](https://dt-url.net/p103u1h)\
            \ caused by vulnerable component."
          items:
            description: "IDs of `none` level [security problems](https://dt-url.net/p103u1h)\
              \ caused by vulnerable component."
            readOnly: true
            type: string
          readOnly: true
          type: array
        technology:
          description: The technology of the vulnerable component.
          enum:
          - DOTNET
          - GO
          - JAVA
          - KUBERNETES
          - NODE_JS
          - PHP
          readOnly: true
          type: string
        vulnerableComponent:
          description: The vulnerable component to which advice applies.
          readOnly: true
          type: string
      type: object
    DavisSecurityAdviceList:
      description: A list of advice from the Davis security advisor.
      example:
        nextPageKey: AQAAABQBAAAABQ==
        pageSize: 0
        advices:
        - high:
          - high
          - high
          critical:
          - critical
          - critical
          low:
          - low
          - low
          name: name
          medium:
          - medium
          - medium
          none:
          - none
          - none
          technology: DOTNET
          vulnerableComponent: vulnerableComponent
          adviceType: UPGRADE
        - high:
          - high
          - high
          critical:
          - critical
          - critical
          low:
          - low
          - low
          name: name
          medium:
          - medium
          - medium
          none:
          - none
          - none
          technology: DOTNET
          vulnerableComponent: vulnerableComponent
          adviceType: UPGRADE
        totalCount: 6
      properties:
        advices:
          items:
            $ref: '#/components/schemas/DavisSecurityAdvice'
          type: array
        nextPageKey:
          description: "The cursor for the next page of results. Has the value of\
            \ `null` on the last page. \n\nUse it in the **nextPageKey** query parameter\
            \ to obtain subsequent pages of the result."
          example: AQAAABQBAAAABQ==
          type: string
        pageSize:
          description: The number of entries per page.
          format: int32
          type: integer
        totalCount:
          description: The total number of entries in the result.
          format: int64
          type: integer
      required:
      - totalCount
      type: object
    DeletedEntityTags:
      description: Deleted custom tag.
      example:
        matchedEntitiesCount: 2
      properties:
        matchedEntitiesCount:
          description: The number of monitored entities where the tag has been deleted.
          format: int64
          type: integer
      type: object
    DeletionConstraint:
      description: A constraint on the values that are going to be deleted.
      example:
        customValidatorId: my-min-max
        customMessage: customMessage
      properties:
        customMessage:
          description: A custom message for invalid values.
          type: string
        customValidatorId:
          description: The ID of a custom validator.
          example: my-min-max
          type: string
      type: object
    DescriptionBlock:
      description: Represents a section of data describing the given capability.
      example:
        sourceId: sourceId
        images:
        - src: src
          alt: alt
          title: title
        - src: src
          alt: alt
          title: title
        source: source
        title: title
        type: GALLERY
      properties:
        images:
          description: Collection of images (in case of gallery).
          items:
            $ref: '#/components/schemas/Image'
          nullable: true
          type: array
        source:
          description: Source of the description block (in case of markdown).
          nullable: true
          type: string
        sourceId:
          description: Optional identifier of special description blocks.
          nullable: true
          type: string
        title:
          description: Title of the description block.
          type: string
        type:
          description: "Type of the data, either markdown or gallery."
          enum:
          - GALLERY
          - MARKDOWN
          type: string
      type: object
    Duration:
      description: Defines a period of time.
      example:
        unit: DAYS
        value: 0
      properties:
        unit:
          description: "The unit of time. \n\n If not set, millisecond is used."
          enum:
          - DAYS
          - HOURS
          - MILLIS
          - MINUTES
          - SECONDS
          type: string
        value:
          description: The amount of time.
          format: int64
          type: integer
      required:
      - value
      type: object
    EffectiveSettingsValue:
      description: An effective settings value.
      example:
        searchSummary: searchSummary
        summary: summary
        schemaVersion: 1.0.0
        author: john.doe@example.com
        created: 0
        schemaId: builtin:container.built-in-monitoring-rule
        origin: HOST-D3A3C5A146830A79
        externalId: externalId
        modified: 6
        value:
          autoMonitoring: true
      properties:
        author:
          description: The user (identified by a user ID or a public token ID) who
            performed that most recent modification.
          example: john.doe@example.com
          type: string
        created:
          description: The timestamp of the creation.
          format: int64
          type: integer
        externalId:
          description: The external identifier of the settings object.
          type: string
        modified:
          description: The timestamp of the last modification.
          format: int64
          type: integer
        origin:
          description: The origin of the settings value.
          example: HOST-D3A3C5A146830A79
          type: string
        schemaId:
          description: The schema on which the object is based.
          example: builtin:container.built-in-monitoring-rule
          type: string
        schemaVersion:
          description: The version of the schema on which the object is based.
          example: 1.0.0
          type: string
        searchSummary:
          description: A searchable summary string of the setting value. Plain text
            without Markdown.
          type: string
        summary:
          description: A short summary of settings. This can contain Markdown and
            will be escaped accordingly.
          type: string
        value:
          description: "The value of the setting. \n\n It defines the actual values\
            \ of settings' parameters. \n\nThe actual content depends on the object's\
            \ schema."
          example:
            autoMonitoring: true
          type: object
      type: object
    EffectiveSettingsValuesList:
      description: A list of effective settings values.
      example:
        nextPageKey: AQAAABQBAAAABQ==
        pageSize: 1
        totalCount: 5
        items:
        - searchSummary: searchSummary
          summary: summary
          schemaVersion: 1.0.0
          author: john.doe@example.com
          created: 0
          schemaId: builtin:container.built-in-monitoring-rule
          origin: HOST-D3A3C5A146830A79
          externalId: externalId
          modified: 6
          value:
            autoMonitoring: true
        - searchSummary: searchSummary
          summary: summary
          schemaVersion: 1.0.0
          author: john.doe@example.com
          created: 0
          schemaId: builtin:container.built-in-monitoring-rule
          origin: HOST-D3A3C5A146830A79
          externalId: externalId
          modified: 6
          value:
            autoMonitoring: true
      properties:
        items:
          description: A list of effective settings values.
          items:
            $ref: '#/components/schemas/EffectiveSettingsValue'
          type: array
        nextPageKey:
          description: "The cursor for the next page of results. Has the value of\
            \ `null` on the last page. \n\nUse it in the **nextPageKey** query parameter\
            \ to obtain subsequent pages of the result."
          example: AQAAABQBAAAABQ==
          type: string
        pageSize:
          description: The number of entries per page.
          format: int32
          type: integer
        totalCount:
          description: The total number of entries in the result.
          format: int64
          type: integer
      required:
      - items
      - pageSize
      - totalCount
      type: object
    EntitiesList:
      description: A list of monitored entities along with their properties.
      example:
        nextPageKey: AQAAABQBAAAABQ==
        entities:
        - displayName: my host
          entityId: HOST-06F288EE2A930951
          firstSeenTms: 1574697667547
          fromRelationships:
            isInstanceOf:
            - id: HOST_GROUP-0E489369D663A4BF
              type: HOST_GROUP
          icon:
            customIconPath: host
            primaryIconType: linux
            secondaryIconType: microsoft-azure-signet
          lastSeenTms: 1588242361417
          managementZones:
          - id: "6239538939987181652"
            name: main app
          properties:
            bitness: 64
            cpuCores: 8
            monitoringMode: FULL_STACK
            networkZoneId: aws.us.east01
            osArchitecture: X86
            osType: LINUX
          tags:
          - context: CONTEXTLESS
            key: architecture
            stringRepresentation: architecture:x86
            value: x86
          - context: ENVIRONMENT
            key: Infrastructure
            stringRepresentation: "[ENVIRONMENT]Infrastructure:Linux"
            value: Linux
          toRelationships:
            isDiskOf:
            - id: DISK-0393340DCA3853B0
              type: DISK
          type: HOST
        - displayName: my host
          entityId: HOST-06F288EE2A930951
          firstSeenTms: 1574697667547
          fromRelationships:
            isInstanceOf:
            - id: HOST_GROUP-0E489369D663A4BF
              type: HOST_GROUP
          icon:
            customIconPath: host
            primaryIconType: linux
            secondaryIconType: microsoft-azure-signet
          lastSeenTms: 1588242361417
          managementZones:
          - id: "6239538939987181652"
            name: main app
          properties:
            bitness: 64
            cpuCores: 8
            monitoringMode: FULL_STACK
            networkZoneId: aws.us.east01
            osArchitecture: X86
            osType: LINUX
          tags:
          - context: CONTEXTLESS
            key: architecture
            stringRepresentation: architecture:x86
            value: x86
          - context: ENVIRONMENT
            key: Infrastructure
            stringRepresentation: "[ENVIRONMENT]Infrastructure:Linux"
            value: Linux
          toRelationships:
            isDiskOf:
            - id: DISK-0393340DCA3853B0
              type: DISK
          type: HOST
        pageSize: 0
        totalCount: 6
      properties:
        entities:
          description: A list of monitored entities.
          items:
            $ref: '#/components/schemas/Entity'
          type: array
        nextPageKey:
          description: "The cursor for the next page of results. Has the value of\
            \ `null` on the last page. \n\nUse it in the **nextPageKey** query parameter\
            \ to obtain subsequent pages of the result."
          example: AQAAABQBAAAABQ==
          type: string
        pageSize:
          description: The number of entries per page.
          format: int32
          type: integer
        totalCount:
          description: The total number of entries in the result.
          format: int64
          type: integer
      required:
      - totalCount
      type: object
    Entity:
      description: The properties of a monitored entity.
      example:
        displayName: my host
        entityId: HOST-06F288EE2A930951
        firstSeenTms: 1574697667547
        fromRelationships:
          isInstanceOf:
          - id: HOST_GROUP-0E489369D663A4BF
            type: HOST_GROUP
        icon:
          customIconPath: host
          primaryIconType: linux
          secondaryIconType: microsoft-azure-signet
        lastSeenTms: 1588242361417
        managementZones:
        - id: "6239538939987181652"
          name: main app
        properties:
          bitness: 64
          cpuCores: 8
          monitoringMode: FULL_STACK
          networkZoneId: aws.us.east01
          osArchitecture: X86
          osType: LINUX
        tags:
        - context: CONTEXTLESS
          key: architecture
          stringRepresentation: architecture:x86
          value: x86
        - context: ENVIRONMENT
          key: Infrastructure
          stringRepresentation: "[ENVIRONMENT]Infrastructure:Linux"
          value: Linux
        toRelationships:
          isDiskOf:
          - id: DISK-0393340DCA3853B0
            type: DISK
        type: HOST
      properties:
        displayName:
          description: "The name of the entity, displayed in the UI."
          type: string
        entityId:
          description: The ID of the entity.
          type: string
        firstSeenTms:
          description: "The timestamp at which the entity was first seen, in UTC milliseconds."
          format: int64
          type: integer
        fromRelationships:
          additionalProperties:
            description: A list of relationships where the entity occupies the FROM
              position.
            items:
              $ref: '#/components/schemas/EntityId'
            type: array
          description: A list of relationships where the entity occupies the FROM
            position.
          type: object
        icon:
          $ref: '#/components/schemas/EntityIcon'
        lastSeenTms:
          description: "The timestamp at which the entity was last seen, in UTC milliseconds."
          format: int64
          type: integer
        managementZones:
          description: A set of management zones to which the entity belongs.
          items:
            $ref: '#/components/schemas/ManagementZone'
          type: array
          uniqueItems: true
        properties:
          additionalProperties:
            description: A list of additional properties of the entity.
            type: object
          description: A list of additional properties of the entity.
          type: object
        tags:
          description: A set of tags assigned to the entity.
          items:
            $ref: '#/components/schemas/METag'
          type: array
          uniqueItems: true
        toRelationships:
          additionalProperties:
            description: A list of relationships where the entity occupies the TO
              position.
            items:
              $ref: '#/components/schemas/EntityId'
            type: array
          description: A list of relationships where the entity occupies the TO position.
          type: object
        type:
          description: The type of the entity.
          type: string
      type: object
    EntityIcon:
      description: The icon of a monitored entity.
      properties:
        customIconPath:
          description: "The user-defined icon of the entity. \n\nSpecify the [barista](https://dt-url.net/u403suy)\
            \ ID of the icon or a URL of your own icon."
          type: string
        primaryIconType:
          description: "The primary icon of the entity. \n\nSpecified by the [barista](https://dt-url.net/u403suy)\
            \ ID of the icon."
          readOnly: true
          type: string
        secondaryIconType:
          description: "The secondary icon of the entity. \n\nSpecified by the [barista](https://dt-url.net/u403suy)\
            \ ID of the icon."
          readOnly: true
          type: string
      type: object
    EntityId:
      description: A short representation of a monitored entity.
      example:
        id: id
        type: type
      properties:
        id:
          description: The ID of the entity.
          type: string
        type:
          description: The type of the entity.
          type: string
      type: object
    EntityShortRepresentation:
      description: The short representation of a Dynatrace entity.
      example:
        description: Dynatrace entity for the REST API example
        id: 6a98d7bc-abb9-44f8-ae6a-73e68e71812a
        name: Dynatrace entity
      properties:
        description:
          description: A short description of the Dynatrace entity.
          readOnly: true
          type: string
        id:
          description: The ID of the Dynatrace entity.
          type: string
        name:
          description: The name of the Dynatrace entity.
          readOnly: true
          type: string
      required:
      - id
      type: object
    EntityStub:
      description: A short representation of a monitored entity.
      example:
        name: name
        entityId:
          id: id
          type: type
      properties:
        entityId:
          $ref: '#/components/schemas/EntityId'
        name:
          description: "The name of the entity. \n\n Not included in the response\
            \ in case no entity with the relevant ID was found."
          type: string
      type: object
    EntityType:
      description: A list of properties of the monitored entity type.
      example:
        entityLimitExceeded: "false"
        fromRelationships:
        - id: RUNS_ON_RESOURCE
          toTypes:
          - CUSTOM_DEVICE
        - id: IS_NETWORK_CLIENT_OF_HOST
          toTypes:
          - HOST
          - CUSTOM_DEVICE
        managementZones: placeholder for management zones
        properties:
        - id: BITNESS
          type: Enum
        - id: CPU_CORES
          type: Number
        tags: placeholder for tags
        toRelationships:
        - fromTypes:
          - DISK
          id: IS_DISK_OF
        - fromTypes:
          - VMWARE_DATACENTER
          - GEOLOC_SITE
          id: IS_SITE_OF
        type: HOST
      properties:
        dimensionKey:
          description: The dimension key used within metrics for this monitored entity.
          type: string
        displayName:
          description: The display name of the monitored entity.
          type: string
        entityLimitExceeded:
          description: Whether the entity creation limit for the given type has been
            exceeded
          type: boolean
        fromRelationships:
          description: A list of possible relationships where the monitored entity
            type occupies the FROM position
          items:
            $ref: '#/components/schemas/ToPosition'
          type: array
        managementZones:
          description: The placeholder for the list of management zones of an actual
            entity.
          type: string
        properties:
          description: A list of additional properties of the monitored entity type.
          items:
            $ref: '#/components/schemas/EntityTypePropertyDto'
          type: array
        tags:
          description: The placeholder for the list of tags of an actual entity.
          type: string
        toRelationships:
          description: A list of possible relationships where the monitored entity
            type occupies the TO position.
          items:
            $ref: '#/components/schemas/FromPosition'
          type: array
        type:
          description: The type of the monitored entity.
          type: string
      type: object
    EntityTypeList:
      description: A list of properties of all available entity types.
      example:
        nextPageKey: AQAAABQBAAAABQ==
        types:
        - entityLimitExceeded: "false"
          fromRelationships:
          - id: RUNS_ON_RESOURCE
            toTypes:
            - CUSTOM_DEVICE
          - id: IS_NETWORK_CLIENT_OF_HOST
            toTypes:
            - HOST
            - CUSTOM_DEVICE
          managementZones: placeholder for management zones
          properties:
          - id: BITNESS
            type: Enum
          - id: CPU_CORES
            type: Number
          tags: placeholder for tags
          toRelationships:
          - fromTypes:
            - DISK
            id: IS_DISK_OF
          - fromTypes:
            - VMWARE_DATACENTER
            - GEOLOC_SITE
            id: IS_SITE_OF
          type: HOST
        - entityLimitExceeded: "false"
          fromRelationships:
          - id: RUNS_ON_RESOURCE
            toTypes:
            - CUSTOM_DEVICE
          - id: IS_NETWORK_CLIENT_OF_HOST
            toTypes:
            - HOST
            - CUSTOM_DEVICE
          managementZones: placeholder for management zones
          properties:
          - id: BITNESS
            type: Enum
          - id: CPU_CORES
            type: Number
          tags: placeholder for tags
          toRelationships:
          - fromTypes:
            - DISK
            id: IS_DISK_OF
          - fromTypes:
            - VMWARE_DATACENTER
            - GEOLOC_SITE
            id: IS_SITE_OF
          type: HOST
        pageSize: 0
        totalCount: 6
      properties:
        nextPageKey:
          description: "The cursor for the next page of results. Has the value of\
            \ `null` on the last page. \n\nUse it in the **nextPageKey** query parameter\
            \ to obtain subsequent pages of the result."
          example: AQAAABQBAAAABQ==
          type: string
        pageSize:
          description: The number of entries per page.
          format: int32
          type: integer
        totalCount:
          description: The total number of entries in the result.
          format: int64
          type: integer
        types:
          description: The list of meta information for all available entity-types
          items:
            $ref: '#/components/schemas/EntityType'
          type: array
      required:
      - totalCount
      type: object
    EntityTypePropertyDto:
      description: The property of a monitored entity.
      properties:
        displayName:
          description: The display-name of the property.
          example: cpu cores
          type: string
        id:
          description: The ID of the property.
          example: cpuCores
          type: string
        type:
          description: The type of the property.
          example: Number
          type: string
      type: object
    EntryPoint:
      description: Information about an entry point of a code-level vulnerability.
      example:
        sourceHttpPath: sourceHttpPath
        usageSegments:
        - sourceType: HTTP_BODY
          segmentValue: segmentValue
          sourceArgumentName: sourceArgumentName
          segmentType: MALICIOUS_INPUT
        - sourceType: HTTP_BODY
          segmentValue: segmentValue
          sourceArgumentName: sourceArgumentName
          segmentType: MALICIOUS_INPUT
      properties:
        sourceHttpPath:
          description: Source HTTP path of entry points.
          readOnly: true
          type: string
        usageSegments:
          description: List of entry point usage segments.
          items:
            $ref: '#/components/schemas/EntryPointUsageSegment'
          readOnly: true
          type: array
      type: object
    EntryPointUsageSegment:
      description: Describes one segment that was passed into a usage and the associated
        source name and type.
      example:
        sourceType: HTTP_BODY
        segmentValue: segmentValue
        sourceArgumentName: sourceArgumentName
        segmentType: MALICIOUS_INPUT
      properties:
        segmentType:
          description: The type of this input segment.
          enum:
          - MALICIOUS_INPUT
          - REGULAR_INPUT
          - TAINTED_INPUT
          readOnly: true
          type: string
        segmentValue:
          description: The value of this input segment.
          readOnly: true
          type: string
        sourceArgumentName:
          description: The name used in the source for this segment.
          readOnly: true
          type: string
        sourceType:
          description: The type of the HTTP request part that contains the value that
            was used in this segment.
          enum:
          - HTTP_BODY
          - HTTP_COOKIE
          - HTTP_HEADER_NAME
          - HTTP_HEADER_VALUE
          - HTTP_OTHER
          - HTTP_PARAMETER_NAME
          - HTTP_PARAMETER_VALUE
          - HTTP_URL
          - UNKNOWN
          readOnly: true
          type: string
      readOnly: true
      type: object
    EntryPoints:
      description: A list of entry points and a flag which indicates whether this
        list was truncated or not.
      example:
        truncated: true
        items:
        - sourceHttpPath: sourceHttpPath
          usageSegments:
          - sourceType: HTTP_BODY
            segmentValue: segmentValue
            sourceArgumentName: sourceArgumentName
            segmentType: MALICIOUS_INPUT
          - sourceType: HTTP_BODY
            segmentValue: segmentValue
            sourceArgumentName: sourceArgumentName
            segmentType: MALICIOUS_INPUT
        - sourceHttpPath: sourceHttpPath
          usageSegments:
          - sourceType: HTTP_BODY
            segmentValue: segmentValue
            sourceArgumentName: sourceArgumentName
            segmentType: MALICIOUS_INPUT
          - sourceType: HTTP_BODY
            segmentValue: segmentValue
            sourceArgumentName: sourceArgumentName
            segmentType: MALICIOUS_INPUT
      properties:
        items:
          description: A list of entry points.
          items:
            $ref: '#/components/schemas/EntryPoint'
          readOnly: true
          type: array
        truncated:
          description: Indicates whether the list of entry points was truncated or
            not.
          readOnly: true
          type: boolean
      readOnly: true
      type: object
    EntrypointPayload:
      description: Describes a payload sent to an entrypoint during an attack.
      example:
        name: name
        type: HTTP_BODY
        value: value
      properties:
        name:
          description: "Name of the payload, if applicable."
          nullable: true
          readOnly: true
          type: string
        type:
          description: Type of the payload.
          enum:
          - HTTP_BODY
          - HTTP_COOKIE
          - HTTP_HEADER_NAME
          - HTTP_HEADER_VALUE
          - HTTP_OTHER
          - HTTP_PARAMETER_NAME
          - HTTP_PARAMETER_VALUE
          - HTTP_URL
          - UNKNOWN
          readOnly: true
          type: string
        value:
          description: Value of the payload.
          readOnly: true
          type: string
      readOnly: true
      type: object
    EnumType:
      description: Definition of an enum property.
      example:
        displayName: typeDisplayName
        documentation: typeDocumentation
        description: typeDescription
        enumClass: enumClass
        type: enum
        items:
        - displayName: exampleDisplayName
          icon: checkmark
          description: exampleDescription
          enumInstance: exampleJavaEnumValue
          value: exampleValue
        - displayName: exampleDisplayName
          icon: checkmark
          description: exampleDescription
          enumInstance: exampleJavaEnumValue
          value: exampleValue
      properties:
        description:
          description: A short description of the property.
          example: typeDescription
          type: string
        displayName:
          description: The display name of the property.
          example: typeDisplayName
          type: string
        documentation:
          description: An extended description and/or links to documentation.
          example: typeDocumentation
          type: string
        enumClass:
          description: An existing Java enum class that holds the allowed values of
            the enum.
          example: enumClass
          type: string
        items:
          description: A list of allowed values of the enum.
          items:
            $ref: '#/components/schemas/EnumValue'
          type: array
        type:
          description: The type of the property.
          enum:
          - enum
          example: enum
          type: string
      required:
      - description
      - documentation
      - items
      - type
      type: object
    EnumValue:
      description: An allowed value for an enum property.
      example:
        displayName: exampleDisplayName
        icon: checkmark
        description: exampleDescription
        enumInstance: exampleJavaEnumValue
        value: exampleValue
      properties:
        description:
          description: A short description of the value.
          example: exampleDescription
          type: string
        displayName:
          description: The display name of the value.
          example: exampleDisplayName
          type: string
        enumInstance:
          description: The name of the value in an existing Java enum class.
          example: exampleJavaEnumValue
          type: string
        icon:
          description: The icon of the value.
          example: checkmark
          type: string
        value:
          description: The allowed value of the enum.
          example: exampleValue
          type: object
      required:
      - displayName
      - value
      type: object
    Error:
      example:
        constraintViolations:
        - path: path
          location: location
          message: message
          parameterLocation: HEADER
        - path: path
          location: location
          message: message
          parameterLocation: HEADER
        code: 6
        message: message
      properties:
        code:
          description: The HTTP status code
          format: int32
          type: integer
        constraintViolations:
          description: A list of constraint violations
          items:
            $ref: '#/components/schemas/ConstraintViolation'
          type: array
        message:
          description: The error message
          type: string
      type: object
    ErrorEnvelope:
      properties:
        error:
          $ref: '#/components/schemas/Error'
      type: object
    Event:
      description: Configuration of an event.
      example:
        eventId: 4293884258445543163_1564039524182
        underMaintenance: true
        entityTags:
        - context: context
          stringRepresentation: stringRepresentation
          value: value
          key: key
        - context: context
          stringRepresentation: stringRepresentation
          value: value
          key: key
        entityId:
          name: name
          entityId:
            id: id
            type: type
        eventType: LOW_DISK_SPACE
        title: High CPU load on host X
        managementZones:
        - name: name
          id: id
        - name: name
          id: id
        correlationId: 933613657e1c8fcf
        frequentEvent: true
        startTime: 1564039524182
        endTime: 1564039524182
        suppressAlert: true
        properties:
        - value: value
          key: key
        - value: value
          key: key
        suppressProblem: true
        status: OPEN
      properties:
        correlationId:
          description: 'The correlation ID of the event. '
          example: 933613657e1c8fcf
          type: string
        endTime:
          description: "The timestamp when the event was closed, in UTC milliseconds.\
            \ \n\n Has the value of `null` if the event is still active."
          example: 1564039524182
          format: int64
          type: integer
        entityId:
          $ref: '#/components/schemas/EntityStub'
        entityTags:
          description: A list of tags of the related entity.
          items:
            $ref: '#/components/schemas/METag'
          type: array
          uniqueItems: true
        eventId:
          description: The ID of the event.
          example: 4293884258445543163_1564039524182
          type: string
        eventType:
          description: The type of the event.
          example: LOW_DISK_SPACE
          type: string
        frequentEvent:
          description: "If `true`, the event happens [frequently](https://dt-url.net/4da3kdg).\
            \ \n\n A frequent event doesn't raise a problem."
          type: boolean
        managementZones:
          description: A list of all management zones that the event belongs to.
          items:
            $ref: '#/components/schemas/ManagementZone'
          type: array
          uniqueItems: true
        properties:
          description: A list of event properties.
          items:
            $ref: '#/components/schemas/EventProperty'
          type: array
        startTime:
          description: "The timestamp when the event was raised, in UTC milliseconds."
          example: 1564039524182
          format: int64
          type: integer
        status:
          description: The status of the event.
          enum:
          - CLOSED
          - OPEN
          example: OPEN
          type: string
        suppressAlert:
          description: "The alerting status during a [maintenance](https://dt-url.net/b2123rg0):\
            \ \n\n * `false`: Alerting works as usual. \n* `true`: Alerting is disabled."
          type: boolean
        suppressProblem:
          description: "The problem detection status during a [maintenance](https://dt-url.net/b2123rg0):\
            \ \n\n * `false`: Problem detection works as usual. \n* `true`: Problem\
            \ detection is disabled."
          type: boolean
        title:
          description: The title of the event.
          example: High CPU load on host X
          type: string
        underMaintenance:
          description: "If `true`, the event happened while the monitored system was\
            \ under maintenance."
          type: boolean
      type: object
    EventEvidence:
      allOf:
      - $ref: '#/components/schemas/Evidence'
      - properties:
          data:
            $ref: '#/components/schemas/Event'
          endTime:
            description: "The end timestamp of the event, in UTC milliseconds. \n\n\
              \ Has `-1` value, if the event is still active."
            format: int64
            type: integer
          eventId:
            description: The ID of the event.
            type: string
          eventType:
            description: The type of the event.
            type: string
        type: object
      description: "The event evidence of the problem. \n\nAn event that occurred\
        \ during the problem lifespan that might be related to the root cause."
      required:
      - displayName
      - endTime
      - entity
      - eventId
      - eventType
      - evidenceType
      - rootCauseRelevant
      - startTime
      type: object
    EventIngest:
      description: The configuration of an event to be ingested.
      example:
        startTime: 6
        endTime: 0
        entitySelector: entitySelector
        eventType: AVAILABILITY_EVENT
        title: title
        properties:
          key: properties
        timeout: 1
      properties:
        endTime:
          description: |-
            The end time of the event, in UTC milliseconds.

            If not set, the start time plus timeout is used.
          format: int64
          type: integer
        entitySelector:
          description: "The [entity selector](https://dt-url.net/apientityselector),\
            \ defining a set of Dynatrace entities to be associated with the event.\n\
            \nOnly entities that have been active within the last 24 hours can be\
            \ selected. \n\n If not set, the event is associated with the environment\
            \ (`dt.entity.environment`) entity."
          type: string
        eventType:
          description: The type of the event.
          enum:
          - AVAILABILITY_EVENT
          - CUSTOM_ALERT
          - CUSTOM_ANNOTATION
          - CUSTOM_CONFIGURATION
          - CUSTOM_DEPLOYMENT
          - CUSTOM_INFO
          - ERROR_EVENT
          - MARKED_FOR_TERMINATION
          - PERFORMANCE_EVENT
          - RESOURCE_CONTENTION_EVENT
          type: string
        properties:
          additionalProperties:
            description: |-
              A map of event properties.

              Keys with prefix `dt.*` are generally disallowed, with the exceptions of `dt.event.*`, `dt.davis.*` and `dt.entity.*`. These reserved keys may be used to set event properties with predefined semantics within the Dynatrace product.
              `dt.entity.*` keys may be used to provide additional information on an event, but will not lead to the event being tied to the specified entities.
              All other keys are interpreted as user-defined event properties.

              Values of Dynatrace-reserved properties must fulfill the requirements of the respective property.
            type: string
          description: |-
            A map of event properties.

            Keys with prefix `dt.*` are generally disallowed, with the exceptions of `dt.event.*`, `dt.davis.*` and `dt.entity.*`. These reserved keys may be used to set event properties with predefined semantics within the Dynatrace product.
            `dt.entity.*` keys may be used to provide additional information on an event, but will not lead to the event being tied to the specified entities.
            All other keys are interpreted as user-defined event properties.

            Values of Dynatrace-reserved properties must fulfill the requirements of the respective property.
          type: object
        startTime:
          description: |-
            The start time of the event, in UTC milliseconds.

            If not set, the current timestamp is used.

            Depending on the event type, the start time must not lie in the future more than 5 minutes for trigger events and 7 days for info events.
          format: int64
          type: integer
        timeout:
          description: |-
            The timeout of the event, in minutes.

            If not set, 15 is used.

            The timeout will automatically be capped to a maximum of 360 minutes (6 hours).

            Problem-opening events can be refreshed and therefore kept open by sending the same payload again.
          format: int32
          type: integer
        title:
          description: The title of the event.
          type: string
      required:
      - eventType
      - title
      type: object
    EventIngestResult:
      description: The result of a created event report.
      example:
        correlationId: correlationId
        status: INVALID_ENTITY_TYPE
      properties:
        correlationId:
          description: The correlation ID of the created event.
          type: string
        status:
          description: The status of the ingestion.
          enum:
          - INVALID_ENTITY_TYPE
          - INVALID_METADATA
          - INVALID_TIMESTAMPS
          - OK
          type: string
      type: object
    EventIngestResults:
      description: The results of an event ingest.
      example:
        reportCount: 0
        eventIngestResults:
        - correlationId: correlationId
          status: INVALID_ENTITY_TYPE
        - correlationId: correlationId
          status: INVALID_ENTITY_TYPE
      properties:
        eventIngestResults:
          description: The result of each created event report.
          items:
            $ref: '#/components/schemas/EventIngestResult'
          type: array
        reportCount:
          description: The number of created event reports.
          format: int32
          type: integer
      type: object
    EventList:
      description: A list of events.
      example:
        nextPageKey: AQAAABQBAAAABQ==
        warnings:
        - warnings
        - warnings
        pageSize: 0
        totalCount: 6
        events:
        - eventId: 4293884258445543163_1564039524182
          underMaintenance: true
          entityTags:
          - context: context
            stringRepresentation: stringRepresentation
            value: value
            key: key
          - context: context
            stringRepresentation: stringRepresentation
            value: value
            key: key
          entityId:
            name: name
            entityId:
              id: id
              type: type
          eventType: LOW_DISK_SPACE
          title: High CPU load on host X
          managementZones:
          - name: name
            id: id
          - name: name
            id: id
          correlationId: 933613657e1c8fcf
          frequentEvent: true
          startTime: 1564039524182
          endTime: 1564039524182
          suppressAlert: true
          properties:
          - value: value
            key: key
          - value: value
            key: key
          suppressProblem: true
          status: OPEN
        - eventId: 4293884258445543163_1564039524182
          underMaintenance: true
          entityTags:
          - context: context
            stringRepresentation: stringRepresentation
            value: value
            key: key
          - context: context
            stringRepresentation: stringRepresentation
            value: value
            key: key
          entityId:
            name: name
            entityId:
              id: id
              type: type
          eventType: LOW_DISK_SPACE
          title: High CPU load on host X
          managementZones:
          - name: name
            id: id
          - name: name
            id: id
          correlationId: 933613657e1c8fcf
          frequentEvent: true
          startTime: 1564039524182
          endTime: 1564039524182
          suppressAlert: true
          properties:
          - value: value
            key: key
          - value: value
            key: key
          suppressProblem: true
          status: OPEN
      properties:
        events:
          description: A list of events.
          items:
            $ref: '#/components/schemas/Event'
          type: array
        nextPageKey:
          description: "The cursor for the next page of results. Has the value of\
            \ `null` on the last page. \n\nUse it in the **nextPageKey** query parameter\
            \ to obtain subsequent pages of the result."
          example: AQAAABQBAAAABQ==
          type: string
        pageSize:
          description: The number of entries per page.
          format: int32
          type: integer
        totalCount:
          description: The total number of entries in the result.
          format: int64
          type: integer
        warnings:
          description: A list of warnings.
          items:
            type: string
          type: array
          uniqueItems: true
      required:
      - totalCount
      type: object
    EventPropertiesList:
      description: A list of event properties.
      example:
        nextPageKey: AQAAABQBAAAABQ==
        pageSize: 0
        totalCount: 6
        eventProperties:
        - displayName: Custom description
          description: description
          key: dt.event.description
          writable: true
        - displayName: Custom description
          description: description
          key: dt.event.description
          writable: true
      properties:
        eventProperties:
          description: A list of event properties.
          items:
            $ref: '#/components/schemas/EventPropertyDetails'
          type: array
        nextPageKey:
          description: "The cursor for the next page of results. Has the value of\
            \ `null` on the last page. \n\nUse it in the **nextPageKey** query parameter\
            \ to obtain subsequent pages of the result."
          example: AQAAABQBAAAABQ==
          type: string
        pageSize:
          description: The number of entries per page.
          format: int32
          type: integer
        totalCount:
          description: The total number of entries in the result.
          format: int64
          type: integer
      required:
      - totalCount
      type: object
    EventProperty:
      description: A property of an event.
      example:
        value: value
        key: key
      properties:
        key:
          description: The key of the event property.
          type: string
        value:
          description: The value of the event property.
          type: string
      type: object
    EventPropertyDetails:
      description: Configuration of an event property.
      example:
        displayName: Custom description
        description: description
        key: dt.event.description
        writable: true
      properties:
        description:
          description: A short description of the event property.
          type: string
        displayName:
          description: The display name of the event property.
          example: Custom description
          type: string
        key:
          description: The key of the event property.
          example: dt.event.description
          type: string
        writable:
          description: The property can (`true`) or cannot (`false`) be set during
            event ingestion.
          type: boolean
      type: object
    EventType:
      description: Configuration of an event type.
      example:
        severityLevel: PERFORMANCE
        displayName: High CPU
        description: description
        type: OSI_HIGH_CPU
      properties:
        description:
          description: A short description of the event type.
          type: string
        displayName:
          description: The display name of the event type.
          example: High CPU
          type: string
        severityLevel:
          description: The severity level associated with the event type.
          enum:
          - AVAILABILITY
          - CUSTOM_ALERT
          - ERROR
          - INFO
          - MONITORING_UNAVAILABLE
          - PERFORMANCE
          - RESOURCE_CONTENTION
          example: PERFORMANCE
          type: string
        type:
          description: The event type.
          example: OSI_HIGH_CPU
          type: string
      type: object
    EventTypeList:
      description: A list of event types.
      example:
        nextPageKey: AQAAABQBAAAABQ==
        eventTypeInfos:
        - severityLevel: PERFORMANCE
          displayName: High CPU
          description: description
          type: OSI_HIGH_CPU
        - severityLevel: PERFORMANCE
          displayName: High CPU
          description: description
          type: OSI_HIGH_CPU
        pageSize: 0
        totalCount: 6
      properties:
        eventTypeInfos:
          description: A list of event types.
          items:
            $ref: '#/components/schemas/EventType'
          type: array
        nextPageKey:
          description: "The cursor for the next page of results. Has the value of\
            \ `null` on the last page. \n\nUse it in the **nextPageKey** query parameter\
            \ to obtain subsequent pages of the result."
          example: AQAAABQBAAAABQ==
          type: string
        pageSize:
          description: The number of entries per page.
          format: int32
          type: integer
        totalCount:
          description: The total number of entries in the result.
          format: int64
          type: integer
      required:
      - totalCount
      type: object
    Evidence:
      description: "An evidence of a root cause. \n\n The actual set of fields depends\
        \ on the type of the evidence. Find the list of actual objects in the description\
        \ of the **evidenceType** field or see [Problems API v2 - JSON models](https://dt-url.net/we03sp2)."
      discriminator:
        mapping:
          AVAILABILITY_EVIDENCE: '#/components/schemas/AvailabilityEvidence'
          EVENT: '#/components/schemas/EventEvidence'
          MAINTENANCE_WINDOW: '#/components/schemas/MaintenanceWindowEvidence'
          METRIC: '#/components/schemas/MetricEvidence'
          TRANSACTIONAL: '#/components/schemas/TransactionalEvidence'
        propertyName: evidenceType
      example:
        displayName: displayName
        evidenceType: AVAILABILITY_EVIDENCE
        startTime: 1
        groupingEntity:
          name: name
          entityId:
            id: id
            type: type
        entity:
          name: name
          entityId:
            id: id
            type: type
        rootCauseRelevant: true
      properties:
        displayName:
          description: The display name of the evidence.
          type: string
        entity:
          $ref: '#/components/schemas/EntityStub'
        evidenceType:
          description: "Defines the actual set of fields depending on the value. See\
            \ one of the following objects: \n\n* `EVENT` -> EventEvidence \n* `METRIC`\
            \ -> MetricEvidence \n* `TRANSACTIONAL` -> TransactionalEvidence \n* `MAINTENANCE_WINDOW`\
            \ -> MaintenanceWindowEvidence \n* `AVAILABILITY_EVIDENCE` -> AvailabilityEvidence\
            \ \n"
          enum:
          - AVAILABILITY_EVIDENCE
          - EVENT
          - MAINTENANCE_WINDOW
          - METRIC
          - TRANSACTIONAL
          type: string
        groupingEntity:
          $ref: '#/components/schemas/EntityStub'
        rootCauseRelevant:
          description: The evidence is (`true`) or is not (`false`) a part of the
            root cause.
          type: boolean
        startTime:
          description: "The start time of the evidence, in UTC milliseconds."
          format: int64
          type: integer
      required:
      - displayName
      - entity
      - evidenceType
      - rootCauseRelevant
      - startTime
      type: object
    EvidenceDetails:
      description: The evidence details of a problem.
      example:
        details:
        - displayName: displayName
          evidenceType: AVAILABILITY_EVIDENCE
          startTime: 1
          groupingEntity:
            name: name
            entityId:
              id: id
              type: type
          entity:
            name: name
            entityId:
              id: id
              type: type
          rootCauseRelevant: true
        - displayName: displayName
          evidenceType: AVAILABILITY_EVIDENCE
          startTime: 1
          groupingEntity:
            name: name
            entityId:
              id: id
              type: type
          entity:
            name: name
            entityId:
              id: id
              type: type
          rootCauseRelevant: true
        totalCount: 5
      properties:
        details:
          description: A list of all evidence.
          items:
            $ref: '#/components/schemas/Evidence'
          type: array
        totalCount:
          description: The total number of evidence of a problem.
          format: int64
          type: integer
      required:
      - details
      - totalCount
      type: object
    ExecutionFullResults:
      description: Contains extended monitor's execution details.
      properties:
        errorCode:
          description: Error code.
          type: string
        executionStepCount:
          description: Number executed steps.
          format: int32
          type: integer
        executionSteps:
          description: Details about the monitor's step execution.
          items:
            $ref: '#/components/schemas/ExecutionStep'
          type: array
        failedStepName:
          description: Failed step name.
          type: string
        failedStepSequenceId:
          description: Failed step sequence id.
          format: int32
          type: integer
        failureMessage:
          description: Failure message.
          type: string
        status:
          description: Execution status.
          type: string
      type: object
    ExecutionSimpleResults:
      description: Contains basic results of the monitor's on-demand execution.
      properties:
        chromeError:
          description: Informs whether is Chrome error.
          type: boolean
        engineId:
          description: Synthetic engine id on which monitor was executed.
          format: int64
          type: integer
        errorCode:
          description: Error code.
          type: string
        executedSteps:
          description: Number of the executed steps by Synthetic engine
          format: int32
          type: integer
        failureMessage:
          description: Failure message.
          type: string
        hostNameResolutionTime:
          description: A hostname resolution time measured in milliseconds.
          format: int64
          type: integer
        httperror:
          description: Informs whether is HTTP error.
          type: boolean
        peerCertificateExpiryDate:
          deprecated: true
          description: An expiry date of the first SSL certificate from the certificate
            chain.
          format: int64
          type: integer
        publicLocation:
          description: Flag informs whether request was executed on public location.
          type: boolean
        redirectionTime:
          description: "Total number of milliseconds spent on handling all redirect\
            \ requests, measured in milliseconds."
          format: int64
          type: integer
        redirectsCount:
          description: Number of redirects.
          format: int32
          type: integer
        responseBodySizeLimitExceeded:
          description: A flag indicating that the response payload size limit of 10MB
            has been exceeded.
          type: boolean
        responseSize:
          description: Request's response size in bytes.
          format: int64
          type: integer
        responseStatusCode:
          description: Response status code.
          format: int32
          type: integer
        startTimestamp:
          description: Start timestamp.
          format: int64
          type: integer
        status:
          description: Execution status.
          type: string
        tcpConnectTime:
          description: A TCP connect time measured in milliseconds.
          format: int64
          type: integer
        timeToFirstByte:
          description: A time to first byte measured in milliseconds.
          format: int64
          type: integer
        tlsHandshakeTime:
          description: A TLS handshake time measured in milliseconds.
          format: int64
          type: integer
        totalTime:
          description: A total time measured in milliseconds.
          format: int64
          type: integer
      type: object
    ExecutionStep:
      description: Contains detailed information about the monitor's step execution.
      discriminator:
        mapping:
          BROWSER: '#/components/schemas/BMAction'
          HTTP: '#/components/schemas/MonitorRequestExecutionResult'
        propertyName: monitorType
      properties:
        monitorType:
          description: "Defines the actual set of fields depending on the value. See\
            \ one of the following objects: \n\n* `BROWSER` -> BMAction \n* `HTTP`\
            \ -> MonitorRequestExecutionResult \n"
          enum:
          - BROWSER
          - HTTP
          type: string
      required:
      - monitorType
      type: object
    ExportedLogRecordList:
      description: A list of exported log records.
      example:
        nextPageKey: ___-2lZ43q0AAAAdeJxjYAAC1sLS1KJKBhjggtIijFCGHEwCAFiHAoP___7aVnjerQ
        pageSize: 100
        results:
        - additionalColumns:
            custom.attribute:
            - value1
            - value2
            loglevel:
            - SEVERE
          content: example log content
          event.type: LOG
          status: ERROR
          timestamp: "1631193089000"
        totalCount: 150
      properties:
        nextPageKey:
          description: "The cursor for the next page of results. Has the value of\
            \ `null` on the last page. \n\nUse it in the **nextPageKey** query parameter\
            \ to obtain subsequent pages of the result."
          example: AQAAABQBAAAABQ==
          type: string
        pageSize:
          description: The number of entries per page.
          format: int32
          type: integer
        results:
          description: A list of retrieved log records.
          items:
            $ref: '#/components/schemas/LogRecord'
          type: array
        totalCount:
          description: The total number of entries in the result.
          format: int64
          type: integer
      required:
      - totalCount
      type: object
    Extension:
      example:
        featureSets:
        - featureSets
        - featureSets
        extensionName: extensionName
        minEECVersion: minEECVersion
        variables:
        - variables
        - variables
        author:
          name: name
        featureSetsDetails:
          key:
            metrics:
            - metadata:
                unit: unit
                displayName: displayName
                description: description
              key: key
            - metadata:
                unit: unit
                displayName: displayName
                description: description
              key: key
        minDynatraceVersion: minDynatraceVersion
        fileHash: fileHash
        dataSources:
        - dataSources
        - dataSources
        version: 1.2.3
      properties:
        author:
          $ref: '#/components/schemas/AuthorDto'
        dataSources:
          description: Data sources that extension uses to gather data
          items:
            description: Data sources that extension uses to gather data
            type: string
          type: array
        extensionName:
          description: Extension name
          type: string
        featureSets:
          description: Available feature sets
          items:
            description: Available feature sets
            type: string
          type: array
          uniqueItems: true
        featureSetsDetails:
          additionalProperties:
            $ref: '#/components/schemas/FeatureSetDetails'
          description: Details of feature sets
          type: object
        fileHash:
          description: SHA-256 hash of uploaded Extension file
          type: string
        minDynatraceVersion:
          description: Minimal Dynatrace version that works with the extension
          type: string
        minEECVersion:
          description: Minimal Extension Execution Controller version that works with
            the extension
          type: string
        variables:
          description: Custom variables used in extension configuration
          items:
            description: Custom variables used in extension configuration
            type: string
          type: array
        version:
          description: Extension version
          example: 1.2.3
          pattern: "^(0|[1-9]\\d*)(\\.(0|[1-9]\\d*))?(\\.(0|[1-9]\\d*))?"
          type: string
      type: object
    Extension1Details:
      description: Additional details of the extension version 1.
      example:
        releases:
        - releaseNotes: releaseNotes
          artifactTitle: artifactTitle
          artifactSha256: artifactSha256
          version: version
        - releaseNotes: releaseNotes
          artifactTitle: artifactTitle
          artifactSha256: artifactSha256
          version: version
      nullable: true
      properties:
        releases:
          description: A list of versions for the extension version 1.
          items:
            $ref: '#/components/schemas/Extension1Release'
          type: array
      type: object
    Extension1Release:
      description: Extension version 1 release details.
      example:
        releaseNotes: releaseNotes
        artifactTitle: artifactTitle
        artifactSha256: artifactSha256
        version: version
      properties:
        artifactSha256:
          description: SHA-256 hash of the extension version 1.
          nullable: true
          type: string
        artifactTitle:
          description: The title of the extension version 1.
          nullable: true
          type: string
        releaseNotes:
          description: The associated release notes.
          nullable: true
          type: string
        version:
          description: The version number of the extension version 1 release.
          type: string
      type: object
    Extension2Details:
      description: Additional details of the extension.
      example:
        extensionName: extensionName
        recommendedCatalogVersion: recommendedCatalogVersion
        distributed: true
        releases:
        - featureSets:
            key:
              metrics:
              - metadata:
                  unit: unit
                  displayName: displayName
                  description: description
                key: key
              - metadata:
                  unit: unit
                  displayName: displayName
                  description: description
                key: key
          assetsInfo:
          - count: 0
            assetType: assetType
          - count: 0
            assetType: assetType
          active: true
          distributed: true
          registered: true
          unpublishedSeverity: 5
          unpublished: true
          version: version
          releaseNotes: releaseNotes
          artifactSha256: artifactSha256
          minClusterVersion: 1
          dataSources:
          - dataSources
          - dataSources
          unpublishedDescription: unpublishedDescription
          configuredFeatureSets:
          - configuredFeatureSets
          - configuredFeatureSets
        - featureSets:
            key:
              metrics:
              - metadata:
                  unit: unit
                  displayName: displayName
                  description: description
                key: key
              - metadata:
                  unit: unit
                  displayName: displayName
                  description: description
                key: key
          assetsInfo:
          - count: 0
            assetType: assetType
          - count: 0
            assetType: assetType
          active: true
          distributed: true
          registered: true
          unpublishedSeverity: 5
          unpublished: true
          version: version
          releaseNotes: releaseNotes
          artifactSha256: artifactSha256
          minClusterVersion: 1
          dataSources:
          - dataSources
          - dataSources
          unpublishedDescription: unpublishedDescription
          configuredFeatureSets:
          - configuredFeatureSets
          - configuredFeatureSets
      nullable: true
      properties:
        distributed:
          description: Whether this extension is available in the central hub catalog.
          type: boolean
        extensionName:
          description: Fully qualified name of the extension.
          type: string
        recommendedCatalogVersion:
          description: Recommended version of this extension to use. This is the latest
            compatible published release.
          nullable: true
          type: string
        releases:
          description: Releases for the extension.
          items:
            $ref: '#/components/schemas/ExtensionRelease'
          type: array
      type: object
    ExtensionAssetsDto:
      description: List of assets imported with the active extension environment configuration.
      example:
        assets:
        - assetSchemaDetails:
            schemaId: schemaId
            scope: scope
            key: key
          displayName: displayName
          id: id
          type: ALERT
        - assetSchemaDetails:
            schemaId: schemaId
            scope: scope
            key: key
          displayName: displayName
          id: id
          type: ALERT
        version: 1.2.3
        errors:
        - errors
        - errors
        status: status
      properties:
        assets:
          description: The list of the imported assets.
          items:
            $ref: '#/components/schemas/AssetInfoDto'
          type: array
        errors:
          description: List of errors during asset import
          items:
            description: List of errors during asset import
            type: string
          type: array
        status:
          description: The status of the assets list.
          type: string
        version:
          description: Extension version
          example: 1.2.3
          pattern: "^(0|[1-9]\\d*)(\\.(0|[1-9]\\d*))?(\\.(0|[1-9]\\d*))?"
          type: string
      type: object
    ExtensionEnvironmentConfigurationVersion:
      example:
        version: 1.2.3
      properties:
        version:
          description: Extension version
          example: 1.2.3
          pattern: "^(0|[1-9]\\d*)(\\.(0|[1-9]\\d*))?(\\.(0|[1-9]\\d*))?"
          type: string
      required:
      - version
      type: object
    ExtensionEventDto:
      description: A list of extension events.
      example:
        severity: severity
        dt.extension.ds: dt.extension.ds
        dt.active_gate.id: dt.active_gate.id
        content: content
        dt.entity.host: dt.entity.host
        status: ERROR
        timestamp: timestamp
      properties:
        content:
          description: Content of the event
          type: string
        dt.active_gate.id:
          description: |-
            Hexadecimal ID of Active Gate that uses this monitoring configuration.

            Example: `0x1a2b3c4d`
          type: string
        dt.entity.host:
          description: |-
            Host that uses this monitoring configuration.

            Example: `HOST-ABCDEF0123456789`
          type: string
        dt.extension.ds:
          description: |-
            Data source that uses this monitoring configuration.

            Example: `snmp`
          type: string
        severity:
          description: Severity of the event
          type: string
        status:
          description: Status of the event
          enum:
          - ERROR
          - INFO
          - NONE
          - WARN
          type: string
        timestamp:
          description: Timestamp of the event
          type: string
      type: object
    ExtensionEventsList:
      example:
        extensionEvents:
        - severity: severity
          dt.extension.ds: dt.extension.ds
          dt.active_gate.id: dt.active_gate.id
          content: content
          dt.entity.host: dt.entity.host
          status: ERROR
          timestamp: timestamp
        - severity: severity
          dt.extension.ds: dt.extension.ds
          dt.active_gate.id: dt.active_gate.id
          content: content
          dt.entity.host: dt.entity.host
          status: ERROR
          timestamp: timestamp
      properties:
        extensionEvents:
          description: A list of extension events.
          items:
            $ref: '#/components/schemas/ExtensionEventDto'
          type: array
      type: object
    ExtensionList:
      example:
        nextPageKey: AQAAABQBAAAABQ==
        extensions:
        - extensionName: extensionName
          version: 1.2.3
        - extensionName: extensionName
          version: 1.2.3
        pageSize: 0
        totalCount: 6
      properties:
        extensions:
          description: A list of extensions.
          items:
            $ref: '#/components/schemas/MinimalExtension'
          type: array
        nextPageKey:
          description: "The cursor for the next page of results. Has the value of\
            \ `null` on the last page. \n\nUse it in the **nextPageKey** query parameter\
            \ to obtain subsequent pages of the result."
          example: AQAAABQBAAAABQ==
          type: string
        pageSize:
          description: The number of entries per page.
          format: int32
          type: integer
        totalCount:
          description: The total number of entries in the result.
          format: int64
          type: integer
      required:
      - totalCount
      type: object
    ExtensionMonitoringConfiguration:
      example:
        scope: scope
        value: "{}"
        objectId: objectId
      properties:
        objectId:
          description: Configuration id
          type: string
        scope:
          description: Configuration scope
          type: string
        value:
          description: Configuration
          type: object
      type: object
    ExtensionMonitoringConfigurationsList:
      example:
        nextPageKey: AQAAABQBAAAABQ==
        pageSize: 0
        totalCount: 6
        items:
        - scope: scope
          value: "{}"
          objectId: objectId
        - scope: scope
          value: "{}"
          objectId: objectId
      properties:
        items:
          description: A list of extension monitoring configurations.
          items:
            $ref: '#/components/schemas/ExtensionMonitoringConfiguration'
          type: array
        nextPageKey:
          description: "The cursor for the next page of results. Has the value of\
            \ `null` on the last page. \n\nUse it in the **nextPageKey** query parameter\
            \ to obtain subsequent pages of the result."
          example: AQAAABQBAAAABQ==
          type: string
        pageSize:
          description: The number of entries per page.
          format: int32
          type: integer
        totalCount:
          description: The total number of entries in the result.
          format: int64
          type: integer
      required:
      - totalCount
      type: object
    ExtensionRelease:
      description: Extensions releases information
      example:
        featureSets:
          key:
            metrics:
            - metadata:
                unit: unit
                displayName: displayName
                description: description
              key: key
            - metadata:
                unit: unit
                displayName: displayName
                description: description
              key: key
        assetsInfo:
        - count: 0
          assetType: assetType
        - count: 0
          assetType: assetType
        active: true
        distributed: true
        registered: true
        unpublishedSeverity: 5
        unpublished: true
        version: version
        releaseNotes: releaseNotes
        artifactSha256: artifactSha256
        minClusterVersion: 1
        dataSources:
        - dataSources
        - dataSources
        unpublishedDescription: unpublishedDescription
        configuredFeatureSets:
        - configuredFeatureSets
        - configuredFeatureSets
      properties:
        active:
          description: Represents whether this version is active version
          type: boolean
        artifactSha256:
          description: Sha256 hash for the distributed extension.
          nullable: true
          type: string
        assetsInfo:
          description: Assets types and its count
          items:
            $ref: '#/components/schemas/AssetInfo'
          type: array
        configuredFeatureSets:
          description: Configured feature sets for an installed release
          items:
            description: Configured feature sets for an installed release
            type: string
          type: array
        dataSources:
          description: Available data sources for the given release
          items:
            description: Available data sources for the given release
            type: string
          type: array
        distributed:
          description: Represents whether the release is distributed
          type: boolean
        featureSets:
          additionalProperties:
            $ref: '#/components/schemas/FeatureSetDetails'
          description: Feature sets contained in the given release
          type: object
        minClusterVersion:
          description: Minimum cluster version for the release
          format: int32
          nullable: true
          type: integer
        registered:
          description: Represents whether extension is already registered
          type: boolean
        releaseNotes:
          description: Release notes for the extension.
          nullable: true
          type: string
        unpublished:
          description: Represents whether the extension is unpublished.
          type: boolean
        unpublishedDescription:
          description: The description why the extension was unpublished.
          nullable: true
          type: string
        unpublishedSeverity:
          description: The severity of unpublished extension. 5 indicates an error
            state
          format: int32
          nullable: true
          type: integer
        version:
          description: Version number of the extension.
          type: string
      type: object
    ExtensionReleaseNotes:
      description: Releases notes for an extension.
      example:
        markdown: markdown
      properties:
        markdown:
          description: Release notes in markdown format
          type: string
      type: object
    ExtensionStatusDto:
      example:
        status: ERROR
        timestamp: 0
      properties:
        status:
          description: Latest status of given configuration.
          enum:
          - ERROR
          - OK
          - UNKNOWN
          type: string
        timestamp:
          description: Timestamp of the latest status of given configuration.
          format: int64
          type: integer
      type: object
    ExtensionUploadResponseDto:
      example:
        featureSets:
        - featureSets
        - featureSets
        extensionName: extensionName
        minEECVersion: minEECVersion
        variables:
        - variables
        - variables
        assetsInfo:
        - count: 0
          assetType: assetType
        - count: 0
          assetType: assetType
        author:
          name: name
        featureSetsDetails:
          key:
            metrics:
            - metadata:
                unit: unit
                displayName: displayName
                description: description
              key: key
            - metadata:
                unit: unit
                displayName: displayName
                description: description
              key: key
        minDynatraceVersion: minDynatraceVersion
        fileHash: fileHash
        dataSources:
        - dataSources
        - dataSources
        version: 1.2.3
      properties:
        assetsInfo:
          description: Information about extension assets included
          items:
            $ref: '#/components/schemas/AssetInfo'
          type: array
          uniqueItems: true
        author:
          $ref: '#/components/schemas/AuthorDto'
        dataSources:
          description: Data sources that extension uses to gather data
          items:
            description: Data sources that extension uses to gather data
            type: string
          type: array
        extensionName:
          description: Extension name
          type: string
        featureSets:
          description: Available feature sets
          items:
            description: Available feature sets
            type: string
          type: array
          uniqueItems: true
        featureSetsDetails:
          additionalProperties:
            $ref: '#/components/schemas/FeatureSetDetails'
          description: Details of feature sets
          type: object
        fileHash:
          description: SHA-256 hash of uploaded Extension file
          type: string
        minDynatraceVersion:
          description: Minimal Dynatrace version that works with the extension
          type: string
        minEECVersion:
          description: Minimal Extension Execution Controller version that works with
            the extension
          type: string
        variables:
          description: Custom variables used in extension configuration
          items:
            description: Custom variables used in extension configuration
            type: string
          type: array
        version:
          description: Extension version
          example: 1.2.3
          pattern: "^(0|[1-9]\\d*)(\\.(0|[1-9]\\d*))?(\\.(0|[1-9]\\d*))?"
          type: string
      type: object
    ExternalVault:
      description: Information for synchronization credentials with external vault
      discriminator:
        mapping:
          AZURE_KEY_VAULT_CLIENT_SECRET: '#/components/schemas/AzureClientSecret'
          CYBERARK_VAULT_ALLOWED_LOCATION: '#/components/schemas/CyberArkAllowedLocationDto'
          CYBERARK_VAULT_USERNAME_PASSWORD: '#/components/schemas/CyberArkUsernamePassword'
          HASHICORP_VAULT_APPROLE: '#/components/schemas/HashicorpApprole'
          HASHICORP_VAULT_CERTIFICATE: '#/components/schemas/HashicorpCertificate'
        propertyName: sourceAuthMethod
      example:
        description: Sample credentials for demo purposes.
        externalVault:
          passwordSecretName: password
          pathToCredentials: kv/credentials
          roleId: 00e4858c-ec33-bc99-4e7e-34de6967de6c
          secretId: CREDENTIALS_VAULT-XXXXXXXXXXXXXXXX
          sourceAuthMethod: HASHICORP_VAULT_APPROLE
          usernameSecretName: username
          vaultNamespace: admin
          vaultUrl: https://vault-cluster.vault.fb17d2fc-be92-4230-afa2-91dbfda3cbad.aws.hashicorp.cloud:8200
        id: CREDENTIALS_VAULT-C43F2C2E6395AD23
        name: Sample username-password credentials synchronized with Hashicorp vault
        owner: user@domain.com
        ownerAccessOnly: true
        scope: SYNTHETIC
        type: USERNAME_PASSWORD
      properties:
        locationForSynchronizationId:
          description: Id of a location used by the synchronizing monitor
          type: string
        passwordSecretName:
          description: The name of the secret saved in external vault where password
            is stored.
          type: string
        sourceAuthMethod:
          description: "Defines the actual set of fields depending on the value. See\
            \ one of the following objects: \n\n* `HASHICORP_VAULT_APPROLE` -> HashicorpApprole\
            \ \n* `HASHICORP_VAULT_CERTIFICATE` -> HashicorpCertificate \n* `AZURE_KEY_VAULT_CLIENT_SECRET`\
            \ -> AzureClientSecret \n* `CYBERARK_VAULT_USERNAME_PASSWORD` -> CyberArkUsernamePassword\
            \ \n* `CYBERARK_VAULT_ALLOWED_LOCATION` -> CyberArkAllowedLocationDto\
            \ \n"
          enum:
          - AZURE_KEY_VAULT_CLIENT_SECRET
          - CYBERARK_VAULT_ALLOWED_LOCATION
          - CYBERARK_VAULT_USERNAME_PASSWORD
          - HASHICORP_VAULT_APPROLE
          - HASHICORP_VAULT_CERTIFICATE
          type: string
        tokenSecretName:
          description: The name of the secret saved in external vault where token
            is stored.
          type: string
        usernameSecretName:
          description: The name of the secret saved in external vault where username
            is stored.
          type: string
        vaultUrl:
          description: External vault URL.
          type: string
      type: object
    ExternalVaultConfig:
      description: Configuration for external vault synchronization for username and
        password credentials.
      discriminator:
        mapping:
          AZURE_KEY_VAULT_CLIENT_SECRET: '#/components/schemas/AzureClientSecretConfig'
          CYBERARK_VAULT_ALLOWED_LOCATION: '#/components/schemas/CyberArkAllowedLocationConfig'
          CYBERARK_VAULT_USERNAME_PASSWORD: '#/components/schemas/CyberArkUsernamePasswordConfig'
          HASHICORP_VAULT_APPROLE: '#/components/schemas/HashicorpApproleConfig'
          HASHICORP_VAULT_CERTIFICATE: '#/components/schemas/HashicorpCertificateConfig'
        propertyName: sourceAuthMethod
      properties:
        credentialsUsedForExternalSynchronization:
          items:
            type: string
          type: array
          uniqueItems: true
        passwordSecretName:
          type: string
        sourceAuthMethod:
          description: "Defines the actual set of fields depending on the value. See\
            \ one of the following objects: \n\n* `HASHICORP_VAULT_APPROLE` -> HashicorpApproleConfig\
            \ \n* `HASHICORP_VAULT_CERTIFICATE` -> HashicorpCertificateConfig \n*\
            \ `AZURE_KEY_VAULT_CLIENT_SECRET` -> AzureClientSecretConfig \n* `CYBERARK_VAULT_USERNAME_PASSWORD`\
            \ -> CyberArkUsernamePasswordConfig \n* `CYBERARK_VAULT_ALLOWED_LOCATION`\
            \ -> CyberArkAllowedLocationConfig \n"
          enum:
          - AZURE_KEY_VAULT_CLIENT_SECRET
          - CYBERARK_VAULT_ALLOWED_LOCATION
          - CYBERARK_VAULT_USERNAME_PASSWORD
          - HASHICORP_VAULT_APPROLE
          - HASHICORP_VAULT_CERTIFICATE
          type: string
        tokenSecretName:
          type: string
        type:
          enum:
          - AZURE_CERTIFICATE_MODEL
          - AZURE_CLIENT_SECRET_MODEL
          - CYBERARK_VAULT_ALLOWED_LOCATION_MODEL
          - CYBERARK_VAULT_USERNAME_PASSWORD_MODEL
          - HASHICORP_APPROLE_MODEL
          - HASHICORP_CERTIFICATE_MODEL
          type: string
        usernameSecretName:
          type: string
        vaultUrl:
          type: string
      type: object
    FeatureSetDetails:
      description: Additional information about a Feature Set
      example:
        metrics:
        - metadata:
            unit: unit
            displayName: displayName
            description: description
          key: key
        - metadata:
            unit: unit
            displayName: displayName
            description: description
          key: key
      properties:
        metrics:
          description: Feature set metrics
          items:
            $ref: '#/components/schemas/MetricDto'
          type: array
      type: object
    Filter:
      description: A dimensional or series filter on a metric.
      properties:
        operands:
          description: "If the type is `not`, `and` or `or`, then holds the contained\
            \ filters."
          items:
            $ref: '#/components/schemas/Filter'
          type: array
        referenceInvocation:
          $ref: '#/components/schemas/Invocation'
        referenceString:
          description: "For filters that match a dimension against a valkue, such\
            \ as `eq` or `ne`, holds the value to compare the dimension against."
          type: string
        referenceValue:
          description: "For the operands of `series` filters that match against a\
            \ number, holds the number to compare against."
          type: number
        rollup:
          $ref: '#/components/schemas/Rollup'
        targetDimension:
          description: "If the type applies to a dimension, then holds the target\
            \ dimension."
          type: string
        targetDimensions:
          description: "If the type applies to n dimensions, then holds the target\
            \ dimensions. Currently only used for the `remainder` filter."
          items:
            description: "If the type applies to n dimensions, then holds the target\
              \ dimensions. Currently only used for the `remainder` filter."
            type: string
          type: array
        type:
          description: "Type of this filter, determines which other fields are present.Can\
            \ be any of: \n* `eq`,\n* `ne`,\n* `prefix`,\n* `in`,\n* `remainder`,\n\
            * `suffix`,\n* `contains`,\n* `existsKey`,\n* `series`,\n* `or`,\n* `and`,\n\
            * `not`,\n* `ge`,\n* `gt`,\n* `le`,\n* `lt`,\n* `otherwise`."
          enum:
          - and
          - contains
          - eq
          - existsKey
          - ge
          - gt
          - in
          - le
          - lt
          - ne
          - not
          - or
          - otherwise
          - prefix
          - remainder
          - series
          - suffix
          type: string
      type: object
    FilteredCountsDto:
      description: "Statistics about the security problem, filtered by the management\
        \ zone and timeframe start ('from') query parameters."
      example:
        relatedAttacks: 4
        affectedNodes: 5
        exposedProcessGroups: 9
        reachableDataAssets: 3
        relatedKubernetesWorkloads: 1
        relatedHosts: 1
        relatedApplications: 2
        relatedServices: 6
        vulnerableComponents: 7
        affectedProcessGroupInstances: 2
        relatedDatabases: 7
        affectedProcessGroups: 7
        relatedKubernetesClusters: 1
      properties:
        affectedNodes:
          description: Number of affected nodes
          format: int32
          readOnly: true
          type: integer
        affectedProcessGroupInstances:
          description: Number of affected processes
          format: int32
          readOnly: true
          type: integer
        affectedProcessGroups:
          description: Number of affected process groups
          format: int32
          readOnly: true
          type: integer
        exposedProcessGroups:
          description: Number of exposed process groups
          format: int32
          readOnly: true
          type: integer
        reachableDataAssets:
          description: Number of reachable data assets
          format: int32
          readOnly: true
          type: integer
        relatedApplications:
          description: Number of related applications
          format: int32
          readOnly: true
          type: integer
        relatedAttacks:
          description: Number of related attacks
          format: int32
          readOnly: true
          type: integer
        relatedDatabases:
          description: Number of related databases
          format: int32
          readOnly: true
          type: integer
        relatedHosts:
          description: Number of related hosts
          format: int32
          readOnly: true
          type: integer
        relatedKubernetesClusters:
          description: Number of related Kubernetes clusters
          format: int32
          readOnly: true
          type: integer
        relatedKubernetesWorkloads:
          description: Number of related Kubernetes workloads
          format: int32
          readOnly: true
          type: integer
        relatedServices:
          description: Number of related services
          format: int32
          readOnly: true
          type: integer
        vulnerableComponents:
          description: Number of vulnerable components
          format: int32
          readOnly: true
          type: integer
      type: object
    FromPosition:
      description: The FROM position of a relationship.
      properties:
        fromTypes:
          description: A list of monitored entity types that can occupy the FROM position.
          items:
            type: string
          type: array
        id:
          description: The ID of the relationship.
          type: string
      type: object
    FunctionDefinition:
      description: Information about a function definition.
      example:
        parameterTypes:
          truncationInfo:
            truncated: true
          values:
          - values
          - values
        functionName: functionName
        displayName: displayName
        className: className
        returnType: returnType
      properties:
        className:
          description: The fully qualified class name of the class that includes the
            function.
          readOnly: true
          type: string
        displayName:
          description: A human readable string representation of the function definition.
          readOnly: true
          type: string
        functionName:
          description: The function/method name.
          readOnly: true
          type: string
        parameterTypes:
          $ref: '#/components/schemas/TruncatableListString'
        returnType:
          description: The return type of the function.
          readOnly: true
          type: string
      readOnly: true
      type: object
    GlobalCountsDto:
      description: Globally calculated statistics about the security problem. No management
        zone information is taken into account.
      example:
        relatedApplications: 9
        relatedAttacks: 3
        affectedNodes: 1
        exposedProcessGroups: 2
        reachableDataAssets: 7
        relatedKubernetesWorkloads: 7
        relatedServices: 1
        vulnerableComponents: 1
        affectedProcessGroupInstances: 5
        affectedProcessGroups: 5
        relatedHosts: 2
        relatedKubernetesClusters: 4
      properties:
        affectedNodes:
          description: Number of affected nodes
          format: int32
          readOnly: true
          type: integer
        affectedProcessGroupInstances:
          description: Number of affected process group instances
          format: int32
          readOnly: true
          type: integer
        affectedProcessGroups:
          description: Number of affected process groups
          format: int32
          readOnly: true
          type: integer
        exposedProcessGroups:
          description: Number of exposed process groups
          format: int32
          readOnly: true
          type: integer
        reachableDataAssets:
          description: Number of reachable data assets exposed
          format: int32
          readOnly: true
          type: integer
        relatedApplications:
          description: Number of related applications
          format: int32
          readOnly: true
          type: integer
        relatedAttacks:
          description: Number of attacks on the exposed security problem
          format: int32
          readOnly: true
          type: integer
        relatedHosts:
          description: Number of related hosts
          format: int32
          readOnly: true
          type: integer
        relatedKubernetesClusters:
          description: Number of related kubernetes cluster
          format: int32
          readOnly: true
          type: integer
        relatedKubernetesWorkloads:
          description: Number of related kubernetes workloads
          format: int32
          readOnly: true
          type: integer
        relatedServices:
          description: Number of related services
          format: int32
          readOnly: true
          type: integer
        vulnerableComponents:
          description: Number of vulnerable components
          format: int32
          readOnly: true
          type: integer
      readOnly: true
      type: object
    HashicorpApprole:
      allOf:
      - $ref: '#/components/schemas/ExternalVault'
      - properties:
          pathToCredentials:
            description: Path to folder where credentials in HashiCorp Vault are stored.
            type: string
          roleId:
            description: Role ID is similar to username when you want to authenticate
              in HashiCorp Vault using AppRole.
            type: string
          secretId:
            description: Secret ID is similar to password when you want to authenticate
              in HashiCorp Vault using AppRole. ID of token representing secret ID
              saved in Dynatrace CV.
            type: string
          vaultNamespace:
            description: Vault namespace in HashiCorp Vault. It is an information
              you set as environmental variable VAULT_NAMESPACE if you are accessing
              HashiCorp Vault from command line.
            type: string
        type: object
      description: Synchronization credentials with HashiCorp Vault using appRole
        authentication method
      required:
      - pathToCredentials
      - roleId
      - secretId
      - vaultNamespace
      type: object
    HashicorpApproleConfig:
      allOf:
      - $ref: '#/components/schemas/ExternalVaultConfig'
      - properties:
          pathToCredentials:
            type: string
          roleId:
            type: string
          secretId:
            type: string
          vaultNamespace:
            type: string
        type: object
      type: object
    HashicorpCertificate:
      allOf:
      - $ref: '#/components/schemas/ExternalVault'
      - properties:
          certificate:
            description: ID of certificate saved in Dynatrace CV. Using this certificate
              you can authenticate to your HashiCorp Vault.
            type: string
          pathToCredentials:
            description: Path to folder where credentials in HashiCorp Vault are stored.
            type: string
        type: object
      description: Synchronization credentials with HashiCorp Vault using certificate
        authentication method
      type: object
    HashicorpCertificateConfig:
      allOf:
      - $ref: '#/components/schemas/ExternalVaultConfig'
      - properties:
          certificate:
            type: string
          pathToCredentials:
            type: string
        type: object
      type: object
    HttpProtocolDetails:
      description: HTTP specific request details.
      example:
        headers:
          truncationInfo:
            truncated: true
          values:
          - name: name
            value: value
          - name: name
            value: value
        requestMethod: requestMethod
        parameters:
          truncationInfo:
            truncated: true
          values:
          - name: name
            value: value
          - name: name
            value: value
      properties:
        headers:
          $ref: '#/components/schemas/TruncatableListAttackRequestHeader'
        parameters:
          $ref: '#/components/schemas/TruncatableListHttpRequestParameter'
        requestMethod:
          description: The HTTP request method.
          readOnly: true
          type: string
      readOnly: true
      type: object
    HttpRequestParameter:
      description: An HTTP request parameter.
      example:
        name: name
        value: value
      properties:
        name:
          description: The name of the parameter.
          readOnly: true
          type: string
        value:
          description: The value of the parameter.
          readOnly: true
          type: string
      readOnly: true
      type: object
    Image:
      description: Information about the image details of a capability.
      example:
        src: src
        alt: alt
        title: title
      nullable: true
      properties:
        alt:
          description: Alternate text for the image.
          type: string
        src:
          description: Url of the image.
          type: string
        title:
          description: Title of the image.
          type: string
      type: object
    Impact:
      description: "The impact analysis of the problem on other entities/users. \n\
        \n The actual set of fields depends on the type of the impact. Find the list\
        \ of actual objects in the description of the **impactType** field or see\
        \ [Problems API v2 - JSON models](https://dt-url.net/we03sp2)."
      discriminator:
        mapping:
          APPLICATION: '#/components/schemas/ApplicationImpact'
          CUSTOM_APPLICATION: '#/components/schemas/CustomApplicationImpact'
          MOBILE: '#/components/schemas/MobileImpact'
          SERVICE: '#/components/schemas/ServiceImpact'
        propertyName: impactType
      example:
        estimatedAffectedUsers: 5
        impactedEntity:
          name: name
          entityId:
            id: id
            type: type
        impactType: APPLICATION
      properties:
        estimatedAffectedUsers:
          description: The estimated number of affected users.
          format: int64
          type: integer
        impactType:
          description: "Defines the actual set of fields depending on the value. See\
            \ one of the following objects: \n\n* `SERVICE` -> ServiceImpact \n* `APPLICATION`\
            \ -> ApplicationImpact \n* `MOBILE` -> MobileImpact \n* `CUSTOM_APPLICATION`\
            \ -> CustomApplicationImpact \n"
          enum:
          - APPLICATION
          - CUSTOM_APPLICATION
          - MOBILE
          - SERVICE
          type: string
        impactedEntity:
          $ref: '#/components/schemas/EntityStub'
      required:
      - estimatedAffectedUsers
      - impactType
      - impactedEntity
      type: object
    ImpactAnalysis:
      description: A list of all impacts of the problem.
      example:
        impacts:
        - estimatedAffectedUsers: 5
          impactedEntity:
            name: name
            entityId:
              id: id
              type: type
          impactType: APPLICATION
        - estimatedAffectedUsers: 5
          impactedEntity:
            name: name
            entityId:
              id: id
              type: type
          impactType: APPLICATION
      properties:
        impacts:
          description: A list of all impacts of the problem.
          items:
            $ref: '#/components/schemas/Impact'
          type: array
      required:
      - impacts
      type: object
    InsertPosition:
      description: The position where the button should be shown relative to a property
        in the UI
      properties:
        after:
          description: The path of a property after which the button should be shown
            in the UI
          type: string
      required:
      - after
      type: object
    InvalidLine:
      example:
        line: 6
        error: error
      properties:
        error:
          type: string
        line:
          format: int32
          type: integer
      type: object
    Invocation:
      description: "Invocation of a function, e.g. the `entitySelector` function."
      properties:
        args:
          description: "Arguments to pass to the function, e.g. entity selector source\
            \ code."
          items:
            type: string
          type: array
        function:
          description: "Function that is invoked, e.g. `entitySelector`."
          type: string
      type: object
    Item:
      description: An item of a collection property.
      example:
        metadata:
          key: metadata
        datasource:
          filterProperties:
          - filterProperties
          - filterProperties
          identifier: identifier
          useApiSearch: true
          fullContext: true
          resetValue: ALWAYS
          validate: true
        displayName: itemDisplayName
        documentation: propertyDocumentation
        description: itemDescription
        subType: itemSubType
        uiCustomization:
          expandable:
            expanded: true
            displayName: displayName
            sections:
            - expanded: true
              displayName: displayName
              description: description
              properties:
              - properties
              - properties
            - expanded: true
              displayName: displayName
              description: description
              properties:
              - properties
              - properties
          tabs:
            groups:
            - displayName: displayName
              description: description
              properties:
              - properties
              - properties
            - displayName: displayName
              description: description
              properties:
              - properties
              - properties
          callback:
            buttons:
            - identifier: identifier
              displayName: displayName
              description: description
              insert: null
            - identifier: identifier
              displayName: displayName
              description: description
              insert: null
          table:
            emptyState:
              text: text
            columns:
            - builtinColumnRef: summary
              propertyRef: apiColor
              displayName: Color
              columnRef: myCustomColumn
              type: cell-color-picker
              items:
              - displayName: Active
                icon: CRITICAL
                value: ACTIVE
              - displayName: Active
                icon: CRITICAL
                value: ACTIVE
            - builtinColumnRef: summary
              propertyRef: apiColor
              displayName: Color
              columnRef: myCustomColumn
              type: cell-color-picker
              items:
              - displayName: Active
                icon: CRITICAL
                value: ACTIVE
              - displayName: Active
                icon: CRITICAL
                value: ACTIVE
        referencedType: itemReferencedType
        type: null
        constraints:
        - customValidatorId: my-min-max
          minLength: 7
          pattern: "^([a-z]|[0-9]|\\-|\\_|\\+|\\.)+\\@([a-z]|[0-9]|-){2,}\\.([a-z]|[0-9]|-){2,}(\\\
            .[a-z]{2,})?$"
          customMessage: customConstraintMessage
          maximum: 200
          type: UNKNOWN
          minimum: 3
          maxLength: 20
          uniqueProperties:
          - my-prop-1
          - my-prop-2
        - customValidatorId: my-min-max
          minLength: 7
          pattern: "^([a-z]|[0-9]|\\-|\\_|\\+|\\.)+\\@([a-z]|[0-9]|-){2,}\\.([a-z]|[0-9]|-){2,}(\\\
            .[a-z]{2,})?$"
          customMessage: customConstraintMessage
          maximum: 200
          type: UNKNOWN
          minimum: 3
          maxLength: 20
          uniqueProperties:
          - my-prop-1
          - my-prop-2
      properties:
        constraints:
          description: A list of constraints limiting the values to be accepted.
          items:
            $ref: '#/components/schemas/Constraint'
          type: array
        datasource:
          $ref: '#/components/schemas/DatasourceDefinition'
        description:
          description: A short description of the item.
          example: itemDescription
          type: string
        displayName:
          description: The display name of the item.
          example: itemDisplayName
          type: string
        documentation:
          description: An extended description and/or links to documentation.
          example: propertyDocumentation
          type: string
        metadata:
          additionalProperties:
            description: Metadata of the items.
            type: string
          description: Metadata of the items.
          type: object
        referencedType:
          description: The type referenced by the item's value.
          example: itemReferencedType
          type: string
        subType:
          description: The subtype of the item's value.
          example: itemSubType
          type: string
        type:
          $ref: '#/components/schemas/Item_type'
        uiCustomization:
          $ref: '#/components/schemas/UiCustomization'
      required:
      - type
      type: object
    ItemDetails:
      description: Public metadata for an item.
      example:
        clusterCompatible: true
        clusterMinVersion: 6
        relatedItems:
        - externalLink: externalLink
          name: name
          description: description
          iconUrl: iconUrl
          id: id
          type: EXTENSION1
          hasClusterLink: true
        - externalLink: externalLink
          name: name
          description: description
          iconUrl: iconUrl
          id: id
          type: EXTENSION1
          hasClusterLink: true
        authorLogo: authorLogo
        description: description
        notCompatibleReason: notCompatibleReason
        documentationLink: documentationLink
        extension2Details:
          extensionName: extensionName
          recommendedCatalogVersion: recommendedCatalogVersion
          distributed: true
          releases:
          - featureSets:
              key:
                metrics:
                - metadata:
                    unit: unit
                    displayName: displayName
                    description: description
                  key: key
                - metadata:
                    unit: unit
                    displayName: displayName
                    description: description
                  key: key
            assetsInfo:
            - count: 0
              assetType: assetType
            - count: 0
              assetType: assetType
            active: true
            distributed: true
            registered: true
            unpublishedSeverity: 5
            unpublished: true
            version: version
            releaseNotes: releaseNotes
            artifactSha256: artifactSha256
            minClusterVersion: 1
            dataSources:
            - dataSources
            - dataSources
            unpublishedDescription: unpublishedDescription
            configuredFeatureSets:
            - configuredFeatureSets
            - configuredFeatureSets
          - featureSets:
              key:
                metrics:
                - metadata:
                    unit: unit
                    displayName: displayName
                    description: description
                  key: key
                - metadata:
                    unit: unit
                    displayName: displayName
                    description: description
                  key: key
            assetsInfo:
            - count: 0
              assetType: assetType
            - count: 0
              assetType: assetType
            active: true
            distributed: true
            registered: true
            unpublishedSeverity: 5
            unpublished: true
            version: version
            releaseNotes: releaseNotes
            artifactSha256: artifactSha256
            minClusterVersion: 1
            dataSources:
            - dataSources
            - dataSources
            unpublishedDescription: unpublishedDescription
            configuredFeatureSets:
            - configuredFeatureSets
            - configuredFeatureSets
        type: EXTENSION1
        descriptionBlocks:
        - sourceId: sourceId
          images:
          - src: src
            alt: alt
            title: title
          - src: src
            alt: alt
            title: title
          source: source
          title: title
          type: GALLERY
        - sourceId: sourceId
          images:
          - src: src
            alt: alt
            title: title
          - src: src
            alt: alt
            title: title
          source: source
          title: title
          type: GALLERY
        tags:
        - tags
        - tags
        itemId: itemId
        extension1Details:
          releases:
          - releaseNotes: releaseNotes
            artifactTitle: artifactTitle
            artifactSha256: artifactSha256
            version: version
          - releaseNotes: releaseNotes
            artifactTitle: artifactTitle
            artifactSha256: artifactSha256
            version: version
        authorName: authorName
        name: name
        logo: logo
        clusterMaxVersion: 0
        marketingLink: marketingLink
        technologyDetails:
          activationLink: activationLink
      properties:
        authorLogo:
          description: Url for the author's logo.
          nullable: true
          type: string
        authorName:
          description: Name of the author of the item.
          nullable: true
          type: string
        clusterCompatible:
          description: Checks if the item is compatible with the cluster version.
          nullable: true
          type: boolean
        clusterMaxVersion:
          description: The maximum supported cluster version for this item.
          format: int32
          nullable: true
          type: integer
        clusterMinVersion:
          description: The minimum cluster version required to use this item.
          format: int32
          nullable: true
          type: integer
        description:
          description: Description of the item.
          nullable: true
          type: string
        descriptionBlocks:
          items:
            $ref: '#/components/schemas/DescriptionBlock'
          type: array
        documentationLink:
          description: An absolute link to a documentation page explaining the item.
          nullable: true
          type: string
        extension1Details:
          $ref: '#/components/schemas/Extension1Details'
        extension2Details:
          $ref: '#/components/schemas/Extension2Details'
        itemId:
          description: Unique Id of the item.
          type: string
        logo:
          description: The logo of the item. Can be a URL or Base64 encoded. Intended
            for <image> html tags.
          nullable: true
          type: string
        marketingLink:
          description: An absolute link to a marketing page promoting how the item
            can be used with dynatrace.
          nullable: true
          type: string
        name:
          description: Name of the item.
          type: string
        notCompatibleReason:
          description: The reason why the item is not compatible with the cluster
            version.
          nullable: true
          type: string
        relatedItems:
          description: Related items.
          items:
            $ref: '#/components/schemas/RelatedItem'
          type: array
        tags:
          description: Grouping of items with keywords.
          items:
            description: Grouping of items with keywords.
            type: string
          type: array
        technologyDetails:
          $ref: '#/components/schemas/TechnologyDetails'
        type:
          description: "Represents the type of item. It can be TECHNOLOGY, EXTENSION1\
            \ or EXTENSION2."
          enum:
          - EXTENSION1
          - EXTENSION2
          - TECHNOLOGY
          type: string
      type: object
    ItemList:
      example:
        nextPageKey: AQAAABQBAAAABQ==
        pageSize: 0
        totalCount: 6
        items:
        - hasDescriptionBlocks: true
          clusterCompatible: true
          authorLogo: authorLogo
          description: description
          notCompatibleReason: notCompatibleReason
          documentationLink: documentationLink
          activationLink: activationLink
          type: EXTENSION1
          tags:
          - tags
          - tags
          itemId: itemId
          comingSoon: true
          authorName: authorName
          name: name
          logo: logo
          artifactId: snmp-extension.dynatrace.com
          marketingLink: marketingLink
        - hasDescriptionBlocks: true
          clusterCompatible: true
          authorLogo: authorLogo
          description: description
          notCompatibleReason: notCompatibleReason
          documentationLink: documentationLink
          activationLink: activationLink
          type: EXTENSION1
          tags:
          - tags
          - tags
          itemId: itemId
          comingSoon: true
          authorName: authorName
          name: name
          logo: logo
          artifactId: snmp-extension.dynatrace.com
          marketingLink: marketingLink
      properties:
        items:
          description: A list of available items.
          items:
            $ref: '#/components/schemas/ItemOverview'
          type: array
        nextPageKey:
          description: "The cursor for the next page of results. Has the value of\
            \ `null` on the last page. \n\nUse it in the **nextPageKey** query parameter\
            \ to obtain subsequent pages of the result."
          example: AQAAABQBAAAABQ==
          type: string
        pageSize:
          description: The number of entries per page.
          format: int32
          type: integer
        totalCount:
          description: The total number of entries in the result.
          format: int64
          type: integer
      required:
      - totalCount
      type: object
    ItemOverview:
      description: Overview of an item.
      example:
        hasDescriptionBlocks: true
        clusterCompatible: true
        authorLogo: authorLogo
        description: description
        notCompatibleReason: notCompatibleReason
        documentationLink: documentationLink
        activationLink: activationLink
        type: EXTENSION1
        tags:
        - tags
        - tags
        itemId: itemId
        comingSoon: true
        authorName: authorName
        name: name
        logo: logo
        artifactId: snmp-extension.dynatrace.com
        marketingLink: marketingLink
      properties:
        activationLink:
          description: The activation link for a technology
          type: string
        artifactId:
          description: The unique ID used by the artifacts contained in releases.
          example: snmp-extension.dynatrace.com
          type: string
        authorLogo:
          description: Url for the author's logo.
          type: string
        authorName:
          description: Name of the author of the item.
          type: string
        clusterCompatible:
          description: Checks if the item is compatible with the cluster version.
          type: boolean
        comingSoon:
          description: Whether or not the item is planned to be released soon
          type: boolean
        description:
          description: Description of the item.
          type: string
        documentationLink:
          description: An absolute link to the documentation page of this item.
          type: string
        hasDescriptionBlocks:
          description: Whether or not the details call will contain description blocks.
          type: boolean
        itemId:
          description: Unique Id of the item.
          type: string
        logo:
          description: The logo of the item. Can be a URL or Base64 encoded. Intended
            for <image> html tags
          type: string
        marketingLink:
          description: An absolute link to the marketing page of this item.
          type: string
        name:
          description: Name of the item.
          type: string
        notCompatibleReason:
          description: The reason why the item is not compatible with the cluster
            version.
          type: string
        tags:
          description: Grouping of items with keywords.
          items:
            description: Grouping of items with keywords.
            type: string
          type: array
        type:
          description: "Represents the type of item. It can be TECHNOLOGY, EXTENSION1\
            \ or EXTENSION2."
          enum:
          - EXTENSION1
          - EXTENSION2
          - TECHNOLOGY
          type: string
      type: object
    JavaScriptMappingFileDto:
      example:
        numberOfFiles: 0
        fileName: fileName
        pinned: true
        size: 6
        minifiedJsFileUrl: minifiedJsFileUrl
        uploadTimestamp: 1
        zipped: true
        fileType: MINIFIED
      properties:
        fileName:
          description: The name of the file.
          type: string
        fileType:
          description: The type of the file.
          enum:
          - MINIFIED
          - SOURCE
          - SOURCEMAP
          type: string
        minifiedJsFileUrl:
          description: The minified JavaScript file URL to which the mapping file
            belongs to.
          type: string
        numberOfFiles:
          description: The number of files.
          format: int32
          type: integer
        pinned:
          description: Whether the file is pinned and therefore not automatically
            deleted.
          type: boolean
        size:
          description: "The size of the file, in KB."
          format: int32
          type: integer
        uploadTimestamp:
          description: "The timestamp of the file upload, in UTC milliseconds."
          format: int64
          type: integer
        zipped:
          description: Whether several files are zipped into one file.
          type: boolean
      type: object
    JavaScriptMappingFileListDto:
      example:
        nextPageKey: AQAAABQBAAAABQ==
        jsMappingFiles:
        - numberOfFiles: 0
          fileName: fileName
          pinned: true
          size: 6
          minifiedJsFileUrl: minifiedJsFileUrl
          uploadTimestamp: 1
          zipped: true
          fileType: MINIFIED
        - numberOfFiles: 0
          fileName: fileName
          pinned: true
          size: 6
          minifiedJsFileUrl: minifiedJsFileUrl
          uploadTimestamp: 1
          zipped: true
          fileType: MINIFIED
        pageSize: 5
        totalCount: 5
      properties:
        jsMappingFiles:
          description: A list of JavaScript mapping files.
          items:
            $ref: '#/components/schemas/JavaScriptMappingFileDto'
          type: array
        nextPageKey:
          description: "The cursor for the next page of results. Has the value of\
            \ `null` on the last page. \n\nUse it in the **nextPageKey** query parameter\
            \ to obtain subsequent pages of the result."
          example: AQAAABQBAAAABQ==
          type: string
        pageSize:
          description: The number of entries per page.
          format: int32
          type: integer
        totalCount:
          description: The total number of entries in the result.
          format: int64
          type: integer
      required:
      - totalCount
      type: object
    JavaScriptMappingFileMetadataDto:
      example:
        pinned: true
      properties:
        pinned:
          description: Whether the file is pinned and therefore not automatically
            deleted.
          type: boolean
      type: object
    JsonNode:
      description: The monitoring configuration
      type: object
    LinkedProblem:
      description: The properties of the linked problem.
      example:
        displayId: displayId
        problemId: problemId
      properties:
        displayId:
          description: The display ID of the problem.
          type: string
        problemId:
          description: The ID of the problem.
          type: string
      required:
      - displayId
      - problemId
      type: object
    LocationCollectionElement:
      description: A synthetic location.
      properties:
        cloudPlatform:
          description: "The cloud provider where the location is hosted. \n\n Only\
            \ applicable to `PUBLIC` locations."
          enum:
          - ALIBABA
          - AMAZON_EC2
          - AZURE
          - DYNATRACE_CLOUD
          - GOOGLE_CLOUD
          - INTEROUTE
          - OTHER
          - UNDEFINED
          type: string
        entityId:
          description: The Dynatrace entity ID of the location.
          type: string
        geoLocationId:
          description: The Dynatrace GeoLocation ID of the location.
          type: string
        ips:
          description: "The list of IP addresses assigned to the location. \n\n Only\
            \ applicable to `PUBLIC` locations."
          items:
            type: string
          type: array
        name:
          description: The name of the location.
          type: string
        stage:
          description: The release stage of the location.
          enum:
          - BETA
          - COMING_SOON
          - DELETED
          - GA
          type: string
        status:
          description: The status of the location.
          enum:
          - DISABLED
          - ENABLED
          - HIDDEN
          type: string
        type:
          description: The type of the location.
          enum:
          - CLUSTER
          - PRIVATE
          - PUBLIC
          type: string
      required:
      - entityId
      - geoLocationId
      - name
      - type
      type: object
    LocationExecutionResults:
      description: Results of the execution HTTP monitor's requests at a given location
      properties:
        executionId:
          description: Execution id.
          type: string
        locationId:
          description: Location id.
          type: string
        requestResults:
          description: The list of the monitor's request results executed on this
            location.
          items:
            $ref: '#/components/schemas/MonitorRequestExecutionResult'
          type: array
      type: object
    LogMessageJson:
      description: "The log message in JSON format. Use one object representing a\
        \ single event or an array of objects representing multiple events. \n\nThe\
        \ object might contain the following types of case-insensitive keys (the possible\
        \ key values are listed below): \n\n* Timestamp: \n    * The earliest timestamp\
        \ for a log event is the current time minus 24 hours. If the log event contains\
        \ a timestamp earlier than the current time minus 24 hours, the event is dropped.\
        \ \n    * The timestamp for a log event is not limited to future time. If\
        \ the log event contains a timestamp later than 10 minutes in the future,\
        \ the timestamp of the event will be overridden by the current time on the\
        \ server. \n    * The following formats are supported: UTC milliseconds, RFC3339,\
        \ and RFC3164. For the missing timestamp, the current timestamp is used. For\
        \ the unsupported timestamp format, the current timestamp is used, and the\
        \ value of the unsupported timestamp format is stored in the not indexed `unparsed_timestamp`\
        \ attribute. \n* Severity. If not set, `NONE` is used. \n* Content. If the\
        \ content key is not set, the whole JSON is parsed as the content. \n* Semantic\
        \ attribute. Only values of the `String` type are supported. Semantic attributes\
        \ are indexed and can be used in queries. These are also displayed in aggregations\
        \ (facets). If an unsupported key occurs, it is not indexed and can't be used\
        \ in indexing and aggregations. \n* Automatic attribute. The dt.auth.origin\
        \ attribute is automatically added to every log record ingested via API. This\
        \ attribute is the public part of the API key that the log source authorizes\
        \ to connect to the generic log ingest API. \n\nThe object value can be a\
        \ single constant or, in case of semantic attribute, an array of constants.\
        \ The length of the value is limited. Any content exceeding the limit is trimmed.\
        \ Default limits:\n\n* Attributes: up to 50 attributes. \n* Content: Grail\
        \ tenants: 65,536 bytes, other tenants: 8,192 bytes. \n* Semantic attribute:\
        \ 250 bytes per value, up to 32 attribute values. \n* The maximum payload\
        \ size of a single request is 5 MB. \n* 50000 log events per payload.\n\n\
        Supported timestamp keys:\n * @timestamp\n * _timestamp\n * date\n * eventtime\n\
        \ * published_date\n * syslog.timestamp\n * timestamp\n\nSupported content\
        \ keys:\n * body\n * content\n * message\n * payload\n\nSupported severity\
        \ keys:\n * level\n * loglevel\n * severity\n * status\n * syslog.severity\n\
        \nSupported semantic attribute keys:\n * audit.action\n * audit.identity\n\
        \ * audit.result\n * aws.account.id\n * aws.arn\n * aws.log_group\n * aws.log_stream\n\
        \ * aws.region\n * aws.resource.id\n * aws.resource.type\n * aws.service\n\
        \ * azure.location\n * azure.resource.group\n * azure.resource.id\n * azure.resource.name\n\
        \ * azure.resource.type\n * azure.subscription\n * cloud.account.id\n * cloud.availability_zone\n\
        \ * cloud.provider\n * cloud.region\n * container.image.name\n * container.image.tag\n\
        \ * container.name\n * db.cassandra.keyspace\n * db.connection_string\n *\
        \ db.hbase.namespace\n * db.jdbc.driver_classname\n * db.mongodb.collection\n\
        \ * db.mssql.instance_name\n * db.name\n * db.operation\n * db.redis.database_index\n\
        \ * db.statement\n * db.system\n * db.user\n * device.address\n * dt.active_gate.group.name\n\
        \ * dt.active_gate.id\n * dt.code.filepath\n * dt.code.func\n * dt.code.lineno\n\
        \ * dt.code.ns\n * dt.ctg.calltype\n * dt.ctg.extendmode\n * dt.ctg.gatewayurl\n\
        \ * dt.ctg.program\n * dt.ctg.rc\n * dt.ctg.requesttype\n * dt.ctg.serverid\n\
        \ * dt.ctg.termid\n * dt.ctg.transid\n * dt.ctg.userid\n * dt.entity.cloud_application\n\
        \ * dt.entity.cloud_application_instance\n * dt.entity.cloud_application_namespace\n\
        \ * dt.entity.container_group\n * dt.entity.container_group_instance\n * dt.entity.custom_device\n\
        \ * dt.entity.host\n * dt.entity.kubernetes_cluster\n * dt.entity.kubernetes_node\n\
        \ * dt.entity.process_group\n * dt.entity.process_group_instance\n * dt.event.group_label\n\
        \ * dt.event.key\n * dt.events.root_cause_relevant\n * dt.exception.messages\n\
        \ * dt.exception.serialized_stacktraces\n * dt.exception.types\n * dt.extension.config.id\n\
        \ * dt.extension.ds\n * dt.extension.name\n * dt.extension.status\n * dt.host.ip\n\
        \ * dt.host.smfid\n * dt.host.snaid\n * dt.host_group.id\n * dt.http.application_id\n\
        \ * dt.http.context_root\n * dt.kubernetes.cluster.id\n * dt.kubernetes.cluster.name\n\
        \ * dt.kubernetes.config.id\n * dt.kubernetes.event.involved_object.kind\n\
        \ * dt.kubernetes.event.involved_object.name\n * dt.kubernetes.event.reason\n\
        \ * dt.kubernetes.node.name\n * dt.kubernetes.node.system_uuid\n * dt.kubernetes.topmost_controller.kind\n\
        \ * dt.kubernetes.workload.kind\n * dt.kubernetes.workload.name\n * dt.network_zone.id\n\
        \ * dt.os.description\n * dt.os.type\n * dt.process.commandline\n * dt.process.executable\n\
        \ * dt.process.name\n * dt.security_context\n * dt.source_entity\n * dt.source_entity_name\n\
        \ * dt.source_entity_type\n * event.unique_identifier\n * faas.id\n * faas.instance\n\
        \ * faas.name\n * faas.version\n * gcp.instance.id\n * gcp.instance.name\n\
        \ * gcp.project.id\n * gcp.region\n * gcp.resource.type\n * geo.city_name\n\
        \ * geo.country_name\n * geo.name\n * geo.region_name\n * host.hostname\n\
        \ * host.id\n * host.image.id\n * host.image.name\n * host.image.version\n\
        \ * host.name\n * host.type\n * http.client_ip\n * http.flavor\n * http.host\n\
        \ * http.method\n * http.route\n * http.scheme\n * http.server_name\n * http.status_code\n\
        \ * http.status_text\n * http.target\n * http.url\n * k8s.cluster.name\n *\
        \ k8s.container.name\n * k8s.cronjob.name\n * k8s.cronjob.uid\n * k8s.daemonset.name\n\
        \ * k8s.daemonset.uid\n * k8s.deployment.name\n * k8s.deployment.uid\n * k8s.job.name\n\
        \ * k8s.job.uid\n * k8s.namespace.name\n * k8s.pod.name\n * k8s.pod.uid\n\
        \ * k8s.replicaset.name\n * k8s.replicaset.uid\n * k8s.statefulset.name\n\
        \ * k8s.statefulset.uid\n * log.source\n * net.host.ip\n * net.host.name\n\
        \ * net.host.port\n * net.peer.ip\n * net.peer.name\n * net.peer.port\n *\
        \ net.transport\n * process.technology\n * service.instance.id\n * service.name\n\
        \ * service.namespace\n * service.version\n * snmp.trap_oid\n * span_id\n\
        \ * trace_id\n * winlog.eventid\n * winlog.level\n * winlog.opcode\n * winlog.provider\n\
        \ * winlog.task"
      type: object
    LogMessagePlain:
      description: "The log message in plain text. \n\nThe length of the message is\
        \ limited to 65,536 bytes for Grail tenants and to 8,192 bytes for other tenants.\
        \ Any content exceeding the limit is trimmed."
      type: object
    LogRecord:
      description: A single log record.
      example:
        additionalColumns:
          custom.attribute:
          - value1
          - value2
          loglevel:
          - SEVERE
        content: example log content
        event.type: LOG
        status: ERROR
        timestamp: "1631193089000"
      properties:
        additionalColumns:
          additionalProperties:
            description: Additional columns of the log record.
            items:
              description: Additional columns of the log record.
              type: string
            type: array
          description: Additional columns of the log record.
          type: object
        content:
          description: The content of the log record.
          type: string
        eventType:
          description: Type of event
          enum:
          - K8S
          - LOG
          - SFM
          type: string
        status:
          description: The log status (based on the log level).
          enum:
          - ERROR
          - INFO
          - NONE
          - NOT_APPLICABLE
          - WARN
          type: string
        timestamp:
          description: "The timestamp of the log record, in UTC milliseconds."
          format: int64
          type: integer
      type: object
    LogRecordsList:
      description: A list of retrieved log records.
      example:
        nextSliceKey: ___-2hI03q0AAAAAAAAAAAAAA-gAAAAAAAAH0P____8AAABkAAAACXRpbWVzdGFtcAD___7aEjTerQ
        results:
        - additionalColumns:
            custom.attribute:
            - value1
            - value2
            loglevel:
            - SEVERE
          content: example log content
          event.type: LOG
          status: ERROR
          timestamp: "1631193089000"
        sliceSize: 100
      properties:
        nextSliceKey:
          description: The cursor for the next slice of log records.
          type: string
        results:
          description: A list of retrieved log records.
          items:
            $ref: '#/components/schemas/LogRecord'
          type: array
        sliceSize:
          description: The total number of records in a slice.
          format: int64
          type: integer
      type: object
    METag:
      description: The tag of a monitored entity.
      example:
        context: context
        stringRepresentation: stringRepresentation
        value: value
        key: key
      properties:
        context:
          description: "The origin of the tag, such as AWS or Cloud Foundry. \n\n\
            \ Custom tags use the `CONTEXTLESS` value."
          type: string
        key:
          description: The key of the tag.
          type: string
        stringRepresentation:
          description: The string representation of the tag.
          type: string
        value:
          description: The value of the tag.
          type: string
      type: object
    MaintenanceWindowEvidence:
      allOf:
      - $ref: '#/components/schemas/Evidence'
      - properties:
          endTime:
            description: "The end time of the evidence, in UTC milliseconds."
            format: int64
            type: integer
          maintenanceWindowConfigId:
            description: The ID of the related maintenance window.
            type: string
        type: object
      description: "The  maintenance window evidence of the problem. \n\nThe maintenance\
        \ window during which the problem occurred."
      required:
      - displayName
      - endTime
      - entity
      - evidenceType
      - maintenanceWindowConfigId
      - rootCauseRelevant
      - startTime
      type: object
    ManagementZone:
      description: A short representation of a management zone.
      example:
        name: name
        id: id
      properties:
        id:
          description: The ID of the management zone.
          type: string
        name:
          description: The name of the management zone.
          type: string
      type: object
    MetricData:
      description: A list of metrics and their data points.
      example:
        nextPageKey: "null"
        resolution: 1h
        result:
        - data:
          - dimensionMap:
              dt.entity.disk: DISK-F1266E1D0AAC2C3F
              dt.entity.host: HOST-F1266E1D0AAC2C3C
            dimensions:
            - HOST-F1266E1D0AAC2C3C
            - DISK-F1266E1D0AAC2C3F
            timestamps:
            - 3151435100000
            - 3151438700000
            - 3151442300000
            values:
            - 11.1
            - 22.2
            - 33.3
          - dimensions:
            - HOST-F1266E1D0AAC2C3C
            - DISK-F1266E1D0AAC2C3D
            timestamps:
            - 3151435100000
            - 3151438700000
            - 3151442300000
            values:
            - 111.1
            - 222.2
            - 333.3
          dataPointCountRatio: "0.1211"
          dimensionCountRatio: "0.0322"
          metricId: builtin:host.disk.avail
        - data: []
          metricId: "builtin:host.cpu.idle:filter(eq(\"dt.entityhost\",HOST-123))"
          warnings:
          - "The dimension key `dt.entityhost` has been referenced, but the metric\
            \ has no such key."
        totalCount: 3
        warnings:
        - "The dimension key `dt.entityhost` has been referenced, but the metric has\
          \ no such key."
      properties:
        nextPageKey:
          description: Deprecated. This field is returned for compatibility reasons.
            It always has the value of `null`.
          type: string
        resolution:
          description: The timeslot resolution in the result.
          type: string
        result:
          description: A list of metrics and their data points.
          items:
            $ref: '#/components/schemas/MetricSeriesCollection'
          type: array
        totalCount:
          description: "The total number of primary entities in the result. \n\nHas\
            \ the `0` value if none of the requested metrics is suitable for pagination."
          format: int64
          type: integer
        warnings:
          description: A list of warnings
          items:
            type: string
          type: array
      required:
      - resolution
      - result
      - totalCount
      - warnings
      type: object
    MetricDefaultAggregation:
      description: The default aggregation of a metric.
      properties:
        parameter:
          description: "The percentile to be delivered. Valid values are between `0`\
            \ and `100`. \n\nApplicable only to the `percentile` aggregation type."
          format: double
          type: number
        type:
          description: The type of default aggregation.
          enum:
          - auto
          - avg
          - count
          - max
          - median
          - min
          - percentile
          - sum
          - value
          type: string
      required:
      - type
      type: object
    MetricDescriptor:
      description: The descriptor of a metric.
      example:
        aggregationTypes:
        - auto
        - value
        created: 1597400123451
        dduBillable: false
        defaultAggregation:
          type: value
        description: "Percentage of user-space CPU time currently utilized, per host."
        dimensionCardinalities:
        - estimate: 20
          key: dt.entity.host
          relative: 0.2
        dimensionDefinitions:
        - displayName: Host
          index: 0
          key: dt.entity.host
          name: Host
          type: ENTITY
        displayName: CPU user
        entityType:
        - HOST
        lastWritten: 1597400717783
        latency: 1
        metricId: builtin:host.cpu.user:splitBy("dt.entity.host"):max:fold
        metricValueType:
          type: unknown
        scalar: false
        tags: []
        transformations:
        - filter
        - fold
        - limit
        - merge
        - names
        - parents
        - timeshift
        - rate
        - sort
        - last
        - splitBy
        unit: Percent
      properties:
        aggregationTypes:
          description: The list of allowed aggregations for this metric.
          items:
            enum:
            - auto
            - avg
            - count
            - max
            - median
            - min
            - percentile
            - sum
            - value
            type: string
          type: array
          uniqueItems: true
        billable:
          description: |-
            If `true`the usage of metric is billable.

             [Metric expressions](https://dt-url.net/metricExpression) don't return this field.
          type: boolean
        created:
          description: "The timestamp of metric creation. \n\nBuilt-in metrics and\
            \ metric expressions have the value of `null`."
          format: int64
          type: integer
        dduBillable:
          description: |-
            If `true` the usage of metric consumes [Davis data units](https://dt-url.net/ddu). Deprecated and always `false` for Dynatrace Platform Subscription. Superseded by `isBillable`.

             [Metric expressions](https://dt-url.net/metricExpression) don't return this field.
          type: boolean
        defaultAggregation:
          $ref: '#/components/schemas/MetricDefaultAggregation'
        description:
          description: A short description of the metric.
          type: string
        dimensionCardinalities:
          description: The cardinalities of MINT metric dimensions.
          items:
            $ref: '#/components/schemas/MetricDimensionCardinality'
          type: array
        dimensionDefinitions:
          description: "The fine metric division (for example, process group and process\
            \ ID for some process-related metric). \n\nFor [ingested metrics](https://dt-url.net/5d63ic1),\
            \ dimensions that doesn't have have any data within the last 15 days are\
            \ omitted. "
          items:
            $ref: '#/components/schemas/MetricDimensionDefinition'
          type: array
        displayName:
          description: The name of the metric in the user interface.
          type: string
        entityType:
          description: List of admissible primary entity types for this metric. Can
            be used for the `type` predicate in the `entitySelector`.
          items:
            type: string
          type: array
          uniqueItems: true
        impactRelevant:
          description: "The metric is (`true`) or is not (`false`) impact relevant.\
            \ \n\n An impact-relevant metric is highly dependent on other metrics\
            \ and changes because an underlying root-cause metric has changed.\n\n\
            \ [Metric expressions](https://dt-url.net/metricExpression) don't return\
            \ this field."
          type: boolean
        lastWritten:
          description: "The timestamp when the metric was last written. \n\nHas the\
            \ value of `null` for metric expressions or if the data has never been\
            \ written."
          format: int64
          type: integer
        latency:
          description: "The latency of the metric, in minutes. \n\n The latency is\
            \ the expected reporting delay (for example, caused by constraints of\
            \ cloud vendors or other third-party data sources) between the observation\
            \ of a metric data point and its availability in Dynatrace. \n\nThe allowed\
            \ value range is from 1 to 60 minutes.\n\n [Metric expressions](https://dt-url.net/metricExpression)\
            \ don't return this field."
          format: int64
          type: integer
        maximumValue:
          description: |-
            The maximum allowed value of the metric.

             [Metric expressions](https://dt-url.net/metricExpression) don't return this field.
          format: double
          type: number
        metricId:
          description: "The fully qualified key of the metric. \n\nIf a transformation\
            \ has been used it is reflected in the metric key."
          type: string
        metricSelector:
          description: "The metric selector that is used when querying a func: metric."
          type: string
        metricValueType:
          $ref: '#/components/schemas/MetricValueType'
        minimumValue:
          description: |-
            The minimum allowed value of the metric.

             [Metric expressions](https://dt-url.net/metricExpression) don't return this field.
          format: double
          type: number
        resolutionInfSupported:
          description: "If 'true', resolution=Inf can be applied to the metric query."
          type: boolean
        rootCauseRelevant:
          description: "The metric is (`true`) or is not (`false`) root cause relevant.\
            \ \n\n A root-cause relevant metric represents a strong indicator for\
            \ a faulty component.\n\n [Metric expressions](https://dt-url.net/metricExpression)\
            \ don't return this field."
          type: boolean
        scalar:
          description: "Indicates whether the metric expression resolves to a scalar\
            \ (`true`) or to a series (`false`). \nA scalar result always contains\
            \ one data point. The amount of data points in a series result depends\
            \ on the resolution you're using."
          type: boolean
        tags:
          description: "The tags applied to the metric. \n\n [Metric expressions](https://dt-url.net/metricExpression)\
            \ don't return this field."
          items:
            description: "The tags applied to the metric. \n\n [Metric expressions](https://dt-url.net/metricExpression)\
              \ don't return this field."
            type: string
          type: array
          uniqueItems: true
        transformations:
          description: Transform operators that could be appended to the current transformation
            list.
          items:
            enum:
            - asGauge
            - default
            - delta
            - evaluateModel
            - filter
            - fold
            - last
            - lastReal
            - limit
            - merge
            - names
            - parents
            - partition
            - rate
            - rollup
            - setUnit
            - smooth
            - sort
            - splitBy
            - timeshift
            - toUnit
            type: string
          type: array
          uniqueItems: true
        unit:
          description: The unit of the metric.
          type: string
        unitDisplayFormat:
          description: |-
            The raw value is stored in bits or bytes. The user interface can display it in these numeral systems:

            Binary: 1 MiB = 1024 KiB = 1,048,576 bytes

            Decimal: 1 MB = 1000 kB = 1,000,000 bytes

            If not set, the decimal system is used.

             [Metric expressions](https://dt-url.net/metricExpression) don't return this field.
          enum:
          - binary
          - decimal
          type: string
        warnings:
          description: A list of potential warnings that affect this ID. For example
            deprecated feature usage etc.
          items:
            type: string
          type: array
      required:
      - metricId
      type: object
    MetricDescriptorCollection:
      description: A list of metrics along with their descriptors.
      example:
        metrics:
        - aggregationTypes:
          - auto
          - value
          created: 1597400123451
          dduBillable: false
          defaultAggregation:
            type: value
          description: "Percentage of user-space CPU time currently utilized, per\
            \ host."
          dimensionDefinitions:
          - displayName: Host
            index: 0
            key: dt.entity.host
            name: Host
            type: ENTITY
          displayName: CPU user
          entityType:
          - HOST
          lastWritten: 1597400717783
          metricId: builtin:host.cpu.user:splitBy("dt.entity.host"):max:fold
          metricValueType:
            type: unknown
          tags: []
          transformations:
          - filter
          - fold
          - limit
          - merge
          - names
          - parents
          - timeshift
          - rate
          - sort
          - last
          - splitBy
          unit: Percent
        - aggregationTypes:
          - auto
          - value
          created: 1597400123451
          dduBillable: false
          defaultAggregation:
            type: value
          description: "Percentage of user-space CPU time currently utilized, per\
            \ host."
          dimensionDefinitions:
          - displayName: Host
            index: 0
            key: dt.entity.host
            name: Host
            type: ENTITY
          displayName: CPU user
          entityType:
          - HOST
          lastWritten: 1597400717783
          metricId: builtin:host.cpu.user:splitBy()
          metricValueType:
            type: unknown
          tags: []
          transformations:
          - filter
          - fold
          - limit
          - merge
          - names
          - parents
          - timeshift
          - rate
          - sort
          - last
          - splitBy
          unit: Percent
        nextPageKey: ABCDEFABCDEFABCDEF_
        totalCount: 3
      properties:
        metrics:
          description: A list of metric along with their descriptors
          items:
            $ref: '#/components/schemas/MetricDescriptor'
          type: array
        nextPageKey:
          description: "The cursor for the next page of results. Has the value of\
            \ `null` on the last page. \n\nUse it in the **nextPageKey** query parameter\
            \ to obtain subsequent pages of the result."
          nullable: true
          type: string
        totalCount:
          description: The estimated number of metrics in the result.
          format: int64
          type: integer
        warnings:
          description: A list of potential warnings about the query. For example deprecated
            feature usage etc.
          items:
            type: string
          type: array
      required:
      - metrics
      - totalCount
      type: object
    MetricDimensionCardinality:
      description: The dimension cardinalities of a metric.
      properties:
        estimate:
          description: The cardinality estimate of the dimension.
          format: int64
          type: integer
        key:
          description: "The key of the dimension. \n\n It must be unique within the\
            \ metric."
          type: string
        relative:
          description: The relative cardinality of the dimension expressed as percentage
          format: double
          type: number
      required:
      - estimate
      - key
      - relative
      type: object
    MetricDimensionDefinition:
      description: The dimension of a metric.
      properties:
        displayName:
          description: The display name of the dimension.
          type: string
        index:
          description: "The unique 0-based index of the dimension. \n\n Appending\
            \ transformations such as :names or :parents may change the indexes of\
            \ dimensions. `null` is used for the dimensions of a metric with flexible\
            \ dimensions, which can be referenced with their dimension key, but do\
            \ not have an intrinsic order that could be used for the index."
          format: int32
          type: integer
        key:
          description: "The key of the dimension. \n\n It must be unique within the\
            \ metric."
          type: string
        name:
          description: The name of the dimension.
          type: string
        type:
          description: The type of the dimension.
          enum:
          - ENTITY
          - NUMBER
          - OTHER
          - STRING
          - VOID
          type: string
      required:
      - displayName
      - index
      - key
      - name
      - type
      type: object
    MetricDto:
      description: Metric gathered by an extension
      example:
        metadata:
          unit: unit
          displayName: displayName
          description: description
        key: key
      properties:
        key:
          description: Metric key
          type: string
        metadata:
          $ref: '#/components/schemas/MetricMetadataDto'
      type: object
    MetricEvidence:
      allOf:
      - $ref: '#/components/schemas/Evidence'
      - properties:
          endTime:
            description: |-
              The end time of the evidence, in UTC milliseconds.

              The value `null` indicates that the evidence is still open.
            format: int64
            type: integer
          metricId:
            description: The ID of the metric.
            type: string
          unit:
            description: The unit of the metric.
            enum:
            - Ampere
            - Billion
            - Bit
            - BitPerHour
            - BitPerMinute
            - BitPerSecond
            - Byte
            - BytePerHour
            - BytePerMinute
            - BytePerSecond
            - Cores
            - Count
            - Day
            - DecibelMilliWatt
            - GibiByte
            - GibiBytePerHour
            - GibiBytePerMinute
            - GibiBytePerSecond
            - Giga
            - GigaByte
            - GigaBytePerHour
            - GigaBytePerMinute
            - GigaBytePerSecond
            - Hertz
            - Hour
            - KibiByte
            - KibiBytePerHour
            - KibiBytePerMinute
            - KibiBytePerSecond
            - Kilo
            - KiloByte
            - KiloBytePerHour
            - KiloBytePerMinute
            - KiloBytePerSecond
            - KiloMetrePerHour
            - MSU
            - MebiByte
            - MebiBytePerHour
            - MebiBytePerMinute
            - MebiBytePerSecond
            - Mega
            - MegaByte
            - MegaBytePerHour
            - MegaBytePerMinute
            - MegaBytePerSecond
            - MetrePerHour
            - MetrePerSecond
            - MicroSecond
            - MilliCores
            - MilliSecond
            - MilliSecondPerMinute
            - Million
            - Minute
            - Month
            - NanoSecond
            - NanoSecondPerMinute
            - NotApplicable
            - PerHour
            - PerMinute
            - PerSecond
            - Percent
            - Pixel
            - Promille
            - Ratio
            - Second
            - State
            - Trillion
            - Unspecified
            - Volt
            - Watt
            - Week
            - Year
            type: string
          valueAfterChangePoint:
            description: The metric's value after the problem start.
            format: float
            type: number
          valueBeforeChangePoint:
            description: The metric's value before the problem start.
            format: float
            type: number
        type: object
      description: "The metric evidence of the problem. \n\nA change of metric behavior\
        \ that indicates the problem and/or is its root cause."
      required:
      - displayName
      - endTime
      - entity
      - evidenceType
      - metricId
      - rootCauseRelevant
      - startTime
      - unit
      - valueAfterChangePoint
      - valueBeforeChangePoint
      type: object
    MetricIngestError:
      example:
        code: 0
        invalidLines:
        - line: 6
          error: error
        - line: 6
          error: error
        message: message
      properties:
        code:
          format: int32
          type: integer
        invalidLines:
          items:
            $ref: '#/components/schemas/InvalidLine'
          type: array
        message:
          type: string
      type: object
    MetricMetadataDto:
      description: Metric metadata
      example:
        unit: unit
        displayName: displayName
        description: description
      properties:
        description:
          description: A short description of the metric
          type: string
        displayName:
          description: The name of the metric in the user interface
          type: string
        unit:
          description: The unit of the metric
          type: string
      type: object
    MetricSeries:
      description: "Data points per dimension of a metric. \n\nThe data is represented\
        \ by two arrays of the same length: **timestamps** and **values**. Entries\
        \ of the same index from both arrays form a timestamped data point."
      example:
        dimensionMap:
          dt.entity.host: HOST-F1266E1D0AAC2C3C
        dimensions:
        - HOST-F1266E1D0AAC2C3C
        timestamps:
        - 3151435100000
        - 3151438700000
        - 3151442300000
        values:
        - 1.1
        - 2.2
        - 3.3
      properties:
        dimensionMap:
          additionalProperties:
            type: string
          type: object
        dimensions:
          description: "The ordered list of dimensions to which the data point list\
            \ belongs. \n\n Each metric can have a certain number of dimensions. Dimensions\
            \ exceeding this number are aggregated into one, which is shown as `null`\
            \ here."
          items:
            type: string
          type: array
        timestamps:
          description: "A list of timestamps of data points. \n\nThe value of data\
            \ point for each time from this array is located in **values** array at\
            \ the same index."
          items:
            format: int64
            type: integer
          type: array
        values:
          description: "A list of values of data points. \n\nThe timestamp of data\
            \ point for each value from this array is located in **timestamps** array\
            \ at the same index."
          items:
            format: double
            type: number
          type: array
      required:
      - dimensionMap
      - dimensions
      - timestamps
      - values
      type: object
    MetricSeriesCollection:
      description: Data points of a metric.
      example:
        data:
        - dimensionMap:
            dt.entity.disk: DISK-F1266E1D0AAC2C3F
            dt.entity.host: HOST-F1266E1D0AAC2C3C
          dimensions:
          - HOST-F1266E1D0AAC2C3C
          - DISK-F1266E1D0AAC2C3F
          timestamps:
          - 3151435100000
          - 3151438700000
          - 3151442300000
          values:
          - 11.1
          - 22.2
          - 33.3
        - dimensionMap:
            dt.entity.disk: DISK-F1266E1D0AAC2C3D
            dt.entity.host: HOST-F1266E1D0AAC2C3C
          dimensions:
          - HOST-F1266E1D0AAC2C3C
          - DISK-F1266E1D0AAC2C3D
          timestamps:
          - 3151435100000
          - 3151438700000
          - 3151442300000
          values:
          - 111.1
          - 222.2
          - 333.3
        dataPointCountRatio: "0.1211"
        dimensionCountRatio: "0.0322"
        metricId: builtin:host.disk.avail
      properties:
        appliedOptionalFilters:
          description: "A list of filtered metric keys along with filters that have\
            \ been applied to these keys, from the `optionalFilter` parameter."
          items:
            $ref: '#/components/schemas/AppliedFilter'
          type: array
        data:
          description: Data points of the metric.
          items:
            $ref: '#/components/schemas/MetricSeries'
          type: array
        dataPointCountRatio:
          description: The ratio of queried data points divided by the maximum number
            of data points per metric that are allowed in a single query.
          format: float
          type: number
        dimensionCountRatio:
          description: The ratio of queried dimension tuples divided by the maximum
            number of dimension tuples allowed in a single query.
          format: float
          type: number
        metricId:
          description: "The key of the metric. \n\nIf any transformation is applied,\
            \ it is included here."
          type: string
        warnings:
          description: A list of potential warnings that affect this ID. For example
            deprecated feature usage etc.
          items:
            type: string
          type: array
      required:
      - data
      - dataPointCountRatio
      - dimensionCountRatio
      - metricId
      type: object
    MetricValueType:
      description: The value type for the metric.
      properties:
        type:
          description: The metric value type
          enum:
          - error
          - score
          - unknown
          type: string
      required:
      - type
      type: object
    MinimalExtension:
      description: A list of extensions.
      example:
        extensionName: extensionName
        version: 1.2.3
      properties:
        extensionName:
          description: Extension name
          type: string
        version:
          description: Extension version
          example: 1.2.3
          pattern: "^(0|[1-9]\\d*)(\\.(0|[1-9]\\d*))?(\\.(0|[1-9]\\d*))?"
          type: string
      type: object
    MobileImpact:
      allOf:
      - $ref: '#/components/schemas/Impact'
      description: Analysis of problem impact to a mobile application.
      required:
      - estimatedAffectedUsers
      - impactType
      - impactedEntity
      type: object
    ModificationInfo:
      description: The modification info for a single updatable setting.
      example:
        movable: true
        nonModifiablePaths:
        - nonModifiablePaths
        - nonModifiablePaths
        deletable: true
        modifiablePaths:
        - modifiablePaths
        - modifiablePaths
        modifiable: true
        first: true
      properties:
        deletable:
          description: If settings value can be deleted
          type: boolean
        first:
          description: "If non-moveable settings value is in the first group of non-moveable\
            \ settings, or in the last (start or end of list)"
          type: boolean
        modifiable:
          description: If settings value can be modified
          type: boolean
        modifiablePaths:
          description: "Property paths which are modifiable, regardless of the state\
            \ of `modifiable`"
          items:
            description: "Property paths which are modifiable, regardless of the state\
              \ of `modifiable`"
            type: string
          type: array
        movable:
          description: If settings value can be moved/reordered. Only applicable for
            ordered list schema
          type: boolean
        nonModifiablePaths:
          description: "Property paths which are not modifiable, when `modifiable`\
            \ is true"
          items:
            description: "Property paths which are not modifiable, when `modifiable`\
              \ is true"
            type: string
          type: array
      readOnly: true
      type: object
    MonitorExecutionResults:
      description: Results of the execution of all HTTP monitor's requests.
      example:
        locationsExecutionResults:
        - executionId: "6136172183050046113"
          locationId: "7804738439930364165"
          requestResults:
          - engineId: 338502283
            errorCode: 0
            failureMessage: ""
            hostNameResolutionTime: 26
            method: GET
            peerCertificateDetails: "[Certificate details]"
            peerCertificateExpiryDate: 1647302399000
            publicLocation: false
            redirectionTime: 70
            redirectsCount: 1
            requestBody: ""
            requestHeaders:
            - name: User-Agent
              value: DynatraceSynthetic/1.215.1
            - name: X-Dynatrace-Visit
              value: "6136172183050046113"
            - name: X-Dynatrace-Test
              value: HTTP_CHECK-12B428F6D37A9197
            requestId: HTTP_CHECK_STEP-53071FC3C4F72E28
            requestName: Request name
            resolvedIps:
            - 80.252.0.145
            responseBody: <html><head>Title</head><body>Main Page</body></html>
            responseBodySizeLimitExceeded: false
            responseHeaders:
            - name: Date
              value: "Mon, 15 Mar 2021 11:09:30 GMT"
            - name: Content-Language
              value: en
            responseMessage: OK
            responseSize: 1112
            responseStatusCode: 200
            sequenceNumber: 1
            startTimestamp: 1615806570884
            tcpConnectTime: 15
            timeToFirstByte: 96
            tlsHandshakeTime: 8
            totalTime: 238
            url: https://www.examplePage.com
            waitingTime: 47
        monitorId: HTTP_CHECK-12B428F6D37A9197
      properties:
        locationsExecutionResults:
          description: The list with the results of the requests executed on assigned
            locations.
          items:
            $ref: '#/components/schemas/LocationExecutionResults'
          type: array
        monitorId:
          description: Monitor id.
          type: string
      type: object
    MonitorRequestExecutionResult:
      allOf:
      - $ref: '#/components/schemas/ExecutionStep'
      - properties:
          customLogs:
            description: Custom log messages.
            items:
              $ref: '#/components/schemas/CustomLogLine'
            type: array
          engineId:
            description: VUC's id on which monitor's request was executed.
            format: int64
            type: integer
          failureMessage:
            description: Request's failure message.
            type: string
          healthStatus:
            description: Request's health status.
            type: string
          healthStatusCode:
            description: Request's health status code.
            format: int32
            type: integer
          hostNameResolutionTime:
            description: A hostname resolution time measured in ms.
            format: int64
            type: integer
          method:
            description: Request method type.
            type: string
          peerCertificateDetails:
            description: Request's certificate details.
            type: string
          peerCertificateExpiryDate:
            description: An expiry date of the first SSL certificate from the certificate
              chain.
            format: int64
            type: integer
          publicLocation:
            description: Flag informs whether request was executed on public location.
            type: boolean
          redirectionTime:
            description: "Total number of milliseconds spent on handling all redirect\
              \ requests, measured in ms."
            format: int64
            type: integer
          redirectsCount:
            description: Number of request's redirects.
            format: int32
            type: integer
          requestBody:
            description: Request's request body.
            type: string
          requestHeaders:
            description: A list of request's headers
            items:
              $ref: '#/components/schemas/MonitorRequestHeader'
            type: array
          requestId:
            description: Request id.
            type: string
          requestName:
            description: Request name.
            type: string
          resolvedIps:
            description: Request's resolved ips.'
            items:
              description: Request's resolved ips.'
              type: string
            type: array
          responseBody:
            description: Request's response body.
            type: string
          responseBodySizeLimitExceeded:
            description: A flag indicating that the response payload size limit of
              10MB has been exceeded.
            type: boolean
          responseHeaders:
            description: A list of request's response headers
            items:
              $ref: '#/components/schemas/MonitorRequestHeader'
            type: array
          responseMessage:
            description: Request's response message.'
            type: string
          responseSize:
            description: Request's response size in bytes.
            format: int64
            type: integer
          responseStatusCode:
            description: Request's response status code.
            format: int32
            type: integer
          sequenceNumber:
            description: Request's sequence number.
            format: int32
            type: integer
          startTimestamp:
            description: Request start timestamp.
            format: int64
            type: integer
          tcpConnectTime:
            description: A TCP connect time measured in ms.
            format: int64
            type: integer
          timeToFirstByte:
            description: A time to first byte measured in ms.
            format: int64
            type: integer
          tlsHandshakeTime:
            description: A TLS handshake time measured in ms.
            format: int64
            type: integer
          totalTime:
            description: A total request time measured in ms.
            format: int64
            type: integer
          url:
            description: Request URL address.
            type: string
          waitingTime:
            description: "Waiting time (time to first byte - (DNS lookup time + TCP\
              \ connect time + TLS handshake time), measured in ms."
            format: int64
            type: integer
        type: object
      description: A result of the execution HTTP monitor's request.
      required:
      - monitorType
      type: object
    MonitorRequestHeader:
      description: A header of the Http request
      properties:
        name:
          description: Header's name.
          type: string
        value:
          description: Header's value.
          type: string
      type: object
    MonitoredEntityStateParam:
      description: Key-value parameter of the monitoring state.
      properties:
        key:
          description: The key of the monitoring state paramter.
          type: string
        values:
          description: The value of the monitoring state paramter.
          type: string
      type: object
    MonitoredEntityStates:
      description: Monitoring state of the process group instance.
      properties:
        entityId:
          description: The Dynatrace entity ID of the process group instance.
          type: string
        params:
          description: Additional parameters of the monitoring state.
          items:
            $ref: '#/components/schemas/MonitoredEntityStateParam'
          type: array
        severity:
          description: The type of the monitoring state.
          enum:
          - deep_monitoring_ok
          - info
          - ok
          - warning
          type: string
        state:
          description: The name of the monitoring state.
          enum:
          - agent_injection_status_go_dynamizer_failed
          - agent_injection_status_go_vertigo_support_added
          - agent_injection_status_nginx_patched_binary_detected
          - agent_injection_status_php_opcache_disabled
          - agent_injection_status_php_stack_size_too_low
          - agent_injection_suppression
          - aix_enable_full_monitoring_needed
          - bad_installer
          - boshbpm_disabled
          - container_injection_failed
          - containerd_disabled
          - crio_disabled
          - custom_pg_rule_required
          - deep_monitoring_successful
          - deep_monitoring_unsuccessful
          - docker_disabled
          - garden_disabled
          - host_infra_structure_only
          - host_monitoring_disabled
          - network_agent_inactive
          - ok
          - parent_process_restart_required
          - podman_disabled
          - process_group_disabled
          - process_group_disabled_via_container_injection_rule
          - process_group_disabled_via_container_injection_rule_restart
          - process_group_disabled_via_global_settings
          - process_group_disabled_via_injection_rule
          - process_group_disabled_via_injection_rule_restart
          - restart_required
          - restart_required_apache
          - restart_required_docker_deamon
          - restart_required_host_id_inconsistent
          - restart_required_outdated_agent_apache_update
          - restart_required_outdated_agent_injected
          - restart_required_using_different_data_storage_dir
          - restart_required_using_different_log_path
          - restart_required_virtualized_container
          - unsupported_state
          - winc_disabled
          type: string
      type: object
    MonitoredStates:
      description: A list of entities and their monitoring states.
      example:
        monitoringStates:
        - states:
          - entityId: PROCESS_GROUP_INSTANCE-F1266E1D0AAC2C3C
            parameters:
            - key: pids
              value: "111,222,333"
            severity: warning
            state: restart_required_outdated_agent_injected
        totalCount: 1
      properties:
        monitoringStates:
          description: A list of process group instances and their monitoring states.
          items:
            $ref: '#/components/schemas/MonitoredEntityStates'
          type: array
        totalCount:
          description: The total number of entities in the response.
          format: int64
          type: integer
      type: object
    MonitoringConfigurationDto:
      example:
        scope: HOST-D3A3C5A146830A79
        value: "{}"
      properties:
        scope:
          description: The scope this monitoring configuration will be defined for
          example: HOST-D3A3C5A146830A79
          minLength: 1
          type: string
        value:
          description: The monitoring configuration
          type: object
      required:
      - scope
      type: object
    MonitoringConfigurationResponse:
      example:
        code: 0
        objectId: Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=
      properties:
        code:
          description: The HTTP Status code
          format: int32
          type: integer
        objectId:
          description: The identifier of the new configuration
          example: Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=
          type: string
      type: object
    MonitoringConfigurationUpdateDto:
      example:
        value: "{}"
      properties:
        value:
          description: The monitoring configuration
          type: object
      type: object
    MuteState:
      description: Metadata of the muted state of a security problem in relation to
        an event.
      example:
        reason: AFFECTED
        comment: comment
        user: user
      properties:
        comment:
          description: A user's comment.
          readOnly: true
          type: string
        reason:
          description: The reason for the mute state change.
          enum:
          - AFFECTED
          - CONFIGURATION_NOT_AFFECTED
          - FALSE_POSITIVE
          - IGNORE
          - INITIAL_STATE
          - OTHER
          - VULNERABLE_CODE_NOT_IN_USE
          readOnly: true
          type: string
        user:
          description: The user who has muted or unmuted the problem.
          readOnly: true
          type: string
      readOnly: true
      type: object
    NetworkZone:
      description: Configuration of a network zone.
      example:
        numOfConfiguredOneAgents: 6
        numOfOneAgentsUsing: 5
        alternativeZones:
        - alternativeZones
        - alternativeZones
        overridesGlobal: true
        numOfConfiguredActiveGates: 0
        fallbackMode: ANY_ACTIVE_GATE
        scope: scope
        description: description
        id: id
        numOfOneAgentsFromOtherZones: 1
      properties:
        alternativeZones:
          description: A list of alternative network zones.
          items:
            type: string
          type: array
          uniqueItems: true
        description:
          description: A short description of the network zone.
          type: string
        fallbackMode:
          description: The fallback mode of the network zone.
          enum:
          - ANY_ACTIVE_GATE
          - NONE
          - ONLY_DEFAULT_ZONE
          type: string
        id:
          description: The ID of the network zone.
          readOnly: true
          type: string
        numOfConfiguredActiveGates:
          description: The number of ActiveGates in the network zone.
          format: int32
          readOnly: true
          type: integer
        numOfConfiguredOneAgents:
          description: The number of OneAgents that are configured to use the network
            zone as primary.
          format: int32
          readOnly: true
          type: integer
        numOfOneAgentsFromOtherZones:
          description: "The number of OneAgents from other network zones that are\
            \ using ActiveGates in the network zone. \n\n This is a fraction of **numOfOneAgentsUsing**.\
            \ \n\nOne possible reason for switching to another zone is that a firewall\
            \ is preventing a OneAgent from connecting to any ActiveGate in the preferred\
            \ network zone.\n\n"
          format: int32
          readOnly: true
          type: integer
        numOfOneAgentsUsing:
          description: The number of OneAgents that are using ActiveGates in the network
            zone.
          format: int32
          readOnly: true
          type: integer
        overridesGlobal:
          description: Indicates if a global network zone is overridden (managed only).
          readOnly: true
          type: boolean
        scope:
          description: Specifies the scope of the network zone (managed only).
          readOnly: true
          type: string
      type: object
    NetworkZoneConnectionStatistics:
      description: Runtime information about host connections.
      example:
        hostsConfiguredButNotConnected:
        - hostsConfiguredButNotConnected
        - hostsConfiguredButNotConnected
        hostsConnectedAsFailover:
        - hostsConnectedAsFailover
        - hostsConnectedAsFailover
        hostsConnectedAsFailoverWithoutActiveGates:
        - hostsConnectedAsFailoverWithoutActiveGates
        - hostsConnectedAsFailoverWithoutActiveGates
        hostsConnectedAsAlternative:
        - hostsConnectedAsAlternative
        - hostsConnectedAsAlternative
      properties:
        hostsConfiguredButNotConnected:
          description: Hosts from the network zone that use other zones.
          items:
            type: string
          readOnly: true
          type: array
        hostsConnectedAsAlternative:
          description: Hosts that use the network zone as an alternative.
          items:
            type: string
          readOnly: true
          type: array
        hostsConnectedAsFailover:
          description: Hosts from other zones that use the zone (not configured as
            an alternative) even though ActiveGates of higher priority are available.
          items:
            type: string
          readOnly: true
          type: array
        hostsConnectedAsFailoverWithoutActiveGates:
          description: Hosts from other zones that use the zone (not configured as
            an alternative) and **no** ActiveGates of higher priority are available.
          items:
            type: string
          readOnly: true
          type: array
      type: object
    NetworkZoneList:
      description: A list of network zones.
      example:
        networkZones:
        - numOfConfiguredOneAgents: 6
          numOfOneAgentsUsing: 5
          alternativeZones:
          - alternativeZones
          - alternativeZones
          overridesGlobal: true
          numOfConfiguredActiveGates: 0
          fallbackMode: ANY_ACTIVE_GATE
          scope: scope
          description: description
          id: id
          numOfOneAgentsFromOtherZones: 1
        - numOfConfiguredOneAgents: 6
          numOfOneAgentsUsing: 5
          alternativeZones:
          - alternativeZones
          - alternativeZones
          overridesGlobal: true
          numOfConfiguredActiveGates: 0
          fallbackMode: ANY_ACTIVE_GATE
          scope: scope
          description: description
          id: id
          numOfOneAgentsFromOtherZones: 1
      properties:
        networkZones:
          description: A list of network zones.
          items:
            $ref: '#/components/schemas/NetworkZone'
          type: array
      required:
      - networkZones
      type: object
    NetworkZoneSettings:
      description: Global network zone configuration.
      example:
        networkZonesEnabled: true
      properties:
        networkZonesEnabled:
          description: Network zones feature is enabled (`true`) or disabled (`false`).
          type: boolean
      type: object
    Node:
      description: "Configuration of a synthetic node. \n\n A *synthetic node* is\
        \ an ActiveGate that is able to execute synthetic monitors."
      example:
        activeGateVersion: 1.172.2.20190607-040913
        autoUpdateEnabled: true
        browserMonitorsEnabled: true
        browserType: Chrome
        browserVersion: 69.0.3497.81
        entityId: "3086117876"
        healthCheckStatus: Ok
        hostname: gdn.dyna.trace
        ips:
        - 238.245.160.14
        oneAgentRoutingEnabled: true
        operatingSystem: Linux
        playerVersion: 1.179.0.20190920-145430
        status: Running
        version: 1.161.0.20181210-173639
      properties:
        activeGateVersion:
          description: The version of the Active Gate.
          type: string
        autoUpdateEnabled:
          description: The Active Gate has the Auto update option enabled ('true')
            or not ('false')
          type: boolean
        browserMonitorsEnabled:
          description: The synthetic node is able to execute browser monitors (`true`)
            or not (`false`).
          type: boolean
        browserType:
          description: The browser type.
          type: string
        browserVersion:
          description: The browser version.
          type: string
        entityId:
          description: The ID of the synthetic node.
          type: string
        healthCheckStatus:
          description: The health check status of the synthetic node.
          type: string
        hostname:
          description: The hostname of the synthetic node.
          type: string
        ips:
          description: The IP of the synthetic node.
          items:
            type: string
          type: array
        oneAgentRoutingEnabled:
          description: The Active Gate has the One Agent routing enabled ('true')
            or not ('false').
          type: boolean
        operatingSystem:
          description: The Active Gate's host operating system.
          type: string
        playerVersion:
          description: The version of the synthetic player.
          type: string
        status:
          description: The status of the synthetic node.
          type: string
        version:
          description: The version of the synthetic node.
          type: string
      required:
      - activeGateVersion
      - autoUpdateEnabled
      - browserMonitorsEnabled
      - browserType
      - browserVersion
      - entityId
      - healthCheckStatus
      - hostname
      - ips
      - oneAgentRoutingEnabled
      - operatingSystem
      - playerVersion
      - status
      - version
      type: object
    NodeCollectionElement:
      description: The short representation of a synthetic object. Only contains the
        ID and the display name.
      properties:
        activeGateVersion:
          description: The version of the Active Gate.
          type: string
        autoUpdateEnabled:
          description: The Active Gate has the Auto update option enabled ('true')
            or not ('false')
          type: boolean
        browserMonitorsEnabled:
          description: Browser check capabilities enabled flag.
          type: boolean
        entityId:
          description: The ID of a node.
          type: string
        healthCheckStatus:
          description: The health check status of the synthetic node.
          type: string
        hostname:
          description: The hostname of a node.
          type: string
        ips:
          description: The IP of a node.
          items:
            type: string
          type: array
        oneAgentRoutingEnabled:
          description: The Active Gate has the One Agent routing enabled ('true')
            or not ('false').
          type: boolean
        operatingSystem:
          description: The Active Gate's host operating system.
          type: string
        playerVersion:
          description: The version of the synthetic player.
          type: string
        status:
          description: The status of the synthetic node.
          type: string
        version:
          description: The version of a node
          type: string
      required:
      - activeGateVersion
      - autoUpdateEnabled
      - browserMonitorsEnabled
      - entityId
      - healthCheckStatus
      - hostname
      - ips
      - oneAgentRoutingEnabled
      - operatingSystem
      - playerVersion
      - status
      - version
      type: object
    Nodes:
      description: A list of synthetic nodes
      example:
        nodes:
        - activeGateVersion: 1.172.2.20190607-040913
          autoUpdateEnabled: true
          browserMonitorsEnabled: true
          entityId: "3086117876"
          healthCheckStatus: Ok
          hostname: gdn.dyna.trace
          ips:
          - 238.245.160.14
          oneAgentRoutingEnabled: true
          operatingSystem: Linux
          playerVersion: 1.179.0.20190920-145430
          status: Running
          version: 1.161.0.20181210-173639
      properties:
        nodes:
          description: A list of synthetic nodes
          items:
            $ref: '#/components/schemas/NodeCollectionElement'
          type: array
      required:
      - nodes
      type: object
    ObjectNode:
      description: Customized script properties for this on-demand batch execution.
      type: object
    ObjectsList:
      description: A list of settings objects.
      example:
        nextPageKey: AQAAABQBAAAABQ==
        pageSize: 1
        totalCount: 5
        items:
        - searchSummary: searchSummary
          summary: summary
          schemaVersion: 1.0.0
          updateToken: Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=
          author: john.doe@example.com
          created: 0
          externalId: externalId
          modificationInfo:
            movable: true
            nonModifiablePaths:
            - nonModifiablePaths
            - nonModifiablePaths
            deletable: true
            modifiablePaths:
            - modifiablePaths
            - modifiablePaths
            modifiable: true
            first: true
          createdBy: fab17b7a-2eb2-4c95-b818-743d94be2c30
          schemaId: builtin:container.built-in-monitoring-rule
          scope: HOST-D3A3C5A146830A79
          modified: 6
          modifiedBy: fab17b7a-2eb2-4c95-b818-743d94be2c30
          value:
            autoMonitoring: true
          objectId: Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=
        - searchSummary: searchSummary
          summary: summary
          schemaVersion: 1.0.0
          updateToken: Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=
          author: john.doe@example.com
          created: 0
          externalId: externalId
          modificationInfo:
            movable: true
            nonModifiablePaths:
            - nonModifiablePaths
            - nonModifiablePaths
            deletable: true
            modifiablePaths:
            - modifiablePaths
            - modifiablePaths
            modifiable: true
            first: true
          createdBy: fab17b7a-2eb2-4c95-b818-743d94be2c30
          schemaId: builtin:container.built-in-monitoring-rule
          scope: HOST-D3A3C5A146830A79
          modified: 6
          modifiedBy: fab17b7a-2eb2-4c95-b818-743d94be2c30
          value:
            autoMonitoring: true
          objectId: Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=
      properties:
        items:
          description: A list of settings objects.
          items:
            $ref: '#/components/schemas/SettingsObject'
          type: array
        nextPageKey:
          description: "The cursor for the next page of results. Has the value of\
            \ `null` on the last page. \n\nUse it in the **nextPageKey** query parameter\
            \ to obtain subsequent pages of the result."
          example: AQAAABQBAAAABQ==
          type: string
        pageSize:
          description: The number of entries per page.
          format: int32
          type: integer
        totalCount:
          description: The total number of entries in the result.
          format: int64
          type: integer
      required:
      - items
      - pageSize
      - totalCount
      type: object
    Precondition:
      description: A precondition for visibility of a property.
      example:
        preconditions:
        - null
        - null
        expectedValue: expectedValue
        pattern: example Regex
        property: propertyToEvaluate
        precondition: null
        type: "NULL"
        expectedValues: expectedValues
      properties:
        expectedValue:
          description: "The expected value of the property. \n\nOnly applicable to\
            \ properties of the `EQUALS` type."
          example: expectedValue
          type: object
        expectedValues:
          description: "A list of valid values of the property. \n\nOnly applicable\
            \ to properties of the `IN` type."
          example: expectedValues
          items:
            type: object
          type: array
        pattern:
          description: "The Regular expression which is matched against the property.\
            \ \n\nOnly applicable to properties of the `REGEX_MATCH` type."
          example: example Regex
          type: string
        precondition:
          $ref: '#/components/schemas/Precondition'
        preconditions:
          description: "A list of child preconditions to be evaluated. \n\nOnly applicable\
            \ to properties of the `AND` and `OR` types."
          items:
            $ref: '#/components/schemas/Precondition'
          type: array
        property:
          description: The property to be evaluated.
          example: propertyToEvaluate
          type: string
        type:
          description: The type of the precondition.
          enum:
          - AND
          - EQUALS
          - IN
          - NOT
          - "NULL"
          - OR
          - REGEX_MATCH
          example: "NULL"
          type: string
      required:
      - type
      type: object
    PrivateSyntheticLocation:
      allOf:
      - $ref: '#/components/schemas/SyntheticLocation'
      - properties:
          autoUpdateChromium:
            description: Auto upgrade of Chromium is enabled (`true`) or disabled
              (`false`).
            type: boolean
          availabilityLocationOutage:
            description: Alerting for location outage is enabled (`true`) or disabled
              (`false`). Supported only for private Synthetic locations.
            type: boolean
          availabilityNodeOutage:
            description: "Alerting for node outage is enabled (`true`) or disabled\
              \ (`false`). \\n\\n If enabled, the outage of *any* node in the location\
              \ triggers an alert. Supported only for private Synthetic locations."
            type: boolean
          availabilityNotificationsEnabled:
            description: Notifications for location and node outage are enabled (`true`)
              or disabled (`false`). Supported only for private Synthetic locations.
            type: boolean
          deploymentType:
            description: "The deployment type of the location: \n\n* `STANDARD`: The\
              \ location is deployed on Windows or Linux.\n* `KUBERNETES`: The location\
              \ is deployed on Kubernetes."
            enum:
            - KUBERNETES
            - OPENSHIFT
            - STANDARD
            type: string
          locationNodeOutageDelayInMinutes:
            description: Alert if location or node outage lasts longer than *X* minutes.
              \n\n Only applicable when `availabilityLocationOutage` or `availabilityNodeOutage`
              is set to `true`. Supported only for private Synthetic locations.
            format: int32
            maximum: 5
            minimum: 1
            type: integer
          nodes:
            description: "A list of synthetic nodes belonging to the location. \n\n\
              \ You can retrieve the list of available nodes with the [GET all nodes](https://dt-url.net/miy3rpl)\
              \ call."
            items:
              type: string
            type: array
          useNewKubernetesVersion:
            description: |-
              Boolean value describes which kubernetes version will be used:

              * `false`: Version 1.23+ that is older than 1.26
              * `true`: Version 1.26+.
            type: boolean
        type: object
      description: "Configuration of a private synthetic location. \n\n Some fields\
        \ are inherited from the base *SyntheticLocation* object."
      example:
        autoUpdateChromium: true
        availabilityLocationNodeOutageDelayInMinutes: 5
        availabilityLocationOutage: false
        availabilityNodeOutage: false
        city: Linz
        countryCode: AT
        deploymentType: STANDARD
        latitude: 48.306351
        longitude: 14.287399
        maxActiveGateCount: 5
        minActiveGateCount: 2
        name: Linz Location
        nodeSize: S
        nodes:
        - "93302281"
        regionCode: "04"
        status: ENABLED
        type: PRIVATE
      required:
      - entityId
      - latitude
      - longitude
      - name
      - nodes
      - type
      type: object
    Problem:
      description: The properties of a problem.
      example:
        impactedEntities:
        - name: name
          entityId:
            id: id
            type: type
        - name: name
          entityId:
            id: id
            type: type
        linkedProblemInfo:
          displayId: displayId
          problemId: problemId
        problemFilters:
        - name: name
          id: id
        - name: name
          id: id
        entityTags:
        - context: context
          stringRepresentation: stringRepresentation
          value: value
          key: key
        - context: context
          stringRepresentation: stringRepresentation
          value: value
          key: key
        rootCauseEntity:
          name: name
          entityId:
            id: id
            type: type
        recentComments:
          nextPageKey: AQAAABQBAAAABQ==
          comments:
          - createdAtTimestamp: 2
            authorName: authorName
            context: context
            id: id
            content: content
          - createdAtTimestamp: 2
            authorName: authorName
            context: context
            id: id
            content: content
          pageSize: 7
          totalCount: 9
        title: title
        affectedEntities:
        - name: name
          entityId:
            id: id
            type: type
        - name: name
          entityId:
            id: id
            type: type
        impactLevel: APPLICATION
        severityLevel: AVAILABILITY
        managementZones:
        - name: name
          id: id
        - name: name
          id: id
        impactAnalysis:
          impacts:
          - estimatedAffectedUsers: 5
            impactedEntity:
              name: name
              entityId:
                id: id
                type: type
            impactType: APPLICATION
          - estimatedAffectedUsers: 5
            impactedEntity:
              name: name
              entityId:
                id: id
                type: type
            impactType: APPLICATION
        startTime: 3
        endTime: 6
        displayId: displayId
        problemId: problemId
        evidenceDetails:
          details:
          - displayName: displayName
            evidenceType: AVAILABILITY_EVIDENCE
            startTime: 1
            groupingEntity:
              name: name
              entityId:
                id: id
                type: type
            entity:
              name: name
              entityId:
                id: id
                type: type
            rootCauseRelevant: true
          - displayName: displayName
            evidenceType: AVAILABILITY_EVIDENCE
            startTime: 1
            groupingEntity:
              name: name
              entityId:
                id: id
                type: type
            entity:
              name: name
              entityId:
                id: id
                type: type
            rootCauseRelevant: true
          totalCount: 5
        status: CLOSED
      properties:
        affectedEntities:
          description: A list of all entities that are affected by the problem.
          items:
            $ref: '#/components/schemas/EntityStub'
          type: array
          uniqueItems: true
        displayId:
          description: The display ID of the problem.
          type: string
        endTime:
          description: "The end timestamp of the problem, in UTC milliseconds. \n\n\
            \ Has `-1` value, if the problem is still open."
          format: int64
          type: integer
        entityTags:
          description: A list of all entity tags of the problem.
          items:
            $ref: '#/components/schemas/METag'
          type: array
          uniqueItems: true
        evidenceDetails:
          $ref: '#/components/schemas/EvidenceDetails'
        impactAnalysis:
          $ref: '#/components/schemas/ImpactAnalysis'
        impactLevel:
          description: The impact level of the problem. It shows what is affected
            by the problem.
          enum:
          - APPLICATION
          - ENVIRONMENT
          - INFRASTRUCTURE
          - SERVICES
          type: string
        impactedEntities:
          description: A list of all entities that are impacted by the problem.
          items:
            $ref: '#/components/schemas/EntityStub'
          type: array
          uniqueItems: true
        linkedProblemInfo:
          $ref: '#/components/schemas/LinkedProblem'
        managementZones:
          description: A list of all management zones that the problem belongs to.
          items:
            $ref: '#/components/schemas/ManagementZone'
          type: array
          uniqueItems: true
        problemFilters:
          description: A list of alerting profiles that match the problem.
          items:
            $ref: '#/components/schemas/AlertingProfileStub'
          type: array
          uniqueItems: true
        problemId:
          description: The ID of the problem.
          type: string
        recentComments:
          $ref: '#/components/schemas/CommentsList'
        rootCauseEntity:
          $ref: '#/components/schemas/EntityStub'
        severityLevel:
          description: The severity of the problem.
          enum:
          - AVAILABILITY
          - CUSTOM_ALERT
          - ERROR
          - INFO
          - MONITORING_UNAVAILABLE
          - PERFORMANCE
          - RESOURCE_CONTENTION
          type: string
        startTime:
          description: "The start timestamp of the problem, in UTC milliseconds."
          format: int64
          type: integer
        status:
          description: The status of the problem.
          enum:
          - CLOSED
          - OPEN
          type: string
        title:
          description: "The name of the problem, displayed in the UI."
          type: string
      required:
      - affectedEntities
      - displayId
      - endTime
      - impactLevel
      - impactedEntities
      - managementZones
      - problemFilters
      - problemId
      - severityLevel
      - startTime
      - status
      - title
      type: object
    ProblemCloseRequestDtoImpl:
      example:
        message: message
      properties:
        message:
          description: The text of the closing comment.
          type: string
      required:
      - message
      type: object
    ProblemCloseResult:
      description: The result of closing a problem.
      example:
        closing: true
        comment:
          createdAtTimestamp: 2
          authorName: authorName
          context: context
          id: id
          content: content
        problemId: problemId
        closeTimestamp: 0
      properties:
        closeTimestamp:
          description: The timestamp when the user triggered the closing.
          format: int64
          type: integer
        closing:
          description: "True, if the problem is being closed."
          type: boolean
        comment:
          $ref: '#/components/schemas/Comment'
        problemId:
          description: The ID of the problem.
          type: string
      required:
      - closeTimestamp
      - closing
      - problemId
      type: object
    Problems:
      description: A list of problems.
      example:
        nextPageKey: AQAAABQBAAAABQ==
        warnings:
        - warnings
        - warnings
        pageSize: 0
        totalCount: 2
        problems:
        - impactedEntities:
          - name: name
            entityId:
              id: id
              type: type
          - name: name
            entityId:
              id: id
              type: type
          linkedProblemInfo:
            displayId: displayId
            problemId: problemId
          problemFilters:
          - name: name
            id: id
          - name: name
            id: id
          entityTags:
          - context: context
            stringRepresentation: stringRepresentation
            value: value
            key: key
          - context: context
            stringRepresentation: stringRepresentation
            value: value
            key: key
          rootCauseEntity:
            name: name
            entityId:
              id: id
              type: type
          recentComments:
            nextPageKey: AQAAABQBAAAABQ==
            comments:
            - createdAtTimestamp: 2
              authorName: authorName
              context: context
              id: id
              content: content
            - createdAtTimestamp: 2
              authorName: authorName
              context: context
              id: id
              content: content
            pageSize: 7
            totalCount: 9
          title: title
          affectedEntities:
          - name: name
            entityId:
              id: id
              type: type
          - name: name
            entityId:
              id: id
              type: type
          impactLevel: APPLICATION
          severityLevel: AVAILABILITY
          managementZones:
          - name: name
            id: id
          - name: name
            id: id
          impactAnalysis:
            impacts:
            - estimatedAffectedUsers: 5
              impactedEntity:
                name: name
                entityId:
                  id: id
                  type: type
              impactType: APPLICATION
            - estimatedAffectedUsers: 5
              impactedEntity:
                name: name
                entityId:
                  id: id
                  type: type
              impactType: APPLICATION
          startTime: 3
          endTime: 6
          displayId: displayId
          problemId: problemId
          evidenceDetails:
            details:
            - displayName: displayName
              evidenceType: AVAILABILITY_EVIDENCE
              startTime: 1
              groupingEntity:
                name: name
                entityId:
                  id: id
                  type: type
              entity:
                name: name
                entityId:
                  id: id
                  type: type
              rootCauseRelevant: true
            - displayName: displayName
              evidenceType: AVAILABILITY_EVIDENCE
              startTime: 1
              groupingEntity:
                name: name
                entityId:
                  id: id
                  type: type
              entity:
                name: name
                entityId:
                  id: id
                  type: type
              rootCauseRelevant: true
            totalCount: 5
          status: CLOSED
        - impactedEntities:
          - name: name
            entityId:
              id: id
              type: type
          - name: name
            entityId:
              id: id
              type: type
          linkedProblemInfo:
            displayId: displayId
            problemId: problemId
          problemFilters:
          - name: name
            id: id
          - name: name
            id: id
          entityTags:
          - context: context
            stringRepresentation: stringRepresentation
            value: value
            key: key
          - context: context
            stringRepresentation: stringRepresentation
            value: value
            key: key
          rootCauseEntity:
            name: name
            entityId:
              id: id
              type: type
          recentComments:
            nextPageKey: AQAAABQBAAAABQ==
            comments:
            - createdAtTimestamp: 2
              authorName: authorName
              context: context
              id: id
              content: content
            - createdAtTimestamp: 2
              authorName: authorName
              context: context
              id: id
              content: content
            pageSize: 7
            totalCount: 9
          title: title
          affectedEntities:
          - name: name
            entityId:
              id: id
              type: type
          - name: name
            entityId:
              id: id
              type: type
          impactLevel: APPLICATION
          severityLevel: AVAILABILITY
          managementZones:
          - name: name
            id: id
          - name: name
            id: id
          impactAnalysis:
            impacts:
            - estimatedAffectedUsers: 5
              impactedEntity:
                name: name
                entityId:
                  id: id
                  type: type
              impactType: APPLICATION
            - estimatedAffectedUsers: 5
              impactedEntity:
                name: name
                entityId:
                  id: id
                  type: type
              impactType: APPLICATION
          startTime: 3
          endTime: 6
          displayId: displayId
          problemId: problemId
          evidenceDetails:
            details:
            - displayName: displayName
              evidenceType: AVAILABILITY_EVIDENCE
              startTime: 1
              groupingEntity:
                name: name
                entityId:
                  id: id
                  type: type
              entity:
                name: name
                entityId:
                  id: id
                  type: type
              rootCauseRelevant: true
            - displayName: displayName
              evidenceType: AVAILABILITY_EVIDENCE
              startTime: 1
              groupingEntity:
                name: name
                entityId:
                  id: id
                  type: type
              entity:
                name: name
                entityId:
                  id: id
                  type: type
              rootCauseRelevant: true
            totalCount: 5
          status: CLOSED
      properties:
        nextPageKey:
          description: "The cursor for the next page of results. Has the value of\
            \ `null` on the last page. \n\nUse it in the **nextPageKey** query parameter\
            \ to obtain subsequent pages of the result."
          example: AQAAABQBAAAABQ==
          type: string
        pageSize:
          description: The number of entries per page.
          format: int32
          type: integer
        problems:
          description: The result entries.
          items:
            $ref: '#/components/schemas/Problem'
          type: array
        totalCount:
          description: The total number of entries in the result.
          format: int64
          type: integer
        warnings:
          description: A list of warnings
          items:
            type: string
          type: array
          uniqueItems: true
      required:
      - problems
      - totalCount
      type: object
    ProcessGroupVulnerableFunctions:
      description: The vulnerable functions of a process group including their usage.
      example:
        functionsInUse:
        - functionName: functionName
          filePath: filePath
          className: className
        - functionName: functionName
          filePath: filePath
          className: className
        functionsNotAvailable:
        - functionName: functionName
          filePath: filePath
          className: className
        - functionName: functionName
          filePath: filePath
          className: className
        functionsNotInUse:
        - functionName: functionName
          filePath: filePath
          className: className
        - functionName: functionName
          filePath: filePath
          className: className
        processGroup: processGroup
      properties:
        functionsInUse:
          description: A list of vulnerable functions in use.
          items:
            $ref: '#/components/schemas/VulnerableFunction'
          readOnly: true
          type: array
        functionsNotAvailable:
          description: A list of vulnerable functions with unknown state.
          items:
            $ref: '#/components/schemas/VulnerableFunction'
          readOnly: true
          type: array
        functionsNotInUse:
          description: A list of vulnerable functions not in use.
          items:
            $ref: '#/components/schemas/VulnerableFunction'
          readOnly: true
          type: array
        processGroup:
          description: The process group identifier.
          readOnly: true
          type: string
      type: object
    PropertyDefinition:
      description: Configuration of a property in a settings schema.
      example:
        modificationPolicy: ALWAYS
        metadata:
          key: metadata
        nullable: true
        displayName: propertyDisplayName
        minObjects: 1
        documentation: propertyDocumentation
        description: propertyDescription
        uiCustomization:
          expandable:
            expanded: true
            displayName: displayName
            sections:
            - expanded: true
              displayName: displayName
              description: description
              properties:
              - properties
              - properties
            - expanded: true
              displayName: displayName
              description: description
              properties:
              - properties
              - properties
          tabs:
            groups:
            - displayName: displayName
              description: description
              properties:
              - properties
              - properties
            - displayName: displayName
              description: description
              properties:
              - properties
              - properties
          callback:
            buttons:
            - identifier: identifier
              displayName: displayName
              description: description
              insert: null
            - identifier: identifier
              displayName: displayName
              description: description
              insert: null
          table:
            emptyState:
              text: text
            columns:
            - builtinColumnRef: summary
              propertyRef: apiColor
              displayName: Color
              columnRef: myCustomColumn
              type: cell-color-picker
              items:
              - displayName: Active
                icon: CRITICAL
                value: ACTIVE
              - displayName: Active
                icon: CRITICAL
                value: ACTIVE
            - builtinColumnRef: summary
              propertyRef: apiColor
              displayName: Color
              columnRef: myCustomColumn
              type: cell-color-picker
              items:
              - displayName: Active
                icon: CRITICAL
                value: ACTIVE
              - displayName: Active
                icon: CRITICAL
                value: ACTIVE
        forceSecretResubmission: true
        precondition:
          preconditions:
          - null
          - null
          expectedValue: expectedValue
          pattern: example Regex
          property: propertyToEvaluate
          precondition: null
          type: "NULL"
          expectedValues: expectedValues
        referencedType: propertyReferencedType
        type: null
        constraints:
        - customValidatorId: my-min-max
          minLength: 7
          pattern: "^([a-z]|[0-9]|\\-|\\_|\\+|\\.)+\\@([a-z]|[0-9]|-){2,}\\.([a-z]|[0-9]|-){2,}(\\\
            .[a-z]{2,})?$"
          customMessage: customConstraintMessage
          maximum: 200
          type: UNKNOWN
          minimum: 3
          maxLength: 20
          uniqueProperties:
          - my-prop-1
          - my-prop-2
        - customValidatorId: my-min-max
          minLength: 7
          pattern: "^([a-z]|[0-9]|\\-|\\_|\\+|\\.)+\\@([a-z]|[0-9]|-){2,}\\.([a-z]|[0-9]|-){2,}(\\\
            .[a-z]{2,})?$"
          customMessage: customConstraintMessage
          maximum: 200
          type: UNKNOWN
          minimum: 3
          maxLength: 20
          uniqueProperties:
          - my-prop-1
          - my-prop-2
        default: propertyDefaultValue
        datasource:
          filterProperties:
          - filterProperties
          - filterProperties
          identifier: identifier
          useApiSearch: true
          fullContext: true
          resetValue: ALWAYS
          validate: true
        subType: propertySubType
        maxObjects: 0
        items:
          metadata:
            key: metadata
          datasource:
            filterProperties:
            - filterProperties
            - filterProperties
            identifier: identifier
            useApiSearch: true
            fullContext: true
            resetValue: ALWAYS
            validate: true
          displayName: itemDisplayName
          documentation: propertyDocumentation
          description: itemDescription
          subType: itemSubType
          uiCustomization:
            expandable:
              expanded: true
              displayName: displayName
              sections:
              - expanded: true
                displayName: displayName
                description: description
                properties:
                - properties
                - properties
              - expanded: true
                displayName: displayName
                description: description
                properties:
                - properties
                - properties
            tabs:
              groups:
              - displayName: displayName
                description: description
                properties:
                - properties
                - properties
              - displayName: displayName
                description: description
                properties:
                - properties
                - properties
            callback:
              buttons:
              - identifier: identifier
                displayName: displayName
                description: description
                insert: null
              - identifier: identifier
                displayName: displayName
                description: description
                insert: null
            table:
              emptyState:
                text: text
              columns:
              - builtinColumnRef: summary
                propertyRef: apiColor
                displayName: Color
                columnRef: myCustomColumn
                type: cell-color-picker
                items:
                - displayName: Active
                  icon: CRITICAL
                  value: ACTIVE
                - displayName: Active
                  icon: CRITICAL
                  value: ACTIVE
              - builtinColumnRef: summary
                propertyRef: apiColor
                displayName: Color
                columnRef: myCustomColumn
                type: cell-color-picker
                items:
                - displayName: Active
                  icon: CRITICAL
                  value: ACTIVE
                - displayName: Active
                  icon: CRITICAL
                  value: ACTIVE
          referencedType: itemReferencedType
          type: null
          constraints:
          - customValidatorId: my-min-max
            minLength: 7
            pattern: "^([a-z]|[0-9]|\\-|\\_|\\+|\\.)+\\@([a-z]|[0-9]|-){2,}\\.([a-z]|[0-9]|-){2,}(\\\
              .[a-z]{2,})?$"
            customMessage: customConstraintMessage
            maximum: 200
            type: UNKNOWN
            minimum: 3
            maxLength: 20
            uniqueProperties:
            - my-prop-1
            - my-prop-2
          - customValidatorId: my-min-max
            minLength: 7
            pattern: "^([a-z]|[0-9]|\\-|\\_|\\+|\\.)+\\@([a-z]|[0-9]|-){2,}\\.([a-z]|[0-9]|-){2,}(\\\
              .[a-z]{2,})?$"
            customMessage: customConstraintMessage
            maximum: 200
            type: UNKNOWN
            minimum: 3
            maxLength: 20
            uniqueProperties:
            - my-prop-1
            - my-prop-2
      properties:
        constraints:
          description: A list of constraints limiting the values to be accepted.
          items:
            $ref: '#/components/schemas/Constraint'
          type: array
        datasource:
          $ref: '#/components/schemas/DatasourceDefinition'
        default:
          description: "The default value to be used when no value is provided. \n\
            \nIf a non-singleton has the value of `null`, it means an empty collection."
          example: propertyDefaultValue
          type: object
        description:
          description: A short description of the property.
          example: propertyDescription
          type: string
        displayName:
          description: The display name of the property.
          example: propertyDisplayName
          type: string
        documentation:
          description: An extended description and/or links to documentation.
          example: propertyDocumentation
          type: string
        forceSecretResubmission:
          description: Defines if value is allowed to be modified when secret properties
            are not
          example: true
          type: boolean
        items:
          $ref: '#/components/schemas/Item'
        maxObjects:
          description: "The maximum number of **objects** in a collection property.\
            \ \n\n Has the value of `1` for singletons."
          format: int32
          type: integer
        metadata:
          additionalProperties:
            description: Metadata of the property.
            type: string
          description: Metadata of the property.
          type: object
        minObjects:
          description: The minimum number of **objects** in a collection property.
          example: 1
          format: int32
          type: integer
        modificationPolicy:
          description: Modification policy of the property.
          enum:
          - ALWAYS
          - DEFAULT
          - NEVER
          example: ALWAYS
          type: string
        nullable:
          description: The value can (`true`) or can't (`false`) be `null`.
          example: true
          type: boolean
        precondition:
          $ref: '#/components/schemas/Precondition'
        referencedType:
          description: The type referenced by the property value
          example: propertyReferencedType
          type: string
        subType:
          description: The subtype of the property's value.
          example: propertySubType
          type: string
        type:
          $ref: '#/components/schemas/PropertyDefinition_type'
        uiCustomization:
          $ref: '#/components/schemas/UiCustomization'
      required:
      - maxObjects
      - nullable
      - type
      type: object
    ProtocolDetails:
      description: Details that are specific to the used protocol.
      example:
        http:
          headers:
            truncationInfo:
              truncated: true
            values:
            - name: name
              value: value
            - name: name
              value: value
          requestMethod: requestMethod
          parameters:
            truncationInfo:
              truncated: true
            values:
            - name: name
              value: value
            - name: name
              value: value
      properties:
        http:
          $ref: '#/components/schemas/HttpProtocolDetails'
      readOnly: true
      type: object
    PublicCertificateCredentials:
      allOf:
      - $ref: '#/components/schemas/Credentials'
      - properties:
          certificate:
            description: The certificate in the string format.
            type: string
          certificateFormat:
            description: The certificate format.
            enum:
            - PEM
            - PKCS12
            - UNKNOWN
            type: string
          password:
            description: The password of the credential (not supported).
            type: string
        type: object
      description: A credentials set of the `PUBLIC_CERTIFICATE` type.
      required:
      - certificate
      - certificateFormat
      - name
      - password
      - scope
      - scopes
      type: object
    PublicSyntheticLocation:
      allOf:
      - $ref: '#/components/schemas/SyntheticLocation'
      - properties:
          browserType:
            description: The type of the browser the location is using to execute
              browser monitors.
            type: string
          browserVersion:
            description: The version of the browser the location is using to execute
              browser monitors.
            type: string
          capabilities:
            description: A list of location capabilities.
            items:
              type: string
            type: array
          cloudPlatform:
            description: The cloud provider where the location is hosted.
            enum:
            - ALIBABA
            - AMAZON_EC2
            - AZURE
            - DYNATRACE_CLOUD
            - GOOGLE_CLOUD
            - INTEROUTE
            - OTHER
            - UNDEFINED
            type: string
          ips:
            description: The list of IP addresses assigned to the location.
            items:
              type: string
            type: array
            uniqueItems: true
          stage:
            description: The stage of the location.
            enum:
            - BETA
            - COMING_SOON
            - DELETED
            - GA
            type: string
        type: object
      description: "Configuration of a public synthetic location. \n\n Some fields\
        \ are inherited from the base *SyntheticLocation* object."
      example:
        browserType: Chrome
        browserVersion: 69.0.3497.81
        capabilities:
        - BROWSER
        - HTTP
        city: Amazon US East (N. Virginia)
        cloudPlatform: AMAZON_EC2
        countryCode: US
        entityId: SYNTHETIC_LOCATION-95196F3C9A4F4215
        geoLocationId: GEOLOCATION-95196F3C9A4F4215
        ips:
        - 134.189.153.97
        - 134.189.153.98
        latitude: 39.0436
        longitude: -77.4875
        name: Amazon US East
        regionCode: VA
        stage: GA
        status: ENABLED
        type: PUBLIC
      required:
      - browserType
      - browserVersion
      - cloudPlatform
      - entityId
      - ips
      - latitude
      - longitude
      - name
      - stage
      - type
      type: object
    RefPointer:
      description: Object with a pointer to a JSON object
      properties:
        $ref:
          description: Pointer to a JSON object this object should be logically replaced
            with.
          example: refPointerToAnotherJsonObject
          type: string
      required:
      - $ref
      type: object
    Region:
      description: Information about a country's region.
      example:
        code: "01"
        name: Burgenland
      properties:
        code:
          description: The code of the region.
          type: string
        name:
          description: The name of the region.
          type: string
      type: object
    RegionWithCities:
      description: Information about a country's region and its cities.
      example:
        cities:
        - latitude: 47.3148
          longitude: 16.3884
          name: Althodis
        - latitude: 47.7733
          longitude: 17.029
          name: Andau
        cityCount: 2
        code: "01"
        name: Burgenland
      properties:
        cities:
          description: The list of cities in the region.
          items:
            $ref: '#/components/schemas/City'
          type: array
        cityCount:
          description: The number of cities in a region of a country.
          format: int32
          type: integer
        code:
          description: The code of the region.
          type: string
        name:
          description: The name of the region.
          type: string
      type: object
    RegisteredExtensionResultDto:
      example:
        extensionName: extensionName
        extensionVersion: extensionVersion
      properties:
        extensionName:
          description: FQN of the extension registered in the tenant.
          type: string
        extensionVersion:
          description: Version number of the extension.
          type: string
      type: object
    RelatedAttacksList:
      description: "A list of related attacks of the security problem. \n\nRelated\
        \ attacks are attacks on the exposed security problem."
      example:
        attacks:
        - attacks
        - attacks
      properties:
        attacks:
          description: A list of related attack ids.
          items:
            type: string
          readOnly: true
          type: array
      readOnly: true
      type: object
    RelatedContainerImage:
      description: Related container image of a security problem.
      example:
        imageId: imageId
        imageName: imageName
        numberOfAffectedEntities: 9
        affectedEntities:
        - affectedEntities
        - affectedEntities
      properties:
        affectedEntities:
          description: A list of affected entities.
          items:
            description: A list of affected entities.
            readOnly: true
            type: string
          readOnly: true
          type: array
        imageId:
          description: The image ID of the related container image.
          readOnly: true
          type: string
        imageName:
          description: The image name of the related container image.
          readOnly: true
          type: string
        numberOfAffectedEntities:
          description: The number of affected entities.
          format: int32
          readOnly: true
          type: integer
      readOnly: true
      type: object
    RelatedEntitiesList:
      description: "A list of related entities of the security problem. \n\nA related\
        \ entity is a monitored entity that is directly or indirectly related to an\
        \ *affected entity* (for example, it could be a host where an affected process\
        \ runs). \n\nEach related entity contains a list of corresponding affected\
        \ entities (for example, an affected process running on this host)."
      example:
        databases:
        - databases
        - databases
        hosts:
        - id: id
          numberOfAffectedEntities: 6
          affectedEntities:
          - affectedEntities
          - affectedEntities
        - id: id
          numberOfAffectedEntities: 6
          affectedEntities:
          - affectedEntities
          - affectedEntities
        kubernetesClusters:
        - id: id
          numberOfAffectedEntities: 6
          affectedEntities:
          - affectedEntities
          - affectedEntities
        - id: id
          numberOfAffectedEntities: 6
          affectedEntities:
          - affectedEntities
          - affectedEntities
        services:
        - exposure: NOT_AVAILABLE
          id: id
          numberOfAffectedEntities: 8
          affectedEntities:
          - affectedEntities
          - affectedEntities
        - exposure: NOT_AVAILABLE
          id: id
          numberOfAffectedEntities: 8
          affectedEntities:
          - affectedEntities
          - affectedEntities
        kubernetesWorkloads:
        - id: id
          numberOfAffectedEntities: 6
          affectedEntities:
          - affectedEntities
          - affectedEntities
        - id: id
          numberOfAffectedEntities: 6
          affectedEntities:
          - affectedEntities
          - affectedEntities
        applications:
        - id: id
          numberOfAffectedEntities: 6
          affectedEntities:
          - affectedEntities
          - affectedEntities
        - id: id
          numberOfAffectedEntities: 6
          affectedEntities:
          - affectedEntities
          - affectedEntities
      properties:
        applications:
          description: A list of related applications.
          items:
            $ref: '#/components/schemas/RelatedEntity'
          readOnly: true
          type: array
        databases:
          description: A list of related databases.
          items:
            type: string
          readOnly: true
          type: array
        hosts:
          description: A list of related hosts.
          items:
            $ref: '#/components/schemas/RelatedEntity'
          readOnly: true
          type: array
        kubernetesClusters:
          description: A list of related Kubernetes clusters.
          items:
            $ref: '#/components/schemas/RelatedEntity'
          readOnly: true
          type: array
        kubernetesWorkloads:
          description: A list of related Kubernetes workloads.
          items:
            $ref: '#/components/schemas/RelatedEntity'
          readOnly: true
          type: array
        services:
          description: A list of related services.
          items:
            $ref: '#/components/schemas/RelatedService'
          readOnly: true
          type: array
      readOnly: true
      type: object
    RelatedEntity:
      description: An entity related to a security problem.
      example:
        id: id
        numberOfAffectedEntities: 6
        affectedEntities:
        - affectedEntities
        - affectedEntities
      properties:
        affectedEntities:
          description: A list of affected entities related to the entity.
          items:
            description: A list of affected entities related to the entity.
            readOnly: true
            type: string
          readOnly: true
          type: array
        id:
          description: The Dynatrace entity ID of the entity.
          readOnly: true
          type: string
        numberOfAffectedEntities:
          description: The number of affected entities related to the entity.
          format: int64
          readOnly: true
          type: integer
      type: object
    RelatedItem:
      description: Related items.
      example:
        externalLink: externalLink
        name: name
        description: description
        iconUrl: iconUrl
        id: id
        type: EXTENSION1
        hasClusterLink: true
      properties:
        description:
          type: string
        externalLink:
          description: External link (marketing/documentation) that can provide with
            additional information.
          type: string
        hasClusterLink:
          description: Indicates whether there is a page within the product to activate
            this item.
          type: boolean
        iconUrl:
          description: The logo of the item. Can be a URL or Base64 encoded. Intended
            for <image> html tags
          type: string
        id:
          type: string
        name:
          type: string
        type:
          description: "Represents the type of item. It can be TECHNOLOGY, EXTENSION1\
            \ or EXTENSION2."
          enum:
          - EXTENSION1
          - EXTENSION2
          - TECHNOLOGY
          type: string
      type: object
    RelatedService:
      description: A service related to a security problem.
      example:
        exposure: NOT_AVAILABLE
        id: id
        numberOfAffectedEntities: 8
        affectedEntities:
        - affectedEntities
        - affectedEntities
      properties:
        affectedEntities:
          description: A list of affected entities related to the entity.
          items:
            description: A list of affected entities related to the entity.
            readOnly: true
            type: string
          readOnly: true
          type: array
        exposure:
          description: The level of exposure of the service.
          enum:
          - NOT_AVAILABLE
          - NOT_DETECTED
          - PUBLIC_NETWORK
          readOnly: true
          type: string
        id:
          description: The Dynatrace entity ID of the entity.
          readOnly: true
          type: string
        numberOfAffectedEntities:
          description: The number of affected entities related to the entity.
          format: int64
          readOnly: true
          type: integer
      type: object
    Release:
      description: |-
        Contains data related to a single release of a component.
        A Release is a combination of a component and a version.
        A Component can be any form of deployable that can be associated with a version.
        In the first draft, a Component is always a Service.

        The tuple <name, product, stage, version> is always unique.
      example:
        affectedBySecurityVulnerabilities: true
        product: Sockshop
        releaseEntityId: PROCESS_GROUP-DFDBAC9CBF104253
        problemCount: 4
        instances:
        - PROCESS_GROUP_INSTANCE-49D94B90FB71C45B
        - PROCESS_GROUP_INSTANCE-7EA049157C82D1A5
        securityVulnerabilitiesCount: 4
        version: 1.195.34.12341232423-012342
        securityVulnerabilitiesEnabled: true
        softwareTechs:
        - edition: OpenJDK
          technology: JAVA
          verbatimType: Java
          version: 1.8.0_242
        running: true
        stage: staging
        name: cluster
        throughput: 923234
        affectedByProblems: true
      properties:
        affectedByProblems:
          description: The entity has one or more problems
          example: true
          type: boolean
        affectedBySecurityVulnerabilities:
          description: The entity has one or more security vulnerabilities
          example: true
          type: boolean
        instances:
          description: The instances entityIds included in this release
          example:
          - PROCESS_GROUP_INSTANCE-49D94B90FB71C45B
          - PROCESS_GROUP_INSTANCE-7EA049157C82D1A5
          items:
            $ref: '#/components/schemas/ReleaseInstance'
          type: array
        name:
          description: The entity name
          example: cluster
          type: string
        problemCount:
          description: The number of problems of the entity
          example: 4
          format: int32
          minimum: 0
          type: integer
        product:
          description: The product name
          example: Sockshop
          type: string
        releaseEntityId:
          description: The entity id of correlating release.
          example: PROCESS_GROUP-DFDBAC9CBF104253
          type: string
        running:
          description: The related PGI is still running/monitored
          example: true
          type: boolean
        securityVulnerabilitiesCount:
          description: The number of security vulnerabilities of the entity
          example: 4
          format: int32
          minimum: 0
          type: integer
        securityVulnerabilitiesEnabled:
          description: Indicates that the security vulnerabilities feature is enabled
          example: true
          type: boolean
        softwareTechs:
          description: The software technologies of the release
          example:
          - edition: OpenJDK
            technology: JAVA
            verbatimType: Java
            version: 1.8.0_242
          items:
            $ref: '#/components/schemas/SoftwareTechs'
          type: array
        stage:
          description: The stage name
          example: staging
          type: string
        throughput:
          description: The count of bytes per second of the entity
          example: 923234
          format: double
          minimum: 0
          type: number
        version:
          description: The identified release version
          example: 1.195.34.12341232423-012342
          type: string
      type: object
    ReleaseInstance:
      description: |-
        Contains data related to a single instance of a release.
        An instance is a Process Group Instance and has an optional build version.
      example:
      - PROCESS_GROUP_INSTANCE-49D94B90FB71C45B
      - PROCESS_GROUP_INSTANCE-7EA049157C82D1A5
      properties:
        buildVersion:
          description: The build version
          example: "223005"
          type: string
        entityId:
          description: The entity id of the instance.
          example: PROCESS_GROUP_INSTANCE-DFDBAC9CBF104253
          type: string
        problems:
          description: List of event Ids of open problems
          example:
          - 573177299181554914_1616573184015V2
          items:
            description: List of event Ids of open problems
            example: "[\"573177299181554914_1616573184015V2\"]"
            type: string
          type: array
        securityVulnerabilities:
          description: List of Security vulnerabilities Ids
          example:
          - SNYK-JAVA-COMFASTERXMLJACKSONCORE-1234567
          items:
            description: List of Security vulnerabilities Ids
            example: "[\"SNYK-JAVA-COMFASTERXMLJACKSONCORE-1234567\"]"
            type: string
          type: array
      type: object
    Releases:
      description: A list of releases.
      example:
        nextPageKey: AQAAABQBAAAABQ==
        releasesWithProblems: 6
        pageSize: 0
        totalCount: 1
        releases:
        - affectedBySecurityVulnerabilities: true
          product: Sockshop
          releaseEntityId: PROCESS_GROUP-DFDBAC9CBF104253
          problemCount: 4
          instances:
          - PROCESS_GROUP_INSTANCE-49D94B90FB71C45B
          - PROCESS_GROUP_INSTANCE-7EA049157C82D1A5
          securityVulnerabilitiesCount: 4
          version: 1.195.34.12341232423-012342
          securityVulnerabilitiesEnabled: true
          softwareTechs:
          - edition: OpenJDK
            technology: JAVA
            verbatimType: Java
            version: 1.8.0_242
          running: true
          stage: staging
          name: cluster
          throughput: 923234
          affectedByProblems: true
        - affectedBySecurityVulnerabilities: true
          product: Sockshop
          releaseEntityId: PROCESS_GROUP-DFDBAC9CBF104253
          problemCount: 4
          instances:
          - PROCESS_GROUP_INSTANCE-49D94B90FB71C45B
          - PROCESS_GROUP_INSTANCE-7EA049157C82D1A5
          securityVulnerabilitiesCount: 4
          version: 1.195.34.12341232423-012342
          securityVulnerabilitiesEnabled: true
          softwareTechs:
          - edition: OpenJDK
            technology: JAVA
            verbatimType: Java
            version: 1.8.0_242
          running: true
          stage: staging
          name: cluster
          throughput: 923234
          affectedByProblems: true
      properties:
        nextPageKey:
          description: "The cursor for the next page of results. Has the value of\
            \ `null` on the last page. \n\nUse it in the **nextPageKey** query parameter\
            \ to obtain subsequent pages of the result."
          example: AQAAABQBAAAABQ==
          type: string
        pageSize:
          description: The number of entries per page.
          format: int32
          type: integer
        releases:
          description: A list of releases.
          items:
            $ref: '#/components/schemas/Release'
          type: array
        releasesWithProblems:
          description: Number of releases with problems.
          format: int64
          type: integer
        totalCount:
          description: The total number of entries in the result.
          format: int64
          type: integer
      required:
      - totalCount
      type: object
    RemediationAssessment:
      description: Assessment of the remediation item.
      example:
        vulnerableFunctionsNotAvailable:
        - functionName: functionName
          filePath: filePath
          className: className
        - functionName: functionName
          filePath: filePath
          className: className
        exposure: NOT_AVAILABLE
        dataAssets: NOT_AVAILABLE
        vulnerableFunctionUsage: IN_USE
        vulnerableFunctionsNotInUse:
        - functionName: functionName
          filePath: filePath
          className: className
        - functionName: functionName
          filePath: filePath
          className: className
        vulnerableFunctionsInUse:
        - functionName: functionName
          filePath: filePath
          className: className
        - functionName: functionName
          filePath: filePath
          className: className
        numberOfDataAssets: 0
      properties:
        dataAssets:
          description: The reachability of related data assets by affected entities.
          enum:
          - NOT_AVAILABLE
          - NOT_DETECTED
          - REACHABLE
          readOnly: true
          type: string
        exposure:
          description: The level of exposure of affected entities.
          enum:
          - NOT_AVAILABLE
          - NOT_DETECTED
          - PUBLIC_NETWORK
          readOnly: true
          type: string
        numberOfDataAssets:
          description: The number of related data assets.
          format: int64
          readOnly: true
          type: integer
        vulnerableFunctionUsage:
          description: The usage of vulnerable functions
          enum:
          - IN_USE
          - NOT_AVAILABLE
          - NOT_IN_USE
          readOnly: true
          type: string
        vulnerableFunctionsInUse:
          description: A list of vulnerable functions that are in use.
          items:
            $ref: '#/components/schemas/VulnerableFunction'
          readOnly: true
          type: array
          uniqueItems: true
        vulnerableFunctionsNotAvailable:
          description: A list of vulnerable functions that are not available.
          items:
            $ref: '#/components/schemas/VulnerableFunction'
          readOnly: true
          type: array
          uniqueItems: true
        vulnerableFunctionsNotInUse:
          description: A list of vulnerable functions that are not in use.
          items:
            $ref: '#/components/schemas/VulnerableFunction'
          readOnly: true
          type: array
          uniqueItems: true
      type: object
    RemediationDetailsItem:
      description: Detailed information of a remediation item for a security problem.
      example:
        assessment:
          vulnerableFunctionsNotAvailable:
          - functionName: functionName
            filePath: filePath
            className: className
          - functionName: functionName
            filePath: filePath
            className: className
          exposure: NOT_AVAILABLE
          dataAssets: NOT_AVAILABLE
          vulnerableFunctionUsage: IN_USE
          vulnerableFunctionsNotInUse:
          - functionName: functionName
            filePath: filePath
            className: className
          - functionName: functionName
            filePath: filePath
            className: className
          vulnerableFunctionsInUse:
          - functionName: functionName
            filePath: filePath
            className: className
          - functionName: functionName
            filePath: filePath
            className: className
          numberOfDataAssets: 0
        vulnerabilityState: RESOLVED
        firstAffectedTimestamp: 0
        resolvedTimestamp: 6
        muteState:
          lastUpdatedTimestamp: 1
          reason: AFFECTED
          comment: comment
          muted: true
          user: user
        name: name
        vulnerableComponents:
        - fileName: fileName
          displayName: displayName
          id: id
          numberOfAffectedEntities: 1
          shortName: shortName
          affectedEntities:
          - affectedEntities
          - affectedEntities
        - fileName: fileName
          displayName: displayName
          id: id
          numberOfAffectedEntities: 1
          shortName: shortName
          affectedEntities:
          - affectedEntities
          - affectedEntities
        remediationProgress:
          unaffectedEntities:
          - unaffectedEntities
          - unaffectedEntities
          affectedEntities:
          - affectedEntities
          - affectedEntities
        id: id
        entityIds:
        - entityIds
        - entityIds
      properties:
        assessment:
          $ref: '#/components/schemas/RemediationAssessment'
        entityIds:
          items:
            type: string
          type: array
          uniqueItems: true
        firstAffectedTimestamp:
          format: int64
          type: integer
        id:
          type: string
        muteState:
          $ref: '#/components/schemas/RemediationItemMuteState'
        name:
          type: string
        remediationProgress:
          $ref: '#/components/schemas/RemediationProgress'
        resolvedTimestamp:
          format: int64
          type: integer
        vulnerabilityState:
          enum:
          - RESOLVED
          - VULNERABLE
          type: string
        vulnerableComponents:
          description: "A list of vulnerable components of the remediation item. \n\
            \nA vulnerable component is what causes the security problem."
          items:
            $ref: '#/components/schemas/RemediationItemDetailsVulnerableComponent'
          readOnly: true
          type: array
      type: object
    RemediationItem:
      description: A possible remediation for a security problem.
      example:
        assessment:
          vulnerableFunctionsNotAvailable:
          - functionName: functionName
            filePath: filePath
            className: className
          - functionName: functionName
            filePath: filePath
            className: className
          exposure: NOT_AVAILABLE
          dataAssets: NOT_AVAILABLE
          vulnerableFunctionUsage: IN_USE
          vulnerableFunctionsNotInUse:
          - functionName: functionName
            filePath: filePath
            className: className
          - functionName: functionName
            filePath: filePath
            className: className
          vulnerableFunctionsInUse:
          - functionName: functionName
            filePath: filePath
            className: className
          - functionName: functionName
            filePath: filePath
            className: className
          numberOfDataAssets: 0
        vulnerabilityState: RESOLVED
        firstAffectedTimestamp: 6
        resolvedTimestamp: 5
        muteState:
          lastUpdatedTimestamp: 1
          reason: AFFECTED
          comment: comment
          muted: true
          user: user
        name: name
        vulnerableComponents:
        - fileName: fileName
          displayName: displayName
          id: id
          numberOfAffectedEntities: 9
          shortName: shortName
          affectedEntities:
          - affectedEntities
          - affectedEntities
        - fileName: fileName
          displayName: displayName
          id: id
          numberOfAffectedEntities: 9
          shortName: shortName
          affectedEntities:
          - affectedEntities
          - affectedEntities
        remediationProgress:
          unaffectedEntities:
          - unaffectedEntities
          - unaffectedEntities
          affectedEntities:
          - affectedEntities
          - affectedEntities
        id: id
        entityIds:
        - entityIds
        - entityIds
      properties:
        assessment:
          $ref: '#/components/schemas/RemediationAssessment'
        entityIds:
          items:
            type: string
          type: array
          uniqueItems: true
        firstAffectedTimestamp:
          format: int64
          type: integer
        id:
          type: string
        muteState:
          $ref: '#/components/schemas/RemediationItemMuteState'
        name:
          type: string
        remediationProgress:
          $ref: '#/components/schemas/RemediationProgress'
        resolvedTimestamp:
          format: int64
          type: integer
        vulnerabilityState:
          enum:
          - RESOLVED
          - VULNERABLE
          type: string
        vulnerableComponents:
          description: "A list of vulnerable components of the remediation item. \n\
            \nA vulnerable component is what causes the security problem."
          items:
            $ref: '#/components/schemas/VulnerableComponent'
          readOnly: true
          type: array
      type: object
    RemediationItemDetailsVulnerableComponent:
      description: A vulnerable component with details for a remediation item (PG).
      example:
        fileName: fileName
        displayName: displayName
        id: id
        numberOfAffectedEntities: 1
        shortName: shortName
        affectedEntities:
        - affectedEntities
        - affectedEntities
      properties:
        affectedEntities:
          description: A list of affected entities.
          items:
            description: A list of affected entities.
            readOnly: true
            type: string
          readOnly: true
          type: array
        displayName:
          description: The display name of the vulnerable component.
          readOnly: true
          type: string
        fileName:
          description: The file name of the vulnerable component.
          readOnly: true
          type: string
        id:
          description: The Dynatrace entity ID of the vulnerable component.
          readOnly: true
          type: string
        numberOfAffectedEntities:
          description: The number of affected entities.
          format: int32
          readOnly: true
          type: integer
        shortName:
          description: "The short, component-only name of the vulnerable component."
          readOnly: true
          type: string
      type: object
    RemediationItemList:
      description: A list of remediation items.
      example:
        remediationItems:
        - assessment:
            vulnerableFunctionsNotAvailable:
            - functionName: functionName
              filePath: filePath
              className: className
            - functionName: functionName
              filePath: filePath
              className: className
            exposure: NOT_AVAILABLE
            dataAssets: NOT_AVAILABLE
            vulnerableFunctionUsage: IN_USE
            vulnerableFunctionsNotInUse:
            - functionName: functionName
              filePath: filePath
              className: className
            - functionName: functionName
              filePath: filePath
              className: className
            vulnerableFunctionsInUse:
            - functionName: functionName
              filePath: filePath
              className: className
            - functionName: functionName
              filePath: filePath
              className: className
            numberOfDataAssets: 0
          vulnerabilityState: RESOLVED
          firstAffectedTimestamp: 6
          resolvedTimestamp: 5
          muteState:
            lastUpdatedTimestamp: 1
            reason: AFFECTED
            comment: comment
            muted: true
            user: user
          name: name
          vulnerableComponents:
          - fileName: fileName
            displayName: displayName
            id: id
            numberOfAffectedEntities: 9
            shortName: shortName
            affectedEntities:
            - affectedEntities
            - affectedEntities
          - fileName: fileName
            displayName: displayName
            id: id
            numberOfAffectedEntities: 9
            shortName: shortName
            affectedEntities:
            - affectedEntities
            - affectedEntities
          remediationProgress:
            unaffectedEntities:
            - unaffectedEntities
            - unaffectedEntities
            affectedEntities:
            - affectedEntities
            - affectedEntities
          id: id
          entityIds:
          - entityIds
          - entityIds
        - assessment:
            vulnerableFunctionsNotAvailable:
            - functionName: functionName
              filePath: filePath
              className: className
            - functionName: functionName
              filePath: filePath
              className: className
            exposure: NOT_AVAILABLE
            dataAssets: NOT_AVAILABLE
            vulnerableFunctionUsage: IN_USE
            vulnerableFunctionsNotInUse:
            - functionName: functionName
              filePath: filePath
              className: className
            - functionName: functionName
              filePath: filePath
              className: className
            vulnerableFunctionsInUse:
            - functionName: functionName
              filePath: filePath
              className: className
            - functionName: functionName
              filePath: filePath
              className: className
            numberOfDataAssets: 0
          vulnerabilityState: RESOLVED
          firstAffectedTimestamp: 6
          resolvedTimestamp: 5
          muteState:
            lastUpdatedTimestamp: 1
            reason: AFFECTED
            comment: comment
            muted: true
            user: user
          name: name
          vulnerableComponents:
          - fileName: fileName
            displayName: displayName
            id: id
            numberOfAffectedEntities: 9
            shortName: shortName
            affectedEntities:
            - affectedEntities
            - affectedEntities
          - fileName: fileName
            displayName: displayName
            id: id
            numberOfAffectedEntities: 9
            shortName: shortName
            affectedEntities:
            - affectedEntities
            - affectedEntities
          remediationProgress:
            unaffectedEntities:
            - unaffectedEntities
            - unaffectedEntities
            affectedEntities:
            - affectedEntities
            - affectedEntities
          id: id
          entityIds:
          - entityIds
          - entityIds
      properties:
        remediationItems:
          description: A list of remediation items.
          items:
            $ref: '#/components/schemas/RemediationItem'
          readOnly: true
          type: array
      type: object
    RemediationItemMuteState:
      description: The mute state of a remediation item of a security problem.
      example:
        lastUpdatedTimestamp: 1
        reason: AFFECTED
        comment: comment
        muted: true
        user: user
      properties:
        comment:
          description: A short comment about the most recent mute state change.
          readOnly: true
          type: string
        lastUpdatedTimestamp:
          description: The timestamp (UTC milliseconds) of the last update of the
            mute state.
          format: int64
          readOnly: true
          type: integer
        muted:
          description: The remediation is (`true`) or is not (`false`) muted.
          readOnly: true
          type: boolean
        reason:
          description: The reason for the most recent mute state change.
          enum:
          - AFFECTED
          - CONFIGURATION_NOT_AFFECTED
          - FALSE_POSITIVE
          - IGNORE
          - INITIAL_STATE
          - OTHER
          - VULNERABLE_CODE_NOT_IN_USE
          readOnly: true
          type: string
        user:
          description: The user who last changed the mute state.
          readOnly: true
          type: string
      type: object
    RemediationItemMuteStateChange:
      description: An updated configuration of the remediation item's mute state.
      example:
        reason: IGNORE
        comment: comment
        muted: true
      properties:
        comment:
          description: A comment about the mute state change reason.
          type: string
          writeOnly: true
        muted:
          description: The desired mute state of the remediation item.
          type: boolean
          writeOnly: true
        reason:
          description: The reason for the mute state change.
          enum:
          - AFFECTED
          - CONFIGURATION_NOT_AFFECTED
          - FALSE_POSITIVE
          - IGNORE
          - INITIAL_STATE
          - OTHER
          - VULNERABLE_CODE_NOT_IN_USE
          example: IGNORE
          type: string
          writeOnly: true
      required:
      - comment
      - muted
      - reason
      type: object
    RemediationItemMutingSummary:
      description: Summary of (un-)muting a remediation item.
      example:
        reason: ALREADY_MUTED
        muteStateChangeTriggered: true
        remediationItemId: remediationItemId
      properties:
        muteStateChangeTriggered:
          description: Whether a mute state change for the given remediation item
            was triggered by this request.
          readOnly: true
          type: boolean
        reason:
          description: "Contains a reason, in case the requested operation was not\
            \ executed."
          enum:
          - ALREADY_MUTED
          - ALREADY_UNMUTED
          - REMEDIATION_ITEM_NOT_AFFECTED_BY_GIVEN_SECURITY_PROBLEM
          readOnly: true
          type: string
        remediationItemId:
          description: The id of the remediation item that will be (un-)muted.
          readOnly: true
          type: string
      required:
      - muteStateChangeTriggered
      - remediationItemId
      type: object
    RemediationItemsBulkMute:
      description: Information on muting several remediation items.
      example:
        remediationItemIds:
        - remediationItemIds
        - remediationItemIds
        reason: CONFIGURATION_NOT_AFFECTED
        comment: comment
      properties:
        comment:
          description: A comment about the muting reason.
          maxLength: 250
          minLength: 0
          type: string
        reason:
          description: The reason for muting the remediation items.
          enum:
          - CONFIGURATION_NOT_AFFECTED
          - FALSE_POSITIVE
          - IGNORE
          - OTHER
          - VULNERABLE_CODE_NOT_IN_USE
          type: string
        remediationItemIds:
          description: The ids of the remediation items to be muted.
          items:
            type: string
          type: array
      required:
      - reason
      - remediationItemIds
      type: object
    RemediationItemsBulkMuteResponse:
      description: Response of muting several remediation items.
      example:
        summary:
        - reason: ALREADY_MUTED
          muteStateChangeTriggered: true
          remediationItemId: remediationItemId
        - reason: ALREADY_MUTED
          muteStateChangeTriggered: true
          remediationItemId: remediationItemId
      properties:
        summary:
          description: The summary of which remediation items were muted and which
            already were muted previously.
          items:
            $ref: '#/components/schemas/RemediationItemMutingSummary'
          type: array
      required:
      - summary
      type: object
    RemediationItemsBulkUnmute:
      description: Information on un-muting several remediation items.
      example:
        remediationItemIds:
        - remediationItemIds
        - remediationItemIds
        reason: AFFECTED
        comment: comment
      properties:
        comment:
          description: A comment about the un-muting reason.
          maxLength: 250
          minLength: 0
          type: string
        reason:
          description: The reason for un-muting the remediation items.
          enum:
          - AFFECTED
          type: string
        remediationItemIds:
          description: The ids of the remediation items to be un-muted.
          items:
            type: string
          type: array
      required:
      - reason
      - remediationItemIds
      type: object
    RemediationItemsBulkUnmuteResponse:
      description: Response of un-muting several remediation items.
      example:
        summary:
        - reason: ALREADY_MUTED
          muteStateChangeTriggered: true
          remediationItemId: remediationItemId
        - reason: ALREADY_MUTED
          muteStateChangeTriggered: true
          remediationItemId: remediationItemId
      properties:
        summary:
          description: The summary of which remediation items were un-muted and which
            already were un-muted previously.
          items:
            $ref: '#/components/schemas/RemediationItemMutingSummary'
          type: array
      required:
      - summary
      type: object
    RemediationProgress:
      description: The progress of this remediation item. It contains affected and
        unaffected entities.
      example:
        unaffectedEntities:
        - unaffectedEntities
        - unaffectedEntities
        affectedEntities:
        - affectedEntities
        - affectedEntities
      properties:
        affectedEntities:
          description: A list of related entities that are affected by the security
            problem.
          items:
            description: A list of related entities that are affected by the security
              problem.
            readOnly: true
            type: string
          readOnly: true
          type: array
        unaffectedEntities:
          description: A list of related entities that are affected by the security
            problem.
          items:
            description: A list of related entities that are affected by the security
              problem.
            readOnly: true
            type: string
          readOnly: true
          type: array
      type: object
    RemediationProgressEntity:
      description: An affected or unaffected entity of a remediation for a security
        problem.
      example:
        assessment:
          vulnerableFunctionsNotAvailable:
          - functionName: functionName
            filePath: filePath
            className: className
          - functionName: functionName
            filePath: filePath
            className: className
          vulnerableFunctionUsage: IN_USE
          vulnerableFunctionsNotInUse:
          - functionName: functionName
            filePath: filePath
            className: className
          - functionName: functionName
            filePath: filePath
            className: className
          vulnerableFunctionsInUse:
          - functionName: functionName
            filePath: filePath
            className: className
          - functionName: functionName
            filePath: filePath
            className: className
        firstAffectedTimestamp: 0
        name: name
        vulnerableComponents:
        - fileName: fileName
          displayName: displayName
          id: id
          shortName: shortName
        - fileName: fileName
          displayName: displayName
          id: id
          shortName: shortName
        id: id
        state: AFFECTED
      properties:
        assessment:
          $ref: '#/components/schemas/RemediationProgressEntityAssessment'
        firstAffectedTimestamp:
          description: The timestamp when the remediation progress entity has first
            been related to the vulnerability.
          format: int64
          readOnly: true
          type: integer
        id:
          description: The ID of the remediation progress entity.
          readOnly: true
          type: string
        name:
          description: The name of the remediation progress entity.
          readOnly: true
          type: string
        state:
          description: The current state of the remediation progress entity.
          enum:
          - AFFECTED
          - UNAFFECTED
          readOnly: true
          type: string
        vulnerableComponents:
          description: "A list of vulnerable components of the remediation item. \n\
            \nA vulnerable component is what causes the security problem."
          items:
            $ref: '#/components/schemas/RemediationProgressVulnerableComponent'
          readOnly: true
          type: array
      type: object
    RemediationProgressEntityAssessment:
      description: Assessment of the remediation progress entity.
      example:
        vulnerableFunctionsNotAvailable:
        - functionName: functionName
          filePath: filePath
          className: className
        - functionName: functionName
          filePath: filePath
          className: className
        vulnerableFunctionUsage: IN_USE
        vulnerableFunctionsNotInUse:
        - functionName: functionName
          filePath: filePath
          className: className
        - functionName: functionName
          filePath: filePath
          className: className
        vulnerableFunctionsInUse:
        - functionName: functionName
          filePath: filePath
          className: className
        - functionName: functionName
          filePath: filePath
          className: className
      properties:
        vulnerableFunctionUsage:
          description: The usage of vulnerable functions
          enum:
          - IN_USE
          - NOT_AVAILABLE
          - NOT_IN_USE
          readOnly: true
          type: string
        vulnerableFunctionsInUse:
          description: A list of vulnerable functions that are in use.
          items:
            $ref: '#/components/schemas/VulnerableFunction'
          readOnly: true
          type: array
          uniqueItems: true
        vulnerableFunctionsNotAvailable:
          description: A list of vulnerable functions that are not available.
          items:
            $ref: '#/components/schemas/VulnerableFunction'
          readOnly: true
          type: array
          uniqueItems: true
        vulnerableFunctionsNotInUse:
          description: A list of vulnerable functions that are not in use.
          items:
            $ref: '#/components/schemas/VulnerableFunction'
          readOnly: true
          type: array
          uniqueItems: true
      readOnly: true
      type: object
    RemediationProgressEntityList:
      description: A list of remediation progress entities.
      example:
        remediationProgressEntities:
        - assessment:
            vulnerableFunctionsNotAvailable:
            - functionName: functionName
              filePath: filePath
              className: className
            - functionName: functionName
              filePath: filePath
              className: className
            vulnerableFunctionUsage: IN_USE
            vulnerableFunctionsNotInUse:
            - functionName: functionName
              filePath: filePath
              className: className
            - functionName: functionName
              filePath: filePath
              className: className
            vulnerableFunctionsInUse:
            - functionName: functionName
              filePath: filePath
              className: className
            - functionName: functionName
              filePath: filePath
              className: className
          firstAffectedTimestamp: 0
          name: name
          vulnerableComponents:
          - fileName: fileName
            displayName: displayName
            id: id
            shortName: shortName
          - fileName: fileName
            displayName: displayName
            id: id
            shortName: shortName
          id: id
          state: AFFECTED
        - assessment:
            vulnerableFunctionsNotAvailable:
            - functionName: functionName
              filePath: filePath
              className: className
            - functionName: functionName
              filePath: filePath
              className: className
            vulnerableFunctionUsage: IN_USE
            vulnerableFunctionsNotInUse:
            - functionName: functionName
              filePath: filePath
              className: className
            - functionName: functionName
              filePath: filePath
              className: className
            vulnerableFunctionsInUse:
            - functionName: functionName
              filePath: filePath
              className: className
            - functionName: functionName
              filePath: filePath
              className: className
          firstAffectedTimestamp: 0
          name: name
          vulnerableComponents:
          - fileName: fileName
            displayName: displayName
            id: id
            shortName: shortName
          - fileName: fileName
            displayName: displayName
            id: id
            shortName: shortName
          id: id
          state: AFFECTED
      properties:
        remediationProgressEntities:
          description: A list of remediation progress entities.
          items:
            $ref: '#/components/schemas/RemediationProgressEntity'
          readOnly: true
          type: array
      type: object
    RemediationProgressVulnerableComponent:
      description: A vulnerable component with details for a remediation progress
        entity (PGI).
      example:
        fileName: fileName
        displayName: displayName
        id: id
        shortName: shortName
      properties:
        displayName:
          description: The display name of the vulnerable component.
          readOnly: true
          type: string
        fileName:
          description: The file name of the vulnerable component.
          readOnly: true
          type: string
        id:
          description: The Dynatrace entity ID of the vulnerable component.
          readOnly: true
          type: string
        shortName:
          description: "The short, component-only name of the vulnerable component."
          readOnly: true
          type: string
      type: object
    RemoteConfigurationManagementEntityValidationError:
      description: Entity validation error for remote configuration management.
      properties:
        entity:
          description: The ID of the entity for which validation failed.
          example: entityId
          type: string
        reasons:
          description: The reason of entity validation failure.
          example:
          - RUNNING_IN_CONTAINER
          items:
            enum:
            - CLOUD_NATIVE_NOT_SUPPORTED
            - NOT_ALLOWED_WITH_CLUSTER_ACTIVE_GATE
            - NOT_CONNECTED
            - RUNNING_IN_CONTAINER
            - STANDALONE_NOT_SUPPORTED
            - VERSION_NOT_SUPPORTED
            type: string
          type: array
      type: object
    RemoteConfigurationManagementJob:
      description: Remote configuration management job.
      example:
        processedEntitiesCount: 1
        timeoutTime: 2020-11-05T08:15:30.144Z
        operations:
        - attribute: networkZone
          operation: set
          value: exampleNetworkZoneName
        - attribute: networkZone
          operation: set
          value: exampleNetworkZoneName
        totalEntitiesCount: 1
        entityType: ACTIVE_GATE or ONE_AGENT
        startTime: 2020-11-05T08:15:30.144Z
        endTime: 2020-11-05T08:15:30.144Z
        id: "7974003406714390819"
      properties:
        endTime:
          description: "Date (in ISO 8601 format: yyyy-MM-dd'T'HH:mm:ss.SSS'Z') when\
            \ the remote configuration management job was finished. This field is\
            \ present only for finished jobs."
          example: 2020-11-05T08:15:30.144Z
          type: string
        entityType:
          description: Type of entities modified by remote configuration management.
          enum:
          - ACTIVE_GATE
          - ONE_AGENT
          example: ACTIVE_GATE or ONE_AGENT
          type: string
        id:
          description: The ID of the remote configuration management job.
          example: "7974003406714390819"
          type: string
        operations:
          description: A list of executed remote configuration management jobs.
          items:
            $ref: '#/components/schemas/RemoteConfigurationManagementOperation'
          type: array
        processedEntitiesCount:
          description: Number of entities that were already processed at the time
            the response was created.
          example: 1
          format: int32
          type: integer
        startTime:
          description: "Date (in ISO 8601 format: yyyy-MM-dd'T'HH:mm:ss.SSS'Z') when\
            \ the remote configuration management job was started."
          example: 2020-11-05T08:15:30.144Z
          type: string
        timeoutTime:
          description: "Date (in ISO 8601 format: yyyy-MM-dd'T'HH:mm:ss.SSS'Z') when\
            \ the running remote configuration management job will time-out. This\
            \ field is present only for running jobs."
          example: 2020-11-05T08:15:30.144Z
          type: string
        totalEntitiesCount:
          description: Total number of entities to process.
          example: 1
          format: int32
          type: integer
      type: object
    RemoteConfigurationManagementJobList:
      description: A list of remote configuration management jobs.
      example:
        jobs:
        - entityType: ACTIVE_GATE or ONE_AGENT
          startTime: 2020-11-05T08:15:30.144Z
          endTime: 2020-11-05T08:15:30.144Z
          id: "7974003406714390819"
        - entityType: ACTIVE_GATE or ONE_AGENT
          startTime: 2020-11-05T08:15:30.144Z
          endTime: 2020-11-05T08:15:30.144Z
          id: "7974003406714390819"
      properties:
        jobs:
          description: A list of remote configuration management jobs.
          items:
            $ref: '#/components/schemas/RemoteConfigurationManagementJobSummary'
          type: array
      type: object
    RemoteConfigurationManagementJobPreview:
      description: A preview of remote configuration management job.
      example:
        alreadyConfiguredEntitiesCount: 1
        targetEntitiesCount: 2
        attribute: networkZone
        operation: set
        value: exampleNetworkZoneName
      properties:
        alreadyConfiguredEntitiesCount:
          description: The number of entities that are currently configured as defined
            by remote configuration management operation.
          example: 1
          format: int32
          type: integer
        attribute:
          description: The attribute which is affected by the operation.
          enum:
          - group
          - hostGroup
          - hostProperty
          - hostTag
          - networkZone
          example: networkZone
          type: string
        operation:
          description: The operation performed on given attribute.
          enum:
          - clear
          - set
          example: set
          type: string
        targetEntitiesCount:
          description: The number of entities that will be configured as defined by
            remote configuration management after it is completed.
          example: 2
          format: int32
          type: integer
        value:
          description: The value which should be assigned to given attribute.
          example: exampleNetworkZoneName
          type: string
      type: object
    RemoteConfigurationManagementJobSummary:
      description: Remote configuration management job with basic data.
      example:
        entityType: ACTIVE_GATE or ONE_AGENT
        startTime: 2020-11-05T08:15:30.144Z
        endTime: 2020-11-05T08:15:30.144Z
        id: "7974003406714390819"
      properties:
        endTime:
          description: "Date (in ISO 8601 format: yyyy-MM-dd'T'HH:mm:ss.SSS'Z') when\
            \ the remote configuration management job was finished. This field is\
            \ present only for finished jobs."
          example: 2020-11-05T08:15:30.144Z
          type: string
        entityType:
          description: Type of entities modified by remote configuration management.
          enum:
          - ACTIVE_GATE
          - ONE_AGENT
          example: ACTIVE_GATE or ONE_AGENT
          type: string
        id:
          description: The ID of the remote configuration management job.
          example: "7974003406714390819"
          type: string
        startTime:
          description: "Date (in ISO 8601 format: yyyy-MM-dd'T'HH:mm:ss.SSS'Z') when\
            \ the remote configuration management job was started."
          example: 2020-11-05T08:15:30.144Z
          type: string
      type: object
    RemoteConfigurationManagementOperation:
      description: Definition of a single remote configuration management operation.
      example:
        attribute: networkZone
        operation: set
        value: exampleNetworkZoneName
      properties:
        attribute:
          description: The attribute which is affected by the operation.
          enum:
          - group
          - hostGroup
          - hostProperty
          - hostTag
          - networkZone
          example: networkZone
          type: string
        operation:
          description: The operation performed on given attribute.
          enum:
          - clear
          - set
          example: set
          type: string
        value:
          description: The value which should be assigned to given attribute.
          example: exampleNetworkZoneName
          type: string
      required:
      - attribute
      - operation
      type: object
    RemoteConfigurationManagementOperationActiveGateRequest:
      description: Remote configuration management operation creation request.
      example:
        operations:
        - attribute: networkZone
          operation: set
          value: exampleNetworkZoneName
        - attribute: networkZone
          operation: set
          value: exampleNetworkZoneName
        entities:
        - 0x2b7c0b02
        - 0x4928065d
      properties:
        entities:
          description: A list of entities IDs for which remote configuration management
            is to be executed.
          example:
          - 0x2b7c0b02
          - 0x4928065d
          items:
            type: string
          type: array
        operations:
          description: A list of remote configuration management operations to be
            executed.
          items:
            $ref: '#/components/schemas/RemoteConfigurationManagementOperation'
          type: array
      required:
      - entities
      - operations
      type: object
    RemoteConfigurationManagementOperationOneAgentRequest:
      description: Remote configuration management operation creation request.
      example:
        operations:
        - attribute: networkZone
          operation: set
          value: exampleNetworkZoneName
        - attribute: networkZone
          operation: set
          value: exampleNetworkZoneName
        entities:
        - HOST-D454A967666E7970
        - HOST-811760CFF2A5E872
      properties:
        entities:
          description: A list of entities IDs for which remote configuration management
            is to be executed.
          example:
          - HOST-D454A967666E7970
          - HOST-811760CFF2A5E872
          items:
            type: string
          type: array
        operations:
          description: A list of remote configuration management operations to be
            executed.
          items:
            $ref: '#/components/schemas/RemoteConfigurationManagementOperation'
          type: array
      required:
      - entities
      - operations
      type: object
    RemoteConfigurationManagementOperationValidationError:
      description: Validation error of remote configuration management operation definition.
      properties:
        attribute:
          description: The attribute which is affected by the operation.
          enum:
          - group
          - hostGroup
          - hostProperty
          - hostTag
          - networkZone
          example: networkZone
          type: string
        operation:
          description: The operation performed on given attribute.
          enum:
          - clear
          - set
          example: set
          type: string
        reason:
          description: The reason of validation failure.
          example: Value must not start with a period
          type: string
        value:
          description: The value which should be assigned to given attribute.
          example: .exampleInvalidNetworkZoneName
          type: string
      type: object
    RemoteConfigurationManagementPreviewList:
      description: A list of remote configuration management jobs previews.
      example:
        previews:
        - alreadyConfiguredEntitiesCount: 1
          targetEntitiesCount: 2
          attribute: networkZone
          operation: set
          value: exampleNetworkZoneName
        - alreadyConfiguredEntitiesCount: 1
          targetEntitiesCount: 2
          attribute: networkZone
          operation: set
          value: exampleNetworkZoneName
      properties:
        previews:
          description: A list of remote configuration management jobs previews.
          items:
            $ref: '#/components/schemas/RemoteConfigurationManagementJobPreview'
          type: array
      type: object
    RemoteConfigurationManagementValidationResult:
      description: The result of remote configuration management validation.
      properties:
        invalidEntities:
          description: A list of validation errors for entities.
          items:
            $ref: '#/components/schemas/RemoteConfigurationManagementEntityValidationError'
          type: array
        invalidOperations:
          description: A list of validation errors for operations.
          items:
            $ref: '#/components/schemas/RemoteConfigurationManagementOperationValidationError'
          type: array
      type: object
    RequestInformation:
      description: Describes the complete request information of an attack.
      example:
        path: path
        protocolDetails:
          http:
            headers:
              truncationInfo:
                truncated: true
              values:
              - name: name
                value: value
              - name: name
                value: value
            requestMethod: requestMethod
            parameters:
              truncationInfo:
                truncated: true
              values:
              - name: name
                value: value
              - name: name
                value: value
        host: host
        url: url
      properties:
        host:
          description: The target host of the request.
          readOnly: true
          type: string
        path:
          description: The request path.
          readOnly: true
          type: string
        protocolDetails:
          $ref: '#/components/schemas/ProtocolDetails'
        url:
          description: The requested URL.
          readOnly: true
          type: string
      readOnly: true
      type: object
    RiskAssessment:
      description: Risk assessment of a security problem.
      example:
        publicExploit: AVAILABLE
        baseRiskLevel: CRITICAL
        riskLevel: CRITICAL
        exposure: NOT_AVAILABLE
        riskVector: riskVector
        dataAssets: NOT_AVAILABLE
        baseRiskScore: 1.1730742
        vulnerableFunctionUsage: IN_USE
        riskScore: 4.9652185
        assessmentAccuracy: FULL
        baseRiskVector: baseRiskVector
      properties:
        assessmentAccuracy:
          description: The level of available information on which this assessment
            has been done.
          enum:
          - FULL
          - NOT_AVAILABLE
          - REDUCED
          readOnly: true
          type: string
        baseRiskLevel:
          description: The risk level from the CVSS score.
          enum:
          - CRITICAL
          - HIGH
          - LOW
          - MEDIUM
          - NONE
          readOnly: true
          type: string
        baseRiskScore:
          description: The risk score (1-10) from the CVSS score.
          format: float
          readOnly: true
          type: number
        baseRiskVector:
          description: The original attack vector of the CVSS assessment.
          readOnly: true
          type: string
        dataAssets:
          description: The reachability of related data assets by affected entities.
          enum:
          - NOT_AVAILABLE
          - NOT_DETECTED
          - REACHABLE
          readOnly: true
          type: string
        exposure:
          description: The level of exposure of affected entities.
          enum:
          - NOT_AVAILABLE
          - NOT_DETECTED
          - PUBLIC_NETWORK
          readOnly: true
          type: string
        publicExploit:
          description: The availability status of public exploits.
          enum:
          - AVAILABLE
          - NOT_AVAILABLE
          readOnly: true
          type: string
        riskLevel:
          description: "The Davis risk level. \n\n It is calculated by Dynatrace on\
            \ the basis of CVSS score."
          enum:
          - CRITICAL
          - HIGH
          - LOW
          - MEDIUM
          - NONE
          readOnly: true
          type: string
        riskScore:
          description: "The Davis risk score (1-10). \n\n It is calculated by Dynatrace\
            \ on the basis of CVSS score."
          format: float
          readOnly: true
          type: number
        riskVector:
          description: The attack vector calculated by Dynatrace based on the CVSS
            attack vector.
          readOnly: true
          type: string
        vulnerableFunctionUsage:
          description: The state of vulnerable code execution.
          enum:
          - IN_USE
          - NOT_AVAILABLE
          - NOT_IN_USE
          readOnly: true
          type: string
      readOnly: true
      type: object
    RiskAssessmentSnapshot:
      description: A snapshot of the risk assessment of a security problem.
      example:
        publicExploit: AVAILABLE
        riskLevel: CRITICAL
        exposure: NOT_AVAILABLE
        numberOfReachableDataAssets: 6
        vulnerableFunctionUsage: IN_USE
        numberOfAffectedEntities: 0
        riskScore: 1.4658129
      properties:
        exposure:
          description: The level of exposure of affected entities.
          enum:
          - NOT_AVAILABLE
          - NOT_DETECTED
          - PUBLIC_NETWORK
          readOnly: true
          type: string
        numberOfAffectedEntities:
          description: The number of currently affected entities.
          format: int32
          readOnly: true
          type: integer
        numberOfReachableDataAssets:
          description: The number of data assets that are currently reachable by affected
            entities.
          format: int32
          readOnly: true
          type: integer
        publicExploit:
          description: The availability status of public exploits.
          enum:
          - AVAILABLE
          - NOT_AVAILABLE
          readOnly: true
          type: string
        riskLevel:
          description: "The Davis risk level. \n\n It is calculated by Dynatrace on\
            \ the basis of CVSS score."
          enum:
          - CRITICAL
          - HIGH
          - LOW
          - MEDIUM
          - NONE
          readOnly: true
          type: string
        riskScore:
          description: "The Davis risk score (1-10). \n\n It is calculated by Dynatrace\
            \ on the basis of CVSS score."
          format: float
          readOnly: true
          type: number
        vulnerableFunctionUsage:
          description: The state of vulnerable code execution.
          enum:
          - IN_USE
          - NOT_AVAILABLE
          - NOT_IN_USE
          readOnly: true
          type: string
      readOnly: true
      type: object
    Rollup:
      description: A way of viewing a series as a single value for the purpose of
        sorting or series-based filters.
      properties:
        parameter:
          type: number
        type:
          enum:
          - AUTO
          - AVG
          - COUNT
          - MAX
          - MEDIAN
          - MIN
          - PERCENTILE
          - SUM
          - VALUE
          type: string
      type: object
    SLO:
      description: Parameters of a service-level objective (SLO).
      example:
        errorBudgetMetricKey: func:slo.errorBudget.payment_service_availability
        metricKey: func:slo.payment_service_availability
        problemFilters: "[type(\"SERVICE\")]"
        denominatorValue: 90
        metricExpression: (100)*(builtin:service.errors.server.successCount:splitBy())/(builtin:service.requestCount.server:splitBy())
        description: Rate of successful payments per week
        metricNumerator: builtin:service.errors.server.successCount
        error: NONE
        enabled: true
        evaluationType: AGGREGATE
        relatedTotalProblems: 1
        timeframe: -1d
        burnRateMetricKey: func:slo.errorBudgetBurnRate.payment_service_availability
        numeratorValue: 80
        warning: 97.5
        id: 123e4567-e89b-42d3-a456-556642440000
        errorBudgetBurnRate:
          burnRateType: SLOW
          burnRateValue: 1.25
          sloValue: 95.0
          estimatedTimeToConsumeErrorBudget: 24.0
          fastBurnThreshold: 1.5
          burnRateVisualizationEnabled: true
        normalizedErrorBudgetMetricKey: func:slo.normalizedErrorBudget.payment_service_availability
        metricDenominator: builtin:service.requestCount.server
        metricRate: builtin:service.successes.server.rate
        target: 95.0
        filter: type("SERVICE")
        useRateMetric: true
        relatedOpenProblems: 6
        name: Payment service availability
        evaluatedPercentage: 96.25
        errorBudget: 1.25
        status: WARNING
      properties:
        burnRateMetricKey:
          description: The key for the SLO's error budget burn rate func metric.
          example: func:slo.errorBudgetBurnRate.payment_service_availability
          type: string
        denominatorValue:
          deprecated: true
          description: The denominator value used to evaluate the SLO when **useRateMetric**
            is set to `false`.
          example: 90
          format: double
          type: number
        description:
          description: A short description of the SLO.
          example: Rate of successful payments per week
          type: string
        enabled:
          description: The SLO is enabled (`true`) or disabled (`false`).
          example: true
          type: boolean
        error:
          description: "The error of the SLO calculation. \n\nIf the value differs\
            \ from `NONE`, there is something wrong with the SLO calculation."
          example: NONE
          type: string
        errorBudget:
          description: "The error budget of the calculated SLO. \n\nThe error budget\
            \ is the difference between the calculated and target values. A positive\
            \ number means all is good; a negative number means trouble.\n\nHas the\
            \ value of the evaluated error budget or the value of `-1`: \n\n* If there\
            \ is an error with the SLO calculation; in that case check the value of\
            \ the **error** property. \n* If the evaluate parameter has not been set\
            \ to `true`; in that case the **error** property will contain no error."
          example: 1.25
          format: double
          type: number
        errorBudgetBurnRate:
          $ref: '#/components/schemas/SloBurnRate'
        errorBudgetMetricKey:
          description: The key for the SLO's error budget func metric.
          example: func:slo.errorBudget.payment_service_availability
          type: string
        evaluatedPercentage:
          description: "The calculated status value of the SLO. Has the value of the\
            \ evaluated SLO status or the value of `-1`: \n\n* If there is an error\
            \ with the SLO calculation; in that case check the value of the **error**\
            \ property. \n* If the evaluate parameter has not been set to `true`;\
            \ in that case the **error** property will contain no error."
          example: 96.25
          format: double
          type: number
        evaluationType:
          description: The evaluation type of the SLO.
          enum:
          - AGGREGATE
          example: AGGREGATE
          type: string
        filter:
          description: "The entity filter for the SLO evaluation. The total length\
            \ of the entitySelector string in SLOs is limited to 1,000 characters.\
            \ Use the [syntax of entity selector](https://dt-url.net/entityselector)."
          example: type("SERVICE")
          type: string
        id:
          description: The ID of the SLO
          example: 123e4567-e89b-42d3-a456-556642440000
          format: uuid
          type: string
        metricDenominator:
          deprecated: true
          description: "The total count metric (the denominator in rate calculation).\
            \ \n\nRequired when the **useRateMetric** is set to `false`."
          example: builtin:service.requestCount.server
          type: string
        metricExpression:
          description: The percentage-based metric expression for the calculation
            of the SLO.
          example: (100)*(builtin:service.errors.server.successCount:splitBy())/(builtin:service.requestCount.server:splitBy())
          type: string
        metricKey:
          description: The key for the SLO's status func metric.
          example: func:slo.payment_service_availability
          type: string
        metricNumerator:
          deprecated: true
          description: "The metric for the count of successes (the numerator in rate\
            \ calculation). \n\nRequired when the **useRateMetric** is set to `false`."
          example: builtin:service.errors.server.successCount
          type: string
        metricRate:
          deprecated: true
          description: "The percentage-based metric for the calculation of the SLO.\
            \ \n\nRequired when the **useRateMetric** is set to `true`."
          example: builtin:service.successes.server.rate
          type: string
        name:
          description: The name of the SLO.
          example: Payment service availability
          type: string
        normalizedErrorBudgetMetricKey:
          description: The key for the SLO's normalized error budget func metric.
          example: func:slo.normalizedErrorBudget.payment_service_availability
          type: string
        numeratorValue:
          deprecated: true
          description: The numerator value used to evaluate the SLO when **useRateMetric**
            is set to `false`.
          example: 80
          format: double
          type: number
        problemFilters:
          deprecated: true
          description: The entity filter for fetching the number of problems related
            to an SLO. Auto-generated in case no filter has been added to the SLO.
          example: "[type(\"SERVICE\")]"
          items:
            deprecated: true
            description: The entity filter for fetching the number of problems related
              to an SLO. Auto-generated in case no filter has been added to the SLO.
            example: "[type(\"SERVICE\")]"
            type: string
          type: array
          uniqueItems: true
        relatedOpenProblems:
          description: "Number of open problems related to the SLO. \n\nHas the value\
            \ of `-1` if there's an error with fetching SLO related problems."
          format: int32
          type: integer
        relatedTotalProblems:
          description: "Total number of problems related to the SLO. \n\nHas the value\
            \ of `-1` if there's an error with fetching SLO related problems."
          format: int32
          type: integer
        status:
          description: The status of the calculated SLO.
          enum:
          - FAILURE
          - SUCCESS
          - WARNING
          example: WARNING
          type: string
        target:
          description: The target value of the SLO.
          example: 95.0
          format: double
          type: number
        timeframe:
          description: The timeframe for the SLO evaluation. Use the syntax of the
            global timeframe selector.
          example: -1d
          type: string
        useRateMetric:
          deprecated: true
          description: "The type of the metric to use for SLO calculation: \n\n* `true`:\
            \ An existing percentage-based metric. \n* `false`: A ratio of two metrics.\
            \ \n\nFor a list of available metrics, see [Built-in metric page](https://dt-url.net/be03kow)\
            \ or try the [GET metrics](https://dt-url.net/8e43kxf) API call."
          example: true
          type: boolean
        warning:
          description: "The warning value of the SLO. \n\n At warning state the SLO\
            \ is still fulfilled but is getting close to failure."
          example: 97.5
          format: double
          type: number
      required:
      - burnRateMetricKey
      - enabled
      - error
      - errorBudget
      - errorBudgetBurnRate
      - errorBudgetMetricKey
      - evaluatedPercentage
      - evaluationType
      - filter
      - id
      - metricExpression
      - metricKey
      - name
      - normalizedErrorBudgetMetricKey
      - status
      - target
      - timeframe
      - warning
      type: object
    SLOs:
      description: Contains SLOs and paging information.
      example:
        nextPageKey: AQAAABQBAAAABQ==
        slo:
        - errorBudgetMetricKey: func:slo.errorBudget.payment_service_availability
          metricKey: func:slo.payment_service_availability
          problemFilters: "[type(\"SERVICE\")]"
          denominatorValue: 90
          metricExpression: (100)*(builtin:service.errors.server.successCount:splitBy())/(builtin:service.requestCount.server:splitBy())
          description: Rate of successful payments per week
          metricNumerator: builtin:service.errors.server.successCount
          error: NONE
          enabled: true
          evaluationType: AGGREGATE
          relatedTotalProblems: 1
          timeframe: -1d
          burnRateMetricKey: func:slo.errorBudgetBurnRate.payment_service_availability
          numeratorValue: 80
          warning: 97.5
          id: 123e4567-e89b-42d3-a456-556642440000
          errorBudgetBurnRate:
            burnRateType: SLOW
            burnRateValue: 1.25
            sloValue: 95.0
            estimatedTimeToConsumeErrorBudget: 24.0
            fastBurnThreshold: 1.5
            burnRateVisualizationEnabled: true
          normalizedErrorBudgetMetricKey: func:slo.normalizedErrorBudget.payment_service_availability
          metricDenominator: builtin:service.requestCount.server
          metricRate: builtin:service.successes.server.rate
          target: 95.0
          filter: type("SERVICE")
          useRateMetric: true
          relatedOpenProblems: 6
          name: Payment service availability
          evaluatedPercentage: 96.25
          errorBudget: 1.25
          status: WARNING
        - errorBudgetMetricKey: func:slo.errorBudget.payment_service_availability
          metricKey: func:slo.payment_service_availability
          problemFilters: "[type(\"SERVICE\")]"
          denominatorValue: 90
          metricExpression: (100)*(builtin:service.errors.server.successCount:splitBy())/(builtin:service.requestCount.server:splitBy())
          description: Rate of successful payments per week
          metricNumerator: builtin:service.errors.server.successCount
          error: NONE
          enabled: true
          evaluationType: AGGREGATE
          relatedTotalProblems: 1
          timeframe: -1d
          burnRateMetricKey: func:slo.errorBudgetBurnRate.payment_service_availability
          numeratorValue: 80
          warning: 97.5
          id: 123e4567-e89b-42d3-a456-556642440000
          errorBudgetBurnRate:
            burnRateType: SLOW
            burnRateValue: 1.25
            sloValue: 95.0
            estimatedTimeToConsumeErrorBudget: 24.0
            fastBurnThreshold: 1.5
            burnRateVisualizationEnabled: true
          normalizedErrorBudgetMetricKey: func:slo.normalizedErrorBudget.payment_service_availability
          metricDenominator: builtin:service.requestCount.server
          metricRate: builtin:service.successes.server.rate
          target: 95.0
          filter: type("SERVICE")
          useRateMetric: true
          relatedOpenProblems: 6
          name: Payment service availability
          evaluatedPercentage: 96.25
          errorBudget: 1.25
          status: WARNING
        pageSize: 0
        totalCount: 5
      properties:
        nextPageKey:
          description: "The cursor for the next page of results. Has the value of\
            \ `null` on the last page. \n\nUse it in the **nextPageKey** query parameter\
            \ to obtain subsequent pages of the result."
          example: AQAAABQBAAAABQ==
          type: string
        pageSize:
          description: The number of entries per page.
          format: int32
          type: integer
        slo:
          description: The list of SLOs.
          items:
            $ref: '#/components/schemas/SLO'
          type: array
        totalCount:
          description: The total number of entries in the result.
          format: int64
          type: integer
      required:
      - slo
      - totalCount
      type: object
    SchemaConstraintRestDto:
      example:
        customValidatorId: my-min-max
        customMessage: customMessage
        type: CUSTOM_VALIDATOR_REF
        uniqueProperties:
        - my-prop-1
        - my-prop-2
      properties:
        customMessage:
          description: A custom message for invalid values.
          type: string
        customValidatorId:
          description: The ID of a custom validator.
          example: my-min-max
          type: string
        type:
          description: The type of the schema constraint.
          enum:
          - CUSTOM_VALIDATOR_REF
          - MULTI_SCOPE_CUSTOM_VALIDATOR_REF
          - MULTI_SCOPE_UNIQUE
          - UNIQUE
          - UNKNOWN
          type: string
        uniqueProperties:
          description: The list of properties for which the combination of values
            needs to be unique
          example:
          - my-prop-1
          - my-prop-2
          items:
            description: The list of properties for which the combination of values
              needs to be unique
            example: "[\"my-prop-1\",\"my-prop-2\"]"
            type: string
          type: array
      required:
      - type
      type: object
    SchemaDefinitionRestDto:
      example:
        ordered: true
        metadata:
          key: metadata
        tableColumns:
          key:
            pattern: pattern
        types:
          key:
            displayName: typeDisplayName
            documentation: typeDocumentation
            searchPattern: searchPatternOfType
            description: typeDescription
            versionInfo: Added new property
            type: object
            constraints:
            - customValidatorId: my-min-max
              customMessage: customMessage
              checkAllProperties: false
              minimumPropertyCount: 1
              type: CUSTOM_VALIDATOR_REF
              maximumPropertyCount: 2
              properties:
              - properties
              - properties
            - customValidatorId: my-min-max
              customMessage: customMessage
              checkAllProperties: false
              minimumPropertyCount: 1
              type: CUSTOM_VALIDATOR_REF
              maximumPropertyCount: 2
              properties:
              - properties
              - properties
            version: "0"
            properties:
              key:
                modificationPolicy: ALWAYS
                metadata:
                  key: metadata
                nullable: true
                displayName: propertyDisplayName
                minObjects: 1
                documentation: propertyDocumentation
                description: propertyDescription
                uiCustomization:
                  expandable:
                    expanded: true
                    displayName: displayName
                    sections:
                    - expanded: true
                      displayName: displayName
                      description: description
                      properties:
                      - properties
                      - properties
                    - expanded: true
                      displayName: displayName
                      description: description
                      properties:
                      - properties
                      - properties
                  tabs:
                    groups:
                    - displayName: displayName
                      description: description
                      properties:
                      - properties
                      - properties
                    - displayName: displayName
                      description: description
                      properties:
                      - properties
                      - properties
                  callback:
                    buttons:
                    - identifier: identifier
                      displayName: displayName
                      description: description
                      insert: null
                    - identifier: identifier
                      displayName: displayName
                      description: description
                      insert: null
                  table:
                    emptyState:
                      text: text
                    columns:
                    - builtinColumnRef: summary
                      propertyRef: apiColor
                      displayName: Color
                      columnRef: myCustomColumn
                      type: cell-color-picker
                      items:
                      - displayName: Active
                        icon: CRITICAL
                        value: ACTIVE
                      - displayName: Active
                        icon: CRITICAL
                        value: ACTIVE
                    - builtinColumnRef: summary
                      propertyRef: apiColor
                      displayName: Color
                      columnRef: myCustomColumn
                      type: cell-color-picker
                      items:
                      - displayName: Active
                        icon: CRITICAL
                        value: ACTIVE
                      - displayName: Active
                        icon: CRITICAL
                        value: ACTIVE
                forceSecretResubmission: true
                precondition:
                  preconditions:
                  - null
                  - null
                  expectedValue: expectedValue
                  pattern: example Regex
                  property: propertyToEvaluate
                  precondition: null
                  type: "NULL"
                  expectedValues: expectedValues
                referencedType: propertyReferencedType
                type: null
                constraints:
                - customValidatorId: my-min-max
                  minLength: 7
                  pattern: "^([a-z]|[0-9]|\\-|\\_|\\+|\\.)+\\@([a-z]|[0-9]|-){2,}\\\
                    .([a-z]|[0-9]|-){2,}(\\.[a-z]{2,})?$"
                  customMessage: customConstraintMessage
                  maximum: 200
                  type: UNKNOWN
                  minimum: 3
                  maxLength: 20
                  uniqueProperties:
                  - my-prop-1
                  - my-prop-2
                - customValidatorId: my-min-max
                  minLength: 7
                  pattern: "^([a-z]|[0-9]|\\-|\\_|\\+|\\.)+\\@([a-z]|[0-9]|-){2,}\\\
                    .([a-z]|[0-9]|-){2,}(\\.[a-z]{2,})?$"
                  customMessage: customConstraintMessage
                  maximum: 200
                  type: UNKNOWN
                  minimum: 3
                  maxLength: 20
                  uniqueProperties:
                  - my-prop-1
                  - my-prop-2
                default: propertyDefaultValue
                datasource:
                  filterProperties:
                  - filterProperties
                  - filterProperties
                  identifier: identifier
                  useApiSearch: true
                  fullContext: true
                  resetValue: ALWAYS
                  validate: true
                subType: propertySubType
                maxObjects: 0
                items:
                  metadata:
                    key: metadata
                  datasource:
                    filterProperties:
                    - filterProperties
                    - filterProperties
                    identifier: identifier
                    useApiSearch: true
                    fullContext: true
                    resetValue: ALWAYS
                    validate: true
                  displayName: itemDisplayName
                  documentation: propertyDocumentation
                  description: itemDescription
                  subType: itemSubType
                  uiCustomization:
                    expandable:
                      expanded: true
                      displayName: displayName
                      sections:
                      - expanded: true
                        displayName: displayName
                        description: description
                        properties:
                        - properties
                        - properties
                      - expanded: true
                        displayName: displayName
                        description: description
                        properties:
                        - properties
                        - properties
                    tabs:
                      groups:
                      - displayName: displayName
                        description: description
                        properties:
                        - properties
                        - properties
                      - displayName: displayName
                        description: description
                        properties:
                        - properties
                        - properties
                    callback:
                      buttons:
                      - identifier: identifier
                        displayName: displayName
                        description: description
                        insert: null
                      - identifier: identifier
                        displayName: displayName
                        description: description
                        insert: null
                    table:
                      emptyState:
                        text: text
                      columns:
                      - builtinColumnRef: summary
                        propertyRef: apiColor
                        displayName: Color
                        columnRef: myCustomColumn
                        type: cell-color-picker
                        items:
                        - displayName: Active
                          icon: CRITICAL
                          value: ACTIVE
                        - displayName: Active
                          icon: CRITICAL
                          value: ACTIVE
                      - builtinColumnRef: summary
                        propertyRef: apiColor
                        displayName: Color
                        columnRef: myCustomColumn
                        type: cell-color-picker
                        items:
                        - displayName: Active
                          icon: CRITICAL
                          value: ACTIVE
                        - displayName: Active
                          icon: CRITICAL
                          value: ACTIVE
                  referencedType: itemReferencedType
                  type: null
                  constraints:
                  - customValidatorId: my-min-max
                    minLength: 7
                    pattern: "^([a-z]|[0-9]|\\-|\\_|\\+|\\.)+\\@([a-z]|[0-9]|-){2,}\\\
                      .([a-z]|[0-9]|-){2,}(\\.[a-z]{2,})?$"
                    customMessage: customConstraintMessage
                    maximum: 200
                    type: UNKNOWN
                    minimum: 3
                    maxLength: 20
                    uniqueProperties:
                    - my-prop-1
                    - my-prop-2
                  - customValidatorId: my-min-max
                    minLength: 7
                    pattern: "^([a-z]|[0-9]|\\-|\\_|\\+|\\.)+\\@([a-z]|[0-9]|-){2,}\\\
                      .([a-z]|[0-9]|-){2,}(\\.[a-z]{2,})?$"
                    customMessage: customConstraintMessage
                    maximum: 200
                    type: UNKNOWN
                    minimum: 3
                    maxLength: 20
                    uniqueProperties:
                    - my-prop-1
                    - my-prop-2
            summaryPattern: summaryPatternOfType
        keyProperty: keyProperty
        displayName: Built-in container monitoring rules
        schemaGroups:
        - group:some.1
        - group:some.2
        documentation: documentation
        deletionConstraints:
        - customValidatorId: my-min-max
          customMessage: customMessage
        - customValidatorId: my-min-max
          customMessage: customMessage
        dynatrace: "1"
        description: Dynatrace disables monitoring of containers that do not run any
          applications
        uiCustomization:
          expandable:
            expanded: true
            displayName: displayName
            sections:
            - expanded: true
              displayName: displayName
              description: description
              properties:
              - properties
              - properties
            - expanded: true
              displayName: displayName
              description: description
              properties:
              - properties
              - properties
          tabs:
            groups:
            - displayName: displayName
              description: description
              properties:
              - properties
              - properties
            - displayName: displayName
              description: description
              properties:
              - properties
              - properties
          callback:
            buttons:
            - identifier: identifier
              displayName: displayName
              description: description
              insert: null
            - identifier: identifier
              displayName: displayName
              description: description
              insert: null
          table:
            emptyState:
              text: text
            columns:
            - builtinColumnRef: summary
              propertyRef: apiColor
              displayName: Color
              columnRef: myCustomColumn
              type: cell-color-picker
              items:
              - displayName: Active
                icon: CRITICAL
                value: ACTIVE
              - displayName: Active
                icon: CRITICAL
                value: ACTIVE
            - builtinColumnRef: summary
              propertyRef: apiColor
              displayName: Color
              columnRef: myCustomColumn
              type: cell-color-picker
              items:
              - displayName: Active
                icon: CRITICAL
                value: ACTIVE
              - displayName: Active
                icon: CRITICAL
                value: ACTIVE
        schemaConstraints:
        - customValidatorId: my-min-max
          customMessage: customMessage
          type: CUSTOM_VALIDATOR_REF
          uniqueProperties:
          - my-prop-1
          - my-prop-2
        - customValidatorId: my-min-max
          customMessage: customMessage
          type: CUSTOM_VALIDATOR_REF
          uniqueProperties:
          - my-prop-1
          - my-prop-2
        constraints:
        - customValidatorId: my-min-max
          customMessage: customMessage
          checkAllProperties: false
          minimumPropertyCount: 1
          type: CUSTOM_VALIDATOR_REF
          maximumPropertyCount: 2
          properties:
          - properties
          - properties
        - customValidatorId: my-min-max
          customMessage: customMessage
          checkAllProperties: false
          minimumPropertyCount: 1
          type: CUSTOM_VALIDATOR_REF
          maximumPropertyCount: 2
          properties:
          - properties
          - properties
        version: 1.4.2
        allowedScopes:
        - host
        - application
        enums:
          key:
            displayName: typeDisplayName
            documentation: typeDocumentation
            description: typeDescription
            enumClass: enumClass
            type: enum
            items:
            - displayName: exampleDisplayName
              icon: checkmark
              description: exampleDescription
              enumInstance: exampleJavaEnumValue
              value: exampleValue
            - displayName: exampleDisplayName
              icon: checkmark
              description: exampleDescription
              enumInstance: exampleJavaEnumValue
              value: exampleValue
        multiObject: true
        schemaId: builtin:container.built-in-monitoring-rule
        maxObjects: 10
        properties:
          key:
            modificationPolicy: ALWAYS
            metadata:
              key: metadata
            nullable: true
            displayName: propertyDisplayName
            minObjects: 1
            documentation: propertyDocumentation
            description: propertyDescription
            uiCustomization:
              expandable:
                expanded: true
                displayName: displayName
                sections:
                - expanded: true
                  displayName: displayName
                  description: description
                  properties:
                  - properties
                  - properties
                - expanded: true
                  displayName: displayName
                  description: description
                  properties:
                  - properties
                  - properties
              tabs:
                groups:
                - displayName: displayName
                  description: description
                  properties:
                  - properties
                  - properties
                - displayName: displayName
                  description: description
                  properties:
                  - properties
                  - properties
              callback:
                buttons:
                - identifier: identifier
                  displayName: displayName
                  description: description
                  insert: null
                - identifier: identifier
                  displayName: displayName
                  description: description
                  insert: null
              table:
                emptyState:
                  text: text
                columns:
                - builtinColumnRef: summary
                  propertyRef: apiColor
                  displayName: Color
                  columnRef: myCustomColumn
                  type: cell-color-picker
                  items:
                  - displayName: Active
                    icon: CRITICAL
                    value: ACTIVE
                  - displayName: Active
                    icon: CRITICAL
                    value: ACTIVE
                - builtinColumnRef: summary
                  propertyRef: apiColor
                  displayName: Color
                  columnRef: myCustomColumn
                  type: cell-color-picker
                  items:
                  - displayName: Active
                    icon: CRITICAL
                    value: ACTIVE
                  - displayName: Active
                    icon: CRITICAL
                    value: ACTIVE
            forceSecretResubmission: true
            precondition:
              preconditions:
              - null
              - null
              expectedValue: expectedValue
              pattern: example Regex
              property: propertyToEvaluate
              precondition: null
              type: "NULL"
              expectedValues: expectedValues
            referencedType: propertyReferencedType
            type: null
            constraints:
            - customValidatorId: my-min-max
              minLength: 7
              pattern: "^([a-z]|[0-9]|\\-|\\_|\\+|\\.)+\\@([a-z]|[0-9]|-){2,}\\.([a-z]|[0-9]|-){2,}(\\\
                .[a-z]{2,})?$"
              customMessage: customConstraintMessage
              maximum: 200
              type: UNKNOWN
              minimum: 3
              maxLength: 20
              uniqueProperties:
              - my-prop-1
              - my-prop-2
            - customValidatorId: my-min-max
              minLength: 7
              pattern: "^([a-z]|[0-9]|\\-|\\_|\\+|\\.)+\\@([a-z]|[0-9]|-){2,}\\.([a-z]|[0-9]|-){2,}(\\\
                .[a-z]{2,})?$"
              customMessage: customConstraintMessage
              maximum: 200
              type: UNKNOWN
              minimum: 3
              maxLength: 20
              uniqueProperties:
              - my-prop-1
              - my-prop-2
            default: propertyDefaultValue
            datasource:
              filterProperties:
              - filterProperties
              - filterProperties
              identifier: identifier
              useApiSearch: true
              fullContext: true
              resetValue: ALWAYS
              validate: true
            subType: propertySubType
            maxObjects: 0
            items:
              metadata:
                key: metadata
              datasource:
                filterProperties:
                - filterProperties
                - filterProperties
                identifier: identifier
                useApiSearch: true
                fullContext: true
                resetValue: ALWAYS
                validate: true
              displayName: itemDisplayName
              documentation: propertyDocumentation
              description: itemDescription
              subType: itemSubType
              uiCustomization:
                expandable:
                  expanded: true
                  displayName: displayName
                  sections:
                  - expanded: true
                    displayName: displayName
                    description: description
                    properties:
                    - properties
                    - properties
                  - expanded: true
                    displayName: displayName
                    description: description
                    properties:
                    - properties
                    - properties
                tabs:
                  groups:
                  - displayName: displayName
                    description: description
                    properties:
                    - properties
                    - properties
                  - displayName: displayName
                    description: description
                    properties:
                    - properties
                    - properties
                callback:
                  buttons:
                  - identifier: identifier
                    displayName: displayName
                    description: description
                    insert: null
                  - identifier: identifier
                    displayName: displayName
                    description: description
                    insert: null
                table:
                  emptyState:
                    text: text
                  columns:
                  - builtinColumnRef: summary
                    propertyRef: apiColor
                    displayName: Color
                    columnRef: myCustomColumn
                    type: cell-color-picker
                    items:
                    - displayName: Active
                      icon: CRITICAL
                      value: ACTIVE
                    - displayName: Active
                      icon: CRITICAL
                      value: ACTIVE
                  - builtinColumnRef: summary
                    propertyRef: apiColor
                    displayName: Color
                    columnRef: myCustomColumn
                    type: cell-color-picker
                    items:
                    - displayName: Active
                      icon: CRITICAL
                      value: ACTIVE
                    - displayName: Active
                      icon: CRITICAL
                      value: ACTIVE
              referencedType: itemReferencedType
              type: null
              constraints:
              - customValidatorId: my-min-max
                minLength: 7
                pattern: "^([a-z]|[0-9]|\\-|\\_|\\+|\\.)+\\@([a-z]|[0-9]|-){2,}\\\
                  .([a-z]|[0-9]|-){2,}(\\.[a-z]{2,})?$"
                customMessage: customConstraintMessage
                maximum: 200
                type: UNKNOWN
                minimum: 3
                maxLength: 20
                uniqueProperties:
                - my-prop-1
                - my-prop-2
              - customValidatorId: my-min-max
                minLength: 7
                pattern: "^([a-z]|[0-9]|\\-|\\_|\\+|\\.)+\\@([a-z]|[0-9]|-){2,}\\\
                  .([a-z]|[0-9]|-){2,}(\\.[a-z]{2,})?$"
                customMessage: customConstraintMessage
                maximum: 200
                type: UNKNOWN
                minimum: 3
                maxLength: 20
                uniqueProperties:
                - my-prop-1
                - my-prop-2
      properties:
        allowedScopes:
          description: A list of scopes where the schema can be used.
          example:
          - host
          - application
          items:
            type: string
          type: array
        constraints:
          description: A list of constrains limiting the values to be accepted by
            the schema.
          items:
            $ref: '#/components/schemas/ComplexConstraint'
          type: array
        deletionConstraints:
          description: Constraints limiting the values to be deleted.
          items:
            $ref: '#/components/schemas/DeletionConstraint'
          type: array
        description:
          description: A short description of the schema.
          example: Dynatrace disables monitoring of containers that do not run any
            applications
          type: string
        displayName:
          description: The display name of the schema.
          example: Built-in container monitoring rules
          type: string
        documentation:
          description: An extended description of the schema and/or links to documentation.
          type: string
        dynatrace:
          description: The version of the data format.
          example: "1"
          type: string
        enums:
          additionalProperties:
            $ref: '#/components/schemas/EnumType'
          description: A list of definitions of enum properties.
          type: object
        keyProperty:
          description: Name of the key property in this schema.
          example: keyProperty
          type: string
        maxObjects:
          description: "The maximum amount of objects per scope. \n\nOnly applicable\
            \ when **multiObject** is set to `true`."
          example: 10
          format: int32
          type: integer
        metadata:
          additionalProperties:
            description: Metadata of the setting.
            type: string
          description: Metadata of the setting.
          type: object
        multiObject:
          description: Multiple (`true`) objects per scope are permitted or a single
            (`false`) object per scope is permitted.
          type: boolean
        ordered:
          description: "If `true` the order of objects has semantic significance.\
            \ \n\nOnly applicable when **multiObject** is set to `true`."
          type: boolean
        properties:
          additionalProperties:
            $ref: '#/components/schemas/PropertyDefinition'
          description: A list of schema's properties.
          type: object
        schemaConstraints:
          description: Constraints limiting the values as a whole to be accepted in
            this configuration element.
          items:
            $ref: '#/components/schemas/SchemaConstraintRestDto'
          type: array
        schemaGroups:
          description: "Names of the groups, which the schema belongs to."
          example:
          - group:some.1
          - group:some.2
          items:
            type: string
          type: array
          uniqueItems: true
        schemaId:
          description: The ID of the schema.
          example: builtin:container.built-in-monitoring-rule
          type: string
        tableColumns:
          additionalProperties:
            $ref: '#/components/schemas/TableColumn'
          description: Table column definitions for use in the ui.
          type: object
        types:
          additionalProperties:
            $ref: '#/components/schemas/SchemaType'
          description: "A list of definitions of types. \n\n A type is a complex property\
            \ that contains its own set of subproperties."
          type: object
        uiCustomization:
          $ref: '#/components/schemas/UiCustomization'
        version:
          description: The version of the schema.
          example: 1.4.2
          type: string
      required:
      - allowedScopes
      - description
      - displayName
      - dynatrace
      - enums
      - maxObjects
      - multiObject
      - properties
      - schemaId
      - types
      - version
      type: object
    SchemaFiles:
      example:
        files:
        - files
        - files
      properties:
        files:
          description: A list of schema files.
          items:
            description: A list of schema files.
            type: string
          type: array
      type: object
    SchemaList:
      description: The list of available settings schemas.
      example:
        totalCount: 1
        items:
        - latestSchemaVersion: 1.4.2
          displayName: Built-in container monitoring rules
          schemaId: builtin:container.built-in-monitoring-rule
        - latestSchemaVersion: 1.4.2
          displayName: Built-in container monitoring rules
          schemaId: builtin:container.built-in-monitoring-rule
      properties:
        items:
          description: A list of settings schemas.
          items:
            $ref: '#/components/schemas/SchemaStub'
          type: array
        totalCount:
          description: The number of schemas in the list.
          example: 1
          format: int64
          type: integer
      required:
      - items
      - totalCount
      type: object
    SchemaStub:
      description: The short representation of the settings schema.
      example:
        latestSchemaVersion: 1.4.2
        displayName: Built-in container monitoring rules
        schemaId: builtin:container.built-in-monitoring-rule
      properties:
        displayName:
          description: The name of the schema.
          example: Built-in container monitoring rules
          type: string
        latestSchemaVersion:
          description: The most recent version of the schema.
          example: 1.4.2
          type: string
        schemaId:
          description: The ID of the schema.
          example: builtin:container.built-in-monitoring-rule
          type: string
      required:
      - displayName
      - latestSchemaVersion
      - schemaId
      type: object
    SchemaType:
      description: "A list of definitions of types. \n\n A type is a complex property\
        \ that contains its own set of subproperties."
      example:
        displayName: typeDisplayName
        documentation: typeDocumentation
        searchPattern: searchPatternOfType
        description: typeDescription
        versionInfo: Added new property
        type: object
        constraints:
        - customValidatorId: my-min-max
          customMessage: customMessage
          checkAllProperties: false
          minimumPropertyCount: 1
          type: CUSTOM_VALIDATOR_REF
          maximumPropertyCount: 2
          properties:
          - properties
          - properties
        - customValidatorId: my-min-max
          customMessage: customMessage
          checkAllProperties: false
          minimumPropertyCount: 1
          type: CUSTOM_VALIDATOR_REF
          maximumPropertyCount: 2
          properties:
          - properties
          - properties
        version: "0"
        properties:
          key:
            modificationPolicy: ALWAYS
            metadata:
              key: metadata
            nullable: true
            displayName: propertyDisplayName
            minObjects: 1
            documentation: propertyDocumentation
            description: propertyDescription
            uiCustomization:
              expandable:
                expanded: true
                displayName: displayName
                sections:
                - expanded: true
                  displayName: displayName
                  description: description
                  properties:
                  - properties
                  - properties
                - expanded: true
                  displayName: displayName
                  description: description
                  properties:
                  - properties
                  - properties
              tabs:
                groups:
                - displayName: displayName
                  description: description
                  properties:
                  - properties
                  - properties
                - displayName: displayName
                  description: description
                  properties:
                  - properties
                  - properties
              callback:
                buttons:
                - identifier: identifier
                  displayName: displayName
                  description: description
                  insert: null
                - identifier: identifier
                  displayName: displayName
                  description: description
                  insert: null
              table:
                emptyState:
                  text: text
                columns:
                - builtinColumnRef: summary
                  propertyRef: apiColor
                  displayName: Color
                  columnRef: myCustomColumn
                  type: cell-color-picker
                  items:
                  - displayName: Active
                    icon: CRITICAL
                    value: ACTIVE
                  - displayName: Active
                    icon: CRITICAL
                    value: ACTIVE
                - builtinColumnRef: summary
                  propertyRef: apiColor
                  displayName: Color
                  columnRef: myCustomColumn
                  type: cell-color-picker
                  items:
                  - displayName: Active
                    icon: CRITICAL
                    value: ACTIVE
                  - displayName: Active
                    icon: CRITICAL
                    value: ACTIVE
            forceSecretResubmission: true
            precondition:
              preconditions:
              - null
              - null
              expectedValue: expectedValue
              pattern: example Regex
              property: propertyToEvaluate
              precondition: null
              type: "NULL"
              expectedValues: expectedValues
            referencedType: propertyReferencedType
            type: null
            constraints:
            - customValidatorId: my-min-max
              minLength: 7
              pattern: "^([a-z]|[0-9]|\\-|\\_|\\+|\\.)+\\@([a-z]|[0-9]|-){2,}\\.([a-z]|[0-9]|-){2,}(\\\
                .[a-z]{2,})?$"
              customMessage: customConstraintMessage
              maximum: 200
              type: UNKNOWN
              minimum: 3
              maxLength: 20
              uniqueProperties:
              - my-prop-1
              - my-prop-2
            - customValidatorId: my-min-max
              minLength: 7
              pattern: "^([a-z]|[0-9]|\\-|\\_|\\+|\\.)+\\@([a-z]|[0-9]|-){2,}\\.([a-z]|[0-9]|-){2,}(\\\
                .[a-z]{2,})?$"
              customMessage: customConstraintMessage
              maximum: 200
              type: UNKNOWN
              minimum: 3
              maxLength: 20
              uniqueProperties:
              - my-prop-1
              - my-prop-2
            default: propertyDefaultValue
            datasource:
              filterProperties:
              - filterProperties
              - filterProperties
              identifier: identifier
              useApiSearch: true
              fullContext: true
              resetValue: ALWAYS
              validate: true
            subType: propertySubType
            maxObjects: 0
            items:
              metadata:
                key: metadata
              datasource:
                filterProperties:
                - filterProperties
                - filterProperties
                identifier: identifier
                useApiSearch: true
                fullContext: true
                resetValue: ALWAYS
                validate: true
              displayName: itemDisplayName
              documentation: propertyDocumentation
              description: itemDescription
              subType: itemSubType
              uiCustomization:
                expandable:
                  expanded: true
                  displayName: displayName
                  sections:
                  - expanded: true
                    displayName: displayName
                    description: description
                    properties:
                    - properties
                    - properties
                  - expanded: true
                    displayName: displayName
                    description: description
                    properties:
                    - properties
                    - properties
                tabs:
                  groups:
                  - displayName: displayName
                    description: description
                    properties:
                    - properties
                    - properties
                  - displayName: displayName
                    description: description
                    properties:
                    - properties
                    - properties
                callback:
                  buttons:
                  - identifier: identifier
                    displayName: displayName
                    description: description
                    insert: null
                  - identifier: identifier
                    displayName: displayName
                    description: description
                    insert: null
                table:
                  emptyState:
                    text: text
                  columns:
                  - builtinColumnRef: summary
                    propertyRef: apiColor
                    displayName: Color
                    columnRef: myCustomColumn
                    type: cell-color-picker
                    items:
                    - displayName: Active
                      icon: CRITICAL
                      value: ACTIVE
                    - displayName: Active
                      icon: CRITICAL
                      value: ACTIVE
                  - builtinColumnRef: summary
                    propertyRef: apiColor
                    displayName: Color
                    columnRef: myCustomColumn
                    type: cell-color-picker
                    items:
                    - displayName: Active
                      icon: CRITICAL
                      value: ACTIVE
                    - displayName: Active
                      icon: CRITICAL
                      value: ACTIVE
              referencedType: itemReferencedType
              type: null
              constraints:
              - customValidatorId: my-min-max
                minLength: 7
                pattern: "^([a-z]|[0-9]|\\-|\\_|\\+|\\.)+\\@([a-z]|[0-9]|-){2,}\\\
                  .([a-z]|[0-9]|-){2,}(\\.[a-z]{2,})?$"
                customMessage: customConstraintMessage
                maximum: 200
                type: UNKNOWN
                minimum: 3
                maxLength: 20
                uniqueProperties:
                - my-prop-1
                - my-prop-2
              - customValidatorId: my-min-max
                minLength: 7
                pattern: "^([a-z]|[0-9]|\\-|\\_|\\+|\\.)+\\@([a-z]|[0-9]|-){2,}\\\
                  .([a-z]|[0-9]|-){2,}(\\.[a-z]{2,})?$"
                customMessage: customConstraintMessage
                maximum: 200
                type: UNKNOWN
                minimum: 3
                maxLength: 20
                uniqueProperties:
                - my-prop-1
                - my-prop-2
        summaryPattern: summaryPatternOfType
      properties:
        constraints:
          description: A list of constraints limiting the values to be accepted.
          items:
            $ref: '#/components/schemas/ComplexConstraint'
          type: array
        description:
          description: A short description of the property.
          example: typeDescription
          type: string
        displayName:
          description: The display name of the property.
          example: typeDisplayName
          type: string
        documentation:
          description: An extended description and/or links to documentation.
          example: typeDocumentation
          type: string
        properties:
          additionalProperties:
            $ref: '#/components/schemas/PropertyDefinition'
          description: Definition of properties that can be persisted.
          type: object
        searchPattern:
          description: "The pattern for the summary search(for example, \"Alert after\
            \ *X* minutes.\") of the configuration in the UI."
          example: searchPatternOfType
          type: string
        summaryPattern:
          description: "The pattern for the summary (for example, \"Alert after *X*\
            \ minutes.\") of the configuration in the UI."
          example: summaryPatternOfType
          type: string
        type:
          description: Type of the reference type.
          enum:
          - object
          example: object
          type: string
        version:
          description: The version of the type.
          example: "0"
          type: string
        versionInfo:
          description: A short description of the version.
          example: Added new property
          type: string
      required:
      - description
      - documentation
      - properties
      - summaryPattern
      - type
      - version
      type: object
    SchemasList:
      example:
        versions:
        - 1.2.3
        - 1.2.3
      properties:
        versions:
          description: A list of schema versions.
          items:
            description: Extension version
            example: 1.2.3
            pattern: "^(0|[1-9]\\d*)(\\.(0|[1-9]\\d*))?(\\.(0|[1-9]\\d*))?"
            type: string
          type: array
      type: object
    SecurityProblem:
      description: Parameters of a security problem
      example:
        codeLevelVulnerabilityDetails:
          vulnerabilityLocation: vulnerabilityLocation
          processGroups:
          - processGroups
          - processGroups
          shortVulnerabilityLocation: shortVulnerabilityLocation
          vulnerableFunctionInput:
            inputSegments:
            - type: MALICIOUS_INPUT
              value: value
            - type: MALICIOUS_INPUT
              value: value
            type: COMMAND
          processGroupIds:
          - processGroupIds
          - processGroupIds
          type: CMD_INJECTION
          vulnerableFunction: vulnerableFunction
        lastUpdatedTimestamp: 7
        securityProblemId: securityProblemId
        technology: DOTNET
        title: title
        firstSeenTimestamp: 6
        lastOpenedTimestamp: 1
        url: url
        lastResolvedTimestamp: 6
        managementZones:
        - name: name
          id: id
        - name: name
          id: id
        externalVulnerabilityId: externalVulnerabilityId
        cveIds:
        - cveIds
        - cveIds
        packageName: packageName
        riskAssessment:
          publicExploit: AVAILABLE
          baseRiskLevel: CRITICAL
          riskLevel: CRITICAL
          exposure: NOT_AVAILABLE
          riskVector: riskVector
          dataAssets: NOT_AVAILABLE
          baseRiskScore: 1.1730742
          vulnerableFunctionUsage: IN_USE
          riskScore: 4.9652185
          assessmentAccuracy: FULL
          baseRiskVector: baseRiskVector
        displayId: displayId
        globalCounts:
          relatedApplications: 9
          relatedAttacks: 3
          affectedNodes: 1
          exposedProcessGroups: 2
          reachableDataAssets: 7
          relatedKubernetesWorkloads: 7
          relatedServices: 1
          vulnerableComponents: 1
          affectedProcessGroupInstances: 5
          affectedProcessGroups: 5
          relatedHosts: 2
          relatedKubernetesClusters: 4
        muted: true
        vulnerabilityType: CODE_LEVEL
        status: OPEN
      properties:
        codeLevelVulnerabilityDetails:
          $ref: '#/components/schemas/CodeLevelVulnerabilityDetails'
        cveIds:
          description: A list of CVE IDs of the security problem.
          items:
            type: string
          readOnly: true
          type: array
        displayId:
          description: The display ID of the security problem.
          readOnly: true
          type: string
        externalVulnerabilityId:
          description: The external vulnerability ID of the security problem.
          readOnly: true
          type: string
        firstSeenTimestamp:
          description: The timestamp of the first occurrence of the security problem.
          format: int64
          readOnly: true
          type: integer
        globalCounts:
          $ref: '#/components/schemas/GlobalCountsDto'
        lastOpenedTimestamp:
          description: The timestamp when the security problem was last opened.
          format: int64
          readOnly: true
          type: integer
        lastResolvedTimestamp:
          description: The timestamp when the security problem was last resolved.
          format: int64
          readOnly: true
          type: integer
        lastUpdatedTimestamp:
          description: The timestamp of the most recent security problem change.
          format: int64
          readOnly: true
          type: integer
        managementZones:
          description: A list of management zones which the affected entities belong
            to.
          items:
            $ref: '#/components/schemas/ManagementZone'
          readOnly: true
          type: array
        muted:
          description: The security problem is (`true`) or is not (`false`) muted.
          readOnly: true
          type: boolean
        packageName:
          description: The package name of the security problem.
          readOnly: true
          type: string
        riskAssessment:
          $ref: '#/components/schemas/RiskAssessment'
        securityProblemId:
          description: The ID of the security problem.
          readOnly: true
          type: string
        status:
          description: The status of the security problem.
          enum:
          - OPEN
          - RESOLVED
          readOnly: true
          type: string
        technology:
          description: The technology of the security problem.
          enum:
          - DOTNET
          - GO
          - JAVA
          - KUBERNETES
          - NODE_JS
          - PHP
          readOnly: true
          type: string
        title:
          description: The title of the security problem.
          readOnly: true
          type: string
        url:
          description: The URL to the security problem details page.
          readOnly: true
          type: string
        vulnerabilityType:
          description: The type of the vulnerability.
          enum:
          - CODE_LEVEL
          - RUNTIME
          - THIRD_PARTY
          readOnly: true
          type: string
      type: object
    SecurityProblemBulkMutingSummary:
      description: Summary of (un-)muting a security problem.
      example:
        reason: ALREADY_MUTED
        securityProblemId: securityProblemId
        muteStateChangeTriggered: true
      properties:
        muteStateChangeTriggered:
          description: Whether a mute state change for the given security problem
            was triggered by this request.
          readOnly: true
          type: boolean
        reason:
          description: "Contains a reason, in case the requested operation was not\
            \ executed."
          enum:
          - ALREADY_MUTED
          - ALREADY_UNMUTED
          readOnly: true
          type: string
        securityProblemId:
          description: The id of the security problem that was (un-)muted.
          readOnly: true
          type: string
      required:
      - muteStateChangeTriggered
      - securityProblemId
      type: object
    SecurityProblemDetails:
      description: Parameters of a security problem
      example:
        entryPoints:
          truncated: true
          items:
          - sourceHttpPath: sourceHttpPath
            usageSegments:
            - sourceType: HTTP_BODY
              segmentValue: segmentValue
              sourceArgumentName: sourceArgumentName
              segmentType: MALICIOUS_INPUT
            - sourceType: HTTP_BODY
              segmentValue: segmentValue
              sourceArgumentName: sourceArgumentName
              segmentType: MALICIOUS_INPUT
          - sourceHttpPath: sourceHttpPath
            usageSegments:
            - sourceType: HTTP_BODY
              segmentValue: segmentValue
              sourceArgumentName: sourceArgumentName
              segmentType: MALICIOUS_INPUT
            - sourceType: HTTP_BODY
              segmentValue: segmentValue
              sourceArgumentName: sourceArgumentName
              segmentType: MALICIOUS_INPUT
        relatedAttacks:
          attacks:
          - attacks
          - attacks
        securityProblemId: securityProblemId
        description: description
        title: title
        affectedEntities:
        - affectedEntities
        - affectedEntities
        lastOpenedTimestamp: 4
        managementZones:
        - name: name
          id: id
        - name: name
          id: id
        muteStateChangeInProgress: true
        cveIds:
        - cveIds
        - cveIds
        packageName: packageName
        globalCounts:
          relatedApplications: 9
          relatedAttacks: 3
          affectedNodes: 1
          exposedProcessGroups: 2
          reachableDataAssets: 7
          relatedKubernetesWorkloads: 7
          relatedServices: 1
          vulnerableComponents: 1
          affectedProcessGroupInstances: 5
          affectedProcessGroups: 5
          relatedHosts: 2
          relatedKubernetesClusters: 4
        muted: true
        events:
        - reason: SECURITY_PROBLEM_CREATED
          riskAssessmentSnapshot:
            publicExploit: AVAILABLE
            riskLevel: CRITICAL
            exposure: NOT_AVAILABLE
            numberOfReachableDataAssets: 6
            vulnerableFunctionUsage: IN_USE
            numberOfAffectedEntities: 0
            riskScore: 1.4658129
          muteState:
            reason: AFFECTED
            comment: comment
            user: user
          timestamp: 5
        - reason: SECURITY_PROBLEM_CREATED
          riskAssessmentSnapshot:
            publicExploit: AVAILABLE
            riskLevel: CRITICAL
            exposure: NOT_AVAILABLE
            numberOfReachableDataAssets: 6
            vulnerableFunctionUsage: IN_USE
            numberOfAffectedEntities: 0
            riskScore: 1.4658129
          muteState:
            reason: AFFECTED
            comment: comment
            user: user
          timestamp: 5
        codeLevelVulnerabilityDetails:
          vulnerabilityLocation: vulnerabilityLocation
          processGroups:
          - processGroups
          - processGroups
          shortVulnerabilityLocation: shortVulnerabilityLocation
          vulnerableFunctionInput:
            inputSegments:
            - type: MALICIOUS_INPUT
              value: value
            - type: MALICIOUS_INPUT
              value: value
            type: COMMAND
          processGroupIds:
          - processGroupIds
          - processGroupIds
          type: CMD_INJECTION
          vulnerableFunction: vulnerableFunction
        exposedEntities:
        - exposedEntities
        - exposedEntities
        lastUpdatedTimestamp: 9
        reachableDataAssets:
        - reachableDataAssets
        - reachableDataAssets
        technology: DOTNET
        firstSeenTimestamp: 1
        relatedContainerImages:
        - containerImages:
          - imageId: imageId
            imageName: imageName
            numberOfAffectedEntities: 9
            affectedEntities:
            - affectedEntities
            - affectedEntities
          - imageId: imageId
            imageName: imageName
            numberOfAffectedEntities: 9
            affectedEntities:
            - affectedEntities
            - affectedEntities
        - containerImages:
          - imageId: imageId
            imageName: imageName
            numberOfAffectedEntities: 9
            affectedEntities:
            - affectedEntities
            - affectedEntities
          - imageId: imageId
            imageName: imageName
            numberOfAffectedEntities: 9
            affectedEntities:
            - affectedEntities
            - affectedEntities
        url: url
        filteredCounts:
          relatedAttacks: 4
          affectedNodes: 5
          exposedProcessGroups: 9
          reachableDataAssets: 3
          relatedKubernetesWorkloads: 1
          relatedHosts: 1
          relatedApplications: 2
          relatedServices: 6
          vulnerableComponents: 7
          affectedProcessGroupInstances: 2
          relatedDatabases: 7
          affectedProcessGroups: 7
          relatedKubernetesClusters: 1
        lastResolvedTimestamp: 5
        vulnerableComponents:
        - fileName: fileName
          displayName: displayName
          id: id
          numberOfAffectedEntities: 9
          shortName: shortName
          affectedEntities:
          - affectedEntities
          - affectedEntities
        - fileName: fileName
          displayName: displayName
          id: id
          numberOfAffectedEntities: 9
          shortName: shortName
          affectedEntities:
          - affectedEntities
          - affectedEntities
        externalVulnerabilityId: externalVulnerabilityId
        riskAssessment:
          publicExploit: AVAILABLE
          baseRiskLevel: CRITICAL
          riskLevel: CRITICAL
          exposure: NOT_AVAILABLE
          riskVector: riskVector
          dataAssets: NOT_AVAILABLE
          baseRiskScore: 1.1730742
          vulnerableFunctionUsage: IN_USE
          riskScore: 4.9652185
          assessmentAccuracy: FULL
          baseRiskVector: baseRiskVector
        displayId: displayId
        relatedEntities:
          databases:
          - databases
          - databases
          hosts:
          - id: id
            numberOfAffectedEntities: 6
            affectedEntities:
            - affectedEntities
            - affectedEntities
          - id: id
            numberOfAffectedEntities: 6
            affectedEntities:
            - affectedEntities
            - affectedEntities
          kubernetesClusters:
          - id: id
            numberOfAffectedEntities: 6
            affectedEntities:
            - affectedEntities
            - affectedEntities
          - id: id
            numberOfAffectedEntities: 6
            affectedEntities:
            - affectedEntities
            - affectedEntities
          services:
          - exposure: NOT_AVAILABLE
            id: id
            numberOfAffectedEntities: 8
            affectedEntities:
            - affectedEntities
            - affectedEntities
          - exposure: NOT_AVAILABLE
            id: id
            numberOfAffectedEntities: 8
            affectedEntities:
            - affectedEntities
            - affectedEntities
          kubernetesWorkloads:
          - id: id
            numberOfAffectedEntities: 6
            affectedEntities:
            - affectedEntities
            - affectedEntities
          - id: id
            numberOfAffectedEntities: 6
            affectedEntities:
            - affectedEntities
            - affectedEntities
          applications:
          - id: id
            numberOfAffectedEntities: 6
            affectedEntities:
            - affectedEntities
            - affectedEntities
          - id: id
            numberOfAffectedEntities: 6
            affectedEntities:
            - affectedEntities
            - affectedEntities
        vulnerabilityType: CODE_LEVEL
        status: OPEN
      properties:
        affectedEntities:
          description: "A list of affected entities of the security problem. \n\n\
            An affected entity is an entity where a vulnerable component runs."
          items:
            type: string
          readOnly: true
          type: array
        codeLevelVulnerabilityDetails:
          $ref: '#/components/schemas/CodeLevelVulnerabilityDetails'
        cveIds:
          description: A list of CVE IDs of the security problem.
          items:
            type: string
          readOnly: true
          type: array
        description:
          description: The description of the security problem.
          readOnly: true
          type: string
        displayId:
          description: The display ID of the security problem.
          readOnly: true
          type: string
        entryPoints:
          $ref: '#/components/schemas/EntryPoints'
        events:
          description: An ordered (newest first) list of events of the security problem.
          items:
            $ref: '#/components/schemas/SecurityProblemEvent'
          type: array
        exposedEntities:
          description: "A list of exposed entities of the security problem. \n\nAn\
            \ exposed entity is an affected entity that is exposed to the internet."
          items:
            type: string
          readOnly: true
          type: array
        externalVulnerabilityId:
          description: The external vulnerability ID of the security problem.
          readOnly: true
          type: string
        filteredCounts:
          $ref: '#/components/schemas/FilteredCountsDto'
        firstSeenTimestamp:
          description: The timestamp of the first occurrence of the security problem.
          format: int64
          readOnly: true
          type: integer
        globalCounts:
          $ref: '#/components/schemas/GlobalCountsDto'
        lastOpenedTimestamp:
          description: The timestamp when the security problem was last opened.
          format: int64
          readOnly: true
          type: integer
        lastResolvedTimestamp:
          description: The timestamp when the security problem was last resolved.
          format: int64
          readOnly: true
          type: integer
        lastUpdatedTimestamp:
          description: The timestamp of the most recent security problem change.
          format: int64
          readOnly: true
          type: integer
        managementZones:
          description: A list of management zones which the affected entities belong
            to.
          items:
            $ref: '#/components/schemas/ManagementZone'
          readOnly: true
          type: array
        muteStateChangeInProgress:
          description: If `true` a change of the mute state is in progress.
          readOnly: true
          type: boolean
        muted:
          description: The security problem is (`true`) or is not (`false`) muted.
          readOnly: true
          type: boolean
        packageName:
          description: The package name of the security problem.
          readOnly: true
          type: string
        reachableDataAssets:
          description: "A list of data assets reachable by affected entities of the\
            \ security problem. \n\nA data asset is a service that has database access."
          items:
            type: string
          readOnly: true
          type: array
        relatedAttacks:
          $ref: '#/components/schemas/RelatedAttacksList'
        relatedContainerImages:
          description: "A list of related container images of the security problem.\
            \ \n\nA related container image is a container image that contains at\
            \ least one *affected entity*."
          items:
            $ref: '#/components/schemas/SecurityProblemDetails_relatedContainerImages_inner'
          readOnly: true
          type: array
        relatedEntities:
          $ref: '#/components/schemas/RelatedEntitiesList'
        riskAssessment:
          $ref: '#/components/schemas/RiskAssessment'
        securityProblemId:
          description: The ID of the security problem.
          readOnly: true
          type: string
        status:
          description: The status of the security problem.
          enum:
          - OPEN
          - RESOLVED
          readOnly: true
          type: string
        technology:
          description: The technology of the security problem.
          enum:
          - DOTNET
          - GO
          - JAVA
          - KUBERNETES
          - NODE_JS
          - PHP
          readOnly: true
          type: string
        title:
          description: The title of the security problem.
          readOnly: true
          type: string
        url:
          description: The URL to the security problem details page.
          readOnly: true
          type: string
        vulnerabilityType:
          description: The type of the vulnerability.
          enum:
          - CODE_LEVEL
          - RUNTIME
          - THIRD_PARTY
          readOnly: true
          type: string
        vulnerableComponents:
          description: "A list of vulnerable components of the security problem. \n\
            \nA vulnerable component is what causes the security problem."
          items:
            $ref: '#/components/schemas/VulnerableComponent'
          readOnly: true
          type: array
      type: object
    SecurityProblemEvent:
      description: The event of a security problem.
      example:
        reason: SECURITY_PROBLEM_CREATED
        riskAssessmentSnapshot:
          publicExploit: AVAILABLE
          riskLevel: CRITICAL
          exposure: NOT_AVAILABLE
          numberOfReachableDataAssets: 6
          vulnerableFunctionUsage: IN_USE
          numberOfAffectedEntities: 0
          riskScore: 1.4658129
        muteState:
          reason: AFFECTED
          comment: comment
          user: user
        timestamp: 5
      properties:
        muteState:
          $ref: '#/components/schemas/MuteState'
        reason:
          description: The reason of the event creation.
          enum:
          - SECURITY_PROBLEM_CREATED
          - SECURITY_PROBLEM_MUTED
          - SECURITY_PROBLEM_REOPENED
          - SECURITY_PROBLEM_RESOLVED
          - SECURITY_PROBLEM_UNMUTED
          readOnly: true
          type: string
        riskAssessmentSnapshot:
          $ref: '#/components/schemas/RiskAssessmentSnapshot'
        timestamp:
          description: The timestamp when the event occurred.
          format: int64
          readOnly: true
          type: integer
      type: object
    SecurityProblemEventsList:
      description: A list of events for a security problem.
      example:
        nextPageKey: AQAAABQBAAAABQ==
        pageSize: 0
        totalCount: 6
        events:
        - reason: SECURITY_PROBLEM_CREATED
          riskAssessmentSnapshot:
            publicExploit: AVAILABLE
            riskLevel: CRITICAL
            exposure: NOT_AVAILABLE
            numberOfReachableDataAssets: 6
            vulnerableFunctionUsage: IN_USE
            numberOfAffectedEntities: 0
            riskScore: 1.4658129
          muteState:
            reason: AFFECTED
            comment: comment
            user: user
          timestamp: 5
        - reason: SECURITY_PROBLEM_CREATED
          riskAssessmentSnapshot:
            publicExploit: AVAILABLE
            riskLevel: CRITICAL
            exposure: NOT_AVAILABLE
            numberOfReachableDataAssets: 6
            vulnerableFunctionUsage: IN_USE
            numberOfAffectedEntities: 0
            riskScore: 1.4658129
          muteState:
            reason: AFFECTED
            comment: comment
            user: user
          timestamp: 5
      properties:
        events:
          description: A list of events for a security problem.
          items:
            $ref: '#/components/schemas/SecurityProblemEvent'
          readOnly: true
          type: array
        nextPageKey:
          description: "The cursor for the next page of results. Has the value of\
            \ `null` on the last page. \n\nUse it in the **nextPageKey** query parameter\
            \ to obtain subsequent pages of the result."
          example: AQAAABQBAAAABQ==
          type: string
        pageSize:
          description: The number of entries per page.
          format: int32
          type: integer
        totalCount:
          description: The total number of entries in the result.
          format: int64
          type: integer
      required:
      - totalCount
      type: object
    SecurityProblemList:
      description: A list of security problems.
      example:
        nextPageKey: AQAAABQBAAAABQ==
        pageSize: 0
        securityProblems:
        - codeLevelVulnerabilityDetails:
            vulnerabilityLocation: vulnerabilityLocation
            processGroups:
            - processGroups
            - processGroups
            shortVulnerabilityLocation: shortVulnerabilityLocation
            vulnerableFunctionInput:
              inputSegments:
              - type: MALICIOUS_INPUT
                value: value
              - type: MALICIOUS_INPUT
                value: value
              type: COMMAND
            processGroupIds:
            - processGroupIds
            - processGroupIds
            type: CMD_INJECTION
            vulnerableFunction: vulnerableFunction
          lastUpdatedTimestamp: 7
          securityProblemId: securityProblemId
          technology: DOTNET
          title: title
          firstSeenTimestamp: 6
          lastOpenedTimestamp: 1
          url: url
          lastResolvedTimestamp: 6
          managementZones:
          - name: name
            id: id
          - name: name
            id: id
          externalVulnerabilityId: externalVulnerabilityId
          cveIds:
          - cveIds
          - cveIds
          packageName: packageName
          riskAssessment:
            publicExploit: AVAILABLE
            baseRiskLevel: CRITICAL
            riskLevel: CRITICAL
            exposure: NOT_AVAILABLE
            riskVector: riskVector
            dataAssets: NOT_AVAILABLE
            baseRiskScore: 1.1730742
            vulnerableFunctionUsage: IN_USE
            riskScore: 4.9652185
            assessmentAccuracy: FULL
            baseRiskVector: baseRiskVector
          displayId: displayId
          globalCounts:
            relatedApplications: 9
            relatedAttacks: 3
            affectedNodes: 1
            exposedProcessGroups: 2
            reachableDataAssets: 7
            relatedKubernetesWorkloads: 7
            relatedServices: 1
            vulnerableComponents: 1
            affectedProcessGroupInstances: 5
            affectedProcessGroups: 5
            relatedHosts: 2
            relatedKubernetesClusters: 4
          muted: true
          vulnerabilityType: CODE_LEVEL
          status: OPEN
        - codeLevelVulnerabilityDetails:
            vulnerabilityLocation: vulnerabilityLocation
            processGroups:
            - processGroups
            - processGroups
            shortVulnerabilityLocation: shortVulnerabilityLocation
            vulnerableFunctionInput:
              inputSegments:
              - type: MALICIOUS_INPUT
                value: value
              - type: MALICIOUS_INPUT
                value: value
              type: COMMAND
            processGroupIds:
            - processGroupIds
            - processGroupIds
            type: CMD_INJECTION
            vulnerableFunction: vulnerableFunction
          lastUpdatedTimestamp: 7
          securityProblemId: securityProblemId
          technology: DOTNET
          title: title
          firstSeenTimestamp: 6
          lastOpenedTimestamp: 1
          url: url
          lastResolvedTimestamp: 6
          managementZones:
          - name: name
            id: id
          - name: name
            id: id
          externalVulnerabilityId: externalVulnerabilityId
          cveIds:
          - cveIds
          - cveIds
          packageName: packageName
          riskAssessment:
            publicExploit: AVAILABLE
            baseRiskLevel: CRITICAL
            riskLevel: CRITICAL
            exposure: NOT_AVAILABLE
            riskVector: riskVector
            dataAssets: NOT_AVAILABLE
            baseRiskScore: 1.1730742
            vulnerableFunctionUsage: IN_USE
            riskScore: 4.9652185
            assessmentAccuracy: FULL
            baseRiskVector: baseRiskVector
          displayId: displayId
          globalCounts:
            relatedApplications: 9
            relatedAttacks: 3
            affectedNodes: 1
            exposedProcessGroups: 2
            reachableDataAssets: 7
            relatedKubernetesWorkloads: 7
            relatedServices: 1
            vulnerableComponents: 1
            affectedProcessGroupInstances: 5
            affectedProcessGroups: 5
            relatedHosts: 2
            relatedKubernetesClusters: 4
          muted: true
          vulnerabilityType: CODE_LEVEL
          status: OPEN
        totalCount: 5
      properties:
        nextPageKey:
          description: "The cursor for the next page of results. Has the value of\
            \ `null` on the last page. \n\nUse it in the **nextPageKey** query parameter\
            \ to obtain subsequent pages of the result."
          example: AQAAABQBAAAABQ==
          type: string
        pageSize:
          description: The number of entries per page.
          format: int32
          type: integer
        securityProblems:
          description: A list of security problems.
          items:
            $ref: '#/components/schemas/SecurityProblem'
          readOnly: true
          type: array
        totalCount:
          description: The total number of entries in the result.
          format: int64
          type: integer
      required:
      - totalCount
      type: object
    SecurityProblemMute:
      description: Information on muting a security problem.
      example:
        reason: CONFIGURATION_NOT_AFFECTED
        comment: comment
      properties:
        comment:
          description: A comment about the muting reason.
          maxLength: 250
          minLength: 0
          type: string
          writeOnly: true
        reason:
          description: The reason for muting a security problem.
          enum:
          - CONFIGURATION_NOT_AFFECTED
          - FALSE_POSITIVE
          - IGNORE
          - OTHER
          - VULNERABLE_CODE_NOT_IN_USE
          type: string
          writeOnly: true
      required:
      - reason
      type: object
    SecurityProblemUnmute:
      description: Information on un-muting a security problem.
      example:
        reason: AFFECTED
        comment: comment
      properties:
        comment:
          description: A comment about the un-muting reason.
          maxLength: 250
          minLength: 0
          type: string
          writeOnly: true
        reason:
          description: The reason for un-muting a security problem.
          enum:
          - AFFECTED
          type: string
          writeOnly: true
      required:
      - reason
      type: object
    SecurityProblemsBulkMute:
      description: Information on muting several security problems.
      example:
        reason: CONFIGURATION_NOT_AFFECTED
        comment: comment
        securityProblemIds:
        - securityProblemIds
        - securityProblemIds
        - securityProblemIds
        - securityProblemIds
        - securityProblemIds
      properties:
        comment:
          description: A comment about the muting reason.
          maxLength: 250
          minLength: 0
          type: string
          writeOnly: true
        reason:
          description: The reason for muting the security problems.
          enum:
          - CONFIGURATION_NOT_AFFECTED
          - FALSE_POSITIVE
          - IGNORE
          - OTHER
          - VULNERABLE_CODE_NOT_IN_USE
          type: string
          writeOnly: true
        securityProblemIds:
          description: The ids of the security problems to be muted.
          items:
            type: string
          maxItems: 1000
          minItems: 0
          type: array
          writeOnly: true
      required:
      - reason
      - securityProblemIds
      type: object
    SecurityProblemsBulkMuteResponse:
      description: Response of muting several security problems.
      example:
        summary:
        - reason: ALREADY_MUTED
          securityProblemId: securityProblemId
          muteStateChangeTriggered: true
        - reason: ALREADY_MUTED
          securityProblemId: securityProblemId
          muteStateChangeTriggered: true
      properties:
        summary:
          description: The summary of which security problems were muted and which
            already were muted previously.
          items:
            $ref: '#/components/schemas/SecurityProblemBulkMutingSummary'
          readOnly: true
          type: array
      required:
      - summary
      type: object
    SecurityProblemsBulkUnmute:
      description: Information on un-muting several security problems.
      example:
        reason: AFFECTED
        comment: comment
        securityProblemIds:
        - securityProblemIds
        - securityProblemIds
        - securityProblemIds
        - securityProblemIds
        - securityProblemIds
      properties:
        comment:
          description: A comment about the un-muting reason.
          maxLength: 250
          minLength: 0
          type: string
          writeOnly: true
        reason:
          description: The reason for un-muting the security problems.
          enum:
          - AFFECTED
          type: string
          writeOnly: true
        securityProblemIds:
          description: The ids of the security problems to be un-muted.
          items:
            type: string
          maxItems: 1000
          minItems: 0
          type: array
          writeOnly: true
      required:
      - reason
      - securityProblemIds
      type: object
    SecurityProblemsBulkUnmuteResponse:
      description: Response of un-muting several security problems.
      example:
        summary:
        - reason: ALREADY_MUTED
          securityProblemId: securityProblemId
          muteStateChangeTriggered: true
        - reason: ALREADY_MUTED
          securityProblemId: securityProblemId
          muteStateChangeTriggered: true
      properties:
        summary:
          description: The summary of which security problems were un-muted and which
            already were un-muted previously.
          items:
            $ref: '#/components/schemas/SecurityProblemBulkMutingSummary'
          readOnly: true
          type: array
      required:
      - summary
      type: object
    ServiceImpact:
      allOf:
      - $ref: '#/components/schemas/Impact'
      - properties:
          numberOfPotentiallyAffectedServiceCalls:
            description: The number of potentially impacted services.
            format: int64
            type: integer
        type: object
      description: Analysis of problem impact to a service.
      required:
      - estimatedAffectedUsers
      - impactType
      - impactedEntity
      - numberOfPotentiallyAffectedServiceCalls
      type: object
    SettingsObject:
      description: A settings object.
      example:
        searchSummary: searchSummary
        summary: summary
        schemaVersion: 1.0.0
        updateToken: Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=
        author: john.doe@example.com
        created: 0
        externalId: externalId
        modificationInfo:
          movable: true
          nonModifiablePaths:
          - nonModifiablePaths
          - nonModifiablePaths
          deletable: true
          modifiablePaths:
          - modifiablePaths
          - modifiablePaths
          modifiable: true
          first: true
        createdBy: fab17b7a-2eb2-4c95-b818-743d94be2c30
        schemaId: builtin:container.built-in-monitoring-rule
        scope: HOST-D3A3C5A146830A79
        modified: 6
        modifiedBy: fab17b7a-2eb2-4c95-b818-743d94be2c30
        value:
          autoMonitoring: true
        objectId: Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=
      properties:
        author:
          description: The user (identified by a user ID or a public token ID) who
            performed that most recent modification.
          example: john.doe@example.com
          type: string
        created:
          description: The timestamp of the creation.
          format: int64
          type: integer
        createdBy:
          description: The unique identifier of the user who created the settings
            object.
          example: fab17b7a-2eb2-4c95-b818-743d94be2c30
          type: string
        externalId:
          description: The external identifier of the settings object.
          type: string
        modificationInfo:
          $ref: '#/components/schemas/ModificationInfo'
        modified:
          description: The timestamp of the last modification.
          format: int64
          type: integer
        modifiedBy:
          description: The unique identifier of the user who performed the most recent
            modification.
          example: fab17b7a-2eb2-4c95-b818-743d94be2c30
          type: string
        objectId:
          description: The ID of the settings object.
          example: Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=
          type: string
        schemaId:
          description: The schema on which the object is based.
          example: builtin:container.built-in-monitoring-rule
          type: string
        schemaVersion:
          description: The version of the schema on which the object is based.
          example: 1.0.0
          type: string
        scope:
          description: "The scope that the object targets. For more details, please\
            \ see [Dynatrace Documentation](https://dt-url.net/ky03459). "
          example: HOST-D3A3C5A146830A79
          type: string
        searchSummary:
          description: A searchable summary string of the setting value. Plain text
            without Markdown.
          type: string
        summary:
          description: A short summary of settings. This can contain Markdown and
            will be escaped accordingly.
          type: string
        updateToken:
          description: "The update token of the object. You can use it to detect simultaneous\
            \ modifications by different users. \n\nIt is generated upon retrieval\
            \ (GET requests). If set on update (PUT request) or deletion, the update/deletion\
            \ will be allowed only if there wasn't any change between the retrieval\
            \ and the update. \n\nIf omitted on update/deletion, the operation overrides\
            \ the current value or deletes it without any checks."
          example: Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=
          type: string
        value:
          description: "The value of the setting. \n\n It defines the actual values\
            \ of settings' parameters. \n\nThe actual content depends on the object's\
            \ schema."
          example:
            autoMonitoring: true
          type: object
      type: object
    SettingsObjectCreate:
      description: Configuration of a new settings object.
      example:
        schemaVersion: 1.0.0
        schemaId: builtin:container.built-in-monitoring-rule
        scope: HOST-D3A3C5A146830A79
        externalId: externalId
        value:
          autoMonitoring: true
        insertAfter: Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=
        objectId: Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=
      properties:
        externalId:
          description: External identifier for the object being created
          maxLength: 500
          type: string
        insertAfter:
          description: "The position of the new object. The new object will be added\
            \ after the specified one. \n\nIf `null`, the new object will be placed\
            \ in the last position. \n\nIf set to empty string, the new object will\
            \ be placed in the first position. \n\nOnly applicable for objects based\
            \ on schemas with ordered objects (schema's `ordered` parameter is set\
            \ to `true`)."
          example: Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=
          type: string
        objectId:
          description: "The ID of the settings object that should be replaced. \n\n\
            Only applicable if an external identifier is provided."
          example: Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=
          type: string
        schemaId:
          description: The schema on which the object is based.
          example: builtin:container.built-in-monitoring-rule
          type: string
        schemaVersion:
          description: The version of the schema on which the object is based.
          example: 1.0.0
          type: string
        scope:
          description: "The scope that the object targets. For more details, please\
            \ see [Dynatrace Documentation](https://dt-url.net/ky03459). \n\nIf omitted\
            \ on creation of a new object and if the schema supports scope generation,\
            \ the operation will generate a scope from the provided value."
          example: HOST-D3A3C5A146830A79
          type: string
        value:
          description: "The value of the setting. \n\n It defines the actual values\
            \ of settings' parameters. \n\nThe actual content depends on the object's\
            \ schema."
          example:
            autoMonitoring: true
          type: object
      required:
      - schemaId
      - value
      type: object
    SettingsObjectResponse:
      description: The response to a creation- or update-request.
      example:
        code: 0
        error:
          constraintViolations:
          - path: path
            location: location
            message: message
            parameterLocation: HEADER
          - path: path
            location: location
            message: message
            parameterLocation: HEADER
          code: 6
          message: message
        objectId: Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=
        invalidValue:
          autoMonitoring: true
      properties:
        code:
          description: The HTTP status code for the object.
          format: int32
          type: integer
        error:
          $ref: '#/components/schemas/Error'
        invalidValue:
          description: "The value of the setting. \n\n It defines the actual values\
            \ of settings' parameters. \n\nThe actual content depends on the object's\
            \ schema."
          example:
            autoMonitoring: true
          type: object
        objectId:
          description: "For a successful request, the ID of the created or modified\
            \ settings object."
          example: Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=
          type: string
      required:
      - code
      type: object
    SettingsObjectUpdate:
      description: An update of a settings object.
      example:
        schemaVersion: 1.0.0
        updateToken: Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=
        value:
          autoMonitoring: true
        insertAfter: Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=
        insertBefore: Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=
      properties:
        insertAfter:
          description: "The position of the updated object. The new object will be\
            \ moved behind the specified one. \n\n**insertAfter** and **insertBefore**\
            \ are evaluated together and only one of both can be set. \n\nIf `null`\
            \ and **insertBefore** 'null', the existing object keeps the current position.\
            \ \n\nIf set to empty string, the updated object will be placed in the\
            \ first position. \n\nOnly applicable for objects based on schemas with\
            \ ordered objects (schema's **ordered** parameter is set to `true`)."
          example: Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=
          type: string
        insertBefore:
          description: "The position of the updated object. The new object will be\
            \ moved in front of the specified one. \n\n**insertAfter** and **insertBefore**\
            \ are evaluated together and only one of both can be set. \n\nIf `null`\
            \ and **insertAfter** 'null', the existing object keeps the current position.\
            \ \n\nIf set to empty string, the updated object will be placed in the\
            \ last position. \n\nOnly applicable for objects based on schemas with\
            \ ordered objects (schema's **ordered** parameter is set to `true`)."
          example: Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=
          type: string
        schemaVersion:
          description: The version of the schema on which the object is based.
          example: 1.0.0
          type: string
        updateToken:
          description: "The update token of the object. You can use it to detect simultaneous\
            \ modifications by different users. \n\nIt is generated upon retrieval\
            \ (GET requests). If set on update (PUT request) or deletion, the update/deletion\
            \ will be allowed only if there wasn't any change between the retrieval\
            \ and the update. \n\nIf omitted on update/deletion, the operation overrides\
            \ the current value or deletes it without any checks."
          example: Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=
          type: string
        value:
          description: "The value of the setting. \n\n It defines the actual values\
            \ of settings' parameters. \n\nThe actual content depends on the object's\
            \ schema."
          example:
            autoMonitoring: true
          type: object
      required:
      - value
      type: object
    SettingsValue:
      description: "The value of the setting. \n\n It defines the actual values of\
        \ settings' parameters. \n\nThe actual content depends on the object's schema."
      example:
        autoMonitoring: true
      type: object
    SloBurnRate:
      description: Error budget burn rate evaluation of a service-level objective
        (SLO).
      example:
        burnRateType: SLOW
        burnRateValue: 1.25
        sloValue: 95.0
        estimatedTimeToConsumeErrorBudget: 24.0
        fastBurnThreshold: 1.5
        burnRateVisualizationEnabled: true
      properties:
        burnRateType:
          description: "The calculated burn rate type. \n\nHas a value of 'FAST',\
            \ 'SLOW' or 'NONE'."
          enum:
          - FAST
          - NONE
          - SLOW
          example: SLOW
          type: string
        burnRateValue:
          description: "The burn rate of the SLO, calculated for the last hour."
          example: 1.25
          format: double
          type: number
        burnRateVisualizationEnabled:
          description: "The error budget burn rate calculation is enabled (`true`)\
            \ or disabled (`false`). \n\nIn case of `false`, no calculated values\
            \ will be present here."
          example: true
          type: boolean
        estimatedTimeToConsumeErrorBudget:
          description: The estimated time left to consume the error budget in hours.
          example: 24.0
          format: double
          type: number
        fastBurnThreshold:
          description: The threshold between a slow and a fast burn rate.
          example: 1.5
          format: double
          type: number
        sloValue:
          description: The calculated value of the SLO for the timeframe chosen for
            the burn rate calculation.
          example: 95.0
          format: double
          type: number
      required:
      - burnRateVisualizationEnabled
      type: object
    SloBurnRateConfig:
      description: Error budget burn rate configuration of a service-level objective
        (SLO).
      example:
        fastBurnThreshold: 1.5
        burnRateVisualizationEnabled: true
      properties:
        burnRateVisualizationEnabled:
          description: "The error budget burn rate calculation is enabled (`true`)\
            \ or disabled (`false`). \n\nIn case of `false`, no calculated values\
            \ will be present here. \n\nIf not defined, the error budget burn rate\
            \ calculation is disabled by default."
          example: true
          type: boolean
        fastBurnThreshold:
          description: The threshold between a slow and a fast burn rate.
          example: 1.5
          format: double
          type: number
      type: object
    SloConfigItemDtoImpl:
      example:
        metricName: payment_service_availability
        metricDenominator: builtin:service.requestCount.server
        metricExpression: (100)*(builtin:service.errors.server.successCount:splitBy())/(builtin:service.requestCount.server:splitBy())
        description: Rate of successful payments per week
        metricNumerator: builtin:service.errors.server.successCount
        metricRate: builtin:service.successes.server.rate
        enabled: true
        target: 95.0
        evaluationType: AGGREGATE
        filter: type("SERVICE")
        timeframe: -1d
        useRateMetric: true
        name: Payment service availability
        warning: 97.5
        errorBudgetBurnRate:
          fastBurnThreshold: 1.5
          burnRateVisualizationEnabled: true
      properties:
        description:
          description: The description of the SLO.
          example: Rate of successful payments per week
          type: string
        enabled:
          description: "The SLO is enabled (`true`) or disabled (`false`). \n\nIf\
            \ not defined, the SLO is disabled by default."
          example: true
          type: boolean
        errorBudgetBurnRate:
          $ref: '#/components/schemas/SloBurnRateConfig'
        evaluationType:
          description: The evaluation type of the SLO.
          enum:
          - AGGREGATE
          example: AGGREGATE
          type: string
        filter:
          description: "The entity filter for the SLO evaluation. The total length\
            \ of the entitySelector string in SLOs is limited to 1,000 characters.\
            \ Use the [syntax of entity selector](https://dt-url.net/entityselector)."
          example: type("SERVICE")
          type: string
        metricDenominator:
          deprecated: true
          description: "The total count metric (the denominator in rate calculation).\
            \ \n\nRequired when the **useRateMetric** is set to `false`."
          example: builtin:service.requestCount.server
          type: string
        metricExpression:
          description: The percentage-based metric expression for the calculation
            of the SLO.
          example: (100)*(builtin:service.errors.server.successCount:splitBy())/(builtin:service.requestCount.server:splitBy())
          type: string
        metricName:
          description: "The name that is used to create SLO func metrics keys. Once\
            \ created, metric name cannot be changed."
          example: payment_service_availability
          type: string
        metricNumerator:
          deprecated: true
          description: "The metric for the count of successes (the numerator in rate\
            \ calculation). \n\nRequired when the **useRateMetric** is set to `false`."
          example: builtin:service.errors.server.successCount
          type: string
        metricRate:
          deprecated: true
          description: "The percentage-based metric for the calculation of the SLO.\
            \ \n\nRequired when the **useRateMetric** is set to `true`."
          example: builtin:service.successes.server.rate
          type: string
        name:
          description: The name of the SLO.
          example: Payment service availability
          type: string
        target:
          description: The target value of the SLO.
          example: 95.0
          format: double
          type: number
        timeframe:
          description: The timeframe for the SLO evaluation. Use the syntax of the
            global timeframe selector.
          example: -1d
          type: string
        useRateMetric:
          deprecated: true
          description: "The type of the metric to use for SLO calculation: \n\n* `true`:\
            \ An existing percentage-based metric. \n* `false`: A ratio of two metrics.\
            \ \n\nFor a list of available metrics, see [Built-in metric page](https://dt-url.net/be03kow)\
            \ or try the [GET metrics](https://dt-url.net/8e43kxf) API call."
          example: true
          nullable: true
          type: boolean
        warning:
          description: "The warning value of the SLO. \n\n At warning state the SLO\
            \ is still fulfilled but is getting close to failure."
          example: 97.5
          format: double
          type: number
      required:
      - evaluationType
      - name
      - target
      - timeframe
      - warning
      type: object
    SoftwareTechs:
      description: Contains information about the used software technology.
      example:
      - technology: JAVA
        edition: OpenJDK
        version: 1.8.0_242
        verbatimType: Java
      properties:
        edition:
          description: The edition of the technology.
          example: OpenJDK
          type: string
        technology:
          description: The type of the technology.
          example: JAVA
          type: string
        verbatimType:
          description: The verbatim type of the technology.
          example: Java
          type: string
        version:
          description: The version of the technology.
          example: 11.0.10
          type: string
      type: object
    StatusAlert:
      allOf:
      - $ref: '#/components/schemas/AbstractSloAlertDto'
      description: Parameters of a status alert.
      required:
      - alertName
      - alertThreshold
      - alertType
      type: object
    Success:
      example:
        code: 0
        message: message
      properties:
        code:
          description: The HTTP status code
          format: int32
          type: integer
        message:
          description: Detailed message
          type: string
      type: object
    SuccessEnvelope:
      example:
        details:
          code: 0
          message: message
      properties:
        details:
          $ref: '#/components/schemas/Success'
      type: object
    SyntheticConfigDto:
      description: A DTO for synthetic configuration.
      example:
        bmMonitorTimeout: 343493
        bmStepTimeout: 112466
      properties:
        bmMonitorTimeout:
          description: bmMonitorTimeout - browser monitor execution timeout (ms)
          format: int64
          maximum: 3600000
          minimum: 60000
          type: integer
        bmStepTimeout:
          description: bmStepTimeout - browser monitor single step execution timeout
            (ms)
          format: int64
          maximum: 180000
          minimum: 10000
          type: integer
      required:
      - bmMonitorTimeout
      - bmStepTimeout
      type: object
    SyntheticLocation:
      description: "Configuration of a synthetic location. \n\n **countryCode**, **regionCode**,\
        \ **city** parameters are optional as they can be retrieved based on **latitude**\
        \ and **longitude** of location.\n\n The actual set of fields depends on the\
        \ type of the location. Find the list of actual objects in the description\
        \ of the **type** field or see [Synthetic locations API v2 - JSON models](https://dt-url.net/3n43szj)."
      discriminator:
        propertyName: type
      example:
        regionCode: regionCode
        city: city
        countryCode: countryCode
        latitude: 0.8008281904610115
        name: name
        entityId: entityId
        type: CLUSTER
        geoLocationId: geoLocationId
        longitude: 6.027456183070403
        status: DISABLED
      properties:
        city:
          description: The city of the location.
          type: string
        countryCode:
          description: "The country code of the location. \n\n To fetch the list of\
            \ available country codes, use the [GET all countries](https://dt-url.net/37030go)\
            \ request."
          type: string
        entityId:
          description: The Dynatrace entity ID of the location.
          type: string
        geoLocationId:
          description: The Dynatrace GeoLocation ID of the location.
          type: string
        latitude:
          description: The latitude of the location in `DDD.dddd` format.
          format: double
          type: number
        longitude:
          description: The longitude of the location in `DDD.dddd` format.
          format: double
          type: number
        name:
          description: The name of the location.
          type: string
        regionCode:
          description: "The region code of the location. \n\n To fetch the list of\
            \ available region codes, use the [GET regions of the country](https://dt-url.net/az230x0)\
            \ request."
          type: string
        status:
          description: "The status of the location: \n\n* `ENABLED`: The location\
            \ is displayed as active in the UI. You can assign monitors to the location.\
            \ \n* `DISABLED`: The location is displayed as inactive in the UI. You\
            \ can't assign monitors to the location. Monitors already assigned to\
            \ the location will stay there and will be executed from the location.\
            \ \n* `HIDDEN`: The location is not displayed in the UI. You can't assign\
            \ monitors to the location. You can only set location as `HIDDEN` when\
            \ no monitor is assigned to it."
          enum:
          - DISABLED
          - ENABLED
          - HIDDEN
          type: string
        type:
          description: "Defines the actual set of fields depending on the value. See\
            \ one of the following objects: \n\n* `PUBLIC` -> PublicSyntheticLocation\
            \ \n* `PRIVATE` -> PrivateSyntheticLocation \n* `CLUSTER` -> PrivateSyntheticLocation\
            \ \n"
          enum:
          - CLUSTER
          - PRIVATE
          - PUBLIC
          type: string
      required:
      - entityId
      - latitude
      - longitude
      - name
      - type
      type: object
    SyntheticLocationIdsDto:
      description: A DTO for synthetic Location IDs.
      example:
        entityId: entityId
        geoLocationId: geoLocationId
      properties:
        entityId:
          description: Entity ID to be transferred
          type: string
        geoLocationId:
          description: GeoLocation ID to be transferred
          type: string
      required:
      - entityId
      - geoLocationId
      type: object
    SyntheticLocationUpdate:
      description: "The synthetic location update. This is a base object, the exact\
        \ type depends on the value of the `type` field."
      discriminator:
        propertyName: type
      example:
        type: PRIVATE
      properties:
        type:
          description: "Defines the actual set of fields depending on the value. See\
            \ one of the following objects: \n\n* `PUBLIC` -> SyntheticPublicLocationUpdate\
            \ \n* `PRIVATE` -> SyntheticPrivateLocationUpdate \n"
          enum:
          - PRIVATE
          - PUBLIC
          type: string
      required:
      - type
      type: object
    SyntheticLocations:
      description: A list of synthetic locations.
      example:
        locations:
        - capabilities:
          - BROWSER
          - HTTP
          cloudPlatform: AMAZON_EC2
          entityId: SYNTHETIC_LOCATION-53F47ECB33907667
          geoLocationId: GEOLOCATION-95196F3C9A4F4215
          ips:
          - 134.189.153.97
          - 134.189.153.98
          name: Gdansk
          stage: GA
          status: ENABLED
          type: PUBLIC
        - entityId: SYNTHETIC_LOCATION-53F47ECB33907667
          geoLocationId: GEOLOCATION-95196F3C9A4F4215
          name: My private location
          status: ENABLED
          type: PRIVATE
      properties:
        locations:
          description: A list of synthetic locations.
          items:
            $ref: '#/components/schemas/LocationCollectionElement'
          type: array
      required:
      - locations
      type: object
    SyntheticOnDemandBatchStatus:
      description: Contains information about on-demand executions triggered within
        the batch.
      example:
        batchId: "22396514015719218"
        batchStatus: FAILED_TO_EXECUTE
        executedCount: 1
        failedCount: 1
        failedExecutions:
        - errorCode: CONSTRAINT_VIOLATED(3)
          executionId: "1629891693487"
          executionStage: EXECUTED
          executionTimestamp: "1629891695487"
          failureMessage: Validate text match failed
          locationId: SYNTHETIC_LOCATION-9BB04DAEBA71B8CA
          monitorId: HTTP_CHECK-6349B98E1CD87352
        failedToExecute:
        - executionId: "478437504"
          executionStage: TIMED_OUT
          locationId: SYNTHETIC_LOCATION-90380DA8A44C74BD
          monitorId: SYNTHETIC_TEST-027011D7D27CC892
        failedToExecuteCount: 1
        metadata:
          key: value
          version: 1.255.20221022
        triggeredCount: 3
        triggeringProblems:
        - cause: Location not found
          entityId: HTTP_CHECK-6349B98E1CD87352
          locationId: SYNTHETIC_LOCAT-9BB04DAEBA71B8CA
        - cause: Incorrect application identifier format
          entityId: APPLICATION-WRONG
        triggeringProblemsCount: 2
        userId: admin
      properties:
        batchId:
          description: The identifier of the batch.
          type: string
        batchStatus:
          description: The status of the batch.
          enum:
          - FAILED
          - FAILED_TO_EXECUTE
          - NOT_TRIGGERED
          - RUNNING
          - SUCCESS
          type: string
        executedCount:
          description: The number of triggered executions with the result SUCCESS
            or FAILED.
          format: int32
          type: integer
        failedCount:
          description: The number of triggered executions with the result FAILED.
          format: int32
          type: integer
        failedExecutions:
          items:
            $ref: '#/components/schemas/SyntheticOnDemandFailedExecutionStatus'
          type: array
        failedToExecute:
          items:
            $ref: '#/components/schemas/SyntheticOnDemandFailedExecutionStatus'
          type: array
        failedToExecuteCount:
          description: The number of executions that were triggered and timed out
            because of a problem with the Synthetic engine.
          format: int32
          type: integer
        metadata:
          additionalProperties:
            description: String to string map of metadata properties for batch
            type: string
          description: String to string map of metadata properties for batch
          type: object
        triggeredCount:
          description: The number of triggered executions within the batch.
          format: int32
          type: integer
        triggeringProblems:
          items:
            $ref: '#/components/schemas/SyntheticOnDemandTriggeringProblemDetails'
          type: array
        triggeringProblemsCount:
          description: The number of executions that were not triggered due to some
            problems.
          format: int32
          type: integer
        userId:
          description: The name of the user who triggered execution of the batch.
          type: string
      required:
      - batchId
      - batchStatus
      - executedCount
      - failedCount
      - failedToExecuteCount
      - triggeredCount
      - userId
      type: object
    SyntheticOnDemandExecution:
      description: Describes the status of an on-demand execution.
      example:
        batchId: "22396514015719218"
        customizedScript:
          requests:
          - sequenceId: "1"
            url: https://www.somepage.org
            validation:
              rules:
              - passIfFound: "true"
                type: httpStatusesList
                value: =201
        dataDeliveryTimestamp: "1629891701171"
        executionId: "7002396514015719218"
        executionStage: DATA_RETRIEVED
        executionTimestamp: "1629891695487"
        locationId: SYNTHETIC_LOCATION-9BB04DAEBA71B8CA
        metadata:
          key: value
          version: 1.255.20221022
        monitorId: HTTP_CHECK-6349B98E1CD87352
        processingMode: STANDARD
        schedulingTime: "1629891686877"
        simpleResults:
        - engineId: "1993198092"
          executedSteps: "1"
          healthStatus: HEALTHY
          hostNameResolutionTime: "50"
          publicLocation: "false"
          redirectionTime: "576"
          responseBodySizeLimitExceeded: "false"
          responseSize: "1530652"
          responseStatusCode: "200"
          startTimestamp: "1629891693487"
          tcpConnectTime: "127"
          tlsHandshakeTime: "167"
          totalTime: "955"
        source: API
        userId: someUserIdentifier
      properties:
        batchId:
          description: The identifier of the batch.
          type: string
        customizedScript:
          description: Customized script properties for this on-demand batch execution.
          type: object
        dataDeliveryTimestamp:
          description: "The timestamp when whole data set has been collected on server,\
            \ in UTC milliseconds."
          format: int64
          type: integer
        executionId:
          description: The identifier of the execution.
          type: string
        executionStage:
          description: Execution stage.
          enum:
          - DATA_RETRIEVED
          - EXECUTED
          - NOT_TRIGGERED
          - TIMED_OUT
          - TRIGGERED
          - WAITING
          type: string
        executionTimestamp:
          description: "The timestamp when execution was finished, in UTC milliseconds."
          format: int64
          type: integer
        fullResults:
          $ref: '#/components/schemas/ExecutionFullResults'
        locationId:
          description: The identifier of the location from where the monitor is to
            be executed.
          type: string
        metadata:
          additionalProperties:
            description: Metadata map for the execution batch.
            type: string
          description: Metadata map for the execution batch.
          type: object
        monitorId:
          description: The identifier of the monitor.
          type: string
        nextExecutionId:
          description: Next execution id for sequential mode.
          format: int64
          type: integer
        processingMode:
          description: The processing mode of the execution.
          enum:
          - DISABLE_PROBLEM_DETECTION
          - EXECUTIONS_DETAILS_ONLY
          - NONE
          - STANDARD
          - UNKNOWN
          type: string
        schedulingTimestamp:
          description: "The scheduling timestamp, in UTC milliseconds."
          format: int64
          type: integer
        simpleResults:
          $ref: '#/components/schemas/ExecutionSimpleResults'
        source:
          description: The source of the triggering request.
          enum:
          - API
          - UI
          type: string
        userId:
          description: The name of the user who triggered the on-demand execution.
          type: string
      required:
      - batchId
      - dataDeliveryTimestamp
      - executionId
      - executionStage
      - executionTimestamp
      - locationId
      - monitorId
      - processingMode
      - schedulingTimestamp
      - source
      - userId
      type: object
    SyntheticOnDemandExecutionRequest:
      description: "Contains parameters for the on-demand execution of monitors identified\
        \ by tags, applications, or services."
      example:
        failOnPerformanceIssue: false
        failOnSslWarning: true
        group:
          applications:
          - APPLICATION-CD4BEF05FA9DD044
          services:
          - SERVICE-01C6C1282960638B
          - SERVICE-B18840B4E3115C1A
          tags:
          - tag-production
          - another-tag
        metadata:
          key: value
          version: 1.255.20221022
        monitors:
        - customizedScript:
            requests:
            - sequenceId: "1"
              url: https://www.somepage.org
              validation:
                rules:
                - passIfFound: "true"
                  type: httpStatusesList
                  value: =201
          executionCount: 3
          locations:
          - SYNTHETIC_LOCATION-9BB04DAEBA71B8CA
          - SYNTHETIC_LOCATION-ACCA399FAA1194DD
          monitorId: HTTP_CHECK-6349B98E1CD87352
          repeatMode: SEQUENTIAL
        processingMode: EXECUTIONS_DETAILS_ONLY
        stopOnProblem: true
        takeScreenshotsOnSuccess: true
      properties:
        failOnPerformanceIssue:
          default: true
          description: "If true, the execution will fail in case of performance issue."
          type: boolean
        failOnSslWarning:
          default: true
          description: "Applies to HTTP monitors only. If true, the execution will\
            \ fail in case of an SSL certificate expiration warning or if the certificate\
            \ is missing."
          type: boolean
        group:
          $ref: '#/components/schemas/SyntheticOnDemandExecutionRequestGroup'
        metadata:
          additionalProperties:
            description: String to string map of metadata properties for execution
            type: string
          description: String to string map of metadata properties for execution
          type: object
        monitors:
          description: List of monitors to be triggered.
          items:
            $ref: '#/components/schemas/SyntheticOnDemandExecutionRequestMonitor'
          type: array
        processingMode:
          default: STANDARD
          description: The execution's processing mode
          enum:
          - STANDARD
          - DISABLE_PROBLEM_DETECTION
          - EXECUTIONS_DETAILS_ONLY
          type: string
        stopOnProblem:
          default: false
          description: "If true, no executions will be scheduled if a problem occurs."
          type: boolean
        takeScreenshotsOnSuccess:
          default: false
          description: "If true, the screenshots will be taken during the execution\
            \ of a browser monitor."
          type: boolean
      type: object
    SyntheticOnDemandExecutionRequestGroup:
      description: "Contains parameters for the on-demand execution of monitors identified\
        \ by tags, applications, or services."
      properties:
        applications:
          description: List of application identifiers. Only monitors with all applications
            assigned will be executed.
          items:
            description: List of application identifiers. Only monitors with all applications
              assigned will be executed.
            type: string
          type: array
          uniqueItems: true
        locations:
          description: The locations from where monitors are to be executed.
          items:
            description: The locations from where monitors are to be executed.
            type: string
          type: array
        services:
          description: List of service identifiers. Only monitors with all services
            assigned will be executed.
          items:
            description: List of service identifiers. Only monitors with all services
              assigned will be executed.
            type: string
          type: array
          uniqueItems: true
        tags:
          description: List of tags. Only monitors with all tags assigned will be
            executed.
          items:
            description: List of tags. Only monitors with all tags assigned will be
              executed.
            type: string
          type: array
          uniqueItems: true
      type: object
    SyntheticOnDemandExecutionRequestMonitor:
      description: Contains monitors to be executed on demand from the locations specified.
      properties:
        customizedScript:
          description: Customized script properties for this on-demand batch execution.
          type: object
        executionCount:
          default: 1
          description: "The number of times the monitor is to be executed per location;\
            \ if not set, the monitor will be executed once."
          format: int32
          type: integer
        locations:
          description: The locations from where the monitor is to be executed.
          items:
            description: The locations from where the monitor is to be executed.
            type: string
          type: array
        monitorId:
          description: The monitor identifier.
          type: string
        repeatMode:
          default: SEQUENTIAL
          description: "Execution repeat mode. If not set, the mode is SEQUENTIAL."
          enum:
          - SEQUENTIAL
          - PARALLEL
          type: string
      required:
      - monitorId
      type: object
    SyntheticOnDemandExecutionResult:
      description: The result of on-demand synthetic monitor execution.
      example:
        batchId: "22396514015719218"
        triggered:
        - executions:
          - executionId: "1069999568093682590"
            locationId: SYNTHETIC_LOCATION-9BB04DAE11123122
          monitorId: HTTP_CHECK-69A9B98E1CD87352
        triggeredCount: 1
        triggeringProblemsCount: 4
        triggeringProblemsDetails:
        - cause: Location not found
          entityId: HTTP_CHECK-6349B98E1CD87352
          locationId: SYNTHETIC_LOCAT-9BB04DAEBA71B8CA
        - cause: Monitor not found
          entityId: HTTP_CHECK-6349B98E1CD85432
        - cause: Incorrect monitor identifier format
          entityId: HTTP_HACK-AAAAAAA
        - cause: Incorrect application identifier format
          entityId: APPLICATION-WRONG
      properties:
        batchId:
          description: The batch identifier of the triggered executions.
          type: string
        triggered:
          description: Monitors for which on-demand executions were triggered.
          items:
            $ref: '#/components/schemas/SyntheticOnDemandTriggeredMonitor'
          type: array
        triggeredCount:
          description: The total number of the triggered executions within the batch.
          format: int32
          type: integer
        triggeringProblemsCount:
          description: The total number of problems within the batch.
          format: int32
          type: integer
        triggeringProblemsDetails:
          description: List with the entities for which triggering problems occurred.
          items:
            $ref: '#/components/schemas/SyntheticOnDemandTriggeringProblemDetails'
          type: array
      required:
      - batchId
      - triggeredCount
      - triggeringProblemsCount
      type: object
    SyntheticOnDemandExecutions:
      description: Contains a list of synthetic on-demand executions.
      example:
        executions:
        - executionId: "7002396514015719218"
          executionStage: EXECUTED
          executionTimestamp: "1629891695487"
          locationId: SYNTHETIC_LOCATION-9BB04DAEBA71B8CA
          monitorId: HTTP_CHECK-6349B98E1CD87352
          schedulingTimestamp: "1629891686877"
          userId: someUserIdentifier
      properties:
        executions:
          description: The list of executions.
          items:
            $ref: '#/components/schemas/SyntheticOnDemandExecution'
          type: array
      required:
      - executions
      type: object
    SyntheticOnDemandFailedExecutionStatus:
      description: Contains information about on-demand executions that failed or
        failed to be executed.
      example:
        errorCode: CONSTRAINT_VIOLATED(3)
        executionId: "7002396514015719218"
        executionStage: DATA_RETRIEVED
        executionTimestamp: "1629891695487"
        failureMessage: Validate text match failed
        locationId: SYNTHETIC_LOCATION-9BB04DAEBA71B8CA
        monitorId: HTTP_CHECK-6349B98E1CD87352
      properties:
        errorCode:
          description: Error code.
          type: string
        executionId:
          description: The identifier of the execution.
          type: string
        executionStage:
          description: Execution stage.
          enum:
          - DATA_RETRIEVED
          - EXECUTED
          - NOT_TRIGGERED
          - TIMED_OUT
          - TRIGGERED
          - WAITING
          type: string
        executionTimestamp:
          description: "The timestamp when execution was finished, in UTC milliseconds."
          format: int64
          type: integer
        failureMessage:
          description: Failure message.
          type: string
        locationId:
          description: The identifier of the location from where the monitor is to
            be executed.
          type: string
        monitorId:
          description: The identifier of the monitor.
          type: string
      required:
      - errorCode
      - executionId
      - locationId
      - monitorId
      type: object
    SyntheticOnDemandTriggeredExecutionDetails:
      description: Contains details of the triggered on-demand execution.
      properties:
        executionId:
          description: The execution's identifier.
          type: string
        locationId:
          description: The identifier of the location from which the monitor is to
            be executed.
          type: string
      required:
      - executionId
      - locationId
      type: object
    SyntheticOnDemandTriggeredMonitor:
      description: Contains the list of on-demand executions of the monitor.
      properties:
        executions:
          description: The list of triggered executions.
          items:
            $ref: '#/components/schemas/SyntheticOnDemandTriggeredExecutionDetails'
          type: array
        monitorId:
          description: The monitor identifier.
          type: string
      required:
      - executions
      - monitorId
      type: object
    SyntheticOnDemandTriggeringProblemDetails:
      description: Contains the details of problems encountered while triggering on-demand
        executions.
      properties:
        cause:
          description: The cause of not triggering entity.
          type: string
        details:
          description: The details of triggering problem.
          type: string
        entityId:
          description: The entity identifier.
          type: string
        locationId:
          description: The location identifier.
          type: string
      required:
      - cause
      - details
      - entityId
      type: object
    SyntheticPrivateLocationUpdate:
      allOf:
      - $ref: '#/components/schemas/SyntheticLocationUpdate'
      - properties:
          autoUpdateChromium:
            description: Auto upgrade of Chromium is enabled (`true`) or disabled
              (`false`).
            type: boolean
          availabilityLocationOutage:
            description: Alerting for location outage is enabled (`true`) or disabled
              (`false`). Supported only for private Synthetic locations.
            type: boolean
          availabilityNodeOutage:
            description: "Alerting for node outage is enabled (`true`) or disabled\
              \ (`false`). \\n\\n If enabled, the outage of *any* node in the location\
              \ triggers an alert. Supported only for private Synthetic locations."
            type: boolean
          availabilityNotificationsEnabled:
            description: Notifications for location and node outage are enabled (`true`)
              or disabled (`false`). Supported only for private Synthetic locations.
            type: boolean
          city:
            description: The city of the location.
            type: string
          countryCode:
            description: "The country code of the location. \n\n To fetch the list\
              \ of available country codes, use the [GET all countries](https://dt-url.net/37030go)\
              \ request."
            type: string
          deploymentType:
            description: "The deployment type of the location: \n\n* `STANDARD`: The\
              \ location is deployed on Windows or Linux.\n* `KUBERNETES`: The location\
              \ is deployed on Kubernetes."
            enum:
            - KUBERNETES
            - OPENSHIFT
            - STANDARD
            type: string
          latitude:
            description: The latitude of the location in `DDD.dddd` format.
            format: double
            type: number
          locationNodeOutageDelayInMinutes:
            description: Alert if location or node outage lasts longer than *X* minutes.
              \n\n Only applicable when `availabilityLocationOutage` or `availabilityNodeOutage`
              is set to `true`. Supported only for private Synthetic locations.
            format: int32
            maximum: 5
            minimum: 1
            type: integer
          longitude:
            description: The longitude of the location in `DDD.dddd` format.
            format: double
            type: number
          name:
            description: The name of the location.
            type: string
          nodes:
            description: "A list of synthetic nodes belonging to the location. \n\n\
              \ You can retrieve the list of available nodes with the [GET all nodes](https://dt-url.net/miy3rpl)\
              \ call."
            items:
              type: string
            type: array
          regionCode:
            description: "The region code of the location. \n\n To fetch the list\
              \ of available region codes, use the [GET regions of the country](https://dt-url.net/az230x0)\
              \ request."
            type: string
          status:
            description: "The status of the location: \n\n* `ENABLED`: The location\
              \ is displayed as active in the UI. You can assign monitors to the location.\
              \ \n* `DISABLED`: The location is displayed as inactive in the UI. You\
              \ can't assign monitors to the location. Monitors already assigned to\
              \ the location will stay there and will be executed from the location.\
              \ \n* `HIDDEN`: The location is not displayed in the UI. You can't assign\
              \ monitors to the location. You can only set location as `HIDDEN` when\
              \ no monitor is assigned to it."
            enum:
            - DISABLED
            - ENABLED
            - HIDDEN
            type: string
          useNewKubernetesVersion:
            description: |-
              Boolean value describes which kubernetes version will be used:

              * `false`: Version 1.23+ that is older than 1.26
              * `true`: Version 1.26+.
            type: boolean
        type: object
      description: Configuration of a private synthetic location
      required:
      - latitude
      - longitude
      - name
      - nodes
      - type
      type: object
    SyntheticPublicLocationUpdate:
      allOf:
      - $ref: '#/components/schemas/SyntheticLocationUpdate'
      - properties:
          status:
            description: "The status of the location: \n\n* `ENABLED`: The location\
              \ is displayed as active in the UI. You can assign monitors to the location.\
              \ \n* `DISABLED`: The location is displayed as inactive in the UI. You\
              \ can't assign monitors to the location. Monitors already assigned to\
              \ the location will stay there and will be executed from the location.\
              \ \n* `HIDDEN`: The location is not displayed in the UI. You can't assign\
              \ monitors to the location. You can only set location as `HIDDEN` when\
              \ no monitor is assigned to it."
            enum:
            - DISABLED
            - ENABLED
            - HIDDEN
            type: string
        type: object
      description: The update of a public Synthetic location.
      required:
      - status
      - type
      type: object
    SyntheticPublicLocationsStatus:
      description: The status of public synthetic locations.
      example:
        publicLocationsEnabled: true
      properties:
        publicLocationsEnabled:
          description: Synthetic monitors can (`true`) or can't (`false`) run on public
            synthetic locations.
          type: boolean
      required:
      - publicLocationsEnabled
      type: object
    TableColumn:
      description: The definition of a table column to be used in the ui.
      example:
        pattern: pattern
      properties:
        pattern:
          description: Pattern with references to properties to create a single value
            for the column.
          type: string
      required:
      - pattern
      type: object
    TechnologyDetails:
      description: Additional details of the technology.
      example:
        activationLink: activationLink
      nullable: true
      properties:
        activationLink:
          description: Represents the installation/public navigation link for the
            technology.
          type: string
      type: object
    TenantToken:
      description: Tenant token
      example:
        value: value
      properties:
        value:
          description: The secret of the tenant token.
          type: string
      type: object
    TenantTokenConfig:
      description: "Configuration of a [tenant token](https://dt-url.net/b403ss9)."
      example:
        old:
          value: value
        active:
          value: value
      properties:
        active:
          $ref: '#/components/schemas/TenantToken'
        old:
          $ref: '#/components/schemas/TenantToken'
      type: object
    ToPosition:
      description: The TO position of a relationship.
      properties:
        id:
          description: The ID of the relationship.
          type: string
        toTypes:
          description: A list of monitored entity types that can occupy the TO position.
          items:
            type: string
          type: array
      type: object
    TokenCredentials:
      allOf:
      - $ref: '#/components/schemas/Credentials'
      - properties:
          externalVault:
            $ref: '#/components/schemas/ExternalVault'
          token:
            description: Token in the string format.
            type: string
        type: object
      description: A credentials set of the `TOKEN` type.
      required:
      - name
      - scope
      - scopes
      type: object
    TransactionalEvidence:
      allOf:
      - $ref: '#/components/schemas/Evidence'
      - properties:
          endTime:
            description: "The end time of the evidence, in UTC milliseconds"
            format: int64
            type: integer
          unit:
            description: The unit of the metric.
            type: string
          valueAfterChangePoint:
            description: The metric's value after the problem start.
            format: float
            type: number
          valueBeforeChangePoint:
            description: The metric's value before the problem start.
            format: float
            type: number
        type: object
      description: "The transactional evidence of the problem. \n\nA behavior of a\
        \ metric in an transaction that indicates the problem and/or is its root cause."
      required:
      - displayName
      - endTime
      - entity
      - evidenceType
      - rootCauseRelevant
      - startTime
      - unit
      - valueAfterChangePoint
      - valueBeforeChangePoint
      type: object
    TruncatableListAttackRequestHeader:
      description: A list of values that has possibly been truncated.
      example:
        truncationInfo:
          truncated: true
        values:
        - name: name
          value: value
        - name: name
          value: value
      properties:
        truncationInfo:
          $ref: '#/components/schemas/TruncationInfo'
        values:
          description: Values of the list.
          items:
            $ref: '#/components/schemas/AttackRequestHeader'
          readOnly: true
          type: array
      readOnly: true
      type: object
    TruncatableListHttpRequestParameter:
      description: A list of values that has possibly been truncated.
      example:
        truncationInfo:
          truncated: true
        values:
        - name: name
          value: value
        - name: name
          value: value
      properties:
        truncationInfo:
          $ref: '#/components/schemas/TruncationInfo'
        values:
          description: Values of the list.
          items:
            $ref: '#/components/schemas/HttpRequestParameter'
          readOnly: true
          type: array
      readOnly: true
      type: object
    TruncatableListString:
      description: A list of values that has possibly been truncated.
      example:
        truncationInfo:
          truncated: true
        values:
        - values
        - values
      properties:
        truncationInfo:
          $ref: '#/components/schemas/TruncationInfo'
        values:
          description: Values of the list.
          items:
            description: Values of the list.
            readOnly: true
            type: string
          readOnly: true
          type: array
      readOnly: true
      type: object
    TruncationInfo:
      description: Information on a possible truncation.
      example:
        truncated: true
      properties:
        truncated:
          description: If the list/value has been truncated.
          readOnly: true
          type: boolean
      readOnly: true
      type: object
    UiButtonCustomization:
      description: UI customization for defining a button that calls a function when
        pressed
      example:
        identifier: identifier
        displayName: displayName
        description: description
        insert: null
      properties:
        description:
          description: The description to be shown in a tooltip when hovering over
            the button
          type: string
        displayName:
          description: The label of the button
          type: string
        identifier:
          description: The identifier of the function to be called when the button
            is pressed
          type: string
        insert:
          $ref: '#/components/schemas/UiButtonCustomization_insert'
      required:
      - displayName
      - identifier
      - insert
      type: object
    UiCallbackCustomization:
      description: UI customization options for defining custom callbacks
      example:
        buttons:
        - identifier: identifier
          displayName: displayName
          description: description
          insert: null
        - identifier: identifier
          displayName: displayName
          description: description
          insert: null
      properties:
        buttons:
          description: UI customization for defining buttons that call functions when
            pressed
          items:
            $ref: '#/components/schemas/UiButtonCustomization'
          type: array
      type: object
    UiCustomization:
      description: Customization for UI elements
      example:
        expandable:
          expanded: true
          displayName: displayName
          sections:
          - expanded: true
            displayName: displayName
            description: description
            properties:
            - properties
            - properties
          - expanded: true
            displayName: displayName
            description: description
            properties:
            - properties
            - properties
        tabs:
          groups:
          - displayName: displayName
            description: description
            properties:
            - properties
            - properties
          - displayName: displayName
            description: description
            properties:
            - properties
            - properties
        callback:
          buttons:
          - identifier: identifier
            displayName: displayName
            description: description
            insert: null
          - identifier: identifier
            displayName: displayName
            description: description
            insert: null
        table:
          emptyState:
            text: text
          columns:
          - builtinColumnRef: summary
            propertyRef: apiColor
            displayName: Color
            columnRef: myCustomColumn
            type: cell-color-picker
            items:
            - displayName: Active
              icon: CRITICAL
              value: ACTIVE
            - displayName: Active
              icon: CRITICAL
              value: ACTIVE
          - builtinColumnRef: summary
            propertyRef: apiColor
            displayName: Color
            columnRef: myCustomColumn
            type: cell-color-picker
            items:
            - displayName: Active
              icon: CRITICAL
              value: ACTIVE
            - displayName: Active
              icon: CRITICAL
              value: ACTIVE
      properties:
        callback:
          $ref: '#/components/schemas/UiCallbackCustomization'
        expandable:
          $ref: '#/components/schemas/UiExpandableCustomization'
        table:
          $ref: '#/components/schemas/UiTableCustomization'
        tabs:
          $ref: '#/components/schemas/UiTabsCustomization'
      type: object
    UiEmptyStateCustomization:
      description: UI customization for empty state in a table
      example:
        text: text
      properties:
        text:
          description: The text to be shown in the empty state
          type: string
      type: object
    UiExpandableCustomization:
      description: UI customization for expandable section
      example:
        expanded: true
        displayName: displayName
        sections:
        - expanded: true
          displayName: displayName
          description: description
          properties:
          - properties
          - properties
        - expanded: true
          displayName: displayName
          description: description
          properties:
          - properties
          - properties
      properties:
        displayName:
          description: The display name
          type: string
        expanded:
          description: Defines if the item should be expanded by default
          type: boolean
        sections:
          description: A list of sections
          items:
            $ref: '#/components/schemas/UiExpandableSectionCustomization'
          type: array
      type: object
    UiExpandableSectionCustomization:
      description: Expandable section customization for UI
      example:
        expanded: true
        displayName: displayName
        description: description
        properties:
        - properties
        - properties
      properties:
        description:
          description: The description
          type: string
        displayName:
          description: The display name
          type: string
        expanded:
          description: Defines if the section should be expanded by default
          type: boolean
        properties:
          description: A list of properties
          items:
            type: string
          type: array
      required:
      - displayName
      - properties
      type: object
    UiTabGroupCustomization:
      description: Tab group customization for UI
      example:
        displayName: displayName
        description: description
        properties:
        - properties
        - properties
      properties:
        description:
          description: The description
          type: string
        displayName:
          description: The display name
          type: string
        properties:
          description: A list of properties
          items:
            type: string
          type: array
      required:
      - displayName
      - properties
      type: object
    UiTableColumnCustomization:
      description: Customization for UI table columns
      example:
        builtinColumnRef: summary
        propertyRef: apiColor
        displayName: Color
        columnRef: myCustomColumn
        type: cell-color-picker
        items:
        - displayName: Active
          icon: CRITICAL
          value: ACTIVE
        - displayName: Active
          icon: CRITICAL
          value: ACTIVE
      properties:
        builtinColumnRef:
          description: The ui specific builtin column-implementation for this column.
          example: summary
          type: string
        columnRef:
          description: The referenced column from the 'tableColumns' property of the
            schema for this column.
          example: myCustomColumn
          type: string
        displayName:
          description: The display name for this column.
          example: Color
          type: string
        items:
          description: The possible items of this column.
          items:
            $ref: '#/components/schemas/UiTableColumnItemCustomization'
          type: array
        propertyRef:
          description: The referenced property for this column.
          example: apiColor
          type: string
        type:
          description: The ui specific type for this column.
          example: cell-color-picker
          type: string
      type: object
    UiTableColumnItemCustomization:
      description: Customization for UI table column items
      example:
        displayName: Active
        icon: CRITICAL
        value: ACTIVE
      properties:
        displayName:
          description: The display name of this item.
          example: Active
          type: string
        icon:
          description: The icon of this item.
          example: CRITICAL
          type: string
        value:
          description: The value of this item.
          example: ACTIVE
          type: string
      required:
      - value
      type: object
    UiTableCustomization:
      description: Customization for UI tables
      example:
        emptyState:
          text: text
        columns:
        - builtinColumnRef: summary
          propertyRef: apiColor
          displayName: Color
          columnRef: myCustomColumn
          type: cell-color-picker
          items:
          - displayName: Active
            icon: CRITICAL
            value: ACTIVE
          - displayName: Active
            icon: CRITICAL
            value: ACTIVE
        - builtinColumnRef: summary
          propertyRef: apiColor
          displayName: Color
          columnRef: myCustomColumn
          type: cell-color-picker
          items:
          - displayName: Active
            icon: CRITICAL
            value: ACTIVE
          - displayName: Active
            icon: CRITICAL
            value: ACTIVE
      properties:
        columns:
          description: A list of columns for the UI table
          items:
            $ref: '#/components/schemas/UiTableColumnCustomization'
          type: array
        emptyState:
          $ref: '#/components/schemas/UiEmptyStateCustomization'
      type: object
    UiTabsCustomization:
      description: UI customization for tabs
      example:
        groups:
        - displayName: displayName
          description: description
          properties:
          - properties
          - properties
        - displayName: displayName
          description: description
          properties:
          - properties
          - properties
      properties:
        groups:
          description: A list of groups
          items:
            $ref: '#/components/schemas/UiTabGroupCustomization'
          type: array
      type: object
    Unit:
      description: The metadata of a unit.
      example:
        description: The second is the base unit of time and defined as 1/86400 of
          a day.
        displayName: second
        displayNamePlural: seconds
        symbol: s
        unitId: Second
      properties:
        description:
          description: A short description of the unit.
          type: string
        displayName:
          description: The display name of the unit.
          type: string
        displayNamePlural:
          description: The plural display name of the unit.
          type: string
        symbol:
          description: The symbol of the unit.
          type: string
        unitId:
          description: The ID of the unit.
          type: string
      required:
      - unitId
      type: object
    UnitConversionResult:
      description: The result of a unit conversion.
      example:
        resultValue: 0.8008281904610115
        unitId: unitId
      properties:
        resultValue:
          description: The result of the unit conversion.
          format: double
          type: number
        unitId:
          description: The ID of the unit of this conversion result.
          type: string
      required:
      - resultValue
      - unitId
      type: object
    UnitList:
      description: A list of units along with their properties.
      example:
        totalCount: 2
        units:
        - description: byte per second
          displayName: byte per second
          displayNamePlural: bytes per second
          symbol: B/s
          unitId: BytePerSecond
        - description: byte per minute
          displayName: byte per minute
          displayNamePlural: bytes per minute
          symbol: B/min
          unitId: BytePerMinute
      properties:
        totalCount:
          description: The total number of units in the result.
          format: int64
          type: integer
        units:
          description: A list of units.
          items:
            $ref: '#/components/schemas/Unit'
          type: array
      required:
      - totalCount
      - units
      type: object
    UpdateJob:
      description: Configuration of the ActiveGate update job.
      example:
        duration: 3608000
        jobId: "-3524498778810258605"
        cancelable: false
        environments:
        - environments
        - environments
        jobState: SUCCEED
        startVersion: 1.185.0.20200201-120000
        agType: ENVIRONMENT
        error: error
        targetVersion: 1.190.0.20200301-130000
        timestamp: 1582031917814
        updateMethod: AUTOMATIC
        updateType: ACTIVE_GATE
      properties:
        agType:
          description: The type of the ActiveGate.
          enum:
          - CLUSTER
          - ENVIRONMENT
          - ENVIRONMENT_MULTI
          example: ENVIRONMENT
          readOnly: true
          type: string
        cancelable:
          description: The job can (`true`) or can't (`false`) be cancelled at the
            moment.
          example: false
          readOnly: true
          type: boolean
        duration:
          description: "The duration of the update, in milliseconds."
          example: 3608000
          format: int64
          readOnly: true
          type: integer
        environments:
          description: A list of environments (specified by IDs) the ActiveGate can
            connect to.
          items:
            type: string
          readOnly: true
          type: array
        error:
          description: The information about update error.
          readOnly: true
          type: string
        jobId:
          description: The ID of the update job.
          example: "-3524498778810258605"
          readOnly: true
          type: string
        jobState:
          description: The status of the update job.
          enum:
          - FAILED
          - IN_PROGRESS
          - PENDING
          - ROLLBACK
          - SCHEDULED
          - SKIPPED
          - SUCCEED
          example: SUCCEED
          readOnly: true
          type: string
        startVersion:
          description: The initial version of the ActiveGate.
          example: 1.185.0.20200201-120000
          readOnly: true
          type: string
        targetVersion:
          description: "The target version of the update. \n\nSpecify the version\
            \ in the `<major>.<minor>.<revision>.<timestamp>` format. \n\nTo update\
            \ to the latest available version, use the `latest` value."
          example: 1.190.0.20200301-130000
          type: string
        timestamp:
          description: "The timestamp of the update job completion. \n\n The `null`\
            \ value means the job is still running."
          example: 1582031917814
          format: int64
          readOnly: true
          type: integer
        updateMethod:
          description: The method of updating the ActiveGate or its component.
          enum:
          - AUTOMATIC
          - MANUAL_INSTALLATION
          - ON_DEMAND
          example: AUTOMATIC
          readOnly: true
          type: string
        updateType:
          description: The component to be updated.
          enum:
          - ACTIVE_GATE
          - REMOTE_PLUGIN_AGENT
          - SYNTHETIC
          - Z_REMOTE
          example: ACTIVE_GATE
          readOnly: true
          type: string
      required:
      - targetVersion
      type: object
    UpdateJobList:
      description: A list of update jobs of the ActiveGate.
      example:
        updateJobs:
        - duration: 3608000
          jobId: "-3524498778810258605"
          cancelable: false
          environments:
          - environments
          - environments
          jobState: SUCCEED
          startVersion: 1.185.0.20200201-120000
          agType: ENVIRONMENT
          error: error
          targetVersion: 1.190.0.20200301-130000
          timestamp: 1582031917814
          updateMethod: AUTOMATIC
          updateType: ACTIVE_GATE
        - duration: 3608000
          jobId: "-3524498778810258605"
          cancelable: false
          environments:
          - environments
          - environments
          jobState: SUCCEED
          startVersion: 1.185.0.20200201-120000
          agType: ENVIRONMENT
          error: error
          targetVersion: 1.190.0.20200301-130000
          timestamp: 1582031917814
          updateMethod: AUTOMATIC
          updateType: ACTIVE_GATE
        agId: 0x3efdd092
      properties:
        agId:
          description: The ID of the ActiveGate.
          example: 0x3efdd092
          readOnly: true
          type: string
        updateJobs:
          description: A list of update jobs of the ActiveGate.
          items:
            $ref: '#/components/schemas/UpdateJob'
          readOnly: true
          type: array
      type: object
    UpdateJobsAll:
      description: A list of ActiveGates with update jobs.
      example:
        allUpdateJobs:
        - updateJobs:
          - duration: 3608000
            jobId: "-3524498778810258605"
            cancelable: false
            environments:
            - environments
            - environments
            jobState: SUCCEED
            startVersion: 1.185.0.20200201-120000
            agType: ENVIRONMENT
            error: error
            targetVersion: 1.190.0.20200301-130000
            timestamp: 1582031917814
            updateMethod: AUTOMATIC
            updateType: ACTIVE_GATE
          - duration: 3608000
            jobId: "-3524498778810258605"
            cancelable: false
            environments:
            - environments
            - environments
            jobState: SUCCEED
            startVersion: 1.185.0.20200201-120000
            agType: ENVIRONMENT
            error: error
            targetVersion: 1.190.0.20200301-130000
            timestamp: 1582031917814
            updateMethod: AUTOMATIC
            updateType: ACTIVE_GATE
          agId: 0x3efdd092
        - updateJobs:
          - duration: 3608000
            jobId: "-3524498778810258605"
            cancelable: false
            environments:
            - environments
            - environments
            jobState: SUCCEED
            startVersion: 1.185.0.20200201-120000
            agType: ENVIRONMENT
            error: error
            targetVersion: 1.190.0.20200301-130000
            timestamp: 1582031917814
            updateMethod: AUTOMATIC
            updateType: ACTIVE_GATE
          - duration: 3608000
            jobId: "-3524498778810258605"
            cancelable: false
            environments:
            - environments
            - environments
            jobState: SUCCEED
            startVersion: 1.185.0.20200201-120000
            agType: ENVIRONMENT
            error: error
            targetVersion: 1.190.0.20200301-130000
            timestamp: 1582031917814
            updateMethod: AUTOMATIC
            updateType: ACTIVE_GATE
          agId: 0x3efdd092
      properties:
        allUpdateJobs:
          description: A list of ActiveGates with update jobs.
          items:
            $ref: '#/components/schemas/UpdateJobList'
          readOnly: true
          type: array
      type: object
    UserPasswordCredentials:
      allOf:
      - $ref: '#/components/schemas/Credentials'
      - properties:
          externalVault:
            $ref: '#/components/schemas/ExternalVault'
          password:
            description: The password of the credential.
            type: string
          user:
            description: The username of the credentials set.
            type: string
        type: object
      description: A credentials set of the `USERNAME_PASSWORD` type.
      required:
      - name
      - scope
      - scopes
      type: object
    ValidationResponse:
      example:
        linesOk: 5
        linesInvalid: 1
        warnings:
          changedMetricKeys:
          - line: 5
            warning: warning
          - line: 5
            warning: warning
          message: message
        error:
          code: 0
          invalidLines:
          - line: 6
            error: error
          - line: 6
            error: error
          message: message
      properties:
        error:
          $ref: '#/components/schemas/MetricIngestError'
        linesInvalid:
          format: int32
          type: integer
        linesOk:
          format: int32
          type: integer
        warnings:
          $ref: '#/components/schemas/Warnings'
      type: object
    Vulnerability:
      description: Describes the exploited vulnerability.
      example:
        codeLocation:
          parameterTypes:
            truncationInfo:
              truncated: true
            values:
            - values
            - values
          functionName: functionName
          displayName: displayName
          className: className
          lineNumber: 0
          returnType: returnType
        vulnerabilityId: vulnerabilityId
        displayName: displayName
        vulnerableFunctionInput:
          inputSegments:
          - type: MALICIOUS_INPUT
            value: value
          - type: MALICIOUS_INPUT
            value: value
          type: COMMAND
        vulnerableFunction:
          parameterTypes:
            truncationInfo:
              truncated: true
            values:
            - values
            - values
          functionName: functionName
          displayName: displayName
          className: className
          returnType: returnType
      properties:
        codeLocation:
          $ref: '#/components/schemas/CodeLocation'
        displayName:
          description: The display name of the vulnerability.
          readOnly: true
          type: string
        vulnerabilityId:
          description: The id of the vulnerability.
          readOnly: true
          type: string
        vulnerableFunction:
          $ref: '#/components/schemas/FunctionDefinition'
        vulnerableFunctionInput:
          $ref: '#/components/schemas/VulnerableFunctionInput'
      readOnly: true
      type: object
    VulnerableComponent:
      description: Vulnerable component of a security problem.
      example:
        fileName: fileName
        displayName: displayName
        id: id
        numberOfAffectedEntities: 9
        shortName: shortName
        affectedEntities:
        - affectedEntities
        - affectedEntities
      properties:
        affectedEntities:
          description: A list of affected entities.
          items:
            description: A list of affected entities.
            readOnly: true
            type: string
          readOnly: true
          type: array
        displayName:
          description: The display name of the vulnerable component.
          readOnly: true
          type: string
        fileName:
          description: The file name of the vulnerable component.
          readOnly: true
          type: string
        id:
          description: The Dynatrace entity ID of the vulnerable component.
          readOnly: true
          type: string
        numberOfAffectedEntities:
          description: The number of affected entities.
          format: int32
          readOnly: true
          type: integer
        shortName:
          description: "The short, component-only name of the vulnerable component."
          readOnly: true
          type: string
      type: object
    VulnerableFunction:
      description: Defines an vulnerable function.
      example:
        functionName: functionName
        filePath: filePath
        className: className
      properties:
        className:
          description: The class name of the vulnerable function.
          readOnly: true
          type: string
        filePath:
          description: The file path of the vulnerable function.
          readOnly: true
          type: string
        functionName:
          description: The function name of the vulnerable function.
          readOnly: true
          type: string
      readOnly: true
      type: object
    VulnerableFunctionInput:
      description: Describes what got passed into the code level vulnerability.
      example:
        inputSegments:
        - type: MALICIOUS_INPUT
          value: value
        - type: MALICIOUS_INPUT
          value: value
        type: COMMAND
      properties:
        inputSegments:
          description: A list of input segments.
          items:
            $ref: '#/components/schemas/VulnerableFunctionInputSegment'
          readOnly: true
          type: array
        type:
          description: The type of the input.
          enum:
          - COMMAND
          - JNDI
          - SQL_STATEMENT
          readOnly: true
          type: string
      readOnly: true
      type: object
    VulnerableFunctionInputSegment:
      description: Describes one segment that was passed into a vulnerable function.
      example:
        type: MALICIOUS_INPUT
        value: value
      properties:
        type:
          description: The type of the input segment.
          enum:
          - MALICIOUS_INPUT
          - REGULAR_INPUT
          - TAINTED_INPUT
          readOnly: true
          type: string
        value:
          description: The value of the input segment.
          readOnly: true
          type: string
      type: object
    VulnerableFunctionProcessGroups:
      description: A vulnerable function including its usage by specific process groups
        in context of the security problem.
      example:
        processGroupsNotAvailable:
        - processGroupsNotAvailable
        - processGroupsNotAvailable
        processGroupsNotInUse:
        - processGroupsNotInUse
        - processGroupsNotInUse
        function:
          functionName: functionName
          filePath: filePath
          className: className
        usage: IN_USE
        processGroupsInUse:
        - processGroupsInUse
        - processGroupsInUse
      properties:
        function:
          $ref: '#/components/schemas/VulnerableFunction'
        processGroupsInUse:
          description: "The process group identifiers, where this vulnerable function\
            \ is in use."
          items:
            description: "The process group identifiers, where this vulnerable function\
              \ is in use."
            readOnly: true
            type: string
          readOnly: true
          type: array
          uniqueItems: true
        processGroupsNotAvailable:
          description: "The process group identifiers, where information about the\
            \ usage of this function not available."
          items:
            description: "The process group identifiers, where information about the\
              \ usage of this function not available."
            readOnly: true
            type: string
          readOnly: true
          type: array
          uniqueItems: true
        processGroupsNotInUse:
          description: "The process group identifiers, where this vulnerable function\
            \ is not in use."
          items:
            description: "The process group identifiers, where this vulnerable function\
              \ is not in use."
            readOnly: true
            type: string
          readOnly: true
          type: array
          uniqueItems: true
        usage:
          description: |-
            The vulnerable function usage based on the given process groups:
            * IN_USE if at least one process group calls this vulnerable function.
            * NOT_IN_USE if all process groups do not call this vulnerable function.
            * NOT_AVAILABLE if vulnerable function usage could not be calculated for at least one process group and no process group calls this vulnerable function.
          enum:
          - IN_USE
          - NOT_AVAILABLE
          - NOT_IN_USE
          readOnly: true
          type: string
      type: object
    VulnerableFunctionsContainer:
      description: |-
        A list of vulnerable functions, their security problem wide usages and their usages per process group.
        Optional: A list of vulnerable function usages per process group for a security problem.
      example:
        vulnerableFunctions:
        - processGroupsNotAvailable:
          - processGroupsNotAvailable
          - processGroupsNotAvailable
          processGroupsNotInUse:
          - processGroupsNotInUse
          - processGroupsNotInUse
          function:
            functionName: functionName
            filePath: filePath
            className: className
          usage: IN_USE
          processGroupsInUse:
          - processGroupsInUse
          - processGroupsInUse
        - processGroupsNotAvailable:
          - processGroupsNotAvailable
          - processGroupsNotAvailable
          processGroupsNotInUse:
          - processGroupsNotInUse
          - processGroupsNotInUse
          function:
            functionName: functionName
            filePath: filePath
            className: className
          usage: IN_USE
          processGroupsInUse:
          - processGroupsInUse
          - processGroupsInUse
        vulnerableFunctionsByProcessGroup:
        - functionsInUse:
          - functionName: functionName
            filePath: filePath
            className: className
          - functionName: functionName
            filePath: filePath
            className: className
          functionsNotAvailable:
          - functionName: functionName
            filePath: filePath
            className: className
          - functionName: functionName
            filePath: filePath
            className: className
          functionsNotInUse:
          - functionName: functionName
            filePath: filePath
            className: className
          - functionName: functionName
            filePath: filePath
            className: className
          processGroup: processGroup
        - functionsInUse:
          - functionName: functionName
            filePath: filePath
            className: className
          - functionName: functionName
            filePath: filePath
            className: className
          functionsNotAvailable:
          - functionName: functionName
            filePath: filePath
            className: className
          - functionName: functionName
            filePath: filePath
            className: className
          functionsNotInUse:
          - functionName: functionName
            filePath: filePath
            className: className
          - functionName: functionName
            filePath: filePath
            className: className
          processGroup: processGroup
      properties:
        vulnerableFunctions:
          description: "A list of vulnerable functions, their security problem wide\
            \ usages and their usages per process group."
          items:
            $ref: '#/components/schemas/VulnerableFunctionProcessGroups'
          readOnly: true
          type: array
        vulnerableFunctionsByProcessGroup:
          description: "A list of vulnerable function usages per process group for\
            \ a security problem.\nThe result is sorted based on the following criteria:\
            \ \n* the number of vulnerable functions in use (descending).\n* the number\
            \ of vulnerable functions not in use (descending).\n* the number of vulnerable\
            \ functions not available (descending).\n* the process group identifier\
            \ (ascending)"
          items:
            $ref: '#/components/schemas/ProcessGroupVulnerableFunctions'
          readOnly: true
          type: array
      type: object
    WarningLine:
      example:
        line: 5
        warning: warning
      properties:
        line:
          format: int32
          type: integer
        warning:
          type: string
      type: object
    Warnings:
      example:
        changedMetricKeys:
        - line: 5
          warning: warning
        - line: 5
          warning: warning
        message: message
      properties:
        changedMetricKeys:
          items:
            $ref: '#/components/schemas/WarningLine'
          type: array
        message:
          type: string
      type: object
    createMonitoringConfiguration_207_response_inner:
      anyOf:
      - $ref: '#/components/schemas/MonitoringConfigurationResponse'
      - $ref: '#/components/schemas/ErrorEnvelope'
      type: string
    uploadMetadataForExtension_request:
      properties:
        description:
          type: string
        logo:
          description: Logo of the extension
          format: binary
          type: string
        name:
          description: "If left empty or blank, the extension name will be used as\
            \ name"
          type: string
      type: object
    uploadJavaScriptMappingFile_request:
      properties:
        file:
          description: JavaScript mapping file to upload.
          format: binary
          type: string
      required:
      - file
      type: object
    AttackEntrypoint_payload_inner:
      description: A list of values that has possibly been truncated.
      example:
        truncationInfo:
          truncated: true
        values:
        - name: name
          type: HTTP_BODY
          value: value
        - name: name
          type: HTTP_BODY
          value: value
      properties:
        truncationInfo:
          $ref: '#/components/schemas/TruncationInfo'
        values:
          description: Values of the list.
          items:
            $ref: '#/components/schemas/EntrypointPayload'
          readOnly: true
          type: array
      readOnly: true
      type: object
    Item_type:
      description: The type of the item's value.
      oneOf:
      - type: string
      - $ref: '#/components/schemas/RefPointer'
      type: object
    PropertyDefinition_type:
      description: The type of the property's value.
      oneOf:
      - type: string
      - $ref: '#/components/schemas/RefPointer'
      type: object
    SecurityProblemDetails_relatedContainerImages_inner:
      description: A list of related container images.
      example:
        containerImages:
        - imageId: imageId
          imageName: imageName
          numberOfAffectedEntities: 9
          affectedEntities:
          - affectedEntities
          - affectedEntities
        - imageId: imageId
          imageName: imageName
          numberOfAffectedEntities: 9
          affectedEntities:
          - affectedEntities
          - affectedEntities
      properties:
        containerImages:
          description: A list of related container images.
          items:
            $ref: '#/components/schemas/RelatedContainerImage'
          readOnly: true
          type: array
      type: object
    UiButtonCustomization_insert:
      description: The position where the button should be shown in the UI
      oneOf:
      - description: The absolute position of the button inside a settings object
        enum:
        - FIRST
        - LAST
        type: string
      - $ref: '#/components/schemas/InsertPosition'
      type: object
  securitySchemes:
    Api-Token:
      description: |-
        Dynatrace API Token

         The token is passed in the **Authorization** header in the following format: `Authorization: Api-Token abcdefjhij1234567890`.
      in: header
      name: Authorization
      type: apiKey
