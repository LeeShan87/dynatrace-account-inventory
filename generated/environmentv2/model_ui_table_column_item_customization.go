/*
Dynatrace Environment API

 Documentation of the Dynatrace Environment API v2. Resources here generally supersede those in v1. Migration of resources from v1 is in progress.   If you miss a resource, consider using the Dynatrace Environment API v1. To read about use cases and examples, see [Dynatrace Documentation](https://dt-url.net/2u23k1k) .  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package environmentv2

import (
	"encoding/json"
)

// checks if the UiTableColumnItemCustomization type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UiTableColumnItemCustomization{}

// UiTableColumnItemCustomization Customization for UI table column items
type UiTableColumnItemCustomization struct {
	// The display name of this item.
	DisplayName *string `json:"displayName,omitempty"`
	// The icon of this item.
	Icon *string `json:"icon,omitempty"`
	// The value of this item.
	Value string `json:"value"`
}

// NewUiTableColumnItemCustomization instantiates a new UiTableColumnItemCustomization object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUiTableColumnItemCustomization(value string) *UiTableColumnItemCustomization {
	this := UiTableColumnItemCustomization{}
	this.Value = value
	return &this
}

// NewUiTableColumnItemCustomizationWithDefaults instantiates a new UiTableColumnItemCustomization object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUiTableColumnItemCustomizationWithDefaults() *UiTableColumnItemCustomization {
	this := UiTableColumnItemCustomization{}
	return &this
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise.
func (o *UiTableColumnItemCustomization) GetDisplayName() string {
	if o == nil || IsNil(o.DisplayName) {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UiTableColumnItemCustomization) GetDisplayNameOk() (*string, bool) {
	if o == nil || IsNil(o.DisplayName) {
		return nil, false
	}
	return o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *UiTableColumnItemCustomization) HasDisplayName() bool {
	if o != nil && !IsNil(o.DisplayName) {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *UiTableColumnItemCustomization) SetDisplayName(v string) {
	o.DisplayName = &v
}

// GetIcon returns the Icon field value if set, zero value otherwise.
func (o *UiTableColumnItemCustomization) GetIcon() string {
	if o == nil || IsNil(o.Icon) {
		var ret string
		return ret
	}
	return *o.Icon
}

// GetIconOk returns a tuple with the Icon field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UiTableColumnItemCustomization) GetIconOk() (*string, bool) {
	if o == nil || IsNil(o.Icon) {
		return nil, false
	}
	return o.Icon, true
}

// HasIcon returns a boolean if a field has been set.
func (o *UiTableColumnItemCustomization) HasIcon() bool {
	if o != nil && !IsNil(o.Icon) {
		return true
	}

	return false
}

// SetIcon gets a reference to the given string and assigns it to the Icon field.
func (o *UiTableColumnItemCustomization) SetIcon(v string) {
	o.Icon = &v
}

// GetValue returns the Value field value
func (o *UiTableColumnItemCustomization) GetValue() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Value
}

// GetValueOk returns a tuple with the Value field value
// and a boolean to check if the value has been set.
func (o *UiTableColumnItemCustomization) GetValueOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Value, true
}

// SetValue sets field value
func (o *UiTableColumnItemCustomization) SetValue(v string) {
	o.Value = v
}

func (o UiTableColumnItemCustomization) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UiTableColumnItemCustomization) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DisplayName) {
		toSerialize["displayName"] = o.DisplayName
	}
	if !IsNil(o.Icon) {
		toSerialize["icon"] = o.Icon
	}
	toSerialize["value"] = o.Value
	return toSerialize, nil
}

type NullableUiTableColumnItemCustomization struct {
	value *UiTableColumnItemCustomization
	isSet bool
}

func (v NullableUiTableColumnItemCustomization) Get() *UiTableColumnItemCustomization {
	return v.value
}

func (v *NullableUiTableColumnItemCustomization) Set(val *UiTableColumnItemCustomization) {
	v.value = val
	v.isSet = true
}

func (v NullableUiTableColumnItemCustomization) IsSet() bool {
	return v.isSet
}

func (v *NullableUiTableColumnItemCustomization) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUiTableColumnItemCustomization(val *UiTableColumnItemCustomization) *NullableUiTableColumnItemCustomization {
	return &NullableUiTableColumnItemCustomization{value: val, isSet: true}
}

func (v NullableUiTableColumnItemCustomization) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUiTableColumnItemCustomization) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


