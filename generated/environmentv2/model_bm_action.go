/*
Dynatrace Environment API

 Documentation of the Dynatrace Environment API v2. Resources here generally supersede those in v1. Migration of resources from v1 is in progress.   If you miss a resource, consider using the Dynatrace Environment API v1. To read about use cases and examples, see [Dynatrace Documentation](https://dt-url.net/2u23k1k) .  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package environmentv2

import (
	"encoding/json"
)

// checks if the BMAction type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BMAction{}

// BMAction Contains detailed information about Browser monitor action.
type BMAction struct {
	// The user experience index of the action.
	ApdexType *string `json:"apdexType,omitempty"`
	// The time spent waiting for CDN resources for the action, in milliseconds.
	CdnBusyTime *int32 `json:"cdnBusyTime,omitempty"`
	// The number of resources fetched from a CDN for the action.
	CdnResources *int32 `json:"cdnResources,omitempty"`
	// The event startTime in client time, in milliseconds.
	ClientTime *int64 `json:"clientTime,omitempty"`
	// Cumulative layout shift: Available for Chromium-based browsers. Measured using Google-provided APIs.
	CumulativeLayoutShift *float64 `json:"cumulativeLayoutShift,omitempty"`
	// The total number of custom errors during the action.
	CustomErrorCount *int32 `json:"customErrorCount,omitempty"`
	// The amount of time spent until the document for the action became interactive, in milliseconds.
	DocumentInteractiveTime *int32 `json:"documentInteractiveTime,omitempty"`
	// The amount of time until the DOM tree is completed, in milliseconds.
	DomCompleteTime *int32 `json:"domCompleteTime,omitempty"`
	// The amount of time until the DOM tree is loaded, in milliseconds.
	DomContentLoadedTime *int32 `json:"domContentLoadedTime,omitempty"`
	// The DNS domain where the action has been recorded
	Domain *string `json:"domain,omitempty"`
	// The duration of the action, in milliseconds
	Duration *int64 `json:"duration,omitempty"`
	// The stop time of the action on the server, in UTC milliseconds
	EndTime *int64 `json:"endTime,omitempty"`
	EntryAction *bool `json:"entryAction,omitempty"`
	ExitAction *bool `json:"exitAction,omitempty"`
	// The first input delay (FID) is the time (in milliseconds) that the browser took to respond to the first user input.
	FirstInputDelay *int32 `json:"firstInputDelay,omitempty"`
	// The time spent waiting for resources from the originating server for the action, in milliseconds.
	FirstPartyBusyTime *int32 `json:"firstPartyBusyTime,omitempty"`
	// The number of resources fetched from the originating server for the action.
	FirstPartyResources *int32 `json:"firstPartyResources,omitempty"`
	// The amount of time spent on the frontend rendering for the action, in milliseconds.
	FrontendTime *int32 `json:"frontendTime,omitempty"`
	// The total number of Javascript errors during the action.
	JavascriptErrorCount *int32 `json:"javascriptErrorCount,omitempty"`
	// The largest contentful paint (LCP) is the time (in milliseconds) that the largest element on the page took to render.
	LargestContentfulPaint *int32 `json:"largestContentfulPaint,omitempty"`
	// The amount of time until the load event ended, in milliseconds.
	LoadEventEnd *int32 `json:"loadEventEnd,omitempty"`
	// The amount of time until the load event started, in milliseconds.
	LoadEventStart *int32 `json:"loadEventStart,omitempty"`
	// The name of the action.
	Name *string `json:"name,omitempty"`
	// The timestamp of the navigation start, in UTC milliseconds.
	NavigationStartTime *int64 `json:"navigationStartTime,omitempty"`
	// The amount of time spent on the data transfer for the action, in milliseconds.
	NetworkTime *int32 `json:"networkTime,omitempty"`
	// The referrer.
	Referrer *string `json:"referrer,omitempty"`
	// The total number of request errors during the action.
	RequestErrorCount *int32 `json:"requestErrorCount,omitempty"`
	// The amount of time until the request started, in milliseconds.
	RequestStart *int32 `json:"requestStart,omitempty"`
	// The amount of time until the response ended, in milliseconds.
	ResponseEnd *int32 `json:"responseEnd,omitempty"`
	// The amount of time until the response started, in milliseconds.
	ResponseStart *int32 `json:"responseStart,omitempty"`
	// The amount of time spent on the server-side processing for the action, in milliseconds.
	ServerTime *int32 `json:"serverTime,omitempty"`
	// A score indicating how quickly the page content is visually populated. A low speed index means that most parts of a page are rendering quickly.
	SpeedIndex *int32 `json:"speedIndex,omitempty"`
	// The sequence number of the action (to get a kind of order).
	StartSequenceNumber *int32 `json:"startSequenceNumber,omitempty"`
	// The start time of the action on the server, in in UTC milliseconds.
	StartTime *int64 `json:"startTime,omitempty"`
	// The URL of the action.
	TargetUrl *string `json:"targetUrl,omitempty"`
	// The time spent waiting for third party resources for the action, in milliseconds.
	ThirdPartyBusyTime *int32 `json:"thirdPartyBusyTime,omitempty"`
	// The number of third party resources loaded for the action.
	ThirdPartyResources *int32 `json:"thirdPartyResources,omitempty"`
	// The time between the moment when the browser receives a request to download a resource and the time that it actually starts downloading the resource in ms.
	TotalBlockingTime *int32 `json:"totalBlockingTime,omitempty"`
	// The type of the action.
	Type *string `json:"type,omitempty"`
	// The total number of properties in the action.
	UserActionPropertyCount *int32 `json:"userActionPropertyCount,omitempty"`
	// The amount of time until the page is visually complete, in milliseconds.
	VisuallyCompleteTime *int32 `json:"visuallyCompleteTime,omitempty"`
}

// NewBMAction instantiates a new BMAction object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBMAction(monitorType string) *BMAction {
	this := BMAction{}
	this.MonitorType = monitorType
	return &this
}

// NewBMActionWithDefaults instantiates a new BMAction object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBMActionWithDefaults() *BMAction {
	this := BMAction{}
	return &this
}

// GetApdexType returns the ApdexType field value if set, zero value otherwise.
func (o *BMAction) GetApdexType() string {
	if o == nil || IsNil(o.ApdexType) {
		var ret string
		return ret
	}
	return *o.ApdexType
}

// GetApdexTypeOk returns a tuple with the ApdexType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BMAction) GetApdexTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ApdexType) {
		return nil, false
	}
	return o.ApdexType, true
}

// HasApdexType returns a boolean if a field has been set.
func (o *BMAction) HasApdexType() bool {
	if o != nil && !IsNil(o.ApdexType) {
		return true
	}

	return false
}

// SetApdexType gets a reference to the given string and assigns it to the ApdexType field.
func (o *BMAction) SetApdexType(v string) {
	o.ApdexType = &v
}

// GetCdnBusyTime returns the CdnBusyTime field value if set, zero value otherwise.
func (o *BMAction) GetCdnBusyTime() int32 {
	if o == nil || IsNil(o.CdnBusyTime) {
		var ret int32
		return ret
	}
	return *o.CdnBusyTime
}

// GetCdnBusyTimeOk returns a tuple with the CdnBusyTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BMAction) GetCdnBusyTimeOk() (*int32, bool) {
	if o == nil || IsNil(o.CdnBusyTime) {
		return nil, false
	}
	return o.CdnBusyTime, true
}

// HasCdnBusyTime returns a boolean if a field has been set.
func (o *BMAction) HasCdnBusyTime() bool {
	if o != nil && !IsNil(o.CdnBusyTime) {
		return true
	}

	return false
}

// SetCdnBusyTime gets a reference to the given int32 and assigns it to the CdnBusyTime field.
func (o *BMAction) SetCdnBusyTime(v int32) {
	o.CdnBusyTime = &v
}

// GetCdnResources returns the CdnResources field value if set, zero value otherwise.
func (o *BMAction) GetCdnResources() int32 {
	if o == nil || IsNil(o.CdnResources) {
		var ret int32
		return ret
	}
	return *o.CdnResources
}

// GetCdnResourcesOk returns a tuple with the CdnResources field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BMAction) GetCdnResourcesOk() (*int32, bool) {
	if o == nil || IsNil(o.CdnResources) {
		return nil, false
	}
	return o.CdnResources, true
}

// HasCdnResources returns a boolean if a field has been set.
func (o *BMAction) HasCdnResources() bool {
	if o != nil && !IsNil(o.CdnResources) {
		return true
	}

	return false
}

// SetCdnResources gets a reference to the given int32 and assigns it to the CdnResources field.
func (o *BMAction) SetCdnResources(v int32) {
	o.CdnResources = &v
}

// GetClientTime returns the ClientTime field value if set, zero value otherwise.
func (o *BMAction) GetClientTime() int64 {
	if o == nil || IsNil(o.ClientTime) {
		var ret int64
		return ret
	}
	return *o.ClientTime
}

// GetClientTimeOk returns a tuple with the ClientTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BMAction) GetClientTimeOk() (*int64, bool) {
	if o == nil || IsNil(o.ClientTime) {
		return nil, false
	}
	return o.ClientTime, true
}

// HasClientTime returns a boolean if a field has been set.
func (o *BMAction) HasClientTime() bool {
	if o != nil && !IsNil(o.ClientTime) {
		return true
	}

	return false
}

// SetClientTime gets a reference to the given int64 and assigns it to the ClientTime field.
func (o *BMAction) SetClientTime(v int64) {
	o.ClientTime = &v
}

// GetCumulativeLayoutShift returns the CumulativeLayoutShift field value if set, zero value otherwise.
func (o *BMAction) GetCumulativeLayoutShift() float64 {
	if o == nil || IsNil(o.CumulativeLayoutShift) {
		var ret float64
		return ret
	}
	return *o.CumulativeLayoutShift
}

// GetCumulativeLayoutShiftOk returns a tuple with the CumulativeLayoutShift field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BMAction) GetCumulativeLayoutShiftOk() (*float64, bool) {
	if o == nil || IsNil(o.CumulativeLayoutShift) {
		return nil, false
	}
	return o.CumulativeLayoutShift, true
}

// HasCumulativeLayoutShift returns a boolean if a field has been set.
func (o *BMAction) HasCumulativeLayoutShift() bool {
	if o != nil && !IsNil(o.CumulativeLayoutShift) {
		return true
	}

	return false
}

// SetCumulativeLayoutShift gets a reference to the given float64 and assigns it to the CumulativeLayoutShift field.
func (o *BMAction) SetCumulativeLayoutShift(v float64) {
	o.CumulativeLayoutShift = &v
}

// GetCustomErrorCount returns the CustomErrorCount field value if set, zero value otherwise.
func (o *BMAction) GetCustomErrorCount() int32 {
	if o == nil || IsNil(o.CustomErrorCount) {
		var ret int32
		return ret
	}
	return *o.CustomErrorCount
}

// GetCustomErrorCountOk returns a tuple with the CustomErrorCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BMAction) GetCustomErrorCountOk() (*int32, bool) {
	if o == nil || IsNil(o.CustomErrorCount) {
		return nil, false
	}
	return o.CustomErrorCount, true
}

// HasCustomErrorCount returns a boolean if a field has been set.
func (o *BMAction) HasCustomErrorCount() bool {
	if o != nil && !IsNil(o.CustomErrorCount) {
		return true
	}

	return false
}

// SetCustomErrorCount gets a reference to the given int32 and assigns it to the CustomErrorCount field.
func (o *BMAction) SetCustomErrorCount(v int32) {
	o.CustomErrorCount = &v
}

// GetDocumentInteractiveTime returns the DocumentInteractiveTime field value if set, zero value otherwise.
func (o *BMAction) GetDocumentInteractiveTime() int32 {
	if o == nil || IsNil(o.DocumentInteractiveTime) {
		var ret int32
		return ret
	}
	return *o.DocumentInteractiveTime
}

// GetDocumentInteractiveTimeOk returns a tuple with the DocumentInteractiveTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BMAction) GetDocumentInteractiveTimeOk() (*int32, bool) {
	if o == nil || IsNil(o.DocumentInteractiveTime) {
		return nil, false
	}
	return o.DocumentInteractiveTime, true
}

// HasDocumentInteractiveTime returns a boolean if a field has been set.
func (o *BMAction) HasDocumentInteractiveTime() bool {
	if o != nil && !IsNil(o.DocumentInteractiveTime) {
		return true
	}

	return false
}

// SetDocumentInteractiveTime gets a reference to the given int32 and assigns it to the DocumentInteractiveTime field.
func (o *BMAction) SetDocumentInteractiveTime(v int32) {
	o.DocumentInteractiveTime = &v
}

// GetDomCompleteTime returns the DomCompleteTime field value if set, zero value otherwise.
func (o *BMAction) GetDomCompleteTime() int32 {
	if o == nil || IsNil(o.DomCompleteTime) {
		var ret int32
		return ret
	}
	return *o.DomCompleteTime
}

// GetDomCompleteTimeOk returns a tuple with the DomCompleteTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BMAction) GetDomCompleteTimeOk() (*int32, bool) {
	if o == nil || IsNil(o.DomCompleteTime) {
		return nil, false
	}
	return o.DomCompleteTime, true
}

// HasDomCompleteTime returns a boolean if a field has been set.
func (o *BMAction) HasDomCompleteTime() bool {
	if o != nil && !IsNil(o.DomCompleteTime) {
		return true
	}

	return false
}

// SetDomCompleteTime gets a reference to the given int32 and assigns it to the DomCompleteTime field.
func (o *BMAction) SetDomCompleteTime(v int32) {
	o.DomCompleteTime = &v
}

// GetDomContentLoadedTime returns the DomContentLoadedTime field value if set, zero value otherwise.
func (o *BMAction) GetDomContentLoadedTime() int32 {
	if o == nil || IsNil(o.DomContentLoadedTime) {
		var ret int32
		return ret
	}
	return *o.DomContentLoadedTime
}

// GetDomContentLoadedTimeOk returns a tuple with the DomContentLoadedTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BMAction) GetDomContentLoadedTimeOk() (*int32, bool) {
	if o == nil || IsNil(o.DomContentLoadedTime) {
		return nil, false
	}
	return o.DomContentLoadedTime, true
}

// HasDomContentLoadedTime returns a boolean if a field has been set.
func (o *BMAction) HasDomContentLoadedTime() bool {
	if o != nil && !IsNil(o.DomContentLoadedTime) {
		return true
	}

	return false
}

// SetDomContentLoadedTime gets a reference to the given int32 and assigns it to the DomContentLoadedTime field.
func (o *BMAction) SetDomContentLoadedTime(v int32) {
	o.DomContentLoadedTime = &v
}

// GetDomain returns the Domain field value if set, zero value otherwise.
func (o *BMAction) GetDomain() string {
	if o == nil || IsNil(o.Domain) {
		var ret string
		return ret
	}
	return *o.Domain
}

// GetDomainOk returns a tuple with the Domain field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BMAction) GetDomainOk() (*string, bool) {
	if o == nil || IsNil(o.Domain) {
		return nil, false
	}
	return o.Domain, true
}

// HasDomain returns a boolean if a field has been set.
func (o *BMAction) HasDomain() bool {
	if o != nil && !IsNil(o.Domain) {
		return true
	}

	return false
}

// SetDomain gets a reference to the given string and assigns it to the Domain field.
func (o *BMAction) SetDomain(v string) {
	o.Domain = &v
}

// GetDuration returns the Duration field value if set, zero value otherwise.
func (o *BMAction) GetDuration() int64 {
	if o == nil || IsNil(o.Duration) {
		var ret int64
		return ret
	}
	return *o.Duration
}

// GetDurationOk returns a tuple with the Duration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BMAction) GetDurationOk() (*int64, bool) {
	if o == nil || IsNil(o.Duration) {
		return nil, false
	}
	return o.Duration, true
}

// HasDuration returns a boolean if a field has been set.
func (o *BMAction) HasDuration() bool {
	if o != nil && !IsNil(o.Duration) {
		return true
	}

	return false
}

// SetDuration gets a reference to the given int64 and assigns it to the Duration field.
func (o *BMAction) SetDuration(v int64) {
	o.Duration = &v
}

// GetEndTime returns the EndTime field value if set, zero value otherwise.
func (o *BMAction) GetEndTime() int64 {
	if o == nil || IsNil(o.EndTime) {
		var ret int64
		return ret
	}
	return *o.EndTime
}

// GetEndTimeOk returns a tuple with the EndTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BMAction) GetEndTimeOk() (*int64, bool) {
	if o == nil || IsNil(o.EndTime) {
		return nil, false
	}
	return o.EndTime, true
}

// HasEndTime returns a boolean if a field has been set.
func (o *BMAction) HasEndTime() bool {
	if o != nil && !IsNil(o.EndTime) {
		return true
	}

	return false
}

// SetEndTime gets a reference to the given int64 and assigns it to the EndTime field.
func (o *BMAction) SetEndTime(v int64) {
	o.EndTime = &v
}

// GetEntryAction returns the EntryAction field value if set, zero value otherwise.
func (o *BMAction) GetEntryAction() bool {
	if o == nil || IsNil(o.EntryAction) {
		var ret bool
		return ret
	}
	return *o.EntryAction
}

// GetEntryActionOk returns a tuple with the EntryAction field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BMAction) GetEntryActionOk() (*bool, bool) {
	if o == nil || IsNil(o.EntryAction) {
		return nil, false
	}
	return o.EntryAction, true
}

// HasEntryAction returns a boolean if a field has been set.
func (o *BMAction) HasEntryAction() bool {
	if o != nil && !IsNil(o.EntryAction) {
		return true
	}

	return false
}

// SetEntryAction gets a reference to the given bool and assigns it to the EntryAction field.
func (o *BMAction) SetEntryAction(v bool) {
	o.EntryAction = &v
}

// GetExitAction returns the ExitAction field value if set, zero value otherwise.
func (o *BMAction) GetExitAction() bool {
	if o == nil || IsNil(o.ExitAction) {
		var ret bool
		return ret
	}
	return *o.ExitAction
}

// GetExitActionOk returns a tuple with the ExitAction field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BMAction) GetExitActionOk() (*bool, bool) {
	if o == nil || IsNil(o.ExitAction) {
		return nil, false
	}
	return o.ExitAction, true
}

// HasExitAction returns a boolean if a field has been set.
func (o *BMAction) HasExitAction() bool {
	if o != nil && !IsNil(o.ExitAction) {
		return true
	}

	return false
}

// SetExitAction gets a reference to the given bool and assigns it to the ExitAction field.
func (o *BMAction) SetExitAction(v bool) {
	o.ExitAction = &v
}

// GetFirstInputDelay returns the FirstInputDelay field value if set, zero value otherwise.
func (o *BMAction) GetFirstInputDelay() int32 {
	if o == nil || IsNil(o.FirstInputDelay) {
		var ret int32
		return ret
	}
	return *o.FirstInputDelay
}

// GetFirstInputDelayOk returns a tuple with the FirstInputDelay field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BMAction) GetFirstInputDelayOk() (*int32, bool) {
	if o == nil || IsNil(o.FirstInputDelay) {
		return nil, false
	}
	return o.FirstInputDelay, true
}

// HasFirstInputDelay returns a boolean if a field has been set.
func (o *BMAction) HasFirstInputDelay() bool {
	if o != nil && !IsNil(o.FirstInputDelay) {
		return true
	}

	return false
}

// SetFirstInputDelay gets a reference to the given int32 and assigns it to the FirstInputDelay field.
func (o *BMAction) SetFirstInputDelay(v int32) {
	o.FirstInputDelay = &v
}

// GetFirstPartyBusyTime returns the FirstPartyBusyTime field value if set, zero value otherwise.
func (o *BMAction) GetFirstPartyBusyTime() int32 {
	if o == nil || IsNil(o.FirstPartyBusyTime) {
		var ret int32
		return ret
	}
	return *o.FirstPartyBusyTime
}

// GetFirstPartyBusyTimeOk returns a tuple with the FirstPartyBusyTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BMAction) GetFirstPartyBusyTimeOk() (*int32, bool) {
	if o == nil || IsNil(o.FirstPartyBusyTime) {
		return nil, false
	}
	return o.FirstPartyBusyTime, true
}

// HasFirstPartyBusyTime returns a boolean if a field has been set.
func (o *BMAction) HasFirstPartyBusyTime() bool {
	if o != nil && !IsNil(o.FirstPartyBusyTime) {
		return true
	}

	return false
}

// SetFirstPartyBusyTime gets a reference to the given int32 and assigns it to the FirstPartyBusyTime field.
func (o *BMAction) SetFirstPartyBusyTime(v int32) {
	o.FirstPartyBusyTime = &v
}

// GetFirstPartyResources returns the FirstPartyResources field value if set, zero value otherwise.
func (o *BMAction) GetFirstPartyResources() int32 {
	if o == nil || IsNil(o.FirstPartyResources) {
		var ret int32
		return ret
	}
	return *o.FirstPartyResources
}

// GetFirstPartyResourcesOk returns a tuple with the FirstPartyResources field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BMAction) GetFirstPartyResourcesOk() (*int32, bool) {
	if o == nil || IsNil(o.FirstPartyResources) {
		return nil, false
	}
	return o.FirstPartyResources, true
}

// HasFirstPartyResources returns a boolean if a field has been set.
func (o *BMAction) HasFirstPartyResources() bool {
	if o != nil && !IsNil(o.FirstPartyResources) {
		return true
	}

	return false
}

// SetFirstPartyResources gets a reference to the given int32 and assigns it to the FirstPartyResources field.
func (o *BMAction) SetFirstPartyResources(v int32) {
	o.FirstPartyResources = &v
}

// GetFrontendTime returns the FrontendTime field value if set, zero value otherwise.
func (o *BMAction) GetFrontendTime() int32 {
	if o == nil || IsNil(o.FrontendTime) {
		var ret int32
		return ret
	}
	return *o.FrontendTime
}

// GetFrontendTimeOk returns a tuple with the FrontendTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BMAction) GetFrontendTimeOk() (*int32, bool) {
	if o == nil || IsNil(o.FrontendTime) {
		return nil, false
	}
	return o.FrontendTime, true
}

// HasFrontendTime returns a boolean if a field has been set.
func (o *BMAction) HasFrontendTime() bool {
	if o != nil && !IsNil(o.FrontendTime) {
		return true
	}

	return false
}

// SetFrontendTime gets a reference to the given int32 and assigns it to the FrontendTime field.
func (o *BMAction) SetFrontendTime(v int32) {
	o.FrontendTime = &v
}

// GetJavascriptErrorCount returns the JavascriptErrorCount field value if set, zero value otherwise.
func (o *BMAction) GetJavascriptErrorCount() int32 {
	if o == nil || IsNil(o.JavascriptErrorCount) {
		var ret int32
		return ret
	}
	return *o.JavascriptErrorCount
}

// GetJavascriptErrorCountOk returns a tuple with the JavascriptErrorCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BMAction) GetJavascriptErrorCountOk() (*int32, bool) {
	if o == nil || IsNil(o.JavascriptErrorCount) {
		return nil, false
	}
	return o.JavascriptErrorCount, true
}

// HasJavascriptErrorCount returns a boolean if a field has been set.
func (o *BMAction) HasJavascriptErrorCount() bool {
	if o != nil && !IsNil(o.JavascriptErrorCount) {
		return true
	}

	return false
}

// SetJavascriptErrorCount gets a reference to the given int32 and assigns it to the JavascriptErrorCount field.
func (o *BMAction) SetJavascriptErrorCount(v int32) {
	o.JavascriptErrorCount = &v
}

// GetLargestContentfulPaint returns the LargestContentfulPaint field value if set, zero value otherwise.
func (o *BMAction) GetLargestContentfulPaint() int32 {
	if o == nil || IsNil(o.LargestContentfulPaint) {
		var ret int32
		return ret
	}
	return *o.LargestContentfulPaint
}

// GetLargestContentfulPaintOk returns a tuple with the LargestContentfulPaint field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BMAction) GetLargestContentfulPaintOk() (*int32, bool) {
	if o == nil || IsNil(o.LargestContentfulPaint) {
		return nil, false
	}
	return o.LargestContentfulPaint, true
}

// HasLargestContentfulPaint returns a boolean if a field has been set.
func (o *BMAction) HasLargestContentfulPaint() bool {
	if o != nil && !IsNil(o.LargestContentfulPaint) {
		return true
	}

	return false
}

// SetLargestContentfulPaint gets a reference to the given int32 and assigns it to the LargestContentfulPaint field.
func (o *BMAction) SetLargestContentfulPaint(v int32) {
	o.LargestContentfulPaint = &v
}

// GetLoadEventEnd returns the LoadEventEnd field value if set, zero value otherwise.
func (o *BMAction) GetLoadEventEnd() int32 {
	if o == nil || IsNil(o.LoadEventEnd) {
		var ret int32
		return ret
	}
	return *o.LoadEventEnd
}

// GetLoadEventEndOk returns a tuple with the LoadEventEnd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BMAction) GetLoadEventEndOk() (*int32, bool) {
	if o == nil || IsNil(o.LoadEventEnd) {
		return nil, false
	}
	return o.LoadEventEnd, true
}

// HasLoadEventEnd returns a boolean if a field has been set.
func (o *BMAction) HasLoadEventEnd() bool {
	if o != nil && !IsNil(o.LoadEventEnd) {
		return true
	}

	return false
}

// SetLoadEventEnd gets a reference to the given int32 and assigns it to the LoadEventEnd field.
func (o *BMAction) SetLoadEventEnd(v int32) {
	o.LoadEventEnd = &v
}

// GetLoadEventStart returns the LoadEventStart field value if set, zero value otherwise.
func (o *BMAction) GetLoadEventStart() int32 {
	if o == nil || IsNil(o.LoadEventStart) {
		var ret int32
		return ret
	}
	return *o.LoadEventStart
}

// GetLoadEventStartOk returns a tuple with the LoadEventStart field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BMAction) GetLoadEventStartOk() (*int32, bool) {
	if o == nil || IsNil(o.LoadEventStart) {
		return nil, false
	}
	return o.LoadEventStart, true
}

// HasLoadEventStart returns a boolean if a field has been set.
func (o *BMAction) HasLoadEventStart() bool {
	if o != nil && !IsNil(o.LoadEventStart) {
		return true
	}

	return false
}

// SetLoadEventStart gets a reference to the given int32 and assigns it to the LoadEventStart field.
func (o *BMAction) SetLoadEventStart(v int32) {
	o.LoadEventStart = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *BMAction) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BMAction) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *BMAction) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *BMAction) SetName(v string) {
	o.Name = &v
}

// GetNavigationStartTime returns the NavigationStartTime field value if set, zero value otherwise.
func (o *BMAction) GetNavigationStartTime() int64 {
	if o == nil || IsNil(o.NavigationStartTime) {
		var ret int64
		return ret
	}
	return *o.NavigationStartTime
}

// GetNavigationStartTimeOk returns a tuple with the NavigationStartTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BMAction) GetNavigationStartTimeOk() (*int64, bool) {
	if o == nil || IsNil(o.NavigationStartTime) {
		return nil, false
	}
	return o.NavigationStartTime, true
}

// HasNavigationStartTime returns a boolean if a field has been set.
func (o *BMAction) HasNavigationStartTime() bool {
	if o != nil && !IsNil(o.NavigationStartTime) {
		return true
	}

	return false
}

// SetNavigationStartTime gets a reference to the given int64 and assigns it to the NavigationStartTime field.
func (o *BMAction) SetNavigationStartTime(v int64) {
	o.NavigationStartTime = &v
}

// GetNetworkTime returns the NetworkTime field value if set, zero value otherwise.
func (o *BMAction) GetNetworkTime() int32 {
	if o == nil || IsNil(o.NetworkTime) {
		var ret int32
		return ret
	}
	return *o.NetworkTime
}

// GetNetworkTimeOk returns a tuple with the NetworkTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BMAction) GetNetworkTimeOk() (*int32, bool) {
	if o == nil || IsNil(o.NetworkTime) {
		return nil, false
	}
	return o.NetworkTime, true
}

// HasNetworkTime returns a boolean if a field has been set.
func (o *BMAction) HasNetworkTime() bool {
	if o != nil && !IsNil(o.NetworkTime) {
		return true
	}

	return false
}

// SetNetworkTime gets a reference to the given int32 and assigns it to the NetworkTime field.
func (o *BMAction) SetNetworkTime(v int32) {
	o.NetworkTime = &v
}

// GetReferrer returns the Referrer field value if set, zero value otherwise.
func (o *BMAction) GetReferrer() string {
	if o == nil || IsNil(o.Referrer) {
		var ret string
		return ret
	}
	return *o.Referrer
}

// GetReferrerOk returns a tuple with the Referrer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BMAction) GetReferrerOk() (*string, bool) {
	if o == nil || IsNil(o.Referrer) {
		return nil, false
	}
	return o.Referrer, true
}

// HasReferrer returns a boolean if a field has been set.
func (o *BMAction) HasReferrer() bool {
	if o != nil && !IsNil(o.Referrer) {
		return true
	}

	return false
}

// SetReferrer gets a reference to the given string and assigns it to the Referrer field.
func (o *BMAction) SetReferrer(v string) {
	o.Referrer = &v
}

// GetRequestErrorCount returns the RequestErrorCount field value if set, zero value otherwise.
func (o *BMAction) GetRequestErrorCount() int32 {
	if o == nil || IsNil(o.RequestErrorCount) {
		var ret int32
		return ret
	}
	return *o.RequestErrorCount
}

// GetRequestErrorCountOk returns a tuple with the RequestErrorCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BMAction) GetRequestErrorCountOk() (*int32, bool) {
	if o == nil || IsNil(o.RequestErrorCount) {
		return nil, false
	}
	return o.RequestErrorCount, true
}

// HasRequestErrorCount returns a boolean if a field has been set.
func (o *BMAction) HasRequestErrorCount() bool {
	if o != nil && !IsNil(o.RequestErrorCount) {
		return true
	}

	return false
}

// SetRequestErrorCount gets a reference to the given int32 and assigns it to the RequestErrorCount field.
func (o *BMAction) SetRequestErrorCount(v int32) {
	o.RequestErrorCount = &v
}

// GetRequestStart returns the RequestStart field value if set, zero value otherwise.
func (o *BMAction) GetRequestStart() int32 {
	if o == nil || IsNil(o.RequestStart) {
		var ret int32
		return ret
	}
	return *o.RequestStart
}

// GetRequestStartOk returns a tuple with the RequestStart field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BMAction) GetRequestStartOk() (*int32, bool) {
	if o == nil || IsNil(o.RequestStart) {
		return nil, false
	}
	return o.RequestStart, true
}

// HasRequestStart returns a boolean if a field has been set.
func (o *BMAction) HasRequestStart() bool {
	if o != nil && !IsNil(o.RequestStart) {
		return true
	}

	return false
}

// SetRequestStart gets a reference to the given int32 and assigns it to the RequestStart field.
func (o *BMAction) SetRequestStart(v int32) {
	o.RequestStart = &v
}

// GetResponseEnd returns the ResponseEnd field value if set, zero value otherwise.
func (o *BMAction) GetResponseEnd() int32 {
	if o == nil || IsNil(o.ResponseEnd) {
		var ret int32
		return ret
	}
	return *o.ResponseEnd
}

// GetResponseEndOk returns a tuple with the ResponseEnd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BMAction) GetResponseEndOk() (*int32, bool) {
	if o == nil || IsNil(o.ResponseEnd) {
		return nil, false
	}
	return o.ResponseEnd, true
}

// HasResponseEnd returns a boolean if a field has been set.
func (o *BMAction) HasResponseEnd() bool {
	if o != nil && !IsNil(o.ResponseEnd) {
		return true
	}

	return false
}

// SetResponseEnd gets a reference to the given int32 and assigns it to the ResponseEnd field.
func (o *BMAction) SetResponseEnd(v int32) {
	o.ResponseEnd = &v
}

// GetResponseStart returns the ResponseStart field value if set, zero value otherwise.
func (o *BMAction) GetResponseStart() int32 {
	if o == nil || IsNil(o.ResponseStart) {
		var ret int32
		return ret
	}
	return *o.ResponseStart
}

// GetResponseStartOk returns a tuple with the ResponseStart field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BMAction) GetResponseStartOk() (*int32, bool) {
	if o == nil || IsNil(o.ResponseStart) {
		return nil, false
	}
	return o.ResponseStart, true
}

// HasResponseStart returns a boolean if a field has been set.
func (o *BMAction) HasResponseStart() bool {
	if o != nil && !IsNil(o.ResponseStart) {
		return true
	}

	return false
}

// SetResponseStart gets a reference to the given int32 and assigns it to the ResponseStart field.
func (o *BMAction) SetResponseStart(v int32) {
	o.ResponseStart = &v
}

// GetServerTime returns the ServerTime field value if set, zero value otherwise.
func (o *BMAction) GetServerTime() int32 {
	if o == nil || IsNil(o.ServerTime) {
		var ret int32
		return ret
	}
	return *o.ServerTime
}

// GetServerTimeOk returns a tuple with the ServerTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BMAction) GetServerTimeOk() (*int32, bool) {
	if o == nil || IsNil(o.ServerTime) {
		return nil, false
	}
	return o.ServerTime, true
}

// HasServerTime returns a boolean if a field has been set.
func (o *BMAction) HasServerTime() bool {
	if o != nil && !IsNil(o.ServerTime) {
		return true
	}

	return false
}

// SetServerTime gets a reference to the given int32 and assigns it to the ServerTime field.
func (o *BMAction) SetServerTime(v int32) {
	o.ServerTime = &v
}

// GetSpeedIndex returns the SpeedIndex field value if set, zero value otherwise.
func (o *BMAction) GetSpeedIndex() int32 {
	if o == nil || IsNil(o.SpeedIndex) {
		var ret int32
		return ret
	}
	return *o.SpeedIndex
}

// GetSpeedIndexOk returns a tuple with the SpeedIndex field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BMAction) GetSpeedIndexOk() (*int32, bool) {
	if o == nil || IsNil(o.SpeedIndex) {
		return nil, false
	}
	return o.SpeedIndex, true
}

// HasSpeedIndex returns a boolean if a field has been set.
func (o *BMAction) HasSpeedIndex() bool {
	if o != nil && !IsNil(o.SpeedIndex) {
		return true
	}

	return false
}

// SetSpeedIndex gets a reference to the given int32 and assigns it to the SpeedIndex field.
func (o *BMAction) SetSpeedIndex(v int32) {
	o.SpeedIndex = &v
}

// GetStartSequenceNumber returns the StartSequenceNumber field value if set, zero value otherwise.
func (o *BMAction) GetStartSequenceNumber() int32 {
	if o == nil || IsNil(o.StartSequenceNumber) {
		var ret int32
		return ret
	}
	return *o.StartSequenceNumber
}

// GetStartSequenceNumberOk returns a tuple with the StartSequenceNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BMAction) GetStartSequenceNumberOk() (*int32, bool) {
	if o == nil || IsNil(o.StartSequenceNumber) {
		return nil, false
	}
	return o.StartSequenceNumber, true
}

// HasStartSequenceNumber returns a boolean if a field has been set.
func (o *BMAction) HasStartSequenceNumber() bool {
	if o != nil && !IsNil(o.StartSequenceNumber) {
		return true
	}

	return false
}

// SetStartSequenceNumber gets a reference to the given int32 and assigns it to the StartSequenceNumber field.
func (o *BMAction) SetStartSequenceNumber(v int32) {
	o.StartSequenceNumber = &v
}

// GetStartTime returns the StartTime field value if set, zero value otherwise.
func (o *BMAction) GetStartTime() int64 {
	if o == nil || IsNil(o.StartTime) {
		var ret int64
		return ret
	}
	return *o.StartTime
}

// GetStartTimeOk returns a tuple with the StartTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BMAction) GetStartTimeOk() (*int64, bool) {
	if o == nil || IsNil(o.StartTime) {
		return nil, false
	}
	return o.StartTime, true
}

// HasStartTime returns a boolean if a field has been set.
func (o *BMAction) HasStartTime() bool {
	if o != nil && !IsNil(o.StartTime) {
		return true
	}

	return false
}

// SetStartTime gets a reference to the given int64 and assigns it to the StartTime field.
func (o *BMAction) SetStartTime(v int64) {
	o.StartTime = &v
}

// GetTargetUrl returns the TargetUrl field value if set, zero value otherwise.
func (o *BMAction) GetTargetUrl() string {
	if o == nil || IsNil(o.TargetUrl) {
		var ret string
		return ret
	}
	return *o.TargetUrl
}

// GetTargetUrlOk returns a tuple with the TargetUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BMAction) GetTargetUrlOk() (*string, bool) {
	if o == nil || IsNil(o.TargetUrl) {
		return nil, false
	}
	return o.TargetUrl, true
}

// HasTargetUrl returns a boolean if a field has been set.
func (o *BMAction) HasTargetUrl() bool {
	if o != nil && !IsNil(o.TargetUrl) {
		return true
	}

	return false
}

// SetTargetUrl gets a reference to the given string and assigns it to the TargetUrl field.
func (o *BMAction) SetTargetUrl(v string) {
	o.TargetUrl = &v
}

// GetThirdPartyBusyTime returns the ThirdPartyBusyTime field value if set, zero value otherwise.
func (o *BMAction) GetThirdPartyBusyTime() int32 {
	if o == nil || IsNil(o.ThirdPartyBusyTime) {
		var ret int32
		return ret
	}
	return *o.ThirdPartyBusyTime
}

// GetThirdPartyBusyTimeOk returns a tuple with the ThirdPartyBusyTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BMAction) GetThirdPartyBusyTimeOk() (*int32, bool) {
	if o == nil || IsNil(o.ThirdPartyBusyTime) {
		return nil, false
	}
	return o.ThirdPartyBusyTime, true
}

// HasThirdPartyBusyTime returns a boolean if a field has been set.
func (o *BMAction) HasThirdPartyBusyTime() bool {
	if o != nil && !IsNil(o.ThirdPartyBusyTime) {
		return true
	}

	return false
}

// SetThirdPartyBusyTime gets a reference to the given int32 and assigns it to the ThirdPartyBusyTime field.
func (o *BMAction) SetThirdPartyBusyTime(v int32) {
	o.ThirdPartyBusyTime = &v
}

// GetThirdPartyResources returns the ThirdPartyResources field value if set, zero value otherwise.
func (o *BMAction) GetThirdPartyResources() int32 {
	if o == nil || IsNil(o.ThirdPartyResources) {
		var ret int32
		return ret
	}
	return *o.ThirdPartyResources
}

// GetThirdPartyResourcesOk returns a tuple with the ThirdPartyResources field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BMAction) GetThirdPartyResourcesOk() (*int32, bool) {
	if o == nil || IsNil(o.ThirdPartyResources) {
		return nil, false
	}
	return o.ThirdPartyResources, true
}

// HasThirdPartyResources returns a boolean if a field has been set.
func (o *BMAction) HasThirdPartyResources() bool {
	if o != nil && !IsNil(o.ThirdPartyResources) {
		return true
	}

	return false
}

// SetThirdPartyResources gets a reference to the given int32 and assigns it to the ThirdPartyResources field.
func (o *BMAction) SetThirdPartyResources(v int32) {
	o.ThirdPartyResources = &v
}

// GetTotalBlockingTime returns the TotalBlockingTime field value if set, zero value otherwise.
func (o *BMAction) GetTotalBlockingTime() int32 {
	if o == nil || IsNil(o.TotalBlockingTime) {
		var ret int32
		return ret
	}
	return *o.TotalBlockingTime
}

// GetTotalBlockingTimeOk returns a tuple with the TotalBlockingTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BMAction) GetTotalBlockingTimeOk() (*int32, bool) {
	if o == nil || IsNil(o.TotalBlockingTime) {
		return nil, false
	}
	return o.TotalBlockingTime, true
}

// HasTotalBlockingTime returns a boolean if a field has been set.
func (o *BMAction) HasTotalBlockingTime() bool {
	if o != nil && !IsNil(o.TotalBlockingTime) {
		return true
	}

	return false
}

// SetTotalBlockingTime gets a reference to the given int32 and assigns it to the TotalBlockingTime field.
func (o *BMAction) SetTotalBlockingTime(v int32) {
	o.TotalBlockingTime = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *BMAction) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BMAction) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *BMAction) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *BMAction) SetType(v string) {
	o.Type = &v
}

// GetUserActionPropertyCount returns the UserActionPropertyCount field value if set, zero value otherwise.
func (o *BMAction) GetUserActionPropertyCount() int32 {
	if o == nil || IsNil(o.UserActionPropertyCount) {
		var ret int32
		return ret
	}
	return *o.UserActionPropertyCount
}

// GetUserActionPropertyCountOk returns a tuple with the UserActionPropertyCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BMAction) GetUserActionPropertyCountOk() (*int32, bool) {
	if o == nil || IsNil(o.UserActionPropertyCount) {
		return nil, false
	}
	return o.UserActionPropertyCount, true
}

// HasUserActionPropertyCount returns a boolean if a field has been set.
func (o *BMAction) HasUserActionPropertyCount() bool {
	if o != nil && !IsNil(o.UserActionPropertyCount) {
		return true
	}

	return false
}

// SetUserActionPropertyCount gets a reference to the given int32 and assigns it to the UserActionPropertyCount field.
func (o *BMAction) SetUserActionPropertyCount(v int32) {
	o.UserActionPropertyCount = &v
}

// GetVisuallyCompleteTime returns the VisuallyCompleteTime field value if set, zero value otherwise.
func (o *BMAction) GetVisuallyCompleteTime() int32 {
	if o == nil || IsNil(o.VisuallyCompleteTime) {
		var ret int32
		return ret
	}
	return *o.VisuallyCompleteTime
}

// GetVisuallyCompleteTimeOk returns a tuple with the VisuallyCompleteTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BMAction) GetVisuallyCompleteTimeOk() (*int32, bool) {
	if o == nil || IsNil(o.VisuallyCompleteTime) {
		return nil, false
	}
	return o.VisuallyCompleteTime, true
}

// HasVisuallyCompleteTime returns a boolean if a field has been set.
func (o *BMAction) HasVisuallyCompleteTime() bool {
	if o != nil && !IsNil(o.VisuallyCompleteTime) {
		return true
	}

	return false
}

// SetVisuallyCompleteTime gets a reference to the given int32 and assigns it to the VisuallyCompleteTime field.
func (o *BMAction) SetVisuallyCompleteTime(v int32) {
	o.VisuallyCompleteTime = &v
}

func (o BMAction) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BMAction) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ApdexType) {
		toSerialize["apdexType"] = o.ApdexType
	}
	if !IsNil(o.CdnBusyTime) {
		toSerialize["cdnBusyTime"] = o.CdnBusyTime
	}
	if !IsNil(o.CdnResources) {
		toSerialize["cdnResources"] = o.CdnResources
	}
	if !IsNil(o.ClientTime) {
		toSerialize["clientTime"] = o.ClientTime
	}
	if !IsNil(o.CumulativeLayoutShift) {
		toSerialize["cumulativeLayoutShift"] = o.CumulativeLayoutShift
	}
	if !IsNil(o.CustomErrorCount) {
		toSerialize["customErrorCount"] = o.CustomErrorCount
	}
	if !IsNil(o.DocumentInteractiveTime) {
		toSerialize["documentInteractiveTime"] = o.DocumentInteractiveTime
	}
	if !IsNil(o.DomCompleteTime) {
		toSerialize["domCompleteTime"] = o.DomCompleteTime
	}
	if !IsNil(o.DomContentLoadedTime) {
		toSerialize["domContentLoadedTime"] = o.DomContentLoadedTime
	}
	if !IsNil(o.Domain) {
		toSerialize["domain"] = o.Domain
	}
	if !IsNil(o.Duration) {
		toSerialize["duration"] = o.Duration
	}
	if !IsNil(o.EndTime) {
		toSerialize["endTime"] = o.EndTime
	}
	if !IsNil(o.EntryAction) {
		toSerialize["entryAction"] = o.EntryAction
	}
	if !IsNil(o.ExitAction) {
		toSerialize["exitAction"] = o.ExitAction
	}
	if !IsNil(o.FirstInputDelay) {
		toSerialize["firstInputDelay"] = o.FirstInputDelay
	}
	if !IsNil(o.FirstPartyBusyTime) {
		toSerialize["firstPartyBusyTime"] = o.FirstPartyBusyTime
	}
	if !IsNil(o.FirstPartyResources) {
		toSerialize["firstPartyResources"] = o.FirstPartyResources
	}
	if !IsNil(o.FrontendTime) {
		toSerialize["frontendTime"] = o.FrontendTime
	}
	if !IsNil(o.JavascriptErrorCount) {
		toSerialize["javascriptErrorCount"] = o.JavascriptErrorCount
	}
	if !IsNil(o.LargestContentfulPaint) {
		toSerialize["largestContentfulPaint"] = o.LargestContentfulPaint
	}
	if !IsNil(o.LoadEventEnd) {
		toSerialize["loadEventEnd"] = o.LoadEventEnd
	}
	if !IsNil(o.LoadEventStart) {
		toSerialize["loadEventStart"] = o.LoadEventStart
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.NavigationStartTime) {
		toSerialize["navigationStartTime"] = o.NavigationStartTime
	}
	if !IsNil(o.NetworkTime) {
		toSerialize["networkTime"] = o.NetworkTime
	}
	if !IsNil(o.Referrer) {
		toSerialize["referrer"] = o.Referrer
	}
	if !IsNil(o.RequestErrorCount) {
		toSerialize["requestErrorCount"] = o.RequestErrorCount
	}
	if !IsNil(o.RequestStart) {
		toSerialize["requestStart"] = o.RequestStart
	}
	if !IsNil(o.ResponseEnd) {
		toSerialize["responseEnd"] = o.ResponseEnd
	}
	if !IsNil(o.ResponseStart) {
		toSerialize["responseStart"] = o.ResponseStart
	}
	if !IsNil(o.ServerTime) {
		toSerialize["serverTime"] = o.ServerTime
	}
	if !IsNil(o.SpeedIndex) {
		toSerialize["speedIndex"] = o.SpeedIndex
	}
	if !IsNil(o.StartSequenceNumber) {
		toSerialize["startSequenceNumber"] = o.StartSequenceNumber
	}
	if !IsNil(o.StartTime) {
		toSerialize["startTime"] = o.StartTime
	}
	if !IsNil(o.TargetUrl) {
		toSerialize["targetUrl"] = o.TargetUrl
	}
	if !IsNil(o.ThirdPartyBusyTime) {
		toSerialize["thirdPartyBusyTime"] = o.ThirdPartyBusyTime
	}
	if !IsNil(o.ThirdPartyResources) {
		toSerialize["thirdPartyResources"] = o.ThirdPartyResources
	}
	if !IsNil(o.TotalBlockingTime) {
		toSerialize["totalBlockingTime"] = o.TotalBlockingTime
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.UserActionPropertyCount) {
		toSerialize["userActionPropertyCount"] = o.UserActionPropertyCount
	}
	if !IsNil(o.VisuallyCompleteTime) {
		toSerialize["visuallyCompleteTime"] = o.VisuallyCompleteTime
	}
	return toSerialize, nil
}

type NullableBMAction struct {
	value *BMAction
	isSet bool
}

func (v NullableBMAction) Get() *BMAction {
	return v.value
}

func (v *NullableBMAction) Set(val *BMAction) {
	v.value = val
	v.isSet = true
}

func (v NullableBMAction) IsSet() bool {
	return v.isSet
}

func (v *NullableBMAction) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBMAction(val *BMAction) *NullableBMAction {
	return &NullableBMAction{value: val, isSet: true}
}

func (v NullableBMAction) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBMAction) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


