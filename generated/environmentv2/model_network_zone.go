/*
Dynatrace Environment API

 Documentation of the Dynatrace Environment API v2. Resources here generally supersede those in v1. Migration of resources from v1 is in progress.   If you miss a resource, consider using the Dynatrace Environment API v1. To read about use cases and examples, see [Dynatrace Documentation](https://dt-url.net/2u23k1k) .  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package environmentv2

import (
	"encoding/json"
)

// checks if the NetworkZone type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &NetworkZone{}

// NetworkZone Configuration of a network zone.
type NetworkZone struct {
	// A list of alternative network zones.
	AlternativeZones []string `json:"alternativeZones,omitempty"`
	// A short description of the network zone.
	Description *string `json:"description,omitempty"`
	// The fallback mode of the network zone.
	FallbackMode *string `json:"fallbackMode,omitempty"`
	// The ID of the network zone.
	Id *string `json:"id,omitempty"`
	// The number of ActiveGates in the network zone.
	NumOfConfiguredActiveGates *int32 `json:"numOfConfiguredActiveGates,omitempty"`
	// The number of OneAgents that are configured to use the network zone as primary.
	NumOfConfiguredOneAgents *int32 `json:"numOfConfiguredOneAgents,omitempty"`
	// The number of OneAgents from other network zones that are using ActiveGates in the network zone.    This is a fraction of **numOfOneAgentsUsing**.   One possible reason for switching to another zone is that a firewall is preventing a OneAgent from connecting to any ActiveGate in the preferred network zone.  
	NumOfOneAgentsFromOtherZones *int32 `json:"numOfOneAgentsFromOtherZones,omitempty"`
	// The number of OneAgents that are using ActiveGates in the network zone.
	NumOfOneAgentsUsing *int32 `json:"numOfOneAgentsUsing,omitempty"`
	// Indicates if a global network zone is overridden (managed only).
	OverridesGlobal *bool `json:"overridesGlobal,omitempty"`
	// Specifies the scope of the network zone (managed only).
	Scope *string `json:"scope,omitempty"`
}

// NewNetworkZone instantiates a new NetworkZone object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNetworkZone() *NetworkZone {
	this := NetworkZone{}
	return &this
}

// NewNetworkZoneWithDefaults instantiates a new NetworkZone object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNetworkZoneWithDefaults() *NetworkZone {
	this := NetworkZone{}
	return &this
}

// GetAlternativeZones returns the AlternativeZones field value if set, zero value otherwise.
func (o *NetworkZone) GetAlternativeZones() []string {
	if o == nil || IsNil(o.AlternativeZones) {
		var ret []string
		return ret
	}
	return o.AlternativeZones
}

// GetAlternativeZonesOk returns a tuple with the AlternativeZones field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkZone) GetAlternativeZonesOk() ([]string, bool) {
	if o == nil || IsNil(o.AlternativeZones) {
		return nil, false
	}
	return o.AlternativeZones, true
}

// HasAlternativeZones returns a boolean if a field has been set.
func (o *NetworkZone) HasAlternativeZones() bool {
	if o != nil && !IsNil(o.AlternativeZones) {
		return true
	}

	return false
}

// SetAlternativeZones gets a reference to the given []string and assigns it to the AlternativeZones field.
func (o *NetworkZone) SetAlternativeZones(v []string) {
	o.AlternativeZones = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *NetworkZone) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkZone) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *NetworkZone) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *NetworkZone) SetDescription(v string) {
	o.Description = &v
}

// GetFallbackMode returns the FallbackMode field value if set, zero value otherwise.
func (o *NetworkZone) GetFallbackMode() string {
	if o == nil || IsNil(o.FallbackMode) {
		var ret string
		return ret
	}
	return *o.FallbackMode
}

// GetFallbackModeOk returns a tuple with the FallbackMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkZone) GetFallbackModeOk() (*string, bool) {
	if o == nil || IsNil(o.FallbackMode) {
		return nil, false
	}
	return o.FallbackMode, true
}

// HasFallbackMode returns a boolean if a field has been set.
func (o *NetworkZone) HasFallbackMode() bool {
	if o != nil && !IsNil(o.FallbackMode) {
		return true
	}

	return false
}

// SetFallbackMode gets a reference to the given string and assigns it to the FallbackMode field.
func (o *NetworkZone) SetFallbackMode(v string) {
	o.FallbackMode = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *NetworkZone) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkZone) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *NetworkZone) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *NetworkZone) SetId(v string) {
	o.Id = &v
}

// GetNumOfConfiguredActiveGates returns the NumOfConfiguredActiveGates field value if set, zero value otherwise.
func (o *NetworkZone) GetNumOfConfiguredActiveGates() int32 {
	if o == nil || IsNil(o.NumOfConfiguredActiveGates) {
		var ret int32
		return ret
	}
	return *o.NumOfConfiguredActiveGates
}

// GetNumOfConfiguredActiveGatesOk returns a tuple with the NumOfConfiguredActiveGates field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkZone) GetNumOfConfiguredActiveGatesOk() (*int32, bool) {
	if o == nil || IsNil(o.NumOfConfiguredActiveGates) {
		return nil, false
	}
	return o.NumOfConfiguredActiveGates, true
}

// HasNumOfConfiguredActiveGates returns a boolean if a field has been set.
func (o *NetworkZone) HasNumOfConfiguredActiveGates() bool {
	if o != nil && !IsNil(o.NumOfConfiguredActiveGates) {
		return true
	}

	return false
}

// SetNumOfConfiguredActiveGates gets a reference to the given int32 and assigns it to the NumOfConfiguredActiveGates field.
func (o *NetworkZone) SetNumOfConfiguredActiveGates(v int32) {
	o.NumOfConfiguredActiveGates = &v
}

// GetNumOfConfiguredOneAgents returns the NumOfConfiguredOneAgents field value if set, zero value otherwise.
func (o *NetworkZone) GetNumOfConfiguredOneAgents() int32 {
	if o == nil || IsNil(o.NumOfConfiguredOneAgents) {
		var ret int32
		return ret
	}
	return *o.NumOfConfiguredOneAgents
}

// GetNumOfConfiguredOneAgentsOk returns a tuple with the NumOfConfiguredOneAgents field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkZone) GetNumOfConfiguredOneAgentsOk() (*int32, bool) {
	if o == nil || IsNil(o.NumOfConfiguredOneAgents) {
		return nil, false
	}
	return o.NumOfConfiguredOneAgents, true
}

// HasNumOfConfiguredOneAgents returns a boolean if a field has been set.
func (o *NetworkZone) HasNumOfConfiguredOneAgents() bool {
	if o != nil && !IsNil(o.NumOfConfiguredOneAgents) {
		return true
	}

	return false
}

// SetNumOfConfiguredOneAgents gets a reference to the given int32 and assigns it to the NumOfConfiguredOneAgents field.
func (o *NetworkZone) SetNumOfConfiguredOneAgents(v int32) {
	o.NumOfConfiguredOneAgents = &v
}

// GetNumOfOneAgentsFromOtherZones returns the NumOfOneAgentsFromOtherZones field value if set, zero value otherwise.
func (o *NetworkZone) GetNumOfOneAgentsFromOtherZones() int32 {
	if o == nil || IsNil(o.NumOfOneAgentsFromOtherZones) {
		var ret int32
		return ret
	}
	return *o.NumOfOneAgentsFromOtherZones
}

// GetNumOfOneAgentsFromOtherZonesOk returns a tuple with the NumOfOneAgentsFromOtherZones field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkZone) GetNumOfOneAgentsFromOtherZonesOk() (*int32, bool) {
	if o == nil || IsNil(o.NumOfOneAgentsFromOtherZones) {
		return nil, false
	}
	return o.NumOfOneAgentsFromOtherZones, true
}

// HasNumOfOneAgentsFromOtherZones returns a boolean if a field has been set.
func (o *NetworkZone) HasNumOfOneAgentsFromOtherZones() bool {
	if o != nil && !IsNil(o.NumOfOneAgentsFromOtherZones) {
		return true
	}

	return false
}

// SetNumOfOneAgentsFromOtherZones gets a reference to the given int32 and assigns it to the NumOfOneAgentsFromOtherZones field.
func (o *NetworkZone) SetNumOfOneAgentsFromOtherZones(v int32) {
	o.NumOfOneAgentsFromOtherZones = &v
}

// GetNumOfOneAgentsUsing returns the NumOfOneAgentsUsing field value if set, zero value otherwise.
func (o *NetworkZone) GetNumOfOneAgentsUsing() int32 {
	if o == nil || IsNil(o.NumOfOneAgentsUsing) {
		var ret int32
		return ret
	}
	return *o.NumOfOneAgentsUsing
}

// GetNumOfOneAgentsUsingOk returns a tuple with the NumOfOneAgentsUsing field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkZone) GetNumOfOneAgentsUsingOk() (*int32, bool) {
	if o == nil || IsNil(o.NumOfOneAgentsUsing) {
		return nil, false
	}
	return o.NumOfOneAgentsUsing, true
}

// HasNumOfOneAgentsUsing returns a boolean if a field has been set.
func (o *NetworkZone) HasNumOfOneAgentsUsing() bool {
	if o != nil && !IsNil(o.NumOfOneAgentsUsing) {
		return true
	}

	return false
}

// SetNumOfOneAgentsUsing gets a reference to the given int32 and assigns it to the NumOfOneAgentsUsing field.
func (o *NetworkZone) SetNumOfOneAgentsUsing(v int32) {
	o.NumOfOneAgentsUsing = &v
}

// GetOverridesGlobal returns the OverridesGlobal field value if set, zero value otherwise.
func (o *NetworkZone) GetOverridesGlobal() bool {
	if o == nil || IsNil(o.OverridesGlobal) {
		var ret bool
		return ret
	}
	return *o.OverridesGlobal
}

// GetOverridesGlobalOk returns a tuple with the OverridesGlobal field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkZone) GetOverridesGlobalOk() (*bool, bool) {
	if o == nil || IsNil(o.OverridesGlobal) {
		return nil, false
	}
	return o.OverridesGlobal, true
}

// HasOverridesGlobal returns a boolean if a field has been set.
func (o *NetworkZone) HasOverridesGlobal() bool {
	if o != nil && !IsNil(o.OverridesGlobal) {
		return true
	}

	return false
}

// SetOverridesGlobal gets a reference to the given bool and assigns it to the OverridesGlobal field.
func (o *NetworkZone) SetOverridesGlobal(v bool) {
	o.OverridesGlobal = &v
}

// GetScope returns the Scope field value if set, zero value otherwise.
func (o *NetworkZone) GetScope() string {
	if o == nil || IsNil(o.Scope) {
		var ret string
		return ret
	}
	return *o.Scope
}

// GetScopeOk returns a tuple with the Scope field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkZone) GetScopeOk() (*string, bool) {
	if o == nil || IsNil(o.Scope) {
		return nil, false
	}
	return o.Scope, true
}

// HasScope returns a boolean if a field has been set.
func (o *NetworkZone) HasScope() bool {
	if o != nil && !IsNil(o.Scope) {
		return true
	}

	return false
}

// SetScope gets a reference to the given string and assigns it to the Scope field.
func (o *NetworkZone) SetScope(v string) {
	o.Scope = &v
}

func (o NetworkZone) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o NetworkZone) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AlternativeZones) {
		toSerialize["alternativeZones"] = o.AlternativeZones
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.FallbackMode) {
		toSerialize["fallbackMode"] = o.FallbackMode
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.NumOfConfiguredActiveGates) {
		toSerialize["numOfConfiguredActiveGates"] = o.NumOfConfiguredActiveGates
	}
	if !IsNil(o.NumOfConfiguredOneAgents) {
		toSerialize["numOfConfiguredOneAgents"] = o.NumOfConfiguredOneAgents
	}
	if !IsNil(o.NumOfOneAgentsFromOtherZones) {
		toSerialize["numOfOneAgentsFromOtherZones"] = o.NumOfOneAgentsFromOtherZones
	}
	if !IsNil(o.NumOfOneAgentsUsing) {
		toSerialize["numOfOneAgentsUsing"] = o.NumOfOneAgentsUsing
	}
	if !IsNil(o.OverridesGlobal) {
		toSerialize["overridesGlobal"] = o.OverridesGlobal
	}
	if !IsNil(o.Scope) {
		toSerialize["scope"] = o.Scope
	}
	return toSerialize, nil
}

type NullableNetworkZone struct {
	value *NetworkZone
	isSet bool
}

func (v NullableNetworkZone) Get() *NetworkZone {
	return v.value
}

func (v *NullableNetworkZone) Set(val *NetworkZone) {
	v.value = val
	v.isSet = true
}

func (v NullableNetworkZone) IsSet() bool {
	return v.isSet
}

func (v *NullableNetworkZone) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNetworkZone(val *NetworkZone) *NullableNetworkZone {
	return &NullableNetworkZone{value: val, isSet: true}
}

func (v NullableNetworkZone) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNetworkZone) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


