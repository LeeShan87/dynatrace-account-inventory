/*
Dynatrace Environment API

 Documentation of the Dynatrace Environment API v2. Resources here generally supersede those in v1. Migration of resources from v1 is in progress.   If you miss a resource, consider using the Dynatrace Environment API v1. To read about use cases and examples, see [Dynatrace Documentation](https://dt-url.net/2u23k1k) .  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package environmentv2

import (
	"encoding/json"
)

// checks if the ActiveGateTokenEnforcement type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ActiveGateTokenEnforcement{}

// ActiveGateTokenEnforcement The status of ActiveGate tokens enforcement.
type ActiveGateTokenEnforcement struct {
	// If `true`, ActiveGate tokens are enforced automatically.
	AutoEnforced *bool `json:"autoEnforced,omitempty"`
	AutoEnforcementEstimation *Duration `json:"autoEnforcementEstimation,omitempty"`
	// If `true`, ActiveGate tokens are manually enforced by user.
	ManualEnforced *bool `json:"manualEnforced,omitempty"`
}

// NewActiveGateTokenEnforcement instantiates a new ActiveGateTokenEnforcement object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewActiveGateTokenEnforcement() *ActiveGateTokenEnforcement {
	this := ActiveGateTokenEnforcement{}
	return &this
}

// NewActiveGateTokenEnforcementWithDefaults instantiates a new ActiveGateTokenEnforcement object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewActiveGateTokenEnforcementWithDefaults() *ActiveGateTokenEnforcement {
	this := ActiveGateTokenEnforcement{}
	return &this
}

// GetAutoEnforced returns the AutoEnforced field value if set, zero value otherwise.
func (o *ActiveGateTokenEnforcement) GetAutoEnforced() bool {
	if o == nil || IsNil(o.AutoEnforced) {
		var ret bool
		return ret
	}
	return *o.AutoEnforced
}

// GetAutoEnforcedOk returns a tuple with the AutoEnforced field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActiveGateTokenEnforcement) GetAutoEnforcedOk() (*bool, bool) {
	if o == nil || IsNil(o.AutoEnforced) {
		return nil, false
	}
	return o.AutoEnforced, true
}

// HasAutoEnforced returns a boolean if a field has been set.
func (o *ActiveGateTokenEnforcement) HasAutoEnforced() bool {
	if o != nil && !IsNil(o.AutoEnforced) {
		return true
	}

	return false
}

// SetAutoEnforced gets a reference to the given bool and assigns it to the AutoEnforced field.
func (o *ActiveGateTokenEnforcement) SetAutoEnforced(v bool) {
	o.AutoEnforced = &v
}

// GetAutoEnforcementEstimation returns the AutoEnforcementEstimation field value if set, zero value otherwise.
func (o *ActiveGateTokenEnforcement) GetAutoEnforcementEstimation() Duration {
	if o == nil || IsNil(o.AutoEnforcementEstimation) {
		var ret Duration
		return ret
	}
	return *o.AutoEnforcementEstimation
}

// GetAutoEnforcementEstimationOk returns a tuple with the AutoEnforcementEstimation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActiveGateTokenEnforcement) GetAutoEnforcementEstimationOk() (*Duration, bool) {
	if o == nil || IsNil(o.AutoEnforcementEstimation) {
		return nil, false
	}
	return o.AutoEnforcementEstimation, true
}

// HasAutoEnforcementEstimation returns a boolean if a field has been set.
func (o *ActiveGateTokenEnforcement) HasAutoEnforcementEstimation() bool {
	if o != nil && !IsNil(o.AutoEnforcementEstimation) {
		return true
	}

	return false
}

// SetAutoEnforcementEstimation gets a reference to the given Duration and assigns it to the AutoEnforcementEstimation field.
func (o *ActiveGateTokenEnforcement) SetAutoEnforcementEstimation(v Duration) {
	o.AutoEnforcementEstimation = &v
}

// GetManualEnforced returns the ManualEnforced field value if set, zero value otherwise.
func (o *ActiveGateTokenEnforcement) GetManualEnforced() bool {
	if o == nil || IsNil(o.ManualEnforced) {
		var ret bool
		return ret
	}
	return *o.ManualEnforced
}

// GetManualEnforcedOk returns a tuple with the ManualEnforced field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActiveGateTokenEnforcement) GetManualEnforcedOk() (*bool, bool) {
	if o == nil || IsNil(o.ManualEnforced) {
		return nil, false
	}
	return o.ManualEnforced, true
}

// HasManualEnforced returns a boolean if a field has been set.
func (o *ActiveGateTokenEnforcement) HasManualEnforced() bool {
	if o != nil && !IsNil(o.ManualEnforced) {
		return true
	}

	return false
}

// SetManualEnforced gets a reference to the given bool and assigns it to the ManualEnforced field.
func (o *ActiveGateTokenEnforcement) SetManualEnforced(v bool) {
	o.ManualEnforced = &v
}

func (o ActiveGateTokenEnforcement) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ActiveGateTokenEnforcement) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AutoEnforced) {
		toSerialize["autoEnforced"] = o.AutoEnforced
	}
	if !IsNil(o.AutoEnforcementEstimation) {
		toSerialize["autoEnforcementEstimation"] = o.AutoEnforcementEstimation
	}
	if !IsNil(o.ManualEnforced) {
		toSerialize["manualEnforced"] = o.ManualEnforced
	}
	return toSerialize, nil
}

type NullableActiveGateTokenEnforcement struct {
	value *ActiveGateTokenEnforcement
	isSet bool
}

func (v NullableActiveGateTokenEnforcement) Get() *ActiveGateTokenEnforcement {
	return v.value
}

func (v *NullableActiveGateTokenEnforcement) Set(val *ActiveGateTokenEnforcement) {
	v.value = val
	v.isSet = true
}

func (v NullableActiveGateTokenEnforcement) IsSet() bool {
	return v.isSet
}

func (v *NullableActiveGateTokenEnforcement) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableActiveGateTokenEnforcement(val *ActiveGateTokenEnforcement) *NullableActiveGateTokenEnforcement {
	return &NullableActiveGateTokenEnforcement{value: val, isSet: true}
}

func (v NullableActiveGateTokenEnforcement) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableActiveGateTokenEnforcement) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


