/*
Dynatrace Environment API

 Documentation of the Dynatrace Environment API v2. Resources here generally supersede those in v1. Migration of resources from v1 is in progress.   If you miss a resource, consider using the Dynatrace Environment API v1. To read about use cases and examples, see [Dynatrace Documentation](https://dt-url.net/2u23k1k) .  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package environmentv2

import (
	"encoding/json"
)

// checks if the RemoteConfigurationManagementJob type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RemoteConfigurationManagementJob{}

// RemoteConfigurationManagementJob Remote configuration management job.
type RemoteConfigurationManagementJob struct {
	// Date (in ISO 8601 format: yyyy-MM-dd'T'HH:mm:ss.SSS'Z') when the remote configuration management job was finished. This field is present only for finished jobs.
	EndTime *string `json:"endTime,omitempty"`
	// Type of entities modified by remote configuration management.
	EntityType *string `json:"entityType,omitempty"`
	// The ID of the remote configuration management job.
	Id *string `json:"id,omitempty"`
	// A list of executed remote configuration management jobs.
	Operations []RemoteConfigurationManagementOperation `json:"operations,omitempty"`
	// Number of entities that were already processed at the time the response was created.
	ProcessedEntitiesCount *int32 `json:"processedEntitiesCount,omitempty"`
	// Date (in ISO 8601 format: yyyy-MM-dd'T'HH:mm:ss.SSS'Z') when the remote configuration management job was started.
	StartTime *string `json:"startTime,omitempty"`
	// Date (in ISO 8601 format: yyyy-MM-dd'T'HH:mm:ss.SSS'Z') when the running remote configuration management job will time-out. This field is present only for running jobs.
	TimeoutTime *string `json:"timeoutTime,omitempty"`
	// Total number of entities to process.
	TotalEntitiesCount *int32 `json:"totalEntitiesCount,omitempty"`
}

// NewRemoteConfigurationManagementJob instantiates a new RemoteConfigurationManagementJob object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRemoteConfigurationManagementJob() *RemoteConfigurationManagementJob {
	this := RemoteConfigurationManagementJob{}
	return &this
}

// NewRemoteConfigurationManagementJobWithDefaults instantiates a new RemoteConfigurationManagementJob object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRemoteConfigurationManagementJobWithDefaults() *RemoteConfigurationManagementJob {
	this := RemoteConfigurationManagementJob{}
	return &this
}

// GetEndTime returns the EndTime field value if set, zero value otherwise.
func (o *RemoteConfigurationManagementJob) GetEndTime() string {
	if o == nil || IsNil(o.EndTime) {
		var ret string
		return ret
	}
	return *o.EndTime
}

// GetEndTimeOk returns a tuple with the EndTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RemoteConfigurationManagementJob) GetEndTimeOk() (*string, bool) {
	if o == nil || IsNil(o.EndTime) {
		return nil, false
	}
	return o.EndTime, true
}

// HasEndTime returns a boolean if a field has been set.
func (o *RemoteConfigurationManagementJob) HasEndTime() bool {
	if o != nil && !IsNil(o.EndTime) {
		return true
	}

	return false
}

// SetEndTime gets a reference to the given string and assigns it to the EndTime field.
func (o *RemoteConfigurationManagementJob) SetEndTime(v string) {
	o.EndTime = &v
}

// GetEntityType returns the EntityType field value if set, zero value otherwise.
func (o *RemoteConfigurationManagementJob) GetEntityType() string {
	if o == nil || IsNil(o.EntityType) {
		var ret string
		return ret
	}
	return *o.EntityType
}

// GetEntityTypeOk returns a tuple with the EntityType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RemoteConfigurationManagementJob) GetEntityTypeOk() (*string, bool) {
	if o == nil || IsNil(o.EntityType) {
		return nil, false
	}
	return o.EntityType, true
}

// HasEntityType returns a boolean if a field has been set.
func (o *RemoteConfigurationManagementJob) HasEntityType() bool {
	if o != nil && !IsNil(o.EntityType) {
		return true
	}

	return false
}

// SetEntityType gets a reference to the given string and assigns it to the EntityType field.
func (o *RemoteConfigurationManagementJob) SetEntityType(v string) {
	o.EntityType = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *RemoteConfigurationManagementJob) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RemoteConfigurationManagementJob) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *RemoteConfigurationManagementJob) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *RemoteConfigurationManagementJob) SetId(v string) {
	o.Id = &v
}

// GetOperations returns the Operations field value if set, zero value otherwise.
func (o *RemoteConfigurationManagementJob) GetOperations() []RemoteConfigurationManagementOperation {
	if o == nil || IsNil(o.Operations) {
		var ret []RemoteConfigurationManagementOperation
		return ret
	}
	return o.Operations
}

// GetOperationsOk returns a tuple with the Operations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RemoteConfigurationManagementJob) GetOperationsOk() ([]RemoteConfigurationManagementOperation, bool) {
	if o == nil || IsNil(o.Operations) {
		return nil, false
	}
	return o.Operations, true
}

// HasOperations returns a boolean if a field has been set.
func (o *RemoteConfigurationManagementJob) HasOperations() bool {
	if o != nil && !IsNil(o.Operations) {
		return true
	}

	return false
}

// SetOperations gets a reference to the given []RemoteConfigurationManagementOperation and assigns it to the Operations field.
func (o *RemoteConfigurationManagementJob) SetOperations(v []RemoteConfigurationManagementOperation) {
	o.Operations = v
}

// GetProcessedEntitiesCount returns the ProcessedEntitiesCount field value if set, zero value otherwise.
func (o *RemoteConfigurationManagementJob) GetProcessedEntitiesCount() int32 {
	if o == nil || IsNil(o.ProcessedEntitiesCount) {
		var ret int32
		return ret
	}
	return *o.ProcessedEntitiesCount
}

// GetProcessedEntitiesCountOk returns a tuple with the ProcessedEntitiesCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RemoteConfigurationManagementJob) GetProcessedEntitiesCountOk() (*int32, bool) {
	if o == nil || IsNil(o.ProcessedEntitiesCount) {
		return nil, false
	}
	return o.ProcessedEntitiesCount, true
}

// HasProcessedEntitiesCount returns a boolean if a field has been set.
func (o *RemoteConfigurationManagementJob) HasProcessedEntitiesCount() bool {
	if o != nil && !IsNil(o.ProcessedEntitiesCount) {
		return true
	}

	return false
}

// SetProcessedEntitiesCount gets a reference to the given int32 and assigns it to the ProcessedEntitiesCount field.
func (o *RemoteConfigurationManagementJob) SetProcessedEntitiesCount(v int32) {
	o.ProcessedEntitiesCount = &v
}

// GetStartTime returns the StartTime field value if set, zero value otherwise.
func (o *RemoteConfigurationManagementJob) GetStartTime() string {
	if o == nil || IsNil(o.StartTime) {
		var ret string
		return ret
	}
	return *o.StartTime
}

// GetStartTimeOk returns a tuple with the StartTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RemoteConfigurationManagementJob) GetStartTimeOk() (*string, bool) {
	if o == nil || IsNil(o.StartTime) {
		return nil, false
	}
	return o.StartTime, true
}

// HasStartTime returns a boolean if a field has been set.
func (o *RemoteConfigurationManagementJob) HasStartTime() bool {
	if o != nil && !IsNil(o.StartTime) {
		return true
	}

	return false
}

// SetStartTime gets a reference to the given string and assigns it to the StartTime field.
func (o *RemoteConfigurationManagementJob) SetStartTime(v string) {
	o.StartTime = &v
}

// GetTimeoutTime returns the TimeoutTime field value if set, zero value otherwise.
func (o *RemoteConfigurationManagementJob) GetTimeoutTime() string {
	if o == nil || IsNil(o.TimeoutTime) {
		var ret string
		return ret
	}
	return *o.TimeoutTime
}

// GetTimeoutTimeOk returns a tuple with the TimeoutTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RemoteConfigurationManagementJob) GetTimeoutTimeOk() (*string, bool) {
	if o == nil || IsNil(o.TimeoutTime) {
		return nil, false
	}
	return o.TimeoutTime, true
}

// HasTimeoutTime returns a boolean if a field has been set.
func (o *RemoteConfigurationManagementJob) HasTimeoutTime() bool {
	if o != nil && !IsNil(o.TimeoutTime) {
		return true
	}

	return false
}

// SetTimeoutTime gets a reference to the given string and assigns it to the TimeoutTime field.
func (o *RemoteConfigurationManagementJob) SetTimeoutTime(v string) {
	o.TimeoutTime = &v
}

// GetTotalEntitiesCount returns the TotalEntitiesCount field value if set, zero value otherwise.
func (o *RemoteConfigurationManagementJob) GetTotalEntitiesCount() int32 {
	if o == nil || IsNil(o.TotalEntitiesCount) {
		var ret int32
		return ret
	}
	return *o.TotalEntitiesCount
}

// GetTotalEntitiesCountOk returns a tuple with the TotalEntitiesCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RemoteConfigurationManagementJob) GetTotalEntitiesCountOk() (*int32, bool) {
	if o == nil || IsNil(o.TotalEntitiesCount) {
		return nil, false
	}
	return o.TotalEntitiesCount, true
}

// HasTotalEntitiesCount returns a boolean if a field has been set.
func (o *RemoteConfigurationManagementJob) HasTotalEntitiesCount() bool {
	if o != nil && !IsNil(o.TotalEntitiesCount) {
		return true
	}

	return false
}

// SetTotalEntitiesCount gets a reference to the given int32 and assigns it to the TotalEntitiesCount field.
func (o *RemoteConfigurationManagementJob) SetTotalEntitiesCount(v int32) {
	o.TotalEntitiesCount = &v
}

func (o RemoteConfigurationManagementJob) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RemoteConfigurationManagementJob) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.EndTime) {
		toSerialize["endTime"] = o.EndTime
	}
	if !IsNil(o.EntityType) {
		toSerialize["entityType"] = o.EntityType
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Operations) {
		toSerialize["operations"] = o.Operations
	}
	if !IsNil(o.ProcessedEntitiesCount) {
		toSerialize["processedEntitiesCount"] = o.ProcessedEntitiesCount
	}
	if !IsNil(o.StartTime) {
		toSerialize["startTime"] = o.StartTime
	}
	if !IsNil(o.TimeoutTime) {
		toSerialize["timeoutTime"] = o.TimeoutTime
	}
	if !IsNil(o.TotalEntitiesCount) {
		toSerialize["totalEntitiesCount"] = o.TotalEntitiesCount
	}
	return toSerialize, nil
}

type NullableRemoteConfigurationManagementJob struct {
	value *RemoteConfigurationManagementJob
	isSet bool
}

func (v NullableRemoteConfigurationManagementJob) Get() *RemoteConfigurationManagementJob {
	return v.value
}

func (v *NullableRemoteConfigurationManagementJob) Set(val *RemoteConfigurationManagementJob) {
	v.value = val
	v.isSet = true
}

func (v NullableRemoteConfigurationManagementJob) IsSet() bool {
	return v.isSet
}

func (v *NullableRemoteConfigurationManagementJob) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRemoteConfigurationManagementJob(val *RemoteConfigurationManagementJob) *NullableRemoteConfigurationManagementJob {
	return &NullableRemoteConfigurationManagementJob{value: val, isSet: true}
}

func (v NullableRemoteConfigurationManagementJob) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRemoteConfigurationManagementJob) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


