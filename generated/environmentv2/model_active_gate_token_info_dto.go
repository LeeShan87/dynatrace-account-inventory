/*
Dynatrace Environment API

 Documentation of the Dynatrace Environment API v2. Resources here generally supersede those in v1. Migration of resources from v1 is in progress.   If you miss a resource, consider using the Dynatrace Environment API v1. To read about use cases and examples, see [Dynatrace Documentation](https://dt-url.net/2u23k1k) .  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package environmentv2

import (
	"encoding/json"
)

// checks if the ActiveGateTokenInfoDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ActiveGateTokenInfoDto{}

// ActiveGateTokenInfoDto Information about ActiveGate token.
type ActiveGateTokenInfoDto struct {
	// The environment ID to which the token belongs.   Only available if more than one environment is supported.
	EnvironmentId *string `json:"environmentId,omitempty"`
	// The ActiveGate token identifier, consisting of [prefix and public part](https://dt-url.net/rn00tjg) of the token.
	Id *string `json:"id,omitempty"`
	// State of the ActiveGate token.
	State *string `json:"state,omitempty"`
}

// NewActiveGateTokenInfoDto instantiates a new ActiveGateTokenInfoDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewActiveGateTokenInfoDto() *ActiveGateTokenInfoDto {
	this := ActiveGateTokenInfoDto{}
	return &this
}

// NewActiveGateTokenInfoDtoWithDefaults instantiates a new ActiveGateTokenInfoDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewActiveGateTokenInfoDtoWithDefaults() *ActiveGateTokenInfoDto {
	this := ActiveGateTokenInfoDto{}
	return &this
}

// GetEnvironmentId returns the EnvironmentId field value if set, zero value otherwise.
func (o *ActiveGateTokenInfoDto) GetEnvironmentId() string {
	if o == nil || IsNil(o.EnvironmentId) {
		var ret string
		return ret
	}
	return *o.EnvironmentId
}

// GetEnvironmentIdOk returns a tuple with the EnvironmentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActiveGateTokenInfoDto) GetEnvironmentIdOk() (*string, bool) {
	if o == nil || IsNil(o.EnvironmentId) {
		return nil, false
	}
	return o.EnvironmentId, true
}

// HasEnvironmentId returns a boolean if a field has been set.
func (o *ActiveGateTokenInfoDto) HasEnvironmentId() bool {
	if o != nil && !IsNil(o.EnvironmentId) {
		return true
	}

	return false
}

// SetEnvironmentId gets a reference to the given string and assigns it to the EnvironmentId field.
func (o *ActiveGateTokenInfoDto) SetEnvironmentId(v string) {
	o.EnvironmentId = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ActiveGateTokenInfoDto) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActiveGateTokenInfoDto) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ActiveGateTokenInfoDto) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *ActiveGateTokenInfoDto) SetId(v string) {
	o.Id = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *ActiveGateTokenInfoDto) GetState() string {
	if o == nil || IsNil(o.State) {
		var ret string
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActiveGateTokenInfoDto) GetStateOk() (*string, bool) {
	if o == nil || IsNil(o.State) {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *ActiveGateTokenInfoDto) HasState() bool {
	if o != nil && !IsNil(o.State) {
		return true
	}

	return false
}

// SetState gets a reference to the given string and assigns it to the State field.
func (o *ActiveGateTokenInfoDto) SetState(v string) {
	o.State = &v
}

func (o ActiveGateTokenInfoDto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ActiveGateTokenInfoDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.EnvironmentId) {
		toSerialize["environmentId"] = o.EnvironmentId
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.State) {
		toSerialize["state"] = o.State
	}
	return toSerialize, nil
}

type NullableActiveGateTokenInfoDto struct {
	value *ActiveGateTokenInfoDto
	isSet bool
}

func (v NullableActiveGateTokenInfoDto) Get() *ActiveGateTokenInfoDto {
	return v.value
}

func (v *NullableActiveGateTokenInfoDto) Set(val *ActiveGateTokenInfoDto) {
	v.value = val
	v.isSet = true
}

func (v NullableActiveGateTokenInfoDto) IsSet() bool {
	return v.isSet
}

func (v *NullableActiveGateTokenInfoDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableActiveGateTokenInfoDto(val *ActiveGateTokenInfoDto) *NullableActiveGateTokenInfoDto {
	return &NullableActiveGateTokenInfoDto{value: val, isSet: true}
}

func (v NullableActiveGateTokenInfoDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableActiveGateTokenInfoDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


