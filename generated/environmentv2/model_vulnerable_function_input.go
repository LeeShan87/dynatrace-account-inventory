/*
Dynatrace Environment API

 Documentation of the Dynatrace Environment API v2. Resources here generally supersede those in v1. Migration of resources from v1 is in progress.   If you miss a resource, consider using the Dynatrace Environment API v1. To read about use cases and examples, see [Dynatrace Documentation](https://dt-url.net/2u23k1k) .  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package environmentv2

import (
	"encoding/json"
)

// checks if the VulnerableFunctionInput type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VulnerableFunctionInput{}

// VulnerableFunctionInput Describes what got passed into the code level vulnerability.
type VulnerableFunctionInput struct {
	// A list of input segments.
	InputSegments []VulnerableFunctionInputSegment `json:"inputSegments,omitempty"`
	// The type of the input.
	Type *string `json:"type,omitempty"`
}

// NewVulnerableFunctionInput instantiates a new VulnerableFunctionInput object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVulnerableFunctionInput() *VulnerableFunctionInput {
	this := VulnerableFunctionInput{}
	return &this
}

// NewVulnerableFunctionInputWithDefaults instantiates a new VulnerableFunctionInput object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVulnerableFunctionInputWithDefaults() *VulnerableFunctionInput {
	this := VulnerableFunctionInput{}
	return &this
}

// GetInputSegments returns the InputSegments field value if set, zero value otherwise.
func (o *VulnerableFunctionInput) GetInputSegments() []VulnerableFunctionInputSegment {
	if o == nil || IsNil(o.InputSegments) {
		var ret []VulnerableFunctionInputSegment
		return ret
	}
	return o.InputSegments
}

// GetInputSegmentsOk returns a tuple with the InputSegments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VulnerableFunctionInput) GetInputSegmentsOk() ([]VulnerableFunctionInputSegment, bool) {
	if o == nil || IsNil(o.InputSegments) {
		return nil, false
	}
	return o.InputSegments, true
}

// HasInputSegments returns a boolean if a field has been set.
func (o *VulnerableFunctionInput) HasInputSegments() bool {
	if o != nil && !IsNil(o.InputSegments) {
		return true
	}

	return false
}

// SetInputSegments gets a reference to the given []VulnerableFunctionInputSegment and assigns it to the InputSegments field.
func (o *VulnerableFunctionInput) SetInputSegments(v []VulnerableFunctionInputSegment) {
	o.InputSegments = v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *VulnerableFunctionInput) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VulnerableFunctionInput) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *VulnerableFunctionInput) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *VulnerableFunctionInput) SetType(v string) {
	o.Type = &v
}

func (o VulnerableFunctionInput) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VulnerableFunctionInput) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.InputSegments) {
		toSerialize["inputSegments"] = o.InputSegments
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	return toSerialize, nil
}

type NullableVulnerableFunctionInput struct {
	value *VulnerableFunctionInput
	isSet bool
}

func (v NullableVulnerableFunctionInput) Get() *VulnerableFunctionInput {
	return v.value
}

func (v *NullableVulnerableFunctionInput) Set(val *VulnerableFunctionInput) {
	v.value = val
	v.isSet = true
}

func (v NullableVulnerableFunctionInput) IsSet() bool {
	return v.isSet
}

func (v *NullableVulnerableFunctionInput) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVulnerableFunctionInput(val *VulnerableFunctionInput) *NullableVulnerableFunctionInput {
	return &NullableVulnerableFunctionInput{value: val, isSet: true}
}

func (v NullableVulnerableFunctionInput) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVulnerableFunctionInput) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


