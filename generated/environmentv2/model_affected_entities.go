/*
Dynatrace Environment API

 Documentation of the Dynatrace Environment API v2. Resources here generally supersede those in v1. Migration of resources from v1 is in progress.   If you miss a resource, consider using the Dynatrace Environment API v1. To read about use cases and examples, see [Dynatrace Documentation](https://dt-url.net/2u23k1k) .  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package environmentv2

import (
	"encoding/json"
)

// checks if the AffectedEntities type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AffectedEntities{}

// AffectedEntities Information about affected entities of an attack.
type AffectedEntities struct {
	ProcessGroup *AffectedEntity `json:"processGroup,omitempty"`
	ProcessGroupInstance *AffectedEntity `json:"processGroupInstance,omitempty"`
}

// NewAffectedEntities instantiates a new AffectedEntities object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAffectedEntities() *AffectedEntities {
	this := AffectedEntities{}
	return &this
}

// NewAffectedEntitiesWithDefaults instantiates a new AffectedEntities object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAffectedEntitiesWithDefaults() *AffectedEntities {
	this := AffectedEntities{}
	return &this
}

// GetProcessGroup returns the ProcessGroup field value if set, zero value otherwise.
func (o *AffectedEntities) GetProcessGroup() AffectedEntity {
	if o == nil || IsNil(o.ProcessGroup) {
		var ret AffectedEntity
		return ret
	}
	return *o.ProcessGroup
}

// GetProcessGroupOk returns a tuple with the ProcessGroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AffectedEntities) GetProcessGroupOk() (*AffectedEntity, bool) {
	if o == nil || IsNil(o.ProcessGroup) {
		return nil, false
	}
	return o.ProcessGroup, true
}

// HasProcessGroup returns a boolean if a field has been set.
func (o *AffectedEntities) HasProcessGroup() bool {
	if o != nil && !IsNil(o.ProcessGroup) {
		return true
	}

	return false
}

// SetProcessGroup gets a reference to the given AffectedEntity and assigns it to the ProcessGroup field.
func (o *AffectedEntities) SetProcessGroup(v AffectedEntity) {
	o.ProcessGroup = &v
}

// GetProcessGroupInstance returns the ProcessGroupInstance field value if set, zero value otherwise.
func (o *AffectedEntities) GetProcessGroupInstance() AffectedEntity {
	if o == nil || IsNil(o.ProcessGroupInstance) {
		var ret AffectedEntity
		return ret
	}
	return *o.ProcessGroupInstance
}

// GetProcessGroupInstanceOk returns a tuple with the ProcessGroupInstance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AffectedEntities) GetProcessGroupInstanceOk() (*AffectedEntity, bool) {
	if o == nil || IsNil(o.ProcessGroupInstance) {
		return nil, false
	}
	return o.ProcessGroupInstance, true
}

// HasProcessGroupInstance returns a boolean if a field has been set.
func (o *AffectedEntities) HasProcessGroupInstance() bool {
	if o != nil && !IsNil(o.ProcessGroupInstance) {
		return true
	}

	return false
}

// SetProcessGroupInstance gets a reference to the given AffectedEntity and assigns it to the ProcessGroupInstance field.
func (o *AffectedEntities) SetProcessGroupInstance(v AffectedEntity) {
	o.ProcessGroupInstance = &v
}

func (o AffectedEntities) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AffectedEntities) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ProcessGroup) {
		toSerialize["processGroup"] = o.ProcessGroup
	}
	if !IsNil(o.ProcessGroupInstance) {
		toSerialize["processGroupInstance"] = o.ProcessGroupInstance
	}
	return toSerialize, nil
}

type NullableAffectedEntities struct {
	value *AffectedEntities
	isSet bool
}

func (v NullableAffectedEntities) Get() *AffectedEntities {
	return v.value
}

func (v *NullableAffectedEntities) Set(val *AffectedEntities) {
	v.value = val
	v.isSet = true
}

func (v NullableAffectedEntities) IsSet() bool {
	return v.isSet
}

func (v *NullableAffectedEntities) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAffectedEntities(val *AffectedEntities) *NullableAffectedEntities {
	return &NullableAffectedEntities{value: val, isSet: true}
}

func (v NullableAffectedEntities) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAffectedEntities) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


