/*
Dynatrace Environment API

 Documentation of the Dynatrace Environment API v2. Resources here generally supersede those in v1. Migration of resources from v1 is in progress.   If you miss a resource, consider using the Dynatrace Environment API v1. To read about use cases and examples, see [Dynatrace Documentation](https://dt-url.net/2u23k1k) .  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package environmentv2

import (
	"encoding/json"
)

// checks if the SyntheticOnDemandExecutionRequestMonitor type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SyntheticOnDemandExecutionRequestMonitor{}

// SyntheticOnDemandExecutionRequestMonitor Contains monitors to be executed on demand from the locations specified.
type SyntheticOnDemandExecutionRequestMonitor struct {
	// Customized script properties for this on-demand batch execution.
	CustomizedScript map[string]interface{} `json:"customizedScript,omitempty"`
	// The number of times the monitor is to be executed per location; if not set, the monitor will be executed once.
	ExecutionCount *int32 `json:"executionCount,omitempty"`
	// The locations from where the monitor is to be executed.
	Locations []string `json:"locations,omitempty"`
	// The monitor identifier.
	MonitorId string `json:"monitorId"`
	// Execution repeat mode. If not set, the mode is SEQUENTIAL.
	RepeatMode *string `json:"repeatMode,omitempty"`
}

// NewSyntheticOnDemandExecutionRequestMonitor instantiates a new SyntheticOnDemandExecutionRequestMonitor object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSyntheticOnDemandExecutionRequestMonitor(monitorId string) *SyntheticOnDemandExecutionRequestMonitor {
	this := SyntheticOnDemandExecutionRequestMonitor{}
	var executionCount int32 = 1
	this.ExecutionCount = &executionCount
	this.MonitorId = monitorId
	var repeatMode string = "SEQUENTIAL"
	this.RepeatMode = &repeatMode
	return &this
}

// NewSyntheticOnDemandExecutionRequestMonitorWithDefaults instantiates a new SyntheticOnDemandExecutionRequestMonitor object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSyntheticOnDemandExecutionRequestMonitorWithDefaults() *SyntheticOnDemandExecutionRequestMonitor {
	this := SyntheticOnDemandExecutionRequestMonitor{}
	var executionCount int32 = 1
	this.ExecutionCount = &executionCount
	var repeatMode string = "SEQUENTIAL"
	this.RepeatMode = &repeatMode
	return &this
}

// GetCustomizedScript returns the CustomizedScript field value if set, zero value otherwise.
func (o *SyntheticOnDemandExecutionRequestMonitor) GetCustomizedScript() map[string]interface{} {
	if o == nil || IsNil(o.CustomizedScript) {
		var ret map[string]interface{}
		return ret
	}
	return o.CustomizedScript
}

// GetCustomizedScriptOk returns a tuple with the CustomizedScript field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SyntheticOnDemandExecutionRequestMonitor) GetCustomizedScriptOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.CustomizedScript) {
		return map[string]interface{}{}, false
	}
	return o.CustomizedScript, true
}

// HasCustomizedScript returns a boolean if a field has been set.
func (o *SyntheticOnDemandExecutionRequestMonitor) HasCustomizedScript() bool {
	if o != nil && !IsNil(o.CustomizedScript) {
		return true
	}

	return false
}

// SetCustomizedScript gets a reference to the given map[string]interface{} and assigns it to the CustomizedScript field.
func (o *SyntheticOnDemandExecutionRequestMonitor) SetCustomizedScript(v map[string]interface{}) {
	o.CustomizedScript = v
}

// GetExecutionCount returns the ExecutionCount field value if set, zero value otherwise.
func (o *SyntheticOnDemandExecutionRequestMonitor) GetExecutionCount() int32 {
	if o == nil || IsNil(o.ExecutionCount) {
		var ret int32
		return ret
	}
	return *o.ExecutionCount
}

// GetExecutionCountOk returns a tuple with the ExecutionCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SyntheticOnDemandExecutionRequestMonitor) GetExecutionCountOk() (*int32, bool) {
	if o == nil || IsNil(o.ExecutionCount) {
		return nil, false
	}
	return o.ExecutionCount, true
}

// HasExecutionCount returns a boolean if a field has been set.
func (o *SyntheticOnDemandExecutionRequestMonitor) HasExecutionCount() bool {
	if o != nil && !IsNil(o.ExecutionCount) {
		return true
	}

	return false
}

// SetExecutionCount gets a reference to the given int32 and assigns it to the ExecutionCount field.
func (o *SyntheticOnDemandExecutionRequestMonitor) SetExecutionCount(v int32) {
	o.ExecutionCount = &v
}

// GetLocations returns the Locations field value if set, zero value otherwise.
func (o *SyntheticOnDemandExecutionRequestMonitor) GetLocations() []string {
	if o == nil || IsNil(o.Locations) {
		var ret []string
		return ret
	}
	return o.Locations
}

// GetLocationsOk returns a tuple with the Locations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SyntheticOnDemandExecutionRequestMonitor) GetLocationsOk() ([]string, bool) {
	if o == nil || IsNil(o.Locations) {
		return nil, false
	}
	return o.Locations, true
}

// HasLocations returns a boolean if a field has been set.
func (o *SyntheticOnDemandExecutionRequestMonitor) HasLocations() bool {
	if o != nil && !IsNil(o.Locations) {
		return true
	}

	return false
}

// SetLocations gets a reference to the given []string and assigns it to the Locations field.
func (o *SyntheticOnDemandExecutionRequestMonitor) SetLocations(v []string) {
	o.Locations = v
}

// GetMonitorId returns the MonitorId field value
func (o *SyntheticOnDemandExecutionRequestMonitor) GetMonitorId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MonitorId
}

// GetMonitorIdOk returns a tuple with the MonitorId field value
// and a boolean to check if the value has been set.
func (o *SyntheticOnDemandExecutionRequestMonitor) GetMonitorIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MonitorId, true
}

// SetMonitorId sets field value
func (o *SyntheticOnDemandExecutionRequestMonitor) SetMonitorId(v string) {
	o.MonitorId = v
}

// GetRepeatMode returns the RepeatMode field value if set, zero value otherwise.
func (o *SyntheticOnDemandExecutionRequestMonitor) GetRepeatMode() string {
	if o == nil || IsNil(o.RepeatMode) {
		var ret string
		return ret
	}
	return *o.RepeatMode
}

// GetRepeatModeOk returns a tuple with the RepeatMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SyntheticOnDemandExecutionRequestMonitor) GetRepeatModeOk() (*string, bool) {
	if o == nil || IsNil(o.RepeatMode) {
		return nil, false
	}
	return o.RepeatMode, true
}

// HasRepeatMode returns a boolean if a field has been set.
func (o *SyntheticOnDemandExecutionRequestMonitor) HasRepeatMode() bool {
	if o != nil && !IsNil(o.RepeatMode) {
		return true
	}

	return false
}

// SetRepeatMode gets a reference to the given string and assigns it to the RepeatMode field.
func (o *SyntheticOnDemandExecutionRequestMonitor) SetRepeatMode(v string) {
	o.RepeatMode = &v
}

func (o SyntheticOnDemandExecutionRequestMonitor) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SyntheticOnDemandExecutionRequestMonitor) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CustomizedScript) {
		toSerialize["customizedScript"] = o.CustomizedScript
	}
	if !IsNil(o.ExecutionCount) {
		toSerialize["executionCount"] = o.ExecutionCount
	}
	if !IsNil(o.Locations) {
		toSerialize["locations"] = o.Locations
	}
	toSerialize["monitorId"] = o.MonitorId
	if !IsNil(o.RepeatMode) {
		toSerialize["repeatMode"] = o.RepeatMode
	}
	return toSerialize, nil
}

type NullableSyntheticOnDemandExecutionRequestMonitor struct {
	value *SyntheticOnDemandExecutionRequestMonitor
	isSet bool
}

func (v NullableSyntheticOnDemandExecutionRequestMonitor) Get() *SyntheticOnDemandExecutionRequestMonitor {
	return v.value
}

func (v *NullableSyntheticOnDemandExecutionRequestMonitor) Set(val *SyntheticOnDemandExecutionRequestMonitor) {
	v.value = val
	v.isSet = true
}

func (v NullableSyntheticOnDemandExecutionRequestMonitor) IsSet() bool {
	return v.isSet
}

func (v *NullableSyntheticOnDemandExecutionRequestMonitor) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSyntheticOnDemandExecutionRequestMonitor(val *SyntheticOnDemandExecutionRequestMonitor) *NullableSyntheticOnDemandExecutionRequestMonitor {
	return &NullableSyntheticOnDemandExecutionRequestMonitor{value: val, isSet: true}
}

func (v NullableSyntheticOnDemandExecutionRequestMonitor) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSyntheticOnDemandExecutionRequestMonitor) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


