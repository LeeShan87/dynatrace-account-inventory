/*
Dynatrace Environment API

 Documentation of the Dynatrace Environment API v2. Resources here generally supersede those in v1. Migration of resources from v1 is in progress.   If you miss a resource, consider using the Dynatrace Environment API v1. To read about use cases and examples, see [Dynatrace Documentation](https://dt-url.net/2u23k1k) .  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package environmentv2

import (
	"encoding/json"
)

// checks if the RelatedEntitiesList type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RelatedEntitiesList{}

// RelatedEntitiesList A list of related entities of the security problem.   A related entity is a monitored entity that is directly or indirectly related to an *affected entity* (for example, it could be a host where an affected process runs).   Each related entity contains a list of corresponding affected entities (for example, an affected process running on this host).
type RelatedEntitiesList struct {
	// A list of related applications.
	Applications []RelatedEntity `json:"applications,omitempty"`
	// A list of related databases.
	Databases []string `json:"databases,omitempty"`
	// A list of related hosts.
	Hosts []RelatedEntity `json:"hosts,omitempty"`
	// A list of related Kubernetes clusters.
	KubernetesClusters []RelatedEntity `json:"kubernetesClusters,omitempty"`
	// A list of related Kubernetes workloads.
	KubernetesWorkloads []RelatedEntity `json:"kubernetesWorkloads,omitempty"`
	// A list of related services.
	Services []RelatedService `json:"services,omitempty"`
}

// NewRelatedEntitiesList instantiates a new RelatedEntitiesList object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRelatedEntitiesList() *RelatedEntitiesList {
	this := RelatedEntitiesList{}
	return &this
}

// NewRelatedEntitiesListWithDefaults instantiates a new RelatedEntitiesList object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRelatedEntitiesListWithDefaults() *RelatedEntitiesList {
	this := RelatedEntitiesList{}
	return &this
}

// GetApplications returns the Applications field value if set, zero value otherwise.
func (o *RelatedEntitiesList) GetApplications() []RelatedEntity {
	if o == nil || IsNil(o.Applications) {
		var ret []RelatedEntity
		return ret
	}
	return o.Applications
}

// GetApplicationsOk returns a tuple with the Applications field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RelatedEntitiesList) GetApplicationsOk() ([]RelatedEntity, bool) {
	if o == nil || IsNil(o.Applications) {
		return nil, false
	}
	return o.Applications, true
}

// HasApplications returns a boolean if a field has been set.
func (o *RelatedEntitiesList) HasApplications() bool {
	if o != nil && !IsNil(o.Applications) {
		return true
	}

	return false
}

// SetApplications gets a reference to the given []RelatedEntity and assigns it to the Applications field.
func (o *RelatedEntitiesList) SetApplications(v []RelatedEntity) {
	o.Applications = v
}

// GetDatabases returns the Databases field value if set, zero value otherwise.
func (o *RelatedEntitiesList) GetDatabases() []string {
	if o == nil || IsNil(o.Databases) {
		var ret []string
		return ret
	}
	return o.Databases
}

// GetDatabasesOk returns a tuple with the Databases field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RelatedEntitiesList) GetDatabasesOk() ([]string, bool) {
	if o == nil || IsNil(o.Databases) {
		return nil, false
	}
	return o.Databases, true
}

// HasDatabases returns a boolean if a field has been set.
func (o *RelatedEntitiesList) HasDatabases() bool {
	if o != nil && !IsNil(o.Databases) {
		return true
	}

	return false
}

// SetDatabases gets a reference to the given []string and assigns it to the Databases field.
func (o *RelatedEntitiesList) SetDatabases(v []string) {
	o.Databases = v
}

// GetHosts returns the Hosts field value if set, zero value otherwise.
func (o *RelatedEntitiesList) GetHosts() []RelatedEntity {
	if o == nil || IsNil(o.Hosts) {
		var ret []RelatedEntity
		return ret
	}
	return o.Hosts
}

// GetHostsOk returns a tuple with the Hosts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RelatedEntitiesList) GetHostsOk() ([]RelatedEntity, bool) {
	if o == nil || IsNil(o.Hosts) {
		return nil, false
	}
	return o.Hosts, true
}

// HasHosts returns a boolean if a field has been set.
func (o *RelatedEntitiesList) HasHosts() bool {
	if o != nil && !IsNil(o.Hosts) {
		return true
	}

	return false
}

// SetHosts gets a reference to the given []RelatedEntity and assigns it to the Hosts field.
func (o *RelatedEntitiesList) SetHosts(v []RelatedEntity) {
	o.Hosts = v
}

// GetKubernetesClusters returns the KubernetesClusters field value if set, zero value otherwise.
func (o *RelatedEntitiesList) GetKubernetesClusters() []RelatedEntity {
	if o == nil || IsNil(o.KubernetesClusters) {
		var ret []RelatedEntity
		return ret
	}
	return o.KubernetesClusters
}

// GetKubernetesClustersOk returns a tuple with the KubernetesClusters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RelatedEntitiesList) GetKubernetesClustersOk() ([]RelatedEntity, bool) {
	if o == nil || IsNil(o.KubernetesClusters) {
		return nil, false
	}
	return o.KubernetesClusters, true
}

// HasKubernetesClusters returns a boolean if a field has been set.
func (o *RelatedEntitiesList) HasKubernetesClusters() bool {
	if o != nil && !IsNil(o.KubernetesClusters) {
		return true
	}

	return false
}

// SetKubernetesClusters gets a reference to the given []RelatedEntity and assigns it to the KubernetesClusters field.
func (o *RelatedEntitiesList) SetKubernetesClusters(v []RelatedEntity) {
	o.KubernetesClusters = v
}

// GetKubernetesWorkloads returns the KubernetesWorkloads field value if set, zero value otherwise.
func (o *RelatedEntitiesList) GetKubernetesWorkloads() []RelatedEntity {
	if o == nil || IsNil(o.KubernetesWorkloads) {
		var ret []RelatedEntity
		return ret
	}
	return o.KubernetesWorkloads
}

// GetKubernetesWorkloadsOk returns a tuple with the KubernetesWorkloads field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RelatedEntitiesList) GetKubernetesWorkloadsOk() ([]RelatedEntity, bool) {
	if o == nil || IsNil(o.KubernetesWorkloads) {
		return nil, false
	}
	return o.KubernetesWorkloads, true
}

// HasKubernetesWorkloads returns a boolean if a field has been set.
func (o *RelatedEntitiesList) HasKubernetesWorkloads() bool {
	if o != nil && !IsNil(o.KubernetesWorkloads) {
		return true
	}

	return false
}

// SetKubernetesWorkloads gets a reference to the given []RelatedEntity and assigns it to the KubernetesWorkloads field.
func (o *RelatedEntitiesList) SetKubernetesWorkloads(v []RelatedEntity) {
	o.KubernetesWorkloads = v
}

// GetServices returns the Services field value if set, zero value otherwise.
func (o *RelatedEntitiesList) GetServices() []RelatedService {
	if o == nil || IsNil(o.Services) {
		var ret []RelatedService
		return ret
	}
	return o.Services
}

// GetServicesOk returns a tuple with the Services field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RelatedEntitiesList) GetServicesOk() ([]RelatedService, bool) {
	if o == nil || IsNil(o.Services) {
		return nil, false
	}
	return o.Services, true
}

// HasServices returns a boolean if a field has been set.
func (o *RelatedEntitiesList) HasServices() bool {
	if o != nil && !IsNil(o.Services) {
		return true
	}

	return false
}

// SetServices gets a reference to the given []RelatedService and assigns it to the Services field.
func (o *RelatedEntitiesList) SetServices(v []RelatedService) {
	o.Services = v
}

func (o RelatedEntitiesList) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RelatedEntitiesList) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Applications) {
		toSerialize["applications"] = o.Applications
	}
	if !IsNil(o.Databases) {
		toSerialize["databases"] = o.Databases
	}
	if !IsNil(o.Hosts) {
		toSerialize["hosts"] = o.Hosts
	}
	if !IsNil(o.KubernetesClusters) {
		toSerialize["kubernetesClusters"] = o.KubernetesClusters
	}
	if !IsNil(o.KubernetesWorkloads) {
		toSerialize["kubernetesWorkloads"] = o.KubernetesWorkloads
	}
	if !IsNil(o.Services) {
		toSerialize["services"] = o.Services
	}
	return toSerialize, nil
}

type NullableRelatedEntitiesList struct {
	value *RelatedEntitiesList
	isSet bool
}

func (v NullableRelatedEntitiesList) Get() *RelatedEntitiesList {
	return v.value
}

func (v *NullableRelatedEntitiesList) Set(val *RelatedEntitiesList) {
	v.value = val
	v.isSet = true
}

func (v NullableRelatedEntitiesList) IsSet() bool {
	return v.isSet
}

func (v *NullableRelatedEntitiesList) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRelatedEntitiesList(val *RelatedEntitiesList) *NullableRelatedEntitiesList {
	return &NullableRelatedEntitiesList{value: val, isSet: true}
}

func (v NullableRelatedEntitiesList) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRelatedEntitiesList) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


