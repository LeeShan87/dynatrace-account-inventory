/*
Dynatrace Environment API

 Documentation of the Dynatrace Environment API v2. Resources here generally supersede those in v1. Migration of resources from v1 is in progress.   If you miss a resource, consider using the Dynatrace Environment API v1. To read about use cases and examples, see [Dynatrace Documentation](https://dt-url.net/2u23k1k) .  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package environmentv2

import (
	"encoding/json"
)

// checks if the SyntheticOnDemandExecution type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SyntheticOnDemandExecution{}

// SyntheticOnDemandExecution Describes the status of an on-demand execution.
type SyntheticOnDemandExecution struct {
	// The identifier of the batch.
	BatchId string `json:"batchId"`
	// Customized script properties for this on-demand batch execution.
	CustomizedScript map[string]interface{} `json:"customizedScript,omitempty"`
	// The timestamp when whole data set has been collected on server, in UTC milliseconds.
	DataDeliveryTimestamp int64 `json:"dataDeliveryTimestamp"`
	// The identifier of the execution.
	ExecutionId string `json:"executionId"`
	// Execution stage.
	ExecutionStage string `json:"executionStage"`
	// The timestamp when execution was finished, in UTC milliseconds.
	ExecutionTimestamp int64 `json:"executionTimestamp"`
	FullResults *ExecutionFullResults `json:"fullResults,omitempty"`
	// The identifier of the location from where the monitor is to be executed.
	LocationId string `json:"locationId"`
	// Metadata map for the execution batch.
	Metadata *map[string]string `json:"metadata,omitempty"`
	// The identifier of the monitor.
	MonitorId string `json:"monitorId"`
	// Next execution id for sequential mode.
	NextExecutionId *int64 `json:"nextExecutionId,omitempty"`
	// The processing mode of the execution.
	ProcessingMode string `json:"processingMode"`
	// The scheduling timestamp, in UTC milliseconds.
	SchedulingTimestamp int64 `json:"schedulingTimestamp"`
	SimpleResults *ExecutionSimpleResults `json:"simpleResults,omitempty"`
	// The source of the triggering request.
	Source string `json:"source"`
	// The name of the user who triggered the on-demand execution.
	UserId string `json:"userId"`
}

// NewSyntheticOnDemandExecution instantiates a new SyntheticOnDemandExecution object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSyntheticOnDemandExecution(batchId string, dataDeliveryTimestamp int64, executionId string, executionStage string, executionTimestamp int64, locationId string, monitorId string, processingMode string, schedulingTimestamp int64, source string, userId string) *SyntheticOnDemandExecution {
	this := SyntheticOnDemandExecution{}
	this.BatchId = batchId
	this.DataDeliveryTimestamp = dataDeliveryTimestamp
	this.ExecutionId = executionId
	this.ExecutionStage = executionStage
	this.ExecutionTimestamp = executionTimestamp
	this.LocationId = locationId
	this.MonitorId = monitorId
	this.ProcessingMode = processingMode
	this.SchedulingTimestamp = schedulingTimestamp
	this.Source = source
	this.UserId = userId
	return &this
}

// NewSyntheticOnDemandExecutionWithDefaults instantiates a new SyntheticOnDemandExecution object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSyntheticOnDemandExecutionWithDefaults() *SyntheticOnDemandExecution {
	this := SyntheticOnDemandExecution{}
	return &this
}

// GetBatchId returns the BatchId field value
func (o *SyntheticOnDemandExecution) GetBatchId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.BatchId
}

// GetBatchIdOk returns a tuple with the BatchId field value
// and a boolean to check if the value has been set.
func (o *SyntheticOnDemandExecution) GetBatchIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BatchId, true
}

// SetBatchId sets field value
func (o *SyntheticOnDemandExecution) SetBatchId(v string) {
	o.BatchId = v
}

// GetCustomizedScript returns the CustomizedScript field value if set, zero value otherwise.
func (o *SyntheticOnDemandExecution) GetCustomizedScript() map[string]interface{} {
	if o == nil || IsNil(o.CustomizedScript) {
		var ret map[string]interface{}
		return ret
	}
	return o.CustomizedScript
}

// GetCustomizedScriptOk returns a tuple with the CustomizedScript field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SyntheticOnDemandExecution) GetCustomizedScriptOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.CustomizedScript) {
		return map[string]interface{}{}, false
	}
	return o.CustomizedScript, true
}

// HasCustomizedScript returns a boolean if a field has been set.
func (o *SyntheticOnDemandExecution) HasCustomizedScript() bool {
	if o != nil && !IsNil(o.CustomizedScript) {
		return true
	}

	return false
}

// SetCustomizedScript gets a reference to the given map[string]interface{} and assigns it to the CustomizedScript field.
func (o *SyntheticOnDemandExecution) SetCustomizedScript(v map[string]interface{}) {
	o.CustomizedScript = v
}

// GetDataDeliveryTimestamp returns the DataDeliveryTimestamp field value
func (o *SyntheticOnDemandExecution) GetDataDeliveryTimestamp() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.DataDeliveryTimestamp
}

// GetDataDeliveryTimestampOk returns a tuple with the DataDeliveryTimestamp field value
// and a boolean to check if the value has been set.
func (o *SyntheticOnDemandExecution) GetDataDeliveryTimestampOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DataDeliveryTimestamp, true
}

// SetDataDeliveryTimestamp sets field value
func (o *SyntheticOnDemandExecution) SetDataDeliveryTimestamp(v int64) {
	o.DataDeliveryTimestamp = v
}

// GetExecutionId returns the ExecutionId field value
func (o *SyntheticOnDemandExecution) GetExecutionId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ExecutionId
}

// GetExecutionIdOk returns a tuple with the ExecutionId field value
// and a boolean to check if the value has been set.
func (o *SyntheticOnDemandExecution) GetExecutionIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ExecutionId, true
}

// SetExecutionId sets field value
func (o *SyntheticOnDemandExecution) SetExecutionId(v string) {
	o.ExecutionId = v
}

// GetExecutionStage returns the ExecutionStage field value
func (o *SyntheticOnDemandExecution) GetExecutionStage() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ExecutionStage
}

// GetExecutionStageOk returns a tuple with the ExecutionStage field value
// and a boolean to check if the value has been set.
func (o *SyntheticOnDemandExecution) GetExecutionStageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ExecutionStage, true
}

// SetExecutionStage sets field value
func (o *SyntheticOnDemandExecution) SetExecutionStage(v string) {
	o.ExecutionStage = v
}

// GetExecutionTimestamp returns the ExecutionTimestamp field value
func (o *SyntheticOnDemandExecution) GetExecutionTimestamp() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.ExecutionTimestamp
}

// GetExecutionTimestampOk returns a tuple with the ExecutionTimestamp field value
// and a boolean to check if the value has been set.
func (o *SyntheticOnDemandExecution) GetExecutionTimestampOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ExecutionTimestamp, true
}

// SetExecutionTimestamp sets field value
func (o *SyntheticOnDemandExecution) SetExecutionTimestamp(v int64) {
	o.ExecutionTimestamp = v
}

// GetFullResults returns the FullResults field value if set, zero value otherwise.
func (o *SyntheticOnDemandExecution) GetFullResults() ExecutionFullResults {
	if o == nil || IsNil(o.FullResults) {
		var ret ExecutionFullResults
		return ret
	}
	return *o.FullResults
}

// GetFullResultsOk returns a tuple with the FullResults field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SyntheticOnDemandExecution) GetFullResultsOk() (*ExecutionFullResults, bool) {
	if o == nil || IsNil(o.FullResults) {
		return nil, false
	}
	return o.FullResults, true
}

// HasFullResults returns a boolean if a field has been set.
func (o *SyntheticOnDemandExecution) HasFullResults() bool {
	if o != nil && !IsNil(o.FullResults) {
		return true
	}

	return false
}

// SetFullResults gets a reference to the given ExecutionFullResults and assigns it to the FullResults field.
func (o *SyntheticOnDemandExecution) SetFullResults(v ExecutionFullResults) {
	o.FullResults = &v
}

// GetLocationId returns the LocationId field value
func (o *SyntheticOnDemandExecution) GetLocationId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.LocationId
}

// GetLocationIdOk returns a tuple with the LocationId field value
// and a boolean to check if the value has been set.
func (o *SyntheticOnDemandExecution) GetLocationIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LocationId, true
}

// SetLocationId sets field value
func (o *SyntheticOnDemandExecution) SetLocationId(v string) {
	o.LocationId = v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *SyntheticOnDemandExecution) GetMetadata() map[string]string {
	if o == nil || IsNil(o.Metadata) {
		var ret map[string]string
		return ret
	}
	return *o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SyntheticOnDemandExecution) GetMetadataOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.Metadata) {
		return nil, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *SyntheticOnDemandExecution) HasMetadata() bool {
	if o != nil && !IsNil(o.Metadata) {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given map[string]string and assigns it to the Metadata field.
func (o *SyntheticOnDemandExecution) SetMetadata(v map[string]string) {
	o.Metadata = &v
}

// GetMonitorId returns the MonitorId field value
func (o *SyntheticOnDemandExecution) GetMonitorId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MonitorId
}

// GetMonitorIdOk returns a tuple with the MonitorId field value
// and a boolean to check if the value has been set.
func (o *SyntheticOnDemandExecution) GetMonitorIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MonitorId, true
}

// SetMonitorId sets field value
func (o *SyntheticOnDemandExecution) SetMonitorId(v string) {
	o.MonitorId = v
}

// GetNextExecutionId returns the NextExecutionId field value if set, zero value otherwise.
func (o *SyntheticOnDemandExecution) GetNextExecutionId() int64 {
	if o == nil || IsNil(o.NextExecutionId) {
		var ret int64
		return ret
	}
	return *o.NextExecutionId
}

// GetNextExecutionIdOk returns a tuple with the NextExecutionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SyntheticOnDemandExecution) GetNextExecutionIdOk() (*int64, bool) {
	if o == nil || IsNil(o.NextExecutionId) {
		return nil, false
	}
	return o.NextExecutionId, true
}

// HasNextExecutionId returns a boolean if a field has been set.
func (o *SyntheticOnDemandExecution) HasNextExecutionId() bool {
	if o != nil && !IsNil(o.NextExecutionId) {
		return true
	}

	return false
}

// SetNextExecutionId gets a reference to the given int64 and assigns it to the NextExecutionId field.
func (o *SyntheticOnDemandExecution) SetNextExecutionId(v int64) {
	o.NextExecutionId = &v
}

// GetProcessingMode returns the ProcessingMode field value
func (o *SyntheticOnDemandExecution) GetProcessingMode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ProcessingMode
}

// GetProcessingModeOk returns a tuple with the ProcessingMode field value
// and a boolean to check if the value has been set.
func (o *SyntheticOnDemandExecution) GetProcessingModeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProcessingMode, true
}

// SetProcessingMode sets field value
func (o *SyntheticOnDemandExecution) SetProcessingMode(v string) {
	o.ProcessingMode = v
}

// GetSchedulingTimestamp returns the SchedulingTimestamp field value
func (o *SyntheticOnDemandExecution) GetSchedulingTimestamp() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.SchedulingTimestamp
}

// GetSchedulingTimestampOk returns a tuple with the SchedulingTimestamp field value
// and a boolean to check if the value has been set.
func (o *SyntheticOnDemandExecution) GetSchedulingTimestampOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SchedulingTimestamp, true
}

// SetSchedulingTimestamp sets field value
func (o *SyntheticOnDemandExecution) SetSchedulingTimestamp(v int64) {
	o.SchedulingTimestamp = v
}

// GetSimpleResults returns the SimpleResults field value if set, zero value otherwise.
func (o *SyntheticOnDemandExecution) GetSimpleResults() ExecutionSimpleResults {
	if o == nil || IsNil(o.SimpleResults) {
		var ret ExecutionSimpleResults
		return ret
	}
	return *o.SimpleResults
}

// GetSimpleResultsOk returns a tuple with the SimpleResults field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SyntheticOnDemandExecution) GetSimpleResultsOk() (*ExecutionSimpleResults, bool) {
	if o == nil || IsNil(o.SimpleResults) {
		return nil, false
	}
	return o.SimpleResults, true
}

// HasSimpleResults returns a boolean if a field has been set.
func (o *SyntheticOnDemandExecution) HasSimpleResults() bool {
	if o != nil && !IsNil(o.SimpleResults) {
		return true
	}

	return false
}

// SetSimpleResults gets a reference to the given ExecutionSimpleResults and assigns it to the SimpleResults field.
func (o *SyntheticOnDemandExecution) SetSimpleResults(v ExecutionSimpleResults) {
	o.SimpleResults = &v
}

// GetSource returns the Source field value
func (o *SyntheticOnDemandExecution) GetSource() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Source
}

// GetSourceOk returns a tuple with the Source field value
// and a boolean to check if the value has been set.
func (o *SyntheticOnDemandExecution) GetSourceOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Source, true
}

// SetSource sets field value
func (o *SyntheticOnDemandExecution) SetSource(v string) {
	o.Source = v
}

// GetUserId returns the UserId field value
func (o *SyntheticOnDemandExecution) GetUserId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value
// and a boolean to check if the value has been set.
func (o *SyntheticOnDemandExecution) GetUserIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UserId, true
}

// SetUserId sets field value
func (o *SyntheticOnDemandExecution) SetUserId(v string) {
	o.UserId = v
}

func (o SyntheticOnDemandExecution) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SyntheticOnDemandExecution) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["batchId"] = o.BatchId
	if !IsNil(o.CustomizedScript) {
		toSerialize["customizedScript"] = o.CustomizedScript
	}
	toSerialize["dataDeliveryTimestamp"] = o.DataDeliveryTimestamp
	toSerialize["executionId"] = o.ExecutionId
	toSerialize["executionStage"] = o.ExecutionStage
	toSerialize["executionTimestamp"] = o.ExecutionTimestamp
	if !IsNil(o.FullResults) {
		toSerialize["fullResults"] = o.FullResults
	}
	toSerialize["locationId"] = o.LocationId
	if !IsNil(o.Metadata) {
		toSerialize["metadata"] = o.Metadata
	}
	toSerialize["monitorId"] = o.MonitorId
	if !IsNil(o.NextExecutionId) {
		toSerialize["nextExecutionId"] = o.NextExecutionId
	}
	toSerialize["processingMode"] = o.ProcessingMode
	toSerialize["schedulingTimestamp"] = o.SchedulingTimestamp
	if !IsNil(o.SimpleResults) {
		toSerialize["simpleResults"] = o.SimpleResults
	}
	toSerialize["source"] = o.Source
	toSerialize["userId"] = o.UserId
	return toSerialize, nil
}

type NullableSyntheticOnDemandExecution struct {
	value *SyntheticOnDemandExecution
	isSet bool
}

func (v NullableSyntheticOnDemandExecution) Get() *SyntheticOnDemandExecution {
	return v.value
}

func (v *NullableSyntheticOnDemandExecution) Set(val *SyntheticOnDemandExecution) {
	v.value = val
	v.isSet = true
}

func (v NullableSyntheticOnDemandExecution) IsSet() bool {
	return v.isSet
}

func (v *NullableSyntheticOnDemandExecution) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSyntheticOnDemandExecution(val *SyntheticOnDemandExecution) *NullableSyntheticOnDemandExecution {
	return &NullableSyntheticOnDemandExecution{value: val, isSet: true}
}

func (v NullableSyntheticOnDemandExecution) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSyntheticOnDemandExecution) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


