/*
Dynatrace Environment API

 Documentation of the Dynatrace Environment API v2. Resources here generally supersede those in v1. Migration of resources from v1 is in progress.   If you miss a resource, consider using the Dynatrace Environment API v1. To read about use cases and examples, see [Dynatrace Documentation](https://dt-url.net/2u23k1k) .  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package environmentv2

import (
	"encoding/json"
)

// checks if the FilteredCountsDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FilteredCountsDto{}

// FilteredCountsDto Statistics about the security problem, filtered by the management zone and timeframe start ('from') query parameters.
type FilteredCountsDto struct {
	// Number of affected nodes
	AffectedNodes *int32 `json:"affectedNodes,omitempty"`
	// Number of affected processes
	AffectedProcessGroupInstances *int32 `json:"affectedProcessGroupInstances,omitempty"`
	// Number of affected process groups
	AffectedProcessGroups *int32 `json:"affectedProcessGroups,omitempty"`
	// Number of exposed process groups
	ExposedProcessGroups *int32 `json:"exposedProcessGroups,omitempty"`
	// Number of reachable data assets
	ReachableDataAssets *int32 `json:"reachableDataAssets,omitempty"`
	// Number of related applications
	RelatedApplications *int32 `json:"relatedApplications,omitempty"`
	// Number of related attacks
	RelatedAttacks *int32 `json:"relatedAttacks,omitempty"`
	// Number of related databases
	RelatedDatabases *int32 `json:"relatedDatabases,omitempty"`
	// Number of related hosts
	RelatedHosts *int32 `json:"relatedHosts,omitempty"`
	// Number of related Kubernetes clusters
	RelatedKubernetesClusters *int32 `json:"relatedKubernetesClusters,omitempty"`
	// Number of related Kubernetes workloads
	RelatedKubernetesWorkloads *int32 `json:"relatedKubernetesWorkloads,omitempty"`
	// Number of related services
	RelatedServices *int32 `json:"relatedServices,omitempty"`
	// Number of vulnerable components
	VulnerableComponents *int32 `json:"vulnerableComponents,omitempty"`
}

// NewFilteredCountsDto instantiates a new FilteredCountsDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFilteredCountsDto() *FilteredCountsDto {
	this := FilteredCountsDto{}
	return &this
}

// NewFilteredCountsDtoWithDefaults instantiates a new FilteredCountsDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFilteredCountsDtoWithDefaults() *FilteredCountsDto {
	this := FilteredCountsDto{}
	return &this
}

// GetAffectedNodes returns the AffectedNodes field value if set, zero value otherwise.
func (o *FilteredCountsDto) GetAffectedNodes() int32 {
	if o == nil || IsNil(o.AffectedNodes) {
		var ret int32
		return ret
	}
	return *o.AffectedNodes
}

// GetAffectedNodesOk returns a tuple with the AffectedNodes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FilteredCountsDto) GetAffectedNodesOk() (*int32, bool) {
	if o == nil || IsNil(o.AffectedNodes) {
		return nil, false
	}
	return o.AffectedNodes, true
}

// HasAffectedNodes returns a boolean if a field has been set.
func (o *FilteredCountsDto) HasAffectedNodes() bool {
	if o != nil && !IsNil(o.AffectedNodes) {
		return true
	}

	return false
}

// SetAffectedNodes gets a reference to the given int32 and assigns it to the AffectedNodes field.
func (o *FilteredCountsDto) SetAffectedNodes(v int32) {
	o.AffectedNodes = &v
}

// GetAffectedProcessGroupInstances returns the AffectedProcessGroupInstances field value if set, zero value otherwise.
func (o *FilteredCountsDto) GetAffectedProcessGroupInstances() int32 {
	if o == nil || IsNil(o.AffectedProcessGroupInstances) {
		var ret int32
		return ret
	}
	return *o.AffectedProcessGroupInstances
}

// GetAffectedProcessGroupInstancesOk returns a tuple with the AffectedProcessGroupInstances field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FilteredCountsDto) GetAffectedProcessGroupInstancesOk() (*int32, bool) {
	if o == nil || IsNil(o.AffectedProcessGroupInstances) {
		return nil, false
	}
	return o.AffectedProcessGroupInstances, true
}

// HasAffectedProcessGroupInstances returns a boolean if a field has been set.
func (o *FilteredCountsDto) HasAffectedProcessGroupInstances() bool {
	if o != nil && !IsNil(o.AffectedProcessGroupInstances) {
		return true
	}

	return false
}

// SetAffectedProcessGroupInstances gets a reference to the given int32 and assigns it to the AffectedProcessGroupInstances field.
func (o *FilteredCountsDto) SetAffectedProcessGroupInstances(v int32) {
	o.AffectedProcessGroupInstances = &v
}

// GetAffectedProcessGroups returns the AffectedProcessGroups field value if set, zero value otherwise.
func (o *FilteredCountsDto) GetAffectedProcessGroups() int32 {
	if o == nil || IsNil(o.AffectedProcessGroups) {
		var ret int32
		return ret
	}
	return *o.AffectedProcessGroups
}

// GetAffectedProcessGroupsOk returns a tuple with the AffectedProcessGroups field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FilteredCountsDto) GetAffectedProcessGroupsOk() (*int32, bool) {
	if o == nil || IsNil(o.AffectedProcessGroups) {
		return nil, false
	}
	return o.AffectedProcessGroups, true
}

// HasAffectedProcessGroups returns a boolean if a field has been set.
func (o *FilteredCountsDto) HasAffectedProcessGroups() bool {
	if o != nil && !IsNil(o.AffectedProcessGroups) {
		return true
	}

	return false
}

// SetAffectedProcessGroups gets a reference to the given int32 and assigns it to the AffectedProcessGroups field.
func (o *FilteredCountsDto) SetAffectedProcessGroups(v int32) {
	o.AffectedProcessGroups = &v
}

// GetExposedProcessGroups returns the ExposedProcessGroups field value if set, zero value otherwise.
func (o *FilteredCountsDto) GetExposedProcessGroups() int32 {
	if o == nil || IsNil(o.ExposedProcessGroups) {
		var ret int32
		return ret
	}
	return *o.ExposedProcessGroups
}

// GetExposedProcessGroupsOk returns a tuple with the ExposedProcessGroups field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FilteredCountsDto) GetExposedProcessGroupsOk() (*int32, bool) {
	if o == nil || IsNil(o.ExposedProcessGroups) {
		return nil, false
	}
	return o.ExposedProcessGroups, true
}

// HasExposedProcessGroups returns a boolean if a field has been set.
func (o *FilteredCountsDto) HasExposedProcessGroups() bool {
	if o != nil && !IsNil(o.ExposedProcessGroups) {
		return true
	}

	return false
}

// SetExposedProcessGroups gets a reference to the given int32 and assigns it to the ExposedProcessGroups field.
func (o *FilteredCountsDto) SetExposedProcessGroups(v int32) {
	o.ExposedProcessGroups = &v
}

// GetReachableDataAssets returns the ReachableDataAssets field value if set, zero value otherwise.
func (o *FilteredCountsDto) GetReachableDataAssets() int32 {
	if o == nil || IsNil(o.ReachableDataAssets) {
		var ret int32
		return ret
	}
	return *o.ReachableDataAssets
}

// GetReachableDataAssetsOk returns a tuple with the ReachableDataAssets field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FilteredCountsDto) GetReachableDataAssetsOk() (*int32, bool) {
	if o == nil || IsNil(o.ReachableDataAssets) {
		return nil, false
	}
	return o.ReachableDataAssets, true
}

// HasReachableDataAssets returns a boolean if a field has been set.
func (o *FilteredCountsDto) HasReachableDataAssets() bool {
	if o != nil && !IsNil(o.ReachableDataAssets) {
		return true
	}

	return false
}

// SetReachableDataAssets gets a reference to the given int32 and assigns it to the ReachableDataAssets field.
func (o *FilteredCountsDto) SetReachableDataAssets(v int32) {
	o.ReachableDataAssets = &v
}

// GetRelatedApplications returns the RelatedApplications field value if set, zero value otherwise.
func (o *FilteredCountsDto) GetRelatedApplications() int32 {
	if o == nil || IsNil(o.RelatedApplications) {
		var ret int32
		return ret
	}
	return *o.RelatedApplications
}

// GetRelatedApplicationsOk returns a tuple with the RelatedApplications field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FilteredCountsDto) GetRelatedApplicationsOk() (*int32, bool) {
	if o == nil || IsNil(o.RelatedApplications) {
		return nil, false
	}
	return o.RelatedApplications, true
}

// HasRelatedApplications returns a boolean if a field has been set.
func (o *FilteredCountsDto) HasRelatedApplications() bool {
	if o != nil && !IsNil(o.RelatedApplications) {
		return true
	}

	return false
}

// SetRelatedApplications gets a reference to the given int32 and assigns it to the RelatedApplications field.
func (o *FilteredCountsDto) SetRelatedApplications(v int32) {
	o.RelatedApplications = &v
}

// GetRelatedAttacks returns the RelatedAttacks field value if set, zero value otherwise.
func (o *FilteredCountsDto) GetRelatedAttacks() int32 {
	if o == nil || IsNil(o.RelatedAttacks) {
		var ret int32
		return ret
	}
	return *o.RelatedAttacks
}

// GetRelatedAttacksOk returns a tuple with the RelatedAttacks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FilteredCountsDto) GetRelatedAttacksOk() (*int32, bool) {
	if o == nil || IsNil(o.RelatedAttacks) {
		return nil, false
	}
	return o.RelatedAttacks, true
}

// HasRelatedAttacks returns a boolean if a field has been set.
func (o *FilteredCountsDto) HasRelatedAttacks() bool {
	if o != nil && !IsNil(o.RelatedAttacks) {
		return true
	}

	return false
}

// SetRelatedAttacks gets a reference to the given int32 and assigns it to the RelatedAttacks field.
func (o *FilteredCountsDto) SetRelatedAttacks(v int32) {
	o.RelatedAttacks = &v
}

// GetRelatedDatabases returns the RelatedDatabases field value if set, zero value otherwise.
func (o *FilteredCountsDto) GetRelatedDatabases() int32 {
	if o == nil || IsNil(o.RelatedDatabases) {
		var ret int32
		return ret
	}
	return *o.RelatedDatabases
}

// GetRelatedDatabasesOk returns a tuple with the RelatedDatabases field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FilteredCountsDto) GetRelatedDatabasesOk() (*int32, bool) {
	if o == nil || IsNil(o.RelatedDatabases) {
		return nil, false
	}
	return o.RelatedDatabases, true
}

// HasRelatedDatabases returns a boolean if a field has been set.
func (o *FilteredCountsDto) HasRelatedDatabases() bool {
	if o != nil && !IsNil(o.RelatedDatabases) {
		return true
	}

	return false
}

// SetRelatedDatabases gets a reference to the given int32 and assigns it to the RelatedDatabases field.
func (o *FilteredCountsDto) SetRelatedDatabases(v int32) {
	o.RelatedDatabases = &v
}

// GetRelatedHosts returns the RelatedHosts field value if set, zero value otherwise.
func (o *FilteredCountsDto) GetRelatedHosts() int32 {
	if o == nil || IsNil(o.RelatedHosts) {
		var ret int32
		return ret
	}
	return *o.RelatedHosts
}

// GetRelatedHostsOk returns a tuple with the RelatedHosts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FilteredCountsDto) GetRelatedHostsOk() (*int32, bool) {
	if o == nil || IsNil(o.RelatedHosts) {
		return nil, false
	}
	return o.RelatedHosts, true
}

// HasRelatedHosts returns a boolean if a field has been set.
func (o *FilteredCountsDto) HasRelatedHosts() bool {
	if o != nil && !IsNil(o.RelatedHosts) {
		return true
	}

	return false
}

// SetRelatedHosts gets a reference to the given int32 and assigns it to the RelatedHosts field.
func (o *FilteredCountsDto) SetRelatedHosts(v int32) {
	o.RelatedHosts = &v
}

// GetRelatedKubernetesClusters returns the RelatedKubernetesClusters field value if set, zero value otherwise.
func (o *FilteredCountsDto) GetRelatedKubernetesClusters() int32 {
	if o == nil || IsNil(o.RelatedKubernetesClusters) {
		var ret int32
		return ret
	}
	return *o.RelatedKubernetesClusters
}

// GetRelatedKubernetesClustersOk returns a tuple with the RelatedKubernetesClusters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FilteredCountsDto) GetRelatedKubernetesClustersOk() (*int32, bool) {
	if o == nil || IsNil(o.RelatedKubernetesClusters) {
		return nil, false
	}
	return o.RelatedKubernetesClusters, true
}

// HasRelatedKubernetesClusters returns a boolean if a field has been set.
func (o *FilteredCountsDto) HasRelatedKubernetesClusters() bool {
	if o != nil && !IsNil(o.RelatedKubernetesClusters) {
		return true
	}

	return false
}

// SetRelatedKubernetesClusters gets a reference to the given int32 and assigns it to the RelatedKubernetesClusters field.
func (o *FilteredCountsDto) SetRelatedKubernetesClusters(v int32) {
	o.RelatedKubernetesClusters = &v
}

// GetRelatedKubernetesWorkloads returns the RelatedKubernetesWorkloads field value if set, zero value otherwise.
func (o *FilteredCountsDto) GetRelatedKubernetesWorkloads() int32 {
	if o == nil || IsNil(o.RelatedKubernetesWorkloads) {
		var ret int32
		return ret
	}
	return *o.RelatedKubernetesWorkloads
}

// GetRelatedKubernetesWorkloadsOk returns a tuple with the RelatedKubernetesWorkloads field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FilteredCountsDto) GetRelatedKubernetesWorkloadsOk() (*int32, bool) {
	if o == nil || IsNil(o.RelatedKubernetesWorkloads) {
		return nil, false
	}
	return o.RelatedKubernetesWorkloads, true
}

// HasRelatedKubernetesWorkloads returns a boolean if a field has been set.
func (o *FilteredCountsDto) HasRelatedKubernetesWorkloads() bool {
	if o != nil && !IsNil(o.RelatedKubernetesWorkloads) {
		return true
	}

	return false
}

// SetRelatedKubernetesWorkloads gets a reference to the given int32 and assigns it to the RelatedKubernetesWorkloads field.
func (o *FilteredCountsDto) SetRelatedKubernetesWorkloads(v int32) {
	o.RelatedKubernetesWorkloads = &v
}

// GetRelatedServices returns the RelatedServices field value if set, zero value otherwise.
func (o *FilteredCountsDto) GetRelatedServices() int32 {
	if o == nil || IsNil(o.RelatedServices) {
		var ret int32
		return ret
	}
	return *o.RelatedServices
}

// GetRelatedServicesOk returns a tuple with the RelatedServices field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FilteredCountsDto) GetRelatedServicesOk() (*int32, bool) {
	if o == nil || IsNil(o.RelatedServices) {
		return nil, false
	}
	return o.RelatedServices, true
}

// HasRelatedServices returns a boolean if a field has been set.
func (o *FilteredCountsDto) HasRelatedServices() bool {
	if o != nil && !IsNil(o.RelatedServices) {
		return true
	}

	return false
}

// SetRelatedServices gets a reference to the given int32 and assigns it to the RelatedServices field.
func (o *FilteredCountsDto) SetRelatedServices(v int32) {
	o.RelatedServices = &v
}

// GetVulnerableComponents returns the VulnerableComponents field value if set, zero value otherwise.
func (o *FilteredCountsDto) GetVulnerableComponents() int32 {
	if o == nil || IsNil(o.VulnerableComponents) {
		var ret int32
		return ret
	}
	return *o.VulnerableComponents
}

// GetVulnerableComponentsOk returns a tuple with the VulnerableComponents field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FilteredCountsDto) GetVulnerableComponentsOk() (*int32, bool) {
	if o == nil || IsNil(o.VulnerableComponents) {
		return nil, false
	}
	return o.VulnerableComponents, true
}

// HasVulnerableComponents returns a boolean if a field has been set.
func (o *FilteredCountsDto) HasVulnerableComponents() bool {
	if o != nil && !IsNil(o.VulnerableComponents) {
		return true
	}

	return false
}

// SetVulnerableComponents gets a reference to the given int32 and assigns it to the VulnerableComponents field.
func (o *FilteredCountsDto) SetVulnerableComponents(v int32) {
	o.VulnerableComponents = &v
}

func (o FilteredCountsDto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FilteredCountsDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AffectedNodes) {
		toSerialize["affectedNodes"] = o.AffectedNodes
	}
	if !IsNil(o.AffectedProcessGroupInstances) {
		toSerialize["affectedProcessGroupInstances"] = o.AffectedProcessGroupInstances
	}
	if !IsNil(o.AffectedProcessGroups) {
		toSerialize["affectedProcessGroups"] = o.AffectedProcessGroups
	}
	if !IsNil(o.ExposedProcessGroups) {
		toSerialize["exposedProcessGroups"] = o.ExposedProcessGroups
	}
	if !IsNil(o.ReachableDataAssets) {
		toSerialize["reachableDataAssets"] = o.ReachableDataAssets
	}
	if !IsNil(o.RelatedApplications) {
		toSerialize["relatedApplications"] = o.RelatedApplications
	}
	if !IsNil(o.RelatedAttacks) {
		toSerialize["relatedAttacks"] = o.RelatedAttacks
	}
	if !IsNil(o.RelatedDatabases) {
		toSerialize["relatedDatabases"] = o.RelatedDatabases
	}
	if !IsNil(o.RelatedHosts) {
		toSerialize["relatedHosts"] = o.RelatedHosts
	}
	if !IsNil(o.RelatedKubernetesClusters) {
		toSerialize["relatedKubernetesClusters"] = o.RelatedKubernetesClusters
	}
	if !IsNil(o.RelatedKubernetesWorkloads) {
		toSerialize["relatedKubernetesWorkloads"] = o.RelatedKubernetesWorkloads
	}
	if !IsNil(o.RelatedServices) {
		toSerialize["relatedServices"] = o.RelatedServices
	}
	if !IsNil(o.VulnerableComponents) {
		toSerialize["vulnerableComponents"] = o.VulnerableComponents
	}
	return toSerialize, nil
}

type NullableFilteredCountsDto struct {
	value *FilteredCountsDto
	isSet bool
}

func (v NullableFilteredCountsDto) Get() *FilteredCountsDto {
	return v.value
}

func (v *NullableFilteredCountsDto) Set(val *FilteredCountsDto) {
	v.value = val
	v.isSet = true
}

func (v NullableFilteredCountsDto) IsSet() bool {
	return v.isSet
}

func (v *NullableFilteredCountsDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFilteredCountsDto(val *FilteredCountsDto) *NullableFilteredCountsDto {
	return &NullableFilteredCountsDto{value: val, isSet: true}
}

func (v NullableFilteredCountsDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFilteredCountsDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


