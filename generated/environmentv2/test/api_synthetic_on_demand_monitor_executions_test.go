/*
Dynatrace Environment API

Testing SyntheticOnDemandMonitorExecutionsAPIService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package environmentv2

import (
	"context"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
	openapiclient "github.com/GIT_USER_ID/GIT_REPO_ID"
)

func Test_environmentv2_SyntheticOnDemandMonitorExecutionsAPIService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test SyntheticOnDemandMonitorExecutionsAPIService Execute", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		resp, httpRes, err := apiClient.SyntheticOnDemandMonitorExecutionsAPI.Execute(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test SyntheticOnDemandMonitorExecutionsAPIService GetBatch", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var batchId int64

		resp, httpRes, err := apiClient.SyntheticOnDemandMonitorExecutionsAPI.GetBatch(context.Background(), batchId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test SyntheticOnDemandMonitorExecutionsAPIService GetExecution", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var executionId int64

		resp, httpRes, err := apiClient.SyntheticOnDemandMonitorExecutionsAPI.GetExecution(context.Background(), executionId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test SyntheticOnDemandMonitorExecutionsAPIService GetExecutionFullReport", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var executionId int64

		resp, httpRes, err := apiClient.SyntheticOnDemandMonitorExecutionsAPI.GetExecutionFullReport(context.Background(), executionId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test SyntheticOnDemandMonitorExecutionsAPIService GetExecutions", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		resp, httpRes, err := apiClient.SyntheticOnDemandMonitorExecutionsAPI.GetExecutions(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
