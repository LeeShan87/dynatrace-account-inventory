/*
Dynatrace Environment API

 Documentation of the Dynatrace Environment API v2. Resources here generally supersede those in v1. Migration of resources from v1 is in progress.   If you miss a resource, consider using the Dynatrace Environment API v1. To read about use cases and examples, see [Dynatrace Documentation](https://dt-url.net/2u23k1k) .  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package environmentv2

import (
	"encoding/json"
)

// checks if the RemediationProgressEntity type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RemediationProgressEntity{}

// RemediationProgressEntity An affected or unaffected entity of a remediation for a security problem.
type RemediationProgressEntity struct {
	Assessment *RemediationProgressEntityAssessment `json:"assessment,omitempty"`
	// The timestamp when the remediation progress entity has first been related to the vulnerability.
	FirstAffectedTimestamp *int64 `json:"firstAffectedTimestamp,omitempty"`
	// The ID of the remediation progress entity.
	Id *string `json:"id,omitempty"`
	// The name of the remediation progress entity.
	Name *string `json:"name,omitempty"`
	// The current state of the remediation progress entity.
	State *string `json:"state,omitempty"`
	// A list of vulnerable components of the remediation item.   A vulnerable component is what causes the security problem.
	VulnerableComponents []RemediationProgressVulnerableComponent `json:"vulnerableComponents,omitempty"`
}

// NewRemediationProgressEntity instantiates a new RemediationProgressEntity object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRemediationProgressEntity() *RemediationProgressEntity {
	this := RemediationProgressEntity{}
	return &this
}

// NewRemediationProgressEntityWithDefaults instantiates a new RemediationProgressEntity object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRemediationProgressEntityWithDefaults() *RemediationProgressEntity {
	this := RemediationProgressEntity{}
	return &this
}

// GetAssessment returns the Assessment field value if set, zero value otherwise.
func (o *RemediationProgressEntity) GetAssessment() RemediationProgressEntityAssessment {
	if o == nil || IsNil(o.Assessment) {
		var ret RemediationProgressEntityAssessment
		return ret
	}
	return *o.Assessment
}

// GetAssessmentOk returns a tuple with the Assessment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RemediationProgressEntity) GetAssessmentOk() (*RemediationProgressEntityAssessment, bool) {
	if o == nil || IsNil(o.Assessment) {
		return nil, false
	}
	return o.Assessment, true
}

// HasAssessment returns a boolean if a field has been set.
func (o *RemediationProgressEntity) HasAssessment() bool {
	if o != nil && !IsNil(o.Assessment) {
		return true
	}

	return false
}

// SetAssessment gets a reference to the given RemediationProgressEntityAssessment and assigns it to the Assessment field.
func (o *RemediationProgressEntity) SetAssessment(v RemediationProgressEntityAssessment) {
	o.Assessment = &v
}

// GetFirstAffectedTimestamp returns the FirstAffectedTimestamp field value if set, zero value otherwise.
func (o *RemediationProgressEntity) GetFirstAffectedTimestamp() int64 {
	if o == nil || IsNil(o.FirstAffectedTimestamp) {
		var ret int64
		return ret
	}
	return *o.FirstAffectedTimestamp
}

// GetFirstAffectedTimestampOk returns a tuple with the FirstAffectedTimestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RemediationProgressEntity) GetFirstAffectedTimestampOk() (*int64, bool) {
	if o == nil || IsNil(o.FirstAffectedTimestamp) {
		return nil, false
	}
	return o.FirstAffectedTimestamp, true
}

// HasFirstAffectedTimestamp returns a boolean if a field has been set.
func (o *RemediationProgressEntity) HasFirstAffectedTimestamp() bool {
	if o != nil && !IsNil(o.FirstAffectedTimestamp) {
		return true
	}

	return false
}

// SetFirstAffectedTimestamp gets a reference to the given int64 and assigns it to the FirstAffectedTimestamp field.
func (o *RemediationProgressEntity) SetFirstAffectedTimestamp(v int64) {
	o.FirstAffectedTimestamp = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *RemediationProgressEntity) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RemediationProgressEntity) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *RemediationProgressEntity) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *RemediationProgressEntity) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *RemediationProgressEntity) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RemediationProgressEntity) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *RemediationProgressEntity) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *RemediationProgressEntity) SetName(v string) {
	o.Name = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *RemediationProgressEntity) GetState() string {
	if o == nil || IsNil(o.State) {
		var ret string
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RemediationProgressEntity) GetStateOk() (*string, bool) {
	if o == nil || IsNil(o.State) {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *RemediationProgressEntity) HasState() bool {
	if o != nil && !IsNil(o.State) {
		return true
	}

	return false
}

// SetState gets a reference to the given string and assigns it to the State field.
func (o *RemediationProgressEntity) SetState(v string) {
	o.State = &v
}

// GetVulnerableComponents returns the VulnerableComponents field value if set, zero value otherwise.
func (o *RemediationProgressEntity) GetVulnerableComponents() []RemediationProgressVulnerableComponent {
	if o == nil || IsNil(o.VulnerableComponents) {
		var ret []RemediationProgressVulnerableComponent
		return ret
	}
	return o.VulnerableComponents
}

// GetVulnerableComponentsOk returns a tuple with the VulnerableComponents field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RemediationProgressEntity) GetVulnerableComponentsOk() ([]RemediationProgressVulnerableComponent, bool) {
	if o == nil || IsNil(o.VulnerableComponents) {
		return nil, false
	}
	return o.VulnerableComponents, true
}

// HasVulnerableComponents returns a boolean if a field has been set.
func (o *RemediationProgressEntity) HasVulnerableComponents() bool {
	if o != nil && !IsNil(o.VulnerableComponents) {
		return true
	}

	return false
}

// SetVulnerableComponents gets a reference to the given []RemediationProgressVulnerableComponent and assigns it to the VulnerableComponents field.
func (o *RemediationProgressEntity) SetVulnerableComponents(v []RemediationProgressVulnerableComponent) {
	o.VulnerableComponents = v
}

func (o RemediationProgressEntity) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RemediationProgressEntity) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Assessment) {
		toSerialize["assessment"] = o.Assessment
	}
	if !IsNil(o.FirstAffectedTimestamp) {
		toSerialize["firstAffectedTimestamp"] = o.FirstAffectedTimestamp
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.State) {
		toSerialize["state"] = o.State
	}
	if !IsNil(o.VulnerableComponents) {
		toSerialize["vulnerableComponents"] = o.VulnerableComponents
	}
	return toSerialize, nil
}

type NullableRemediationProgressEntity struct {
	value *RemediationProgressEntity
	isSet bool
}

func (v NullableRemediationProgressEntity) Get() *RemediationProgressEntity {
	return v.value
}

func (v *NullableRemediationProgressEntity) Set(val *RemediationProgressEntity) {
	v.value = val
	v.isSet = true
}

func (v NullableRemediationProgressEntity) IsSet() bool {
	return v.isSet
}

func (v *NullableRemediationProgressEntity) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRemediationProgressEntity(val *RemediationProgressEntity) *NullableRemediationProgressEntity {
	return &NullableRemediationProgressEntity{value: val, isSet: true}
}

func (v NullableRemediationProgressEntity) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRemediationProgressEntity) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


