/*
Dynatrace Environment API

 Documentation of the Dynatrace Environment API v2. Resources here generally supersede those in v1. Migration of resources from v1 is in progress.   If you miss a resource, consider using the Dynatrace Environment API v1. To read about use cases and examples, see [Dynatrace Documentation](https://dt-url.net/2u23k1k) .  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package environmentv2

import (
	"encoding/json"
)

// checks if the MonitoredEntityStateParam type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MonitoredEntityStateParam{}

// MonitoredEntityStateParam Key-value parameter of the monitoring state.
type MonitoredEntityStateParam struct {
	// The key of the monitoring state paramter.
	Key *string `json:"key,omitempty"`
	// The value of the monitoring state paramter.
	Values *string `json:"values,omitempty"`
}

// NewMonitoredEntityStateParam instantiates a new MonitoredEntityStateParam object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMonitoredEntityStateParam() *MonitoredEntityStateParam {
	this := MonitoredEntityStateParam{}
	return &this
}

// NewMonitoredEntityStateParamWithDefaults instantiates a new MonitoredEntityStateParam object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMonitoredEntityStateParamWithDefaults() *MonitoredEntityStateParam {
	this := MonitoredEntityStateParam{}
	return &this
}

// GetKey returns the Key field value if set, zero value otherwise.
func (o *MonitoredEntityStateParam) GetKey() string {
	if o == nil || IsNil(o.Key) {
		var ret string
		return ret
	}
	return *o.Key
}

// GetKeyOk returns a tuple with the Key field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MonitoredEntityStateParam) GetKeyOk() (*string, bool) {
	if o == nil || IsNil(o.Key) {
		return nil, false
	}
	return o.Key, true
}

// HasKey returns a boolean if a field has been set.
func (o *MonitoredEntityStateParam) HasKey() bool {
	if o != nil && !IsNil(o.Key) {
		return true
	}

	return false
}

// SetKey gets a reference to the given string and assigns it to the Key field.
func (o *MonitoredEntityStateParam) SetKey(v string) {
	o.Key = &v
}

// GetValues returns the Values field value if set, zero value otherwise.
func (o *MonitoredEntityStateParam) GetValues() string {
	if o == nil || IsNil(o.Values) {
		var ret string
		return ret
	}
	return *o.Values
}

// GetValuesOk returns a tuple with the Values field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MonitoredEntityStateParam) GetValuesOk() (*string, bool) {
	if o == nil || IsNil(o.Values) {
		return nil, false
	}
	return o.Values, true
}

// HasValues returns a boolean if a field has been set.
func (o *MonitoredEntityStateParam) HasValues() bool {
	if o != nil && !IsNil(o.Values) {
		return true
	}

	return false
}

// SetValues gets a reference to the given string and assigns it to the Values field.
func (o *MonitoredEntityStateParam) SetValues(v string) {
	o.Values = &v
}

func (o MonitoredEntityStateParam) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MonitoredEntityStateParam) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Key) {
		toSerialize["key"] = o.Key
	}
	if !IsNil(o.Values) {
		toSerialize["values"] = o.Values
	}
	return toSerialize, nil
}

type NullableMonitoredEntityStateParam struct {
	value *MonitoredEntityStateParam
	isSet bool
}

func (v NullableMonitoredEntityStateParam) Get() *MonitoredEntityStateParam {
	return v.value
}

func (v *NullableMonitoredEntityStateParam) Set(val *MonitoredEntityStateParam) {
	v.value = val
	v.isSet = true
}

func (v NullableMonitoredEntityStateParam) IsSet() bool {
	return v.isSet
}

func (v *NullableMonitoredEntityStateParam) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMonitoredEntityStateParam(val *MonitoredEntityStateParam) *NullableMonitoredEntityStateParam {
	return &NullableMonitoredEntityStateParam{value: val, isSet: true}
}

func (v NullableMonitoredEntityStateParam) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMonitoredEntityStateParam) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


