/*
Dynatrace Environment API

 Documentation of the Dynatrace Environment API v2. Resources here generally supersede those in v1. Migration of resources from v1 is in progress.   If you miss a resource, consider using the Dynatrace Environment API v1. To read about use cases and examples, see [Dynatrace Documentation](https://dt-url.net/2u23k1k) .  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package environmentv2

import (
	"encoding/json"
)

// checks if the RelatedEntity type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RelatedEntity{}

// RelatedEntity An entity related to a security problem.
type RelatedEntity struct {
	// A list of affected entities related to the entity.
	AffectedEntities []string `json:"affectedEntities,omitempty"`
	// The Dynatrace entity ID of the entity.
	Id *string `json:"id,omitempty"`
	// The number of affected entities related to the entity.
	NumberOfAffectedEntities *int64 `json:"numberOfAffectedEntities,omitempty"`
}

// NewRelatedEntity instantiates a new RelatedEntity object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRelatedEntity() *RelatedEntity {
	this := RelatedEntity{}
	return &this
}

// NewRelatedEntityWithDefaults instantiates a new RelatedEntity object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRelatedEntityWithDefaults() *RelatedEntity {
	this := RelatedEntity{}
	return &this
}

// GetAffectedEntities returns the AffectedEntities field value if set, zero value otherwise.
func (o *RelatedEntity) GetAffectedEntities() []string {
	if o == nil || IsNil(o.AffectedEntities) {
		var ret []string
		return ret
	}
	return o.AffectedEntities
}

// GetAffectedEntitiesOk returns a tuple with the AffectedEntities field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RelatedEntity) GetAffectedEntitiesOk() ([]string, bool) {
	if o == nil || IsNil(o.AffectedEntities) {
		return nil, false
	}
	return o.AffectedEntities, true
}

// HasAffectedEntities returns a boolean if a field has been set.
func (o *RelatedEntity) HasAffectedEntities() bool {
	if o != nil && !IsNil(o.AffectedEntities) {
		return true
	}

	return false
}

// SetAffectedEntities gets a reference to the given []string and assigns it to the AffectedEntities field.
func (o *RelatedEntity) SetAffectedEntities(v []string) {
	o.AffectedEntities = v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *RelatedEntity) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RelatedEntity) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *RelatedEntity) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *RelatedEntity) SetId(v string) {
	o.Id = &v
}

// GetNumberOfAffectedEntities returns the NumberOfAffectedEntities field value if set, zero value otherwise.
func (o *RelatedEntity) GetNumberOfAffectedEntities() int64 {
	if o == nil || IsNil(o.NumberOfAffectedEntities) {
		var ret int64
		return ret
	}
	return *o.NumberOfAffectedEntities
}

// GetNumberOfAffectedEntitiesOk returns a tuple with the NumberOfAffectedEntities field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RelatedEntity) GetNumberOfAffectedEntitiesOk() (*int64, bool) {
	if o == nil || IsNil(o.NumberOfAffectedEntities) {
		return nil, false
	}
	return o.NumberOfAffectedEntities, true
}

// HasNumberOfAffectedEntities returns a boolean if a field has been set.
func (o *RelatedEntity) HasNumberOfAffectedEntities() bool {
	if o != nil && !IsNil(o.NumberOfAffectedEntities) {
		return true
	}

	return false
}

// SetNumberOfAffectedEntities gets a reference to the given int64 and assigns it to the NumberOfAffectedEntities field.
func (o *RelatedEntity) SetNumberOfAffectedEntities(v int64) {
	o.NumberOfAffectedEntities = &v
}

func (o RelatedEntity) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RelatedEntity) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AffectedEntities) {
		toSerialize["affectedEntities"] = o.AffectedEntities
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.NumberOfAffectedEntities) {
		toSerialize["numberOfAffectedEntities"] = o.NumberOfAffectedEntities
	}
	return toSerialize, nil
}

type NullableRelatedEntity struct {
	value *RelatedEntity
	isSet bool
}

func (v NullableRelatedEntity) Get() *RelatedEntity {
	return v.value
}

func (v *NullableRelatedEntity) Set(val *RelatedEntity) {
	v.value = val
	v.isSet = true
}

func (v NullableRelatedEntity) IsSet() bool {
	return v.isSet
}

func (v *NullableRelatedEntity) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRelatedEntity(val *RelatedEntity) *NullableRelatedEntity {
	return &NullableRelatedEntity{value: val, isSet: true}
}

func (v NullableRelatedEntity) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRelatedEntity) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


