/*
Dynatrace Environment API

 Documentation of the Dynatrace Environment API v2. Resources here generally supersede those in v1. Migration of resources from v1 is in progress.   If you miss a resource, consider using the Dynatrace Environment API v1. To read about use cases and examples, see [Dynatrace Documentation](https://dt-url.net/2u23k1k) .  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package environmentv2

import (
	"encoding/json"
)

// checks if the UiTableColumnCustomization type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UiTableColumnCustomization{}

// UiTableColumnCustomization Customization for UI table columns
type UiTableColumnCustomization struct {
	// The ui specific builtin column-implementation for this column.
	BuiltinColumnRef *string `json:"builtinColumnRef,omitempty"`
	// The referenced column from the 'tableColumns' property of the schema for this column.
	ColumnRef *string `json:"columnRef,omitempty"`
	// The display name for this column.
	DisplayName *string `json:"displayName,omitempty"`
	// The possible items of this column.
	Items []UiTableColumnItemCustomization `json:"items,omitempty"`
	// The referenced property for this column.
	PropertyRef *string `json:"propertyRef,omitempty"`
	// The ui specific type for this column.
	Type *string `json:"type,omitempty"`
}

// NewUiTableColumnCustomization instantiates a new UiTableColumnCustomization object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUiTableColumnCustomization() *UiTableColumnCustomization {
	this := UiTableColumnCustomization{}
	return &this
}

// NewUiTableColumnCustomizationWithDefaults instantiates a new UiTableColumnCustomization object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUiTableColumnCustomizationWithDefaults() *UiTableColumnCustomization {
	this := UiTableColumnCustomization{}
	return &this
}

// GetBuiltinColumnRef returns the BuiltinColumnRef field value if set, zero value otherwise.
func (o *UiTableColumnCustomization) GetBuiltinColumnRef() string {
	if o == nil || IsNil(o.BuiltinColumnRef) {
		var ret string
		return ret
	}
	return *o.BuiltinColumnRef
}

// GetBuiltinColumnRefOk returns a tuple with the BuiltinColumnRef field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UiTableColumnCustomization) GetBuiltinColumnRefOk() (*string, bool) {
	if o == nil || IsNil(o.BuiltinColumnRef) {
		return nil, false
	}
	return o.BuiltinColumnRef, true
}

// HasBuiltinColumnRef returns a boolean if a field has been set.
func (o *UiTableColumnCustomization) HasBuiltinColumnRef() bool {
	if o != nil && !IsNil(o.BuiltinColumnRef) {
		return true
	}

	return false
}

// SetBuiltinColumnRef gets a reference to the given string and assigns it to the BuiltinColumnRef field.
func (o *UiTableColumnCustomization) SetBuiltinColumnRef(v string) {
	o.BuiltinColumnRef = &v
}

// GetColumnRef returns the ColumnRef field value if set, zero value otherwise.
func (o *UiTableColumnCustomization) GetColumnRef() string {
	if o == nil || IsNil(o.ColumnRef) {
		var ret string
		return ret
	}
	return *o.ColumnRef
}

// GetColumnRefOk returns a tuple with the ColumnRef field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UiTableColumnCustomization) GetColumnRefOk() (*string, bool) {
	if o == nil || IsNil(o.ColumnRef) {
		return nil, false
	}
	return o.ColumnRef, true
}

// HasColumnRef returns a boolean if a field has been set.
func (o *UiTableColumnCustomization) HasColumnRef() bool {
	if o != nil && !IsNil(o.ColumnRef) {
		return true
	}

	return false
}

// SetColumnRef gets a reference to the given string and assigns it to the ColumnRef field.
func (o *UiTableColumnCustomization) SetColumnRef(v string) {
	o.ColumnRef = &v
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise.
func (o *UiTableColumnCustomization) GetDisplayName() string {
	if o == nil || IsNil(o.DisplayName) {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UiTableColumnCustomization) GetDisplayNameOk() (*string, bool) {
	if o == nil || IsNil(o.DisplayName) {
		return nil, false
	}
	return o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *UiTableColumnCustomization) HasDisplayName() bool {
	if o != nil && !IsNil(o.DisplayName) {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *UiTableColumnCustomization) SetDisplayName(v string) {
	o.DisplayName = &v
}

// GetItems returns the Items field value if set, zero value otherwise.
func (o *UiTableColumnCustomization) GetItems() []UiTableColumnItemCustomization {
	if o == nil || IsNil(o.Items) {
		var ret []UiTableColumnItemCustomization
		return ret
	}
	return o.Items
}

// GetItemsOk returns a tuple with the Items field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UiTableColumnCustomization) GetItemsOk() ([]UiTableColumnItemCustomization, bool) {
	if o == nil || IsNil(o.Items) {
		return nil, false
	}
	return o.Items, true
}

// HasItems returns a boolean if a field has been set.
func (o *UiTableColumnCustomization) HasItems() bool {
	if o != nil && !IsNil(o.Items) {
		return true
	}

	return false
}

// SetItems gets a reference to the given []UiTableColumnItemCustomization and assigns it to the Items field.
func (o *UiTableColumnCustomization) SetItems(v []UiTableColumnItemCustomization) {
	o.Items = v
}

// GetPropertyRef returns the PropertyRef field value if set, zero value otherwise.
func (o *UiTableColumnCustomization) GetPropertyRef() string {
	if o == nil || IsNil(o.PropertyRef) {
		var ret string
		return ret
	}
	return *o.PropertyRef
}

// GetPropertyRefOk returns a tuple with the PropertyRef field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UiTableColumnCustomization) GetPropertyRefOk() (*string, bool) {
	if o == nil || IsNil(o.PropertyRef) {
		return nil, false
	}
	return o.PropertyRef, true
}

// HasPropertyRef returns a boolean if a field has been set.
func (o *UiTableColumnCustomization) HasPropertyRef() bool {
	if o != nil && !IsNil(o.PropertyRef) {
		return true
	}

	return false
}

// SetPropertyRef gets a reference to the given string and assigns it to the PropertyRef field.
func (o *UiTableColumnCustomization) SetPropertyRef(v string) {
	o.PropertyRef = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *UiTableColumnCustomization) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UiTableColumnCustomization) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *UiTableColumnCustomization) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *UiTableColumnCustomization) SetType(v string) {
	o.Type = &v
}

func (o UiTableColumnCustomization) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UiTableColumnCustomization) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BuiltinColumnRef) {
		toSerialize["builtinColumnRef"] = o.BuiltinColumnRef
	}
	if !IsNil(o.ColumnRef) {
		toSerialize["columnRef"] = o.ColumnRef
	}
	if !IsNil(o.DisplayName) {
		toSerialize["displayName"] = o.DisplayName
	}
	if !IsNil(o.Items) {
		toSerialize["items"] = o.Items
	}
	if !IsNil(o.PropertyRef) {
		toSerialize["propertyRef"] = o.PropertyRef
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	return toSerialize, nil
}

type NullableUiTableColumnCustomization struct {
	value *UiTableColumnCustomization
	isSet bool
}

func (v NullableUiTableColumnCustomization) Get() *UiTableColumnCustomization {
	return v.value
}

func (v *NullableUiTableColumnCustomization) Set(val *UiTableColumnCustomization) {
	v.value = val
	v.isSet = true
}

func (v NullableUiTableColumnCustomization) IsSet() bool {
	return v.isSet
}

func (v *NullableUiTableColumnCustomization) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUiTableColumnCustomization(val *UiTableColumnCustomization) *NullableUiTableColumnCustomization {
	return &NullableUiTableColumnCustomization{value: val, isSet: true}
}

func (v NullableUiTableColumnCustomization) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUiTableColumnCustomization) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


