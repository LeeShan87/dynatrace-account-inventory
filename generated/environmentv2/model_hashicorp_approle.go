/*
Dynatrace Environment API

 Documentation of the Dynatrace Environment API v2. Resources here generally supersede those in v1. Migration of resources from v1 is in progress.   If you miss a resource, consider using the Dynatrace Environment API v1. To read about use cases and examples, see [Dynatrace Documentation](https://dt-url.net/2u23k1k) .  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package environmentv2

import (
	"encoding/json"
)

// checks if the HashicorpApprole type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &HashicorpApprole{}

// HashicorpApprole Synchronization credentials with HashiCorp Vault using appRole authentication method
type HashicorpApprole struct {
	// Path to folder where credentials in HashiCorp Vault are stored.
	PathToCredentials string `json:"pathToCredentials"`
	// Role ID is similar to username when you want to authenticate in HashiCorp Vault using AppRole.
	RoleId string `json:"roleId"`
	// Secret ID is similar to password when you want to authenticate in HashiCorp Vault using AppRole. ID of token representing secret ID saved in Dynatrace CV.
	SecretId string `json:"secretId"`
	// Vault namespace in HashiCorp Vault. It is an information you set as environmental variable VAULT_NAMESPACE if you are accessing HashiCorp Vault from command line.
	VaultNamespace string `json:"vaultNamespace"`
}

// NewHashicorpApprole instantiates a new HashicorpApprole object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHashicorpApprole(pathToCredentials string, roleId string, secretId string, vaultNamespace string) *HashicorpApprole {
	this := HashicorpApprole{}
	this.PathToCredentials = pathToCredentials
	this.RoleId = roleId
	this.SecretId = secretId
	this.VaultNamespace = vaultNamespace
	return &this
}

// NewHashicorpApproleWithDefaults instantiates a new HashicorpApprole object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHashicorpApproleWithDefaults() *HashicorpApprole {
	this := HashicorpApprole{}
	return &this
}

// GetPathToCredentials returns the PathToCredentials field value
func (o *HashicorpApprole) GetPathToCredentials() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PathToCredentials
}

// GetPathToCredentialsOk returns a tuple with the PathToCredentials field value
// and a boolean to check if the value has been set.
func (o *HashicorpApprole) GetPathToCredentialsOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PathToCredentials, true
}

// SetPathToCredentials sets field value
func (o *HashicorpApprole) SetPathToCredentials(v string) {
	o.PathToCredentials = v
}

// GetRoleId returns the RoleId field value
func (o *HashicorpApprole) GetRoleId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RoleId
}

// GetRoleIdOk returns a tuple with the RoleId field value
// and a boolean to check if the value has been set.
func (o *HashicorpApprole) GetRoleIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RoleId, true
}

// SetRoleId sets field value
func (o *HashicorpApprole) SetRoleId(v string) {
	o.RoleId = v
}

// GetSecretId returns the SecretId field value
func (o *HashicorpApprole) GetSecretId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SecretId
}

// GetSecretIdOk returns a tuple with the SecretId field value
// and a boolean to check if the value has been set.
func (o *HashicorpApprole) GetSecretIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SecretId, true
}

// SetSecretId sets field value
func (o *HashicorpApprole) SetSecretId(v string) {
	o.SecretId = v
}

// GetVaultNamespace returns the VaultNamespace field value
func (o *HashicorpApprole) GetVaultNamespace() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.VaultNamespace
}

// GetVaultNamespaceOk returns a tuple with the VaultNamespace field value
// and a boolean to check if the value has been set.
func (o *HashicorpApprole) GetVaultNamespaceOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.VaultNamespace, true
}

// SetVaultNamespace sets field value
func (o *HashicorpApprole) SetVaultNamespace(v string) {
	o.VaultNamespace = v
}

func (o HashicorpApprole) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o HashicorpApprole) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["pathToCredentials"] = o.PathToCredentials
	toSerialize["roleId"] = o.RoleId
	toSerialize["secretId"] = o.SecretId
	toSerialize["vaultNamespace"] = o.VaultNamespace
	return toSerialize, nil
}

type NullableHashicorpApprole struct {
	value *HashicorpApprole
	isSet bool
}

func (v NullableHashicorpApprole) Get() *HashicorpApprole {
	return v.value
}

func (v *NullableHashicorpApprole) Set(val *HashicorpApprole) {
	v.value = val
	v.isSet = true
}

func (v NullableHashicorpApprole) IsSet() bool {
	return v.isSet
}

func (v *NullableHashicorpApprole) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHashicorpApprole(val *HashicorpApprole) *NullableHashicorpApprole {
	return &NullableHashicorpApprole{value: val, isSet: true}
}

func (v NullableHashicorpApprole) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHashicorpApprole) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


