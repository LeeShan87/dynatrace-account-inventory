/*
Dynatrace Configuration API

Documentation of the Dynatrace Configuration API. To read about use-cases and examples, see [Dynatrace Documentation](https://dt-url.net/4u43kxw).  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package configv1

import (
	"encoding/json"
)

// checks if the GraphChartSettings type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GraphChartSettings{}

// GraphChartSettings Settings for graph chart visualization
type GraphChartSettings struct {
	ConnectNulls *bool `json:"connectNulls,omitempty"`
}

// NewGraphChartSettings instantiates a new GraphChartSettings object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGraphChartSettings() *GraphChartSettings {
	this := GraphChartSettings{}
	return &this
}

// NewGraphChartSettingsWithDefaults instantiates a new GraphChartSettings object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGraphChartSettingsWithDefaults() *GraphChartSettings {
	this := GraphChartSettings{}
	return &this
}

// GetConnectNulls returns the ConnectNulls field value if set, zero value otherwise.
func (o *GraphChartSettings) GetConnectNulls() bool {
	if o == nil || IsNil(o.ConnectNulls) {
		var ret bool
		return ret
	}
	return *o.ConnectNulls
}

// GetConnectNullsOk returns a tuple with the ConnectNulls field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GraphChartSettings) GetConnectNullsOk() (*bool, bool) {
	if o == nil || IsNil(o.ConnectNulls) {
		return nil, false
	}
	return o.ConnectNulls, true
}

// HasConnectNulls returns a boolean if a field has been set.
func (o *GraphChartSettings) HasConnectNulls() bool {
	if o != nil && !IsNil(o.ConnectNulls) {
		return true
	}

	return false
}

// SetConnectNulls gets a reference to the given bool and assigns it to the ConnectNulls field.
func (o *GraphChartSettings) SetConnectNulls(v bool) {
	o.ConnectNulls = &v
}

func (o GraphChartSettings) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GraphChartSettings) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ConnectNulls) {
		toSerialize["connectNulls"] = o.ConnectNulls
	}
	return toSerialize, nil
}

type NullableGraphChartSettings struct {
	value *GraphChartSettings
	isSet bool
}

func (v NullableGraphChartSettings) Get() *GraphChartSettings {
	return v.value
}

func (v *NullableGraphChartSettings) Set(val *GraphChartSettings) {
	v.value = val
	v.isSet = true
}

func (v NullableGraphChartSettings) IsSet() bool {
	return v.isSet
}

func (v *NullableGraphChartSettings) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGraphChartSettings(val *GraphChartSettings) *NullableGraphChartSettings {
	return &NullableGraphChartSettings{value: val, isSet: true}
}

func (v NullableGraphChartSettings) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGraphChartSettings) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


