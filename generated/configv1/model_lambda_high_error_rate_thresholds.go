/*
Dynatrace Configuration API

Documentation of the Dynatrace Configuration API. To read about use-cases and examples, see [Dynatrace Documentation](https://dt-url.net/4u43kxw).  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package configv1

import (
	"encoding/json"
)

// checks if the LambdaHighErrorRateThresholds type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LambdaHighErrorRateThresholds{}

// LambdaHighErrorRateThresholds Custom thresholds for AWS Lambda high error rate. If not set, automatic mode is used.
type LambdaHighErrorRateThresholds struct {
	// Alert if failed invocations rate is higher than *X*% in 3 out of 5 samples.
	FailedInvocationsRate int32 `json:"failedInvocationsRate"`
}

// NewLambdaHighErrorRateThresholds instantiates a new LambdaHighErrorRateThresholds object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLambdaHighErrorRateThresholds(failedInvocationsRate int32) *LambdaHighErrorRateThresholds {
	this := LambdaHighErrorRateThresholds{}
	this.FailedInvocationsRate = failedInvocationsRate
	return &this
}

// NewLambdaHighErrorRateThresholdsWithDefaults instantiates a new LambdaHighErrorRateThresholds object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLambdaHighErrorRateThresholdsWithDefaults() *LambdaHighErrorRateThresholds {
	this := LambdaHighErrorRateThresholds{}
	return &this
}

// GetFailedInvocationsRate returns the FailedInvocationsRate field value
func (o *LambdaHighErrorRateThresholds) GetFailedInvocationsRate() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.FailedInvocationsRate
}

// GetFailedInvocationsRateOk returns a tuple with the FailedInvocationsRate field value
// and a boolean to check if the value has been set.
func (o *LambdaHighErrorRateThresholds) GetFailedInvocationsRateOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FailedInvocationsRate, true
}

// SetFailedInvocationsRate sets field value
func (o *LambdaHighErrorRateThresholds) SetFailedInvocationsRate(v int32) {
	o.FailedInvocationsRate = v
}

func (o LambdaHighErrorRateThresholds) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LambdaHighErrorRateThresholds) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["failedInvocationsRate"] = o.FailedInvocationsRate
	return toSerialize, nil
}

type NullableLambdaHighErrorRateThresholds struct {
	value *LambdaHighErrorRateThresholds
	isSet bool
}

func (v NullableLambdaHighErrorRateThresholds) Get() *LambdaHighErrorRateThresholds {
	return v.value
}

func (v *NullableLambdaHighErrorRateThresholds) Set(val *LambdaHighErrorRateThresholds) {
	v.value = val
	v.isSet = true
}

func (v NullableLambdaHighErrorRateThresholds) IsSet() bool {
	return v.isSet
}

func (v *NullableLambdaHighErrorRateThresholds) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLambdaHighErrorRateThresholds(val *LambdaHighErrorRateThresholds) *NullableLambdaHighErrorRateThresholds {
	return &NullableLambdaHighErrorRateThresholds{value: val, isSet: true}
}

func (v NullableLambdaHighErrorRateThresholds) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLambdaHighErrorRateThresholds) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


