/*
Dynatrace Configuration API

Documentation of the Dynatrace Configuration API. To read about use-cases and examples, see [Dynatrace Documentation](https://dt-url.net/4u43kxw).  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package configv1

import (
	"encoding/json"
)

// checks if the WebApplicationDimensionDefinition type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WebApplicationDimensionDefinition{}

// WebApplicationDimensionDefinition Dimension of the calculated web application metrics.
type WebApplicationDimensionDefinition struct {
	// The dimension of the metric.
	Dimension string `json:"dimension"`
	// The key of the user action property.    Only applicable for the `StringProperty` dimension.
	PropertyKey *string `json:"propertyKey,omitempty"`
	// The number of top values to be calculated.
	TopX int32 `json:"topX"`
}

// NewWebApplicationDimensionDefinition instantiates a new WebApplicationDimensionDefinition object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWebApplicationDimensionDefinition(dimension string, topX int32) *WebApplicationDimensionDefinition {
	this := WebApplicationDimensionDefinition{}
	this.Dimension = dimension
	this.TopX = topX
	return &this
}

// NewWebApplicationDimensionDefinitionWithDefaults instantiates a new WebApplicationDimensionDefinition object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWebApplicationDimensionDefinitionWithDefaults() *WebApplicationDimensionDefinition {
	this := WebApplicationDimensionDefinition{}
	return &this
}

// GetDimension returns the Dimension field value
func (o *WebApplicationDimensionDefinition) GetDimension() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Dimension
}

// GetDimensionOk returns a tuple with the Dimension field value
// and a boolean to check if the value has been set.
func (o *WebApplicationDimensionDefinition) GetDimensionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Dimension, true
}

// SetDimension sets field value
func (o *WebApplicationDimensionDefinition) SetDimension(v string) {
	o.Dimension = v
}

// GetPropertyKey returns the PropertyKey field value if set, zero value otherwise.
func (o *WebApplicationDimensionDefinition) GetPropertyKey() string {
	if o == nil || IsNil(o.PropertyKey) {
		var ret string
		return ret
	}
	return *o.PropertyKey
}

// GetPropertyKeyOk returns a tuple with the PropertyKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebApplicationDimensionDefinition) GetPropertyKeyOk() (*string, bool) {
	if o == nil || IsNil(o.PropertyKey) {
		return nil, false
	}
	return o.PropertyKey, true
}

// HasPropertyKey returns a boolean if a field has been set.
func (o *WebApplicationDimensionDefinition) HasPropertyKey() bool {
	if o != nil && !IsNil(o.PropertyKey) {
		return true
	}

	return false
}

// SetPropertyKey gets a reference to the given string and assigns it to the PropertyKey field.
func (o *WebApplicationDimensionDefinition) SetPropertyKey(v string) {
	o.PropertyKey = &v
}

// GetTopX returns the TopX field value
func (o *WebApplicationDimensionDefinition) GetTopX() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.TopX
}

// GetTopXOk returns a tuple with the TopX field value
// and a boolean to check if the value has been set.
func (o *WebApplicationDimensionDefinition) GetTopXOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TopX, true
}

// SetTopX sets field value
func (o *WebApplicationDimensionDefinition) SetTopX(v int32) {
	o.TopX = v
}

func (o WebApplicationDimensionDefinition) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WebApplicationDimensionDefinition) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["dimension"] = o.Dimension
	if !IsNil(o.PropertyKey) {
		toSerialize["propertyKey"] = o.PropertyKey
	}
	toSerialize["topX"] = o.TopX
	return toSerialize, nil
}

type NullableWebApplicationDimensionDefinition struct {
	value *WebApplicationDimensionDefinition
	isSet bool
}

func (v NullableWebApplicationDimensionDefinition) Get() *WebApplicationDimensionDefinition {
	return v.value
}

func (v *NullableWebApplicationDimensionDefinition) Set(val *WebApplicationDimensionDefinition) {
	v.value = val
	v.isSet = true
}

func (v NullableWebApplicationDimensionDefinition) IsSet() bool {
	return v.isSet
}

func (v *NullableWebApplicationDimensionDefinition) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWebApplicationDimensionDefinition(val *WebApplicationDimensionDefinition) *NullableWebApplicationDimensionDefinition {
	return &NullableWebApplicationDimensionDefinition{value: val, isSet: true}
}

func (v NullableWebApplicationDimensionDefinition) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWebApplicationDimensionDefinition) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


