/*
Dynatrace Configuration API

Documentation of the Dynatrace Configuration API. To read about use-cases and examples, see [Dynatrace Documentation](https://dt-url.net/4u43kxw).  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package configv1

import (
	"encoding/json"
)

// checks if the AzureSupportingService type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AzureSupportingService{}

// AzureSupportingService A service to be monitored.
type AzureSupportingService struct {
	// A list of metrics to be monitored for this service. It must include all the recommended metrics. If the list is null then recommended list of metrics for this service will be monitored.
	MonitoredMetrics []AzureMonitoredMetric `json:"monitoredMetrics,omitempty"`
	// The name of the service. Valid supported service names can be discovered using /azure/supportedServices restAPI
	Name string `json:"name"`
}

// NewAzureSupportingService instantiates a new AzureSupportingService object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAzureSupportingService(name string) *AzureSupportingService {
	this := AzureSupportingService{}
	this.Name = name
	return &this
}

// NewAzureSupportingServiceWithDefaults instantiates a new AzureSupportingService object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAzureSupportingServiceWithDefaults() *AzureSupportingService {
	this := AzureSupportingService{}
	return &this
}

// GetMonitoredMetrics returns the MonitoredMetrics field value if set, zero value otherwise.
func (o *AzureSupportingService) GetMonitoredMetrics() []AzureMonitoredMetric {
	if o == nil || IsNil(o.MonitoredMetrics) {
		var ret []AzureMonitoredMetric
		return ret
	}
	return o.MonitoredMetrics
}

// GetMonitoredMetricsOk returns a tuple with the MonitoredMetrics field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureSupportingService) GetMonitoredMetricsOk() ([]AzureMonitoredMetric, bool) {
	if o == nil || IsNil(o.MonitoredMetrics) {
		return nil, false
	}
	return o.MonitoredMetrics, true
}

// HasMonitoredMetrics returns a boolean if a field has been set.
func (o *AzureSupportingService) HasMonitoredMetrics() bool {
	if o != nil && !IsNil(o.MonitoredMetrics) {
		return true
	}

	return false
}

// SetMonitoredMetrics gets a reference to the given []AzureMonitoredMetric and assigns it to the MonitoredMetrics field.
func (o *AzureSupportingService) SetMonitoredMetrics(v []AzureMonitoredMetric) {
	o.MonitoredMetrics = v
}

// GetName returns the Name field value
func (o *AzureSupportingService) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *AzureSupportingService) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *AzureSupportingService) SetName(v string) {
	o.Name = v
}

func (o AzureSupportingService) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AzureSupportingService) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.MonitoredMetrics) {
		toSerialize["monitoredMetrics"] = o.MonitoredMetrics
	}
	toSerialize["name"] = o.Name
	return toSerialize, nil
}

type NullableAzureSupportingService struct {
	value *AzureSupportingService
	isSet bool
}

func (v NullableAzureSupportingService) Get() *AzureSupportingService {
	return v.value
}

func (v *NullableAzureSupportingService) Set(val *AzureSupportingService) {
	v.value = val
	v.isSet = true
}

func (v NullableAzureSupportingService) IsSet() bool {
	return v.isSet
}

func (v *NullableAzureSupportingService) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAzureSupportingService(val *AzureSupportingService) *NullableAzureSupportingService {
	return &NullableAzureSupportingService{value: val, isSet: true}
}

func (v NullableAzureSupportingService) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAzureSupportingService) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


