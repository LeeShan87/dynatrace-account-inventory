/*
Dynatrace Configuration API

Documentation of the Dynatrace Configuration API. To read about use-cases and examples, see [Dynatrace Documentation](https://dt-url.net/4u43kxw).  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package configv1

import (
	"encoding/json"
)

// checks if the AlertingProfileSeverityRule type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AlertingProfileSeverityRule{}

// AlertingProfileSeverityRule A severity rule of the alerting profile.    A severity rule defines the level of severity that must be met before an alert is sent our for a detected problem. Additionally it restricts the alerting to certain monitored entities.
type AlertingProfileSeverityRule struct {
	// Send a notification if a problem remains open longer than *X* minutes.
	DelayInMinutes int32 `json:"delayInMinutes"`
	// The severity level to trigger the alert.
	SeverityLevel string `json:"severityLevel"`
	TagFilter AlertingProfileTagFilter `json:"tagFilter"`
}

// NewAlertingProfileSeverityRule instantiates a new AlertingProfileSeverityRule object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAlertingProfileSeverityRule(delayInMinutes int32, severityLevel string, tagFilter AlertingProfileTagFilter) *AlertingProfileSeverityRule {
	this := AlertingProfileSeverityRule{}
	this.DelayInMinutes = delayInMinutes
	this.SeverityLevel = severityLevel
	this.TagFilter = tagFilter
	return &this
}

// NewAlertingProfileSeverityRuleWithDefaults instantiates a new AlertingProfileSeverityRule object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAlertingProfileSeverityRuleWithDefaults() *AlertingProfileSeverityRule {
	this := AlertingProfileSeverityRule{}
	return &this
}

// GetDelayInMinutes returns the DelayInMinutes field value
func (o *AlertingProfileSeverityRule) GetDelayInMinutes() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.DelayInMinutes
}

// GetDelayInMinutesOk returns a tuple with the DelayInMinutes field value
// and a boolean to check if the value has been set.
func (o *AlertingProfileSeverityRule) GetDelayInMinutesOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DelayInMinutes, true
}

// SetDelayInMinutes sets field value
func (o *AlertingProfileSeverityRule) SetDelayInMinutes(v int32) {
	o.DelayInMinutes = v
}

// GetSeverityLevel returns the SeverityLevel field value
func (o *AlertingProfileSeverityRule) GetSeverityLevel() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SeverityLevel
}

// GetSeverityLevelOk returns a tuple with the SeverityLevel field value
// and a boolean to check if the value has been set.
func (o *AlertingProfileSeverityRule) GetSeverityLevelOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SeverityLevel, true
}

// SetSeverityLevel sets field value
func (o *AlertingProfileSeverityRule) SetSeverityLevel(v string) {
	o.SeverityLevel = v
}

// GetTagFilter returns the TagFilter field value
func (o *AlertingProfileSeverityRule) GetTagFilter() AlertingProfileTagFilter {
	if o == nil {
		var ret AlertingProfileTagFilter
		return ret
	}

	return o.TagFilter
}

// GetTagFilterOk returns a tuple with the TagFilter field value
// and a boolean to check if the value has been set.
func (o *AlertingProfileSeverityRule) GetTagFilterOk() (*AlertingProfileTagFilter, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TagFilter, true
}

// SetTagFilter sets field value
func (o *AlertingProfileSeverityRule) SetTagFilter(v AlertingProfileTagFilter) {
	o.TagFilter = v
}

func (o AlertingProfileSeverityRule) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AlertingProfileSeverityRule) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["delayInMinutes"] = o.DelayInMinutes
	toSerialize["severityLevel"] = o.SeverityLevel
	toSerialize["tagFilter"] = o.TagFilter
	return toSerialize, nil
}

type NullableAlertingProfileSeverityRule struct {
	value *AlertingProfileSeverityRule
	isSet bool
}

func (v NullableAlertingProfileSeverityRule) Get() *AlertingProfileSeverityRule {
	return v.value
}

func (v *NullableAlertingProfileSeverityRule) Set(val *AlertingProfileSeverityRule) {
	v.value = val
	v.isSet = true
}

func (v NullableAlertingProfileSeverityRule) IsSet() bool {
	return v.isSet
}

func (v *NullableAlertingProfileSeverityRule) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAlertingProfileSeverityRule(val *AlertingProfileSeverityRule) *NullableAlertingProfileSeverityRule {
	return &NullableAlertingProfileSeverityRule{value: val, isSet: true}
}

func (v NullableAlertingProfileSeverityRule) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAlertingProfileSeverityRule) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


