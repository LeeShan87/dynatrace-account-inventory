/*
Dynatrace Configuration API

Documentation of the Dynatrace Configuration API. To read about use-cases and examples, see [Dynatrace Documentation](https://dt-url.net/4u43kxw).  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package configv1

import (
	"encoding/json"
)

// checks if the MobileCustomAppConfig type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MobileCustomAppConfig{}

// MobileCustomAppConfig Configuration of an existing mobile or custom application.
type MobileCustomAppConfig struct {
	ApdexSettings MobileCustomApdex `json:"apdexSettings"`
	// The UUID of the application.  It is used only by OneAgent to send data to Dynatrace.
	ApplicationId *string `json:"applicationId,omitempty"`
	// The type of the application.
	ApplicationType *string `json:"applicationType,omitempty"`
	// The type of the beacon endpoint.
	BeaconEndpointType string `json:"beaconEndpointType"`
	// The URL of the beacon endpoint.  Only applicable when the **beaconEndpointType** is set to `ENVIRONMENT_ACTIVE_GATE` or `INSTRUMENTED_WEB_SERVER`.
	BeaconEndpointUrl *string `json:"beaconEndpointUrl,omitempty"`
	// The percentage of user sessions to be analyzed.
	CostControlUserSessionPercentage int32 `json:"costControlUserSessionPercentage"`
	// Custom application icon.  Mobile apps always use the mobile device icon, so this icon can only be set for custom apps.
	IconType *string `json:"iconType,omitempty"`
	// The Dynatrace entity ID of the application.
	Identifier *string `json:"identifier,omitempty"`
	// The name of the application.
	Name string `json:"name"`
	// The opt-in mode is enabled (`true`) or disabled (`false`).  This value is only applicable to mobile and not to custom apps.
	OptInModeEnabled *bool `json:"optInModeEnabled,omitempty"`
	// The session replay is enabled (`true`) or disabled (`false`). This value is only applicable to mobile and not to custom apps.
	SessionReplayEnabled *bool `json:"sessionReplayEnabled,omitempty"`
	// **Deprecated**. Please use `sessionReplayEnabled` to enable or disable session replay for mobile apps.
	SessionReplayOnCrashEnabled *bool `json:"sessionReplayOnCrashEnabled,omitempty"`
}

// NewMobileCustomAppConfig instantiates a new MobileCustomAppConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMobileCustomAppConfig(apdexSettings MobileCustomApdex, beaconEndpointType string, costControlUserSessionPercentage int32, name string) *MobileCustomAppConfig {
	this := MobileCustomAppConfig{}
	this.ApdexSettings = apdexSettings
	this.BeaconEndpointType = beaconEndpointType
	this.CostControlUserSessionPercentage = costControlUserSessionPercentage
	this.Name = name
	return &this
}

// NewMobileCustomAppConfigWithDefaults instantiates a new MobileCustomAppConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMobileCustomAppConfigWithDefaults() *MobileCustomAppConfig {
	this := MobileCustomAppConfig{}
	return &this
}

// GetApdexSettings returns the ApdexSettings field value
func (o *MobileCustomAppConfig) GetApdexSettings() MobileCustomApdex {
	if o == nil {
		var ret MobileCustomApdex
		return ret
	}

	return o.ApdexSettings
}

// GetApdexSettingsOk returns a tuple with the ApdexSettings field value
// and a boolean to check if the value has been set.
func (o *MobileCustomAppConfig) GetApdexSettingsOk() (*MobileCustomApdex, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ApdexSettings, true
}

// SetApdexSettings sets field value
func (o *MobileCustomAppConfig) SetApdexSettings(v MobileCustomApdex) {
	o.ApdexSettings = v
}

// GetApplicationId returns the ApplicationId field value if set, zero value otherwise.
func (o *MobileCustomAppConfig) GetApplicationId() string {
	if o == nil || IsNil(o.ApplicationId) {
		var ret string
		return ret
	}
	return *o.ApplicationId
}

// GetApplicationIdOk returns a tuple with the ApplicationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobileCustomAppConfig) GetApplicationIdOk() (*string, bool) {
	if o == nil || IsNil(o.ApplicationId) {
		return nil, false
	}
	return o.ApplicationId, true
}

// HasApplicationId returns a boolean if a field has been set.
func (o *MobileCustomAppConfig) HasApplicationId() bool {
	if o != nil && !IsNil(o.ApplicationId) {
		return true
	}

	return false
}

// SetApplicationId gets a reference to the given string and assigns it to the ApplicationId field.
func (o *MobileCustomAppConfig) SetApplicationId(v string) {
	o.ApplicationId = &v
}

// GetApplicationType returns the ApplicationType field value if set, zero value otherwise.
func (o *MobileCustomAppConfig) GetApplicationType() string {
	if o == nil || IsNil(o.ApplicationType) {
		var ret string
		return ret
	}
	return *o.ApplicationType
}

// GetApplicationTypeOk returns a tuple with the ApplicationType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobileCustomAppConfig) GetApplicationTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ApplicationType) {
		return nil, false
	}
	return o.ApplicationType, true
}

// HasApplicationType returns a boolean if a field has been set.
func (o *MobileCustomAppConfig) HasApplicationType() bool {
	if o != nil && !IsNil(o.ApplicationType) {
		return true
	}

	return false
}

// SetApplicationType gets a reference to the given string and assigns it to the ApplicationType field.
func (o *MobileCustomAppConfig) SetApplicationType(v string) {
	o.ApplicationType = &v
}

// GetBeaconEndpointType returns the BeaconEndpointType field value
func (o *MobileCustomAppConfig) GetBeaconEndpointType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.BeaconEndpointType
}

// GetBeaconEndpointTypeOk returns a tuple with the BeaconEndpointType field value
// and a boolean to check if the value has been set.
func (o *MobileCustomAppConfig) GetBeaconEndpointTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BeaconEndpointType, true
}

// SetBeaconEndpointType sets field value
func (o *MobileCustomAppConfig) SetBeaconEndpointType(v string) {
	o.BeaconEndpointType = v
}

// GetBeaconEndpointUrl returns the BeaconEndpointUrl field value if set, zero value otherwise.
func (o *MobileCustomAppConfig) GetBeaconEndpointUrl() string {
	if o == nil || IsNil(o.BeaconEndpointUrl) {
		var ret string
		return ret
	}
	return *o.BeaconEndpointUrl
}

// GetBeaconEndpointUrlOk returns a tuple with the BeaconEndpointUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobileCustomAppConfig) GetBeaconEndpointUrlOk() (*string, bool) {
	if o == nil || IsNil(o.BeaconEndpointUrl) {
		return nil, false
	}
	return o.BeaconEndpointUrl, true
}

// HasBeaconEndpointUrl returns a boolean if a field has been set.
func (o *MobileCustomAppConfig) HasBeaconEndpointUrl() bool {
	if o != nil && !IsNil(o.BeaconEndpointUrl) {
		return true
	}

	return false
}

// SetBeaconEndpointUrl gets a reference to the given string and assigns it to the BeaconEndpointUrl field.
func (o *MobileCustomAppConfig) SetBeaconEndpointUrl(v string) {
	o.BeaconEndpointUrl = &v
}

// GetCostControlUserSessionPercentage returns the CostControlUserSessionPercentage field value
func (o *MobileCustomAppConfig) GetCostControlUserSessionPercentage() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.CostControlUserSessionPercentage
}

// GetCostControlUserSessionPercentageOk returns a tuple with the CostControlUserSessionPercentage field value
// and a boolean to check if the value has been set.
func (o *MobileCustomAppConfig) GetCostControlUserSessionPercentageOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CostControlUserSessionPercentage, true
}

// SetCostControlUserSessionPercentage sets field value
func (o *MobileCustomAppConfig) SetCostControlUserSessionPercentage(v int32) {
	o.CostControlUserSessionPercentage = v
}

// GetIconType returns the IconType field value if set, zero value otherwise.
func (o *MobileCustomAppConfig) GetIconType() string {
	if o == nil || IsNil(o.IconType) {
		var ret string
		return ret
	}
	return *o.IconType
}

// GetIconTypeOk returns a tuple with the IconType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobileCustomAppConfig) GetIconTypeOk() (*string, bool) {
	if o == nil || IsNil(o.IconType) {
		return nil, false
	}
	return o.IconType, true
}

// HasIconType returns a boolean if a field has been set.
func (o *MobileCustomAppConfig) HasIconType() bool {
	if o != nil && !IsNil(o.IconType) {
		return true
	}

	return false
}

// SetIconType gets a reference to the given string and assigns it to the IconType field.
func (o *MobileCustomAppConfig) SetIconType(v string) {
	o.IconType = &v
}

// GetIdentifier returns the Identifier field value if set, zero value otherwise.
func (o *MobileCustomAppConfig) GetIdentifier() string {
	if o == nil || IsNil(o.Identifier) {
		var ret string
		return ret
	}
	return *o.Identifier
}

// GetIdentifierOk returns a tuple with the Identifier field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobileCustomAppConfig) GetIdentifierOk() (*string, bool) {
	if o == nil || IsNil(o.Identifier) {
		return nil, false
	}
	return o.Identifier, true
}

// HasIdentifier returns a boolean if a field has been set.
func (o *MobileCustomAppConfig) HasIdentifier() bool {
	if o != nil && !IsNil(o.Identifier) {
		return true
	}

	return false
}

// SetIdentifier gets a reference to the given string and assigns it to the Identifier field.
func (o *MobileCustomAppConfig) SetIdentifier(v string) {
	o.Identifier = &v
}

// GetName returns the Name field value
func (o *MobileCustomAppConfig) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *MobileCustomAppConfig) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *MobileCustomAppConfig) SetName(v string) {
	o.Name = v
}

// GetOptInModeEnabled returns the OptInModeEnabled field value if set, zero value otherwise.
func (o *MobileCustomAppConfig) GetOptInModeEnabled() bool {
	if o == nil || IsNil(o.OptInModeEnabled) {
		var ret bool
		return ret
	}
	return *o.OptInModeEnabled
}

// GetOptInModeEnabledOk returns a tuple with the OptInModeEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobileCustomAppConfig) GetOptInModeEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.OptInModeEnabled) {
		return nil, false
	}
	return o.OptInModeEnabled, true
}

// HasOptInModeEnabled returns a boolean if a field has been set.
func (o *MobileCustomAppConfig) HasOptInModeEnabled() bool {
	if o != nil && !IsNil(o.OptInModeEnabled) {
		return true
	}

	return false
}

// SetOptInModeEnabled gets a reference to the given bool and assigns it to the OptInModeEnabled field.
func (o *MobileCustomAppConfig) SetOptInModeEnabled(v bool) {
	o.OptInModeEnabled = &v
}

// GetSessionReplayEnabled returns the SessionReplayEnabled field value if set, zero value otherwise.
func (o *MobileCustomAppConfig) GetSessionReplayEnabled() bool {
	if o == nil || IsNil(o.SessionReplayEnabled) {
		var ret bool
		return ret
	}
	return *o.SessionReplayEnabled
}

// GetSessionReplayEnabledOk returns a tuple with the SessionReplayEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobileCustomAppConfig) GetSessionReplayEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.SessionReplayEnabled) {
		return nil, false
	}
	return o.SessionReplayEnabled, true
}

// HasSessionReplayEnabled returns a boolean if a field has been set.
func (o *MobileCustomAppConfig) HasSessionReplayEnabled() bool {
	if o != nil && !IsNil(o.SessionReplayEnabled) {
		return true
	}

	return false
}

// SetSessionReplayEnabled gets a reference to the given bool and assigns it to the SessionReplayEnabled field.
func (o *MobileCustomAppConfig) SetSessionReplayEnabled(v bool) {
	o.SessionReplayEnabled = &v
}

// GetSessionReplayOnCrashEnabled returns the SessionReplayOnCrashEnabled field value if set, zero value otherwise.
func (o *MobileCustomAppConfig) GetSessionReplayOnCrashEnabled() bool {
	if o == nil || IsNil(o.SessionReplayOnCrashEnabled) {
		var ret bool
		return ret
	}
	return *o.SessionReplayOnCrashEnabled
}

// GetSessionReplayOnCrashEnabledOk returns a tuple with the SessionReplayOnCrashEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobileCustomAppConfig) GetSessionReplayOnCrashEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.SessionReplayOnCrashEnabled) {
		return nil, false
	}
	return o.SessionReplayOnCrashEnabled, true
}

// HasSessionReplayOnCrashEnabled returns a boolean if a field has been set.
func (o *MobileCustomAppConfig) HasSessionReplayOnCrashEnabled() bool {
	if o != nil && !IsNil(o.SessionReplayOnCrashEnabled) {
		return true
	}

	return false
}

// SetSessionReplayOnCrashEnabled gets a reference to the given bool and assigns it to the SessionReplayOnCrashEnabled field.
func (o *MobileCustomAppConfig) SetSessionReplayOnCrashEnabled(v bool) {
	o.SessionReplayOnCrashEnabled = &v
}

func (o MobileCustomAppConfig) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MobileCustomAppConfig) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["apdexSettings"] = o.ApdexSettings
	if !IsNil(o.ApplicationId) {
		toSerialize["applicationId"] = o.ApplicationId
	}
	if !IsNil(o.ApplicationType) {
		toSerialize["applicationType"] = o.ApplicationType
	}
	toSerialize["beaconEndpointType"] = o.BeaconEndpointType
	if !IsNil(o.BeaconEndpointUrl) {
		toSerialize["beaconEndpointUrl"] = o.BeaconEndpointUrl
	}
	toSerialize["costControlUserSessionPercentage"] = o.CostControlUserSessionPercentage
	if !IsNil(o.IconType) {
		toSerialize["iconType"] = o.IconType
	}
	if !IsNil(o.Identifier) {
		toSerialize["identifier"] = o.Identifier
	}
	toSerialize["name"] = o.Name
	if !IsNil(o.OptInModeEnabled) {
		toSerialize["optInModeEnabled"] = o.OptInModeEnabled
	}
	if !IsNil(o.SessionReplayEnabled) {
		toSerialize["sessionReplayEnabled"] = o.SessionReplayEnabled
	}
	if !IsNil(o.SessionReplayOnCrashEnabled) {
		toSerialize["sessionReplayOnCrashEnabled"] = o.SessionReplayOnCrashEnabled
	}
	return toSerialize, nil
}

type NullableMobileCustomAppConfig struct {
	value *MobileCustomAppConfig
	isSet bool
}

func (v NullableMobileCustomAppConfig) Get() *MobileCustomAppConfig {
	return v.value
}

func (v *NullableMobileCustomAppConfig) Set(val *MobileCustomAppConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableMobileCustomAppConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableMobileCustomAppConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMobileCustomAppConfig(val *MobileCustomAppConfig) *NullableMobileCustomAppConfig {
	return &NullableMobileCustomAppConfig{value: val, isSet: true}
}

func (v NullableMobileCustomAppConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMobileCustomAppConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


