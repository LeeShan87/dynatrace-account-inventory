/*
Dynatrace Configuration API

Documentation of the Dynatrace Configuration API. To read about use-cases and examples, see [Dynatrace Documentation](https://dt-url.net/4u43kxw).  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package configv1

import (
	"encoding/json"
)

// checks if the FdpTagCondition type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FdpTagCondition{}

// FdpTagCondition Configuration of the tag condition in the FDP set.
type FdpTagCondition struct {
	Predicate FdpTagPredicate `json:"predicate"`
	// The key of the tag to be checked.
	TagKey string `json:"tagKey"`
}

// NewFdpTagCondition instantiates a new FdpTagCondition object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFdpTagCondition(predicate FdpTagPredicate, tagKey string) *FdpTagCondition {
	this := FdpTagCondition{}
	this.Predicate = predicate
	this.TagKey = tagKey
	return &this
}

// NewFdpTagConditionWithDefaults instantiates a new FdpTagCondition object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFdpTagConditionWithDefaults() *FdpTagCondition {
	this := FdpTagCondition{}
	return &this
}

// GetPredicate returns the Predicate field value
func (o *FdpTagCondition) GetPredicate() FdpTagPredicate {
	if o == nil {
		var ret FdpTagPredicate
		return ret
	}

	return o.Predicate
}

// GetPredicateOk returns a tuple with the Predicate field value
// and a boolean to check if the value has been set.
func (o *FdpTagCondition) GetPredicateOk() (*FdpTagPredicate, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Predicate, true
}

// SetPredicate sets field value
func (o *FdpTagCondition) SetPredicate(v FdpTagPredicate) {
	o.Predicate = v
}

// GetTagKey returns the TagKey field value
func (o *FdpTagCondition) GetTagKey() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TagKey
}

// GetTagKeyOk returns a tuple with the TagKey field value
// and a boolean to check if the value has been set.
func (o *FdpTagCondition) GetTagKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TagKey, true
}

// SetTagKey sets field value
func (o *FdpTagCondition) SetTagKey(v string) {
	o.TagKey = v
}

func (o FdpTagCondition) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FdpTagCondition) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["predicate"] = o.Predicate
	toSerialize["tagKey"] = o.TagKey
	return toSerialize, nil
}

type NullableFdpTagCondition struct {
	value *FdpTagCondition
	isSet bool
}

func (v NullableFdpTagCondition) Get() *FdpTagCondition {
	return v.value
}

func (v *NullableFdpTagCondition) Set(val *FdpTagCondition) {
	v.value = val
	v.isSet = true
}

func (v NullableFdpTagCondition) IsSet() bool {
	return v.isSet
}

func (v *NullableFdpTagCondition) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFdpTagCondition(val *FdpTagCondition) *NullableFdpTagCondition {
	return &NullableFdpTagCondition{value: val, isSet: true}
}

func (v NullableFdpTagCondition) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFdpTagCondition) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


