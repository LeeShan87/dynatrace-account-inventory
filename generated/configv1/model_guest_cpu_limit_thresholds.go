/*
Dynatrace Configuration API

Documentation of the Dynatrace Configuration API. To read about use-cases and examples, see [Dynatrace Documentation](https://dt-url.net/4u43kxw).  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package configv1

import (
	"encoding/json"
)

// checks if the GuestCPULimitThresholds type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GuestCPULimitThresholds{}

// GuestCPULimitThresholds Custom thresholds for guest CPU limit detection. If not set then the automatic mode is used.    **All** conditions must be fulfilled to trigger an alert.
type GuestCPULimitThresholds struct {
	// Hypervisor CPU usage is higher than *X*% in 3 out of 5 samples.
	HostCpuUsageMinPercentage int32 `json:"hostCpuUsageMinPercentage"`
	// VM CPU ready is higher than *X*% occurred in 3 out of 5 samples.
	VmCpuReadyMaxPercentage int32 `json:"vmCpuReadyMaxPercentage"`
	// VM CPU usage (VM CPU Usage Mhz / VM CPU limit in Mhz) is higher than *X*% in 3 out of 5 samples.
	VmCpuUsageMaxPercentage int32 `json:"vmCpuUsageMaxPercentage"`
}

// NewGuestCPULimitThresholds instantiates a new GuestCPULimitThresholds object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGuestCPULimitThresholds(hostCpuUsageMinPercentage int32, vmCpuReadyMaxPercentage int32, vmCpuUsageMaxPercentage int32) *GuestCPULimitThresholds {
	this := GuestCPULimitThresholds{}
	this.HostCpuUsageMinPercentage = hostCpuUsageMinPercentage
	this.VmCpuReadyMaxPercentage = vmCpuReadyMaxPercentage
	this.VmCpuUsageMaxPercentage = vmCpuUsageMaxPercentage
	return &this
}

// NewGuestCPULimitThresholdsWithDefaults instantiates a new GuestCPULimitThresholds object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGuestCPULimitThresholdsWithDefaults() *GuestCPULimitThresholds {
	this := GuestCPULimitThresholds{}
	return &this
}

// GetHostCpuUsageMinPercentage returns the HostCpuUsageMinPercentage field value
func (o *GuestCPULimitThresholds) GetHostCpuUsageMinPercentage() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.HostCpuUsageMinPercentage
}

// GetHostCpuUsageMinPercentageOk returns a tuple with the HostCpuUsageMinPercentage field value
// and a boolean to check if the value has been set.
func (o *GuestCPULimitThresholds) GetHostCpuUsageMinPercentageOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.HostCpuUsageMinPercentage, true
}

// SetHostCpuUsageMinPercentage sets field value
func (o *GuestCPULimitThresholds) SetHostCpuUsageMinPercentage(v int32) {
	o.HostCpuUsageMinPercentage = v
}

// GetVmCpuReadyMaxPercentage returns the VmCpuReadyMaxPercentage field value
func (o *GuestCPULimitThresholds) GetVmCpuReadyMaxPercentage() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.VmCpuReadyMaxPercentage
}

// GetVmCpuReadyMaxPercentageOk returns a tuple with the VmCpuReadyMaxPercentage field value
// and a boolean to check if the value has been set.
func (o *GuestCPULimitThresholds) GetVmCpuReadyMaxPercentageOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.VmCpuReadyMaxPercentage, true
}

// SetVmCpuReadyMaxPercentage sets field value
func (o *GuestCPULimitThresholds) SetVmCpuReadyMaxPercentage(v int32) {
	o.VmCpuReadyMaxPercentage = v
}

// GetVmCpuUsageMaxPercentage returns the VmCpuUsageMaxPercentage field value
func (o *GuestCPULimitThresholds) GetVmCpuUsageMaxPercentage() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.VmCpuUsageMaxPercentage
}

// GetVmCpuUsageMaxPercentageOk returns a tuple with the VmCpuUsageMaxPercentage field value
// and a boolean to check if the value has been set.
func (o *GuestCPULimitThresholds) GetVmCpuUsageMaxPercentageOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.VmCpuUsageMaxPercentage, true
}

// SetVmCpuUsageMaxPercentage sets field value
func (o *GuestCPULimitThresholds) SetVmCpuUsageMaxPercentage(v int32) {
	o.VmCpuUsageMaxPercentage = v
}

func (o GuestCPULimitThresholds) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GuestCPULimitThresholds) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["hostCpuUsageMinPercentage"] = o.HostCpuUsageMinPercentage
	toSerialize["vmCpuReadyMaxPercentage"] = o.VmCpuReadyMaxPercentage
	toSerialize["vmCpuUsageMaxPercentage"] = o.VmCpuUsageMaxPercentage
	return toSerialize, nil
}

type NullableGuestCPULimitThresholds struct {
	value *GuestCPULimitThresholds
	isSet bool
}

func (v NullableGuestCPULimitThresholds) Get() *GuestCPULimitThresholds {
	return v.value
}

func (v *NullableGuestCPULimitThresholds) Set(val *GuestCPULimitThresholds) {
	v.value = val
	v.isSet = true
}

func (v NullableGuestCPULimitThresholds) IsSet() bool {
	return v.isSet
}

func (v *NullableGuestCPULimitThresholds) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGuestCPULimitThresholds(val *GuestCPULimitThresholds) *NullableGuestCPULimitThresholds {
	return &NullableGuestCPULimitThresholds{value: val, isSet: true}
}

func (v NullableGuestCPULimitThresholds) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGuestCPULimitThresholds) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


