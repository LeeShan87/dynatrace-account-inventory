/*
Dynatrace Configuration API

Documentation of the Dynatrace Configuration API. To read about use-cases and examples, see [Dynatrace Documentation](https://dt-url.net/4u43kxw).  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package configv1

import (
	"encoding/json"
)

// checks if the DashboardGenericTagFilter type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DashboardGenericTagFilter{}

// DashboardGenericTagFilter Generic tag filters that can be applied to a dashboard.
type DashboardGenericTagFilter struct {
	// The display name used to identify this generic filter.
	DisplayName *string `json:"displayName,omitempty"`
	// Entity types affected by tag.
	EntityTypes []string `json:"entityTypes"`
	// The entity type for which the suggestions should be provided.
	SuggestionsFromEntityType *string `json:"suggestionsFromEntityType,omitempty"`
	// The tag key for this filter.
	TagKey *string `json:"tagKey,omitempty"`
}

// NewDashboardGenericTagFilter instantiates a new DashboardGenericTagFilter object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDashboardGenericTagFilter(entityTypes []string) *DashboardGenericTagFilter {
	this := DashboardGenericTagFilter{}
	this.EntityTypes = entityTypes
	return &this
}

// NewDashboardGenericTagFilterWithDefaults instantiates a new DashboardGenericTagFilter object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDashboardGenericTagFilterWithDefaults() *DashboardGenericTagFilter {
	this := DashboardGenericTagFilter{}
	return &this
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise.
func (o *DashboardGenericTagFilter) GetDisplayName() string {
	if o == nil || IsNil(o.DisplayName) {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DashboardGenericTagFilter) GetDisplayNameOk() (*string, bool) {
	if o == nil || IsNil(o.DisplayName) {
		return nil, false
	}
	return o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *DashboardGenericTagFilter) HasDisplayName() bool {
	if o != nil && !IsNil(o.DisplayName) {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *DashboardGenericTagFilter) SetDisplayName(v string) {
	o.DisplayName = &v
}

// GetEntityTypes returns the EntityTypes field value
func (o *DashboardGenericTagFilter) GetEntityTypes() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.EntityTypes
}

// GetEntityTypesOk returns a tuple with the EntityTypes field value
// and a boolean to check if the value has been set.
func (o *DashboardGenericTagFilter) GetEntityTypesOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.EntityTypes, true
}

// SetEntityTypes sets field value
func (o *DashboardGenericTagFilter) SetEntityTypes(v []string) {
	o.EntityTypes = v
}

// GetSuggestionsFromEntityType returns the SuggestionsFromEntityType field value if set, zero value otherwise.
func (o *DashboardGenericTagFilter) GetSuggestionsFromEntityType() string {
	if o == nil || IsNil(o.SuggestionsFromEntityType) {
		var ret string
		return ret
	}
	return *o.SuggestionsFromEntityType
}

// GetSuggestionsFromEntityTypeOk returns a tuple with the SuggestionsFromEntityType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DashboardGenericTagFilter) GetSuggestionsFromEntityTypeOk() (*string, bool) {
	if o == nil || IsNil(o.SuggestionsFromEntityType) {
		return nil, false
	}
	return o.SuggestionsFromEntityType, true
}

// HasSuggestionsFromEntityType returns a boolean if a field has been set.
func (o *DashboardGenericTagFilter) HasSuggestionsFromEntityType() bool {
	if o != nil && !IsNil(o.SuggestionsFromEntityType) {
		return true
	}

	return false
}

// SetSuggestionsFromEntityType gets a reference to the given string and assigns it to the SuggestionsFromEntityType field.
func (o *DashboardGenericTagFilter) SetSuggestionsFromEntityType(v string) {
	o.SuggestionsFromEntityType = &v
}

// GetTagKey returns the TagKey field value if set, zero value otherwise.
func (o *DashboardGenericTagFilter) GetTagKey() string {
	if o == nil || IsNil(o.TagKey) {
		var ret string
		return ret
	}
	return *o.TagKey
}

// GetTagKeyOk returns a tuple with the TagKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DashboardGenericTagFilter) GetTagKeyOk() (*string, bool) {
	if o == nil || IsNil(o.TagKey) {
		return nil, false
	}
	return o.TagKey, true
}

// HasTagKey returns a boolean if a field has been set.
func (o *DashboardGenericTagFilter) HasTagKey() bool {
	if o != nil && !IsNil(o.TagKey) {
		return true
	}

	return false
}

// SetTagKey gets a reference to the given string and assigns it to the TagKey field.
func (o *DashboardGenericTagFilter) SetTagKey(v string) {
	o.TagKey = &v
}

func (o DashboardGenericTagFilter) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DashboardGenericTagFilter) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DisplayName) {
		toSerialize["displayName"] = o.DisplayName
	}
	toSerialize["entityTypes"] = o.EntityTypes
	if !IsNil(o.SuggestionsFromEntityType) {
		toSerialize["suggestionsFromEntityType"] = o.SuggestionsFromEntityType
	}
	if !IsNil(o.TagKey) {
		toSerialize["tagKey"] = o.TagKey
	}
	return toSerialize, nil
}

type NullableDashboardGenericTagFilter struct {
	value *DashboardGenericTagFilter
	isSet bool
}

func (v NullableDashboardGenericTagFilter) Get() *DashboardGenericTagFilter {
	return v.value
}

func (v *NullableDashboardGenericTagFilter) Set(val *DashboardGenericTagFilter) {
	v.value = val
	v.isSet = true
}

func (v NullableDashboardGenericTagFilter) IsSet() bool {
	return v.isSet
}

func (v *NullableDashboardGenericTagFilter) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDashboardGenericTagFilter(val *DashboardGenericTagFilter) *NullableDashboardGenericTagFilter {
	return &NullableDashboardGenericTagFilter{value: val, isSet: true}
}

func (v NullableDashboardGenericTagFilter) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDashboardGenericTagFilter) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


