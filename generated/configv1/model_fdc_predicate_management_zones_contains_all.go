/*
Dynatrace Configuration API

Documentation of the Dynatrace Configuration API. To read about use-cases and examples, see [Dynatrace Documentation](https://dt-url.net/4u43kxw).  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package configv1

import (
	"encoding/json"
)

// checks if the FdcPredicateManagementZonesContainsAll type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FdcPredicateManagementZonesContainsAll{}

// FdcPredicateManagementZonesContainsAll The predicate of the `MANAGEMENT_ZONES_CONTAINS_ALL` type. It checks whether the attribute (which is a set of management zones) contains **all** the reference values.
type FdcPredicateManagementZonesContainsAll struct {
	// A list of reference values. The condition is fulfilled when the attribute (which is a set of management zones) contains **all** the reference values.   Specify the ID or the name of the management zone here.
	Values []string `json:"values,omitempty"`
}

// NewFdcPredicateManagementZonesContainsAll instantiates a new FdcPredicateManagementZonesContainsAll object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFdcPredicateManagementZonesContainsAll(type_ string) *FdcPredicateManagementZonesContainsAll {
	this := FdcPredicateManagementZonesContainsAll{}
	this.Type = type_
	return &this
}

// NewFdcPredicateManagementZonesContainsAllWithDefaults instantiates a new FdcPredicateManagementZonesContainsAll object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFdcPredicateManagementZonesContainsAllWithDefaults() *FdcPredicateManagementZonesContainsAll {
	this := FdcPredicateManagementZonesContainsAll{}
	return &this
}

// GetValues returns the Values field value if set, zero value otherwise.
func (o *FdcPredicateManagementZonesContainsAll) GetValues() []string {
	if o == nil || IsNil(o.Values) {
		var ret []string
		return ret
	}
	return o.Values
}

// GetValuesOk returns a tuple with the Values field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FdcPredicateManagementZonesContainsAll) GetValuesOk() ([]string, bool) {
	if o == nil || IsNil(o.Values) {
		return nil, false
	}
	return o.Values, true
}

// HasValues returns a boolean if a field has been set.
func (o *FdcPredicateManagementZonesContainsAll) HasValues() bool {
	if o != nil && !IsNil(o.Values) {
		return true
	}

	return false
}

// SetValues gets a reference to the given []string and assigns it to the Values field.
func (o *FdcPredicateManagementZonesContainsAll) SetValues(v []string) {
	o.Values = v
}

func (o FdcPredicateManagementZonesContainsAll) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FdcPredicateManagementZonesContainsAll) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Values) {
		toSerialize["values"] = o.Values
	}
	return toSerialize, nil
}

type NullableFdcPredicateManagementZonesContainsAll struct {
	value *FdcPredicateManagementZonesContainsAll
	isSet bool
}

func (v NullableFdcPredicateManagementZonesContainsAll) Get() *FdcPredicateManagementZonesContainsAll {
	return v.value
}

func (v *NullableFdcPredicateManagementZonesContainsAll) Set(val *FdcPredicateManagementZonesContainsAll) {
	v.value = val
	v.isSet = true
}

func (v NullableFdcPredicateManagementZonesContainsAll) IsSet() bool {
	return v.isSet
}

func (v *NullableFdcPredicateManagementZonesContainsAll) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFdcPredicateManagementZonesContainsAll(val *FdcPredicateManagementZonesContainsAll) *NullableFdcPredicateManagementZonesContainsAll {
	return &NullableFdcPredicateManagementZonesContainsAll{value: val, isSet: true}
}

func (v NullableFdcPredicateManagementZonesContainsAll) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFdcPredicateManagementZonesContainsAll) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


