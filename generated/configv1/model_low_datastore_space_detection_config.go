/*
Dynatrace Configuration API

Documentation of the Dynatrace Configuration API. To read about use-cases and examples, see [Dynatrace Documentation](https://dt-url.net/4u43kxw).  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package configv1

import (
	"encoding/json"
)

// checks if the LowDatastoreSpaceDetectionConfig type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LowDatastoreSpaceDetectionConfig{}

// LowDatastoreSpaceDetectionConfig The configuraiton of the low datastore free space detection.
type LowDatastoreSpaceDetectionConfig struct {
	CustomThresholds *LowDatastoreSpaceThresholds `json:"customThresholds,omitempty"`
	// The detection is enabled (`true`) or disabled (`false`).
	Enabled bool `json:"enabled"`
}

// NewLowDatastoreSpaceDetectionConfig instantiates a new LowDatastoreSpaceDetectionConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLowDatastoreSpaceDetectionConfig(enabled bool) *LowDatastoreSpaceDetectionConfig {
	this := LowDatastoreSpaceDetectionConfig{}
	this.Enabled = enabled
	return &this
}

// NewLowDatastoreSpaceDetectionConfigWithDefaults instantiates a new LowDatastoreSpaceDetectionConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLowDatastoreSpaceDetectionConfigWithDefaults() *LowDatastoreSpaceDetectionConfig {
	this := LowDatastoreSpaceDetectionConfig{}
	return &this
}

// GetCustomThresholds returns the CustomThresholds field value if set, zero value otherwise.
func (o *LowDatastoreSpaceDetectionConfig) GetCustomThresholds() LowDatastoreSpaceThresholds {
	if o == nil || IsNil(o.CustomThresholds) {
		var ret LowDatastoreSpaceThresholds
		return ret
	}
	return *o.CustomThresholds
}

// GetCustomThresholdsOk returns a tuple with the CustomThresholds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LowDatastoreSpaceDetectionConfig) GetCustomThresholdsOk() (*LowDatastoreSpaceThresholds, bool) {
	if o == nil || IsNil(o.CustomThresholds) {
		return nil, false
	}
	return o.CustomThresholds, true
}

// HasCustomThresholds returns a boolean if a field has been set.
func (o *LowDatastoreSpaceDetectionConfig) HasCustomThresholds() bool {
	if o != nil && !IsNil(o.CustomThresholds) {
		return true
	}

	return false
}

// SetCustomThresholds gets a reference to the given LowDatastoreSpaceThresholds and assigns it to the CustomThresholds field.
func (o *LowDatastoreSpaceDetectionConfig) SetCustomThresholds(v LowDatastoreSpaceThresholds) {
	o.CustomThresholds = &v
}

// GetEnabled returns the Enabled field value
func (o *LowDatastoreSpaceDetectionConfig) GetEnabled() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value
// and a boolean to check if the value has been set.
func (o *LowDatastoreSpaceDetectionConfig) GetEnabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Enabled, true
}

// SetEnabled sets field value
func (o *LowDatastoreSpaceDetectionConfig) SetEnabled(v bool) {
	o.Enabled = v
}

func (o LowDatastoreSpaceDetectionConfig) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LowDatastoreSpaceDetectionConfig) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CustomThresholds) {
		toSerialize["customThresholds"] = o.CustomThresholds
	}
	toSerialize["enabled"] = o.Enabled
	return toSerialize, nil
}

type NullableLowDatastoreSpaceDetectionConfig struct {
	value *LowDatastoreSpaceDetectionConfig
	isSet bool
}

func (v NullableLowDatastoreSpaceDetectionConfig) Get() *LowDatastoreSpaceDetectionConfig {
	return v.value
}

func (v *NullableLowDatastoreSpaceDetectionConfig) Set(val *LowDatastoreSpaceDetectionConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableLowDatastoreSpaceDetectionConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableLowDatastoreSpaceDetectionConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLowDatastoreSpaceDetectionConfig(val *LowDatastoreSpaceDetectionConfig) *NullableLowDatastoreSpaceDetectionConfig {
	return &NullableLowDatastoreSpaceDetectionConfig{value: val, isSet: true}
}

func (v NullableLowDatastoreSpaceDetectionConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLowDatastoreSpaceDetectionConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


