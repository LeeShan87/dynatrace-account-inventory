/*
Dynatrace Configuration API

Documentation of the Dynatrace Configuration API. To read about use-cases and examples, see [Dynatrace Documentation](https://dt-url.net/4u43kxw).  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package configv1

import (
	"encoding/json"
)

// checks if the MobileSessionUserActionPropertyList type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MobileSessionUserActionPropertyList{}

// MobileSessionUserActionPropertyList Contains lists of short representations of mobile session properties and mobile user action properties.
type MobileSessionUserActionPropertyList struct {
	// A list of short representations of mobile session properties.
	SessionProperties []MobileSessionUserActionPropertyShort `json:"sessionProperties,omitempty"`
	// A list of short representations of mobile user action properties.
	UserActionProperties []MobileSessionUserActionPropertyShort `json:"userActionProperties,omitempty"`
}

// NewMobileSessionUserActionPropertyList instantiates a new MobileSessionUserActionPropertyList object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMobileSessionUserActionPropertyList() *MobileSessionUserActionPropertyList {
	this := MobileSessionUserActionPropertyList{}
	return &this
}

// NewMobileSessionUserActionPropertyListWithDefaults instantiates a new MobileSessionUserActionPropertyList object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMobileSessionUserActionPropertyListWithDefaults() *MobileSessionUserActionPropertyList {
	this := MobileSessionUserActionPropertyList{}
	return &this
}

// GetSessionProperties returns the SessionProperties field value if set, zero value otherwise.
func (o *MobileSessionUserActionPropertyList) GetSessionProperties() []MobileSessionUserActionPropertyShort {
	if o == nil || IsNil(o.SessionProperties) {
		var ret []MobileSessionUserActionPropertyShort
		return ret
	}
	return o.SessionProperties
}

// GetSessionPropertiesOk returns a tuple with the SessionProperties field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobileSessionUserActionPropertyList) GetSessionPropertiesOk() ([]MobileSessionUserActionPropertyShort, bool) {
	if o == nil || IsNil(o.SessionProperties) {
		return nil, false
	}
	return o.SessionProperties, true
}

// HasSessionProperties returns a boolean if a field has been set.
func (o *MobileSessionUserActionPropertyList) HasSessionProperties() bool {
	if o != nil && !IsNil(o.SessionProperties) {
		return true
	}

	return false
}

// SetSessionProperties gets a reference to the given []MobileSessionUserActionPropertyShort and assigns it to the SessionProperties field.
func (o *MobileSessionUserActionPropertyList) SetSessionProperties(v []MobileSessionUserActionPropertyShort) {
	o.SessionProperties = v
}

// GetUserActionProperties returns the UserActionProperties field value if set, zero value otherwise.
func (o *MobileSessionUserActionPropertyList) GetUserActionProperties() []MobileSessionUserActionPropertyShort {
	if o == nil || IsNil(o.UserActionProperties) {
		var ret []MobileSessionUserActionPropertyShort
		return ret
	}
	return o.UserActionProperties
}

// GetUserActionPropertiesOk returns a tuple with the UserActionProperties field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobileSessionUserActionPropertyList) GetUserActionPropertiesOk() ([]MobileSessionUserActionPropertyShort, bool) {
	if o == nil || IsNil(o.UserActionProperties) {
		return nil, false
	}
	return o.UserActionProperties, true
}

// HasUserActionProperties returns a boolean if a field has been set.
func (o *MobileSessionUserActionPropertyList) HasUserActionProperties() bool {
	if o != nil && !IsNil(o.UserActionProperties) {
		return true
	}

	return false
}

// SetUserActionProperties gets a reference to the given []MobileSessionUserActionPropertyShort and assigns it to the UserActionProperties field.
func (o *MobileSessionUserActionPropertyList) SetUserActionProperties(v []MobileSessionUserActionPropertyShort) {
	o.UserActionProperties = v
}

func (o MobileSessionUserActionPropertyList) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MobileSessionUserActionPropertyList) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.SessionProperties) {
		toSerialize["sessionProperties"] = o.SessionProperties
	}
	if !IsNil(o.UserActionProperties) {
		toSerialize["userActionProperties"] = o.UserActionProperties
	}
	return toSerialize, nil
}

type NullableMobileSessionUserActionPropertyList struct {
	value *MobileSessionUserActionPropertyList
	isSet bool
}

func (v NullableMobileSessionUserActionPropertyList) Get() *MobileSessionUserActionPropertyList {
	return v.value
}

func (v *NullableMobileSessionUserActionPropertyList) Set(val *MobileSessionUserActionPropertyList) {
	v.value = val
	v.isSet = true
}

func (v NullableMobileSessionUserActionPropertyList) IsSet() bool {
	return v.isSet
}

func (v *NullableMobileSessionUserActionPropertyList) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMobileSessionUserActionPropertyList(val *MobileSessionUserActionPropertyList) *NullableMobileSessionUserActionPropertyList {
	return &NullableMobileSessionUserActionPropertyList{value: val, isSet: true}
}

func (v NullableMobileSessionUserActionPropertyList) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMobileSessionUserActionPropertyList) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


