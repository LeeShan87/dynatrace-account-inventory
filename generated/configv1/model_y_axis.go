/*
Dynatrace Configuration API

Documentation of the Dynatrace Configuration API. To read about use-cases and examples, see [Dynatrace Documentation](https://dt-url.net/4u43kxw).  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package configv1

import (
	"encoding/json"
)

// checks if the YAxis type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &YAxis{}

// YAxis y Axes configuration
type YAxis struct {
	DefaultAxis *bool `json:"defaultAxis,omitempty"`
	DisplayName *string `json:"displayName,omitempty"`
	Max string `json:"max"`
	Min string `json:"min"`
	Position string `json:"position"`
	QueryIds []string `json:"queryIds"`
	Visible *bool `json:"visible,omitempty"`
}

// NewYAxis instantiates a new YAxis object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewYAxis(max string, min string, position string, queryIds []string) *YAxis {
	this := YAxis{}
	this.Max = max
	this.Min = min
	this.Position = position
	this.QueryIds = queryIds
	return &this
}

// NewYAxisWithDefaults instantiates a new YAxis object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewYAxisWithDefaults() *YAxis {
	this := YAxis{}
	return &this
}

// GetDefaultAxis returns the DefaultAxis field value if set, zero value otherwise.
func (o *YAxis) GetDefaultAxis() bool {
	if o == nil || IsNil(o.DefaultAxis) {
		var ret bool
		return ret
	}
	return *o.DefaultAxis
}

// GetDefaultAxisOk returns a tuple with the DefaultAxis field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *YAxis) GetDefaultAxisOk() (*bool, bool) {
	if o == nil || IsNil(o.DefaultAxis) {
		return nil, false
	}
	return o.DefaultAxis, true
}

// HasDefaultAxis returns a boolean if a field has been set.
func (o *YAxis) HasDefaultAxis() bool {
	if o != nil && !IsNil(o.DefaultAxis) {
		return true
	}

	return false
}

// SetDefaultAxis gets a reference to the given bool and assigns it to the DefaultAxis field.
func (o *YAxis) SetDefaultAxis(v bool) {
	o.DefaultAxis = &v
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise.
func (o *YAxis) GetDisplayName() string {
	if o == nil || IsNil(o.DisplayName) {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *YAxis) GetDisplayNameOk() (*string, bool) {
	if o == nil || IsNil(o.DisplayName) {
		return nil, false
	}
	return o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *YAxis) HasDisplayName() bool {
	if o != nil && !IsNil(o.DisplayName) {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *YAxis) SetDisplayName(v string) {
	o.DisplayName = &v
}

// GetMax returns the Max field value
func (o *YAxis) GetMax() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Max
}

// GetMaxOk returns a tuple with the Max field value
// and a boolean to check if the value has been set.
func (o *YAxis) GetMaxOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Max, true
}

// SetMax sets field value
func (o *YAxis) SetMax(v string) {
	o.Max = v
}

// GetMin returns the Min field value
func (o *YAxis) GetMin() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Min
}

// GetMinOk returns a tuple with the Min field value
// and a boolean to check if the value has been set.
func (o *YAxis) GetMinOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Min, true
}

// SetMin sets field value
func (o *YAxis) SetMin(v string) {
	o.Min = v
}

// GetPosition returns the Position field value
func (o *YAxis) GetPosition() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Position
}

// GetPositionOk returns a tuple with the Position field value
// and a boolean to check if the value has been set.
func (o *YAxis) GetPositionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Position, true
}

// SetPosition sets field value
func (o *YAxis) SetPosition(v string) {
	o.Position = v
}

// GetQueryIds returns the QueryIds field value
func (o *YAxis) GetQueryIds() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.QueryIds
}

// GetQueryIdsOk returns a tuple with the QueryIds field value
// and a boolean to check if the value has been set.
func (o *YAxis) GetQueryIdsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.QueryIds, true
}

// SetQueryIds sets field value
func (o *YAxis) SetQueryIds(v []string) {
	o.QueryIds = v
}

// GetVisible returns the Visible field value if set, zero value otherwise.
func (o *YAxis) GetVisible() bool {
	if o == nil || IsNil(o.Visible) {
		var ret bool
		return ret
	}
	return *o.Visible
}

// GetVisibleOk returns a tuple with the Visible field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *YAxis) GetVisibleOk() (*bool, bool) {
	if o == nil || IsNil(o.Visible) {
		return nil, false
	}
	return o.Visible, true
}

// HasVisible returns a boolean if a field has been set.
func (o *YAxis) HasVisible() bool {
	if o != nil && !IsNil(o.Visible) {
		return true
	}

	return false
}

// SetVisible gets a reference to the given bool and assigns it to the Visible field.
func (o *YAxis) SetVisible(v bool) {
	o.Visible = &v
}

func (o YAxis) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o YAxis) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DefaultAxis) {
		toSerialize["defaultAxis"] = o.DefaultAxis
	}
	if !IsNil(o.DisplayName) {
		toSerialize["displayName"] = o.DisplayName
	}
	toSerialize["max"] = o.Max
	toSerialize["min"] = o.Min
	toSerialize["position"] = o.Position
	toSerialize["queryIds"] = o.QueryIds
	if !IsNil(o.Visible) {
		toSerialize["visible"] = o.Visible
	}
	return toSerialize, nil
}

type NullableYAxis struct {
	value *YAxis
	isSet bool
}

func (v NullableYAxis) Get() *YAxis {
	return v.value
}

func (v *NullableYAxis) Set(val *YAxis) {
	v.value = val
	v.isSet = true
}

func (v NullableYAxis) IsSet() bool {
	return v.isSet
}

func (v *NullableYAxis) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableYAxis(val *YAxis) *NullableYAxis {
	return &NullableYAxis{value: val, isSet: true}
}

func (v NullableYAxis) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableYAxis) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


