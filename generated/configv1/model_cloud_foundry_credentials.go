/*
Dynatrace Configuration API

Documentation of the Dynatrace Configuration API. To read about use-cases and examples, see [Dynatrace Documentation](https://dt-url.net/4u43kxw).  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package configv1

import (
	"encoding/json"
)

// checks if the CloudFoundryCredentials type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CloudFoundryCredentials{}

// CloudFoundryCredentials Configuration for specific Cloud Foundry credentials.
type CloudFoundryCredentials struct {
	// The monitoring is enabled (`true`) or disabled (`false`) for given credentials configuration.   If not set on creation, the `true` value is used.   If the field is omitted during an update, the old value remains unaffected.
	Active *bool `json:"active,omitempty"`
	// The URL of the Cloud Foundry foundation credentials.   The URL must be valid according to RFC 2396.   Leading or trailing whitespaces are not allowed.
	ApiUrl string `json:"apiUrl"`
	// The status of the configured endpoint.  ASSIGNED: The credentials are assigned to an ActiveGate which is responsible for processing. UNASSIGNED: The credentials are not yet assigned to an ActiveGate so there is currently no processing. DISABLED: The credentials have been disabled by the user. FASTCHECK_AUTH_ERROR: The credentials are invalid. FASTCHECK_TLS_ERROR: The endpoint TLS certificate is invalid. FASTCHECK_NO_RESPONSE: The endpoint did not return a result until the timeout was reached. FASTCHECK_INVALID_ENDPOINT: The endpoint URL was invalid. FASTCHECK_AUTH_LOCKED: The credentials seem to be locked. UNKNOWN: An unknown error occured. 
	EndpointStatus *string `json:"endpointStatus,omitempty"`
	// The detailed status info of the configured endpoint.
	EndpointStatusInfo *string `json:"endpointStatusInfo,omitempty"`
	// The ID of the given credentials configuration.
	Id *string `json:"id,omitempty"`
	// The login URL of the Cloud Foundry foundation credentials.   The URL must be valid according to RFC 2396.   Leading or trailing whitespaces are not allowed.
	LoginUrl string `json:"loginUrl"`
	Metadata *ConfigurationMetadata `json:"metadata,omitempty"`
	// The name of the Cloud Foundry foundation credentials.   Allowed characters are letters, numbers, whitespaces, and the following characters: `.+-_`. Leading or trailing whitespace is not allowed.
	Name string `json:"name"`
	// The password of the Cloud Foundry foundation credentials.
	Password *string `json:"password,omitempty"`
	// The username of the Cloud Foundry foundation credentials.   Leading and trailing whitespaces are not allowed.
	Username string `json:"username"`
}

// NewCloudFoundryCredentials instantiates a new CloudFoundryCredentials object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCloudFoundryCredentials(apiUrl string, loginUrl string, name string, username string) *CloudFoundryCredentials {
	this := CloudFoundryCredentials{}
	this.ApiUrl = apiUrl
	this.LoginUrl = loginUrl
	this.Name = name
	this.Username = username
	return &this
}

// NewCloudFoundryCredentialsWithDefaults instantiates a new CloudFoundryCredentials object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCloudFoundryCredentialsWithDefaults() *CloudFoundryCredentials {
	this := CloudFoundryCredentials{}
	return &this
}

// GetActive returns the Active field value if set, zero value otherwise.
func (o *CloudFoundryCredentials) GetActive() bool {
	if o == nil || IsNil(o.Active) {
		var ret bool
		return ret
	}
	return *o.Active
}

// GetActiveOk returns a tuple with the Active field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloudFoundryCredentials) GetActiveOk() (*bool, bool) {
	if o == nil || IsNil(o.Active) {
		return nil, false
	}
	return o.Active, true
}

// HasActive returns a boolean if a field has been set.
func (o *CloudFoundryCredentials) HasActive() bool {
	if o != nil && !IsNil(o.Active) {
		return true
	}

	return false
}

// SetActive gets a reference to the given bool and assigns it to the Active field.
func (o *CloudFoundryCredentials) SetActive(v bool) {
	o.Active = &v
}

// GetApiUrl returns the ApiUrl field value
func (o *CloudFoundryCredentials) GetApiUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ApiUrl
}

// GetApiUrlOk returns a tuple with the ApiUrl field value
// and a boolean to check if the value has been set.
func (o *CloudFoundryCredentials) GetApiUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ApiUrl, true
}

// SetApiUrl sets field value
func (o *CloudFoundryCredentials) SetApiUrl(v string) {
	o.ApiUrl = v
}

// GetEndpointStatus returns the EndpointStatus field value if set, zero value otherwise.
func (o *CloudFoundryCredentials) GetEndpointStatus() string {
	if o == nil || IsNil(o.EndpointStatus) {
		var ret string
		return ret
	}
	return *o.EndpointStatus
}

// GetEndpointStatusOk returns a tuple with the EndpointStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloudFoundryCredentials) GetEndpointStatusOk() (*string, bool) {
	if o == nil || IsNil(o.EndpointStatus) {
		return nil, false
	}
	return o.EndpointStatus, true
}

// HasEndpointStatus returns a boolean if a field has been set.
func (o *CloudFoundryCredentials) HasEndpointStatus() bool {
	if o != nil && !IsNil(o.EndpointStatus) {
		return true
	}

	return false
}

// SetEndpointStatus gets a reference to the given string and assigns it to the EndpointStatus field.
func (o *CloudFoundryCredentials) SetEndpointStatus(v string) {
	o.EndpointStatus = &v
}

// GetEndpointStatusInfo returns the EndpointStatusInfo field value if set, zero value otherwise.
func (o *CloudFoundryCredentials) GetEndpointStatusInfo() string {
	if o == nil || IsNil(o.EndpointStatusInfo) {
		var ret string
		return ret
	}
	return *o.EndpointStatusInfo
}

// GetEndpointStatusInfoOk returns a tuple with the EndpointStatusInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloudFoundryCredentials) GetEndpointStatusInfoOk() (*string, bool) {
	if o == nil || IsNil(o.EndpointStatusInfo) {
		return nil, false
	}
	return o.EndpointStatusInfo, true
}

// HasEndpointStatusInfo returns a boolean if a field has been set.
func (o *CloudFoundryCredentials) HasEndpointStatusInfo() bool {
	if o != nil && !IsNil(o.EndpointStatusInfo) {
		return true
	}

	return false
}

// SetEndpointStatusInfo gets a reference to the given string and assigns it to the EndpointStatusInfo field.
func (o *CloudFoundryCredentials) SetEndpointStatusInfo(v string) {
	o.EndpointStatusInfo = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *CloudFoundryCredentials) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloudFoundryCredentials) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *CloudFoundryCredentials) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *CloudFoundryCredentials) SetId(v string) {
	o.Id = &v
}

// GetLoginUrl returns the LoginUrl field value
func (o *CloudFoundryCredentials) GetLoginUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.LoginUrl
}

// GetLoginUrlOk returns a tuple with the LoginUrl field value
// and a boolean to check if the value has been set.
func (o *CloudFoundryCredentials) GetLoginUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LoginUrl, true
}

// SetLoginUrl sets field value
func (o *CloudFoundryCredentials) SetLoginUrl(v string) {
	o.LoginUrl = v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *CloudFoundryCredentials) GetMetadata() ConfigurationMetadata {
	if o == nil || IsNil(o.Metadata) {
		var ret ConfigurationMetadata
		return ret
	}
	return *o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloudFoundryCredentials) GetMetadataOk() (*ConfigurationMetadata, bool) {
	if o == nil || IsNil(o.Metadata) {
		return nil, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *CloudFoundryCredentials) HasMetadata() bool {
	if o != nil && !IsNil(o.Metadata) {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given ConfigurationMetadata and assigns it to the Metadata field.
func (o *CloudFoundryCredentials) SetMetadata(v ConfigurationMetadata) {
	o.Metadata = &v
}

// GetName returns the Name field value
func (o *CloudFoundryCredentials) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *CloudFoundryCredentials) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *CloudFoundryCredentials) SetName(v string) {
	o.Name = v
}

// GetPassword returns the Password field value if set, zero value otherwise.
func (o *CloudFoundryCredentials) GetPassword() string {
	if o == nil || IsNil(o.Password) {
		var ret string
		return ret
	}
	return *o.Password
}

// GetPasswordOk returns a tuple with the Password field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloudFoundryCredentials) GetPasswordOk() (*string, bool) {
	if o == nil || IsNil(o.Password) {
		return nil, false
	}
	return o.Password, true
}

// HasPassword returns a boolean if a field has been set.
func (o *CloudFoundryCredentials) HasPassword() bool {
	if o != nil && !IsNil(o.Password) {
		return true
	}

	return false
}

// SetPassword gets a reference to the given string and assigns it to the Password field.
func (o *CloudFoundryCredentials) SetPassword(v string) {
	o.Password = &v
}

// GetUsername returns the Username field value
func (o *CloudFoundryCredentials) GetUsername() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Username
}

// GetUsernameOk returns a tuple with the Username field value
// and a boolean to check if the value has been set.
func (o *CloudFoundryCredentials) GetUsernameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Username, true
}

// SetUsername sets field value
func (o *CloudFoundryCredentials) SetUsername(v string) {
	o.Username = v
}

func (o CloudFoundryCredentials) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CloudFoundryCredentials) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Active) {
		toSerialize["active"] = o.Active
	}
	toSerialize["apiUrl"] = o.ApiUrl
	if !IsNil(o.EndpointStatus) {
		toSerialize["endpointStatus"] = o.EndpointStatus
	}
	if !IsNil(o.EndpointStatusInfo) {
		toSerialize["endpointStatusInfo"] = o.EndpointStatusInfo
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	toSerialize["loginUrl"] = o.LoginUrl
	if !IsNil(o.Metadata) {
		toSerialize["metadata"] = o.Metadata
	}
	toSerialize["name"] = o.Name
	if !IsNil(o.Password) {
		toSerialize["password"] = o.Password
	}
	toSerialize["username"] = o.Username
	return toSerialize, nil
}

type NullableCloudFoundryCredentials struct {
	value *CloudFoundryCredentials
	isSet bool
}

func (v NullableCloudFoundryCredentials) Get() *CloudFoundryCredentials {
	return v.value
}

func (v *NullableCloudFoundryCredentials) Set(val *CloudFoundryCredentials) {
	v.value = val
	v.isSet = true
}

func (v NullableCloudFoundryCredentials) IsSet() bool {
	return v.isSet
}

func (v *NullableCloudFoundryCredentials) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCloudFoundryCredentials(val *CloudFoundryCredentials) *NullableCloudFoundryCredentials {
	return &NullableCloudFoundryCredentials{value: val, isSet: true}
}

func (v NullableCloudFoundryCredentials) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCloudFoundryCredentials) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


