/*
Dynatrace Configuration API

Documentation of the Dynatrace Configuration API. To read about use-cases and examples, see [Dynatrace Documentation](https://dt-url.net/4u43kxw).  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package configv1

import (
	"encoding/json"
)

// checks if the CustomFilterChartSeriesConfig type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CustomFilterChartSeriesConfig{}

// CustomFilterChartSeriesConfig Configuration of a charted metric.
type CustomFilterChartSeriesConfig struct {
	// The charted aggregation of the metric.
	Aggregation string `json:"aggregation"`
	AggregationRate *string `json:"aggregationRate,omitempty"`
	// Configuration of the charted metric splitting.
	Dimensions []CustomFilterChartSeriesDimensionConfig `json:"dimensions"`
	// The type of the Dynatrace entity that delivered the charted metric.
	EntityType string `json:"entityType"`
	// The name of the charted metric.
	Metric string `json:"metric"`
	// The charted percentile.    Only applicable if the **aggregation** is set to `PERCENTILE`.
	Percentile *int64 `json:"percentile,omitempty"`
	// Sort ascending (`true`) or descending (`false`). 
	SortAscending *bool `json:"sortAscending,omitempty"`
	SortColumn *bool `json:"sortColumn,omitempty"`
	// The visualization of the timeseries chart.
	Type string `json:"type"`
}

// NewCustomFilterChartSeriesConfig instantiates a new CustomFilterChartSeriesConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCustomFilterChartSeriesConfig(aggregation string, dimensions []CustomFilterChartSeriesDimensionConfig, entityType string, metric string, type_ string) *CustomFilterChartSeriesConfig {
	this := CustomFilterChartSeriesConfig{}
	this.Aggregation = aggregation
	this.Dimensions = dimensions
	this.EntityType = entityType
	this.Metric = metric
	this.Type = type_
	return &this
}

// NewCustomFilterChartSeriesConfigWithDefaults instantiates a new CustomFilterChartSeriesConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCustomFilterChartSeriesConfigWithDefaults() *CustomFilterChartSeriesConfig {
	this := CustomFilterChartSeriesConfig{}
	return &this
}

// GetAggregation returns the Aggregation field value
func (o *CustomFilterChartSeriesConfig) GetAggregation() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Aggregation
}

// GetAggregationOk returns a tuple with the Aggregation field value
// and a boolean to check if the value has been set.
func (o *CustomFilterChartSeriesConfig) GetAggregationOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Aggregation, true
}

// SetAggregation sets field value
func (o *CustomFilterChartSeriesConfig) SetAggregation(v string) {
	o.Aggregation = v
}

// GetAggregationRate returns the AggregationRate field value if set, zero value otherwise.
func (o *CustomFilterChartSeriesConfig) GetAggregationRate() string {
	if o == nil || IsNil(o.AggregationRate) {
		var ret string
		return ret
	}
	return *o.AggregationRate
}

// GetAggregationRateOk returns a tuple with the AggregationRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomFilterChartSeriesConfig) GetAggregationRateOk() (*string, bool) {
	if o == nil || IsNil(o.AggregationRate) {
		return nil, false
	}
	return o.AggregationRate, true
}

// HasAggregationRate returns a boolean if a field has been set.
func (o *CustomFilterChartSeriesConfig) HasAggregationRate() bool {
	if o != nil && !IsNil(o.AggregationRate) {
		return true
	}

	return false
}

// SetAggregationRate gets a reference to the given string and assigns it to the AggregationRate field.
func (o *CustomFilterChartSeriesConfig) SetAggregationRate(v string) {
	o.AggregationRate = &v
}

// GetDimensions returns the Dimensions field value
func (o *CustomFilterChartSeriesConfig) GetDimensions() []CustomFilterChartSeriesDimensionConfig {
	if o == nil {
		var ret []CustomFilterChartSeriesDimensionConfig
		return ret
	}

	return o.Dimensions
}

// GetDimensionsOk returns a tuple with the Dimensions field value
// and a boolean to check if the value has been set.
func (o *CustomFilterChartSeriesConfig) GetDimensionsOk() ([]CustomFilterChartSeriesDimensionConfig, bool) {
	if o == nil {
		return nil, false
	}
	return o.Dimensions, true
}

// SetDimensions sets field value
func (o *CustomFilterChartSeriesConfig) SetDimensions(v []CustomFilterChartSeriesDimensionConfig) {
	o.Dimensions = v
}

// GetEntityType returns the EntityType field value
func (o *CustomFilterChartSeriesConfig) GetEntityType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EntityType
}

// GetEntityTypeOk returns a tuple with the EntityType field value
// and a boolean to check if the value has been set.
func (o *CustomFilterChartSeriesConfig) GetEntityTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EntityType, true
}

// SetEntityType sets field value
func (o *CustomFilterChartSeriesConfig) SetEntityType(v string) {
	o.EntityType = v
}

// GetMetric returns the Metric field value
func (o *CustomFilterChartSeriesConfig) GetMetric() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Metric
}

// GetMetricOk returns a tuple with the Metric field value
// and a boolean to check if the value has been set.
func (o *CustomFilterChartSeriesConfig) GetMetricOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Metric, true
}

// SetMetric sets field value
func (o *CustomFilterChartSeriesConfig) SetMetric(v string) {
	o.Metric = v
}

// GetPercentile returns the Percentile field value if set, zero value otherwise.
func (o *CustomFilterChartSeriesConfig) GetPercentile() int64 {
	if o == nil || IsNil(o.Percentile) {
		var ret int64
		return ret
	}
	return *o.Percentile
}

// GetPercentileOk returns a tuple with the Percentile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomFilterChartSeriesConfig) GetPercentileOk() (*int64, bool) {
	if o == nil || IsNil(o.Percentile) {
		return nil, false
	}
	return o.Percentile, true
}

// HasPercentile returns a boolean if a field has been set.
func (o *CustomFilterChartSeriesConfig) HasPercentile() bool {
	if o != nil && !IsNil(o.Percentile) {
		return true
	}

	return false
}

// SetPercentile gets a reference to the given int64 and assigns it to the Percentile field.
func (o *CustomFilterChartSeriesConfig) SetPercentile(v int64) {
	o.Percentile = &v
}

// GetSortAscending returns the SortAscending field value if set, zero value otherwise.
func (o *CustomFilterChartSeriesConfig) GetSortAscending() bool {
	if o == nil || IsNil(o.SortAscending) {
		var ret bool
		return ret
	}
	return *o.SortAscending
}

// GetSortAscendingOk returns a tuple with the SortAscending field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomFilterChartSeriesConfig) GetSortAscendingOk() (*bool, bool) {
	if o == nil || IsNil(o.SortAscending) {
		return nil, false
	}
	return o.SortAscending, true
}

// HasSortAscending returns a boolean if a field has been set.
func (o *CustomFilterChartSeriesConfig) HasSortAscending() bool {
	if o != nil && !IsNil(o.SortAscending) {
		return true
	}

	return false
}

// SetSortAscending gets a reference to the given bool and assigns it to the SortAscending field.
func (o *CustomFilterChartSeriesConfig) SetSortAscending(v bool) {
	o.SortAscending = &v
}

// GetSortColumn returns the SortColumn field value if set, zero value otherwise.
func (o *CustomFilterChartSeriesConfig) GetSortColumn() bool {
	if o == nil || IsNil(o.SortColumn) {
		var ret bool
		return ret
	}
	return *o.SortColumn
}

// GetSortColumnOk returns a tuple with the SortColumn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomFilterChartSeriesConfig) GetSortColumnOk() (*bool, bool) {
	if o == nil || IsNil(o.SortColumn) {
		return nil, false
	}
	return o.SortColumn, true
}

// HasSortColumn returns a boolean if a field has been set.
func (o *CustomFilterChartSeriesConfig) HasSortColumn() bool {
	if o != nil && !IsNil(o.SortColumn) {
		return true
	}

	return false
}

// SetSortColumn gets a reference to the given bool and assigns it to the SortColumn field.
func (o *CustomFilterChartSeriesConfig) SetSortColumn(v bool) {
	o.SortColumn = &v
}

// GetType returns the Type field value
func (o *CustomFilterChartSeriesConfig) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *CustomFilterChartSeriesConfig) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *CustomFilterChartSeriesConfig) SetType(v string) {
	o.Type = v
}

func (o CustomFilterChartSeriesConfig) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CustomFilterChartSeriesConfig) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["aggregation"] = o.Aggregation
	if !IsNil(o.AggregationRate) {
		toSerialize["aggregationRate"] = o.AggregationRate
	}
	toSerialize["dimensions"] = o.Dimensions
	toSerialize["entityType"] = o.EntityType
	toSerialize["metric"] = o.Metric
	if !IsNil(o.Percentile) {
		toSerialize["percentile"] = o.Percentile
	}
	if !IsNil(o.SortAscending) {
		toSerialize["sortAscending"] = o.SortAscending
	}
	if !IsNil(o.SortColumn) {
		toSerialize["sortColumn"] = o.SortColumn
	}
	toSerialize["type"] = o.Type
	return toSerialize, nil
}

type NullableCustomFilterChartSeriesConfig struct {
	value *CustomFilterChartSeriesConfig
	isSet bool
}

func (v NullableCustomFilterChartSeriesConfig) Get() *CustomFilterChartSeriesConfig {
	return v.value
}

func (v *NullableCustomFilterChartSeriesConfig) Set(val *CustomFilterChartSeriesConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableCustomFilterChartSeriesConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableCustomFilterChartSeriesConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCustomFilterChartSeriesConfig(val *CustomFilterChartSeriesConfig) *NullableCustomFilterChartSeriesConfig {
	return &NullableCustomFilterChartSeriesConfig{value: val, isSet: true}
}

func (v NullableCustomFilterChartSeriesConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCustomFilterChartSeriesConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


