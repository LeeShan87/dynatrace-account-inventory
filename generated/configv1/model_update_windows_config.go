/*
Dynatrace Configuration API

Documentation of the Dynatrace Configuration API. To read about use-cases and examples, see [Dynatrace Documentation](https://dt-url.net/4u43kxw).  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package configv1

import (
	"encoding/json"
)

// checks if the UpdateWindowsConfig type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateWindowsConfig{}

// UpdateWindowsConfig Basic information about all configured maintenance windows
type UpdateWindowsConfig struct {
	// List of maintenance windows when the OneAgent update can start. If there is no value and update should be performed, the update will start at earliest convenience.
	Windows []UpdateWindow `json:"windows"`
}

// NewUpdateWindowsConfig instantiates a new UpdateWindowsConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateWindowsConfig(windows []UpdateWindow) *UpdateWindowsConfig {
	this := UpdateWindowsConfig{}
	this.Windows = windows
	return &this
}

// NewUpdateWindowsConfigWithDefaults instantiates a new UpdateWindowsConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateWindowsConfigWithDefaults() *UpdateWindowsConfig {
	this := UpdateWindowsConfig{}
	return &this
}

// GetWindows returns the Windows field value
func (o *UpdateWindowsConfig) GetWindows() []UpdateWindow {
	if o == nil {
		var ret []UpdateWindow
		return ret
	}

	return o.Windows
}

// GetWindowsOk returns a tuple with the Windows field value
// and a boolean to check if the value has been set.
func (o *UpdateWindowsConfig) GetWindowsOk() ([]UpdateWindow, bool) {
	if o == nil {
		return nil, false
	}
	return o.Windows, true
}

// SetWindows sets field value
func (o *UpdateWindowsConfig) SetWindows(v []UpdateWindow) {
	o.Windows = v
}

func (o UpdateWindowsConfig) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateWindowsConfig) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["windows"] = o.Windows
	return toSerialize, nil
}

type NullableUpdateWindowsConfig struct {
	value *UpdateWindowsConfig
	isSet bool
}

func (v NullableUpdateWindowsConfig) Get() *UpdateWindowsConfig {
	return v.value
}

func (v *NullableUpdateWindowsConfig) Set(val *UpdateWindowsConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateWindowsConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateWindowsConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateWindowsConfig(val *UpdateWindowsConfig) *NullableUpdateWindowsConfig {
	return &NullableUpdateWindowsConfig{value: val, isSet: true}
}

func (v NullableUpdateWindowsConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateWindowsConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


