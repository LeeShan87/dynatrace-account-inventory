/*
Dynatrace Configuration API

Documentation of the Dynatrace Configuration API. To read about use-cases and examples, see [Dynatrace Documentation](https://dt-url.net/4u43kxw).  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package configv1

import (
	"encoding/json"
)

// checks if the HashicorpApproleConfig type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &HashicorpApproleConfig{}

// HashicorpApproleConfig struct for HashicorpApproleConfig
type HashicorpApproleConfig struct {
	PathToCredentials *string `json:"pathToCredentials,omitempty"`
	RoleId *string `json:"roleId,omitempty"`
	SecretId *string `json:"secretId,omitempty"`
	VaultNamespace *string `json:"vaultNamespace,omitempty"`
}

// NewHashicorpApproleConfig instantiates a new HashicorpApproleConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHashicorpApproleConfig() *HashicorpApproleConfig {
	this := HashicorpApproleConfig{}
	return &this
}

// NewHashicorpApproleConfigWithDefaults instantiates a new HashicorpApproleConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHashicorpApproleConfigWithDefaults() *HashicorpApproleConfig {
	this := HashicorpApproleConfig{}
	return &this
}

// GetPathToCredentials returns the PathToCredentials field value if set, zero value otherwise.
func (o *HashicorpApproleConfig) GetPathToCredentials() string {
	if o == nil || IsNil(o.PathToCredentials) {
		var ret string
		return ret
	}
	return *o.PathToCredentials
}

// GetPathToCredentialsOk returns a tuple with the PathToCredentials field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HashicorpApproleConfig) GetPathToCredentialsOk() (*string, bool) {
	if o == nil || IsNil(o.PathToCredentials) {
		return nil, false
	}
	return o.PathToCredentials, true
}

// HasPathToCredentials returns a boolean if a field has been set.
func (o *HashicorpApproleConfig) HasPathToCredentials() bool {
	if o != nil && !IsNil(o.PathToCredentials) {
		return true
	}

	return false
}

// SetPathToCredentials gets a reference to the given string and assigns it to the PathToCredentials field.
func (o *HashicorpApproleConfig) SetPathToCredentials(v string) {
	o.PathToCredentials = &v
}

// GetRoleId returns the RoleId field value if set, zero value otherwise.
func (o *HashicorpApproleConfig) GetRoleId() string {
	if o == nil || IsNil(o.RoleId) {
		var ret string
		return ret
	}
	return *o.RoleId
}

// GetRoleIdOk returns a tuple with the RoleId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HashicorpApproleConfig) GetRoleIdOk() (*string, bool) {
	if o == nil || IsNil(o.RoleId) {
		return nil, false
	}
	return o.RoleId, true
}

// HasRoleId returns a boolean if a field has been set.
func (o *HashicorpApproleConfig) HasRoleId() bool {
	if o != nil && !IsNil(o.RoleId) {
		return true
	}

	return false
}

// SetRoleId gets a reference to the given string and assigns it to the RoleId field.
func (o *HashicorpApproleConfig) SetRoleId(v string) {
	o.RoleId = &v
}

// GetSecretId returns the SecretId field value if set, zero value otherwise.
func (o *HashicorpApproleConfig) GetSecretId() string {
	if o == nil || IsNil(o.SecretId) {
		var ret string
		return ret
	}
	return *o.SecretId
}

// GetSecretIdOk returns a tuple with the SecretId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HashicorpApproleConfig) GetSecretIdOk() (*string, bool) {
	if o == nil || IsNil(o.SecretId) {
		return nil, false
	}
	return o.SecretId, true
}

// HasSecretId returns a boolean if a field has been set.
func (o *HashicorpApproleConfig) HasSecretId() bool {
	if o != nil && !IsNil(o.SecretId) {
		return true
	}

	return false
}

// SetSecretId gets a reference to the given string and assigns it to the SecretId field.
func (o *HashicorpApproleConfig) SetSecretId(v string) {
	o.SecretId = &v
}

// GetVaultNamespace returns the VaultNamespace field value if set, zero value otherwise.
func (o *HashicorpApproleConfig) GetVaultNamespace() string {
	if o == nil || IsNil(o.VaultNamespace) {
		var ret string
		return ret
	}
	return *o.VaultNamespace
}

// GetVaultNamespaceOk returns a tuple with the VaultNamespace field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HashicorpApproleConfig) GetVaultNamespaceOk() (*string, bool) {
	if o == nil || IsNil(o.VaultNamespace) {
		return nil, false
	}
	return o.VaultNamespace, true
}

// HasVaultNamespace returns a boolean if a field has been set.
func (o *HashicorpApproleConfig) HasVaultNamespace() bool {
	if o != nil && !IsNil(o.VaultNamespace) {
		return true
	}

	return false
}

// SetVaultNamespace gets a reference to the given string and assigns it to the VaultNamespace field.
func (o *HashicorpApproleConfig) SetVaultNamespace(v string) {
	o.VaultNamespace = &v
}

func (o HashicorpApproleConfig) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o HashicorpApproleConfig) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.PathToCredentials) {
		toSerialize["pathToCredentials"] = o.PathToCredentials
	}
	if !IsNil(o.RoleId) {
		toSerialize["roleId"] = o.RoleId
	}
	if !IsNil(o.SecretId) {
		toSerialize["secretId"] = o.SecretId
	}
	if !IsNil(o.VaultNamespace) {
		toSerialize["vaultNamespace"] = o.VaultNamespace
	}
	return toSerialize, nil
}

type NullableHashicorpApproleConfig struct {
	value *HashicorpApproleConfig
	isSet bool
}

func (v NullableHashicorpApproleConfig) Get() *HashicorpApproleConfig {
	return v.value
}

func (v *NullableHashicorpApproleConfig) Set(val *HashicorpApproleConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableHashicorpApproleConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableHashicorpApproleConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHashicorpApproleConfig(val *HashicorpApproleConfig) *NullableHashicorpApproleConfig {
	return &NullableHashicorpApproleConfig{value: val, isSet: true}
}

func (v NullableHashicorpApproleConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHashicorpApproleConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


