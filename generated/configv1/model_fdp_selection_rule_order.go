/*
Dynatrace Configuration API

Documentation of the Dynatrace Configuration API. To read about use-cases and examples, see [Dynatrace Documentation](https://dt-url.net/4u43kxw).  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package configv1

import (
	"encoding/json"
)

// checks if the FdpSelectionRuleOrder type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FdpSelectionRuleOrder{}

// FdpSelectionRuleOrder The order of the rules in the ruleset.
type FdpSelectionRuleOrder struct {
	// A list of the rule IDs. The rules in the ruleset are arranged such that their IDs form the same sequence as this list. The ID of each rule in the ruleset must occur exactly once in the list. 
	RuleIds []string `json:"ruleIds"`
}

// NewFdpSelectionRuleOrder instantiates a new FdpSelectionRuleOrder object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFdpSelectionRuleOrder(ruleIds []string) *FdpSelectionRuleOrder {
	this := FdpSelectionRuleOrder{}
	this.RuleIds = ruleIds
	return &this
}

// NewFdpSelectionRuleOrderWithDefaults instantiates a new FdpSelectionRuleOrder object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFdpSelectionRuleOrderWithDefaults() *FdpSelectionRuleOrder {
	this := FdpSelectionRuleOrder{}
	return &this
}

// GetRuleIds returns the RuleIds field value
func (o *FdpSelectionRuleOrder) GetRuleIds() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.RuleIds
}

// GetRuleIdsOk returns a tuple with the RuleIds field value
// and a boolean to check if the value has been set.
func (o *FdpSelectionRuleOrder) GetRuleIdsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.RuleIds, true
}

// SetRuleIds sets field value
func (o *FdpSelectionRuleOrder) SetRuleIds(v []string) {
	o.RuleIds = v
}

func (o FdpSelectionRuleOrder) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FdpSelectionRuleOrder) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["ruleIds"] = o.RuleIds
	return toSerialize, nil
}

type NullableFdpSelectionRuleOrder struct {
	value *FdpSelectionRuleOrder
	isSet bool
}

func (v NullableFdpSelectionRuleOrder) Get() *FdpSelectionRuleOrder {
	return v.value
}

func (v *NullableFdpSelectionRuleOrder) Set(val *FdpSelectionRuleOrder) {
	v.value = val
	v.isSet = true
}

func (v NullableFdpSelectionRuleOrder) IsSet() bool {
	return v.isSet
}

func (v *NullableFdpSelectionRuleOrder) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFdpSelectionRuleOrder(val *FdpSelectionRuleOrder) *NullableFdpSelectionRuleOrder {
	return &NullableFdpSelectionRuleOrder{value: val, isSet: true}
}

func (v NullableFdpSelectionRuleOrder) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFdpSelectionRuleOrder) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


