/*
Dynatrace Configuration API

Documentation of the Dynatrace Configuration API. To read about use-cases and examples, see [Dynatrace Documentation](https://dt-url.net/4u43kxw).  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package configv1

import (
	"encoding/json"
)

// checks if the ApplicationDetectionRulesHostDetectionSettings type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApplicationDetectionRulesHostDetectionSettings{}

// ApplicationDetectionRulesHostDetectionSettings Configuration of host detection headers.
type ApplicationDetectionRulesHostDetectionSettings struct {
	// An ordered list of host detection headers.   Headers are evaluated from top to bottom; the first matching header applies.
	HostDetectionHeaders []string `json:"hostDetectionHeaders"`
	Metadata *ConfigurationMetadata `json:"metadata,omitempty"`
}

// NewApplicationDetectionRulesHostDetectionSettings instantiates a new ApplicationDetectionRulesHostDetectionSettings object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApplicationDetectionRulesHostDetectionSettings(hostDetectionHeaders []string) *ApplicationDetectionRulesHostDetectionSettings {
	this := ApplicationDetectionRulesHostDetectionSettings{}
	this.HostDetectionHeaders = hostDetectionHeaders
	return &this
}

// NewApplicationDetectionRulesHostDetectionSettingsWithDefaults instantiates a new ApplicationDetectionRulesHostDetectionSettings object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApplicationDetectionRulesHostDetectionSettingsWithDefaults() *ApplicationDetectionRulesHostDetectionSettings {
	this := ApplicationDetectionRulesHostDetectionSettings{}
	return &this
}

// GetHostDetectionHeaders returns the HostDetectionHeaders field value
func (o *ApplicationDetectionRulesHostDetectionSettings) GetHostDetectionHeaders() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.HostDetectionHeaders
}

// GetHostDetectionHeadersOk returns a tuple with the HostDetectionHeaders field value
// and a boolean to check if the value has been set.
func (o *ApplicationDetectionRulesHostDetectionSettings) GetHostDetectionHeadersOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.HostDetectionHeaders, true
}

// SetHostDetectionHeaders sets field value
func (o *ApplicationDetectionRulesHostDetectionSettings) SetHostDetectionHeaders(v []string) {
	o.HostDetectionHeaders = v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *ApplicationDetectionRulesHostDetectionSettings) GetMetadata() ConfigurationMetadata {
	if o == nil || IsNil(o.Metadata) {
		var ret ConfigurationMetadata
		return ret
	}
	return *o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationDetectionRulesHostDetectionSettings) GetMetadataOk() (*ConfigurationMetadata, bool) {
	if o == nil || IsNil(o.Metadata) {
		return nil, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *ApplicationDetectionRulesHostDetectionSettings) HasMetadata() bool {
	if o != nil && !IsNil(o.Metadata) {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given ConfigurationMetadata and assigns it to the Metadata field.
func (o *ApplicationDetectionRulesHostDetectionSettings) SetMetadata(v ConfigurationMetadata) {
	o.Metadata = &v
}

func (o ApplicationDetectionRulesHostDetectionSettings) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApplicationDetectionRulesHostDetectionSettings) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["hostDetectionHeaders"] = o.HostDetectionHeaders
	if !IsNil(o.Metadata) {
		toSerialize["metadata"] = o.Metadata
	}
	return toSerialize, nil
}

type NullableApplicationDetectionRulesHostDetectionSettings struct {
	value *ApplicationDetectionRulesHostDetectionSettings
	isSet bool
}

func (v NullableApplicationDetectionRulesHostDetectionSettings) Get() *ApplicationDetectionRulesHostDetectionSettings {
	return v.value
}

func (v *NullableApplicationDetectionRulesHostDetectionSettings) Set(val *ApplicationDetectionRulesHostDetectionSettings) {
	v.value = val
	v.isSet = true
}

func (v NullableApplicationDetectionRulesHostDetectionSettings) IsSet() bool {
	return v.isSet
}

func (v *NullableApplicationDetectionRulesHostDetectionSettings) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApplicationDetectionRulesHostDetectionSettings(val *ApplicationDetectionRulesHostDetectionSettings) *NullableApplicationDetectionRulesHostDetectionSettings {
	return &NullableApplicationDetectionRulesHostDetectionSettings{value: val, isSet: true}
}

func (v NullableApplicationDetectionRulesHostDetectionSettings) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApplicationDetectionRulesHostDetectionSettings) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


