/*
Dynatrace Configuration API

Documentation of the Dynatrace Configuration API. To read about use-cases and examples, see [Dynatrace Documentation](https://dt-url.net/4u43kxw).  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package configv1

import (
	"encoding/json"
)

// checks if the NetworkTcpProblemsThresholds type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &NetworkTcpProblemsThresholds{}

// NetworkTcpProblemsThresholds Custom thresholds for TCP connection problems. If not set, automatic mode is used.    **All** of these conditions must be met to trigger an alert.
type NetworkTcpProblemsThresholds struct {
	// Number of failed connections is higher than *X* connections per minute in 3 out of 5 samples.
	FailedConnectionsNumberPerMinute int32 `json:"failedConnectionsNumberPerMinute"`
	// Percentage of new connection failures is higher than *X*% in 3 out of 5 samples.
	NewConnectionFailuresPercentage int32 `json:"newConnectionFailuresPercentage"`
}

// NewNetworkTcpProblemsThresholds instantiates a new NetworkTcpProblemsThresholds object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNetworkTcpProblemsThresholds(failedConnectionsNumberPerMinute int32, newConnectionFailuresPercentage int32) *NetworkTcpProblemsThresholds {
	this := NetworkTcpProblemsThresholds{}
	this.FailedConnectionsNumberPerMinute = failedConnectionsNumberPerMinute
	this.NewConnectionFailuresPercentage = newConnectionFailuresPercentage
	return &this
}

// NewNetworkTcpProblemsThresholdsWithDefaults instantiates a new NetworkTcpProblemsThresholds object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNetworkTcpProblemsThresholdsWithDefaults() *NetworkTcpProblemsThresholds {
	this := NetworkTcpProblemsThresholds{}
	return &this
}

// GetFailedConnectionsNumberPerMinute returns the FailedConnectionsNumberPerMinute field value
func (o *NetworkTcpProblemsThresholds) GetFailedConnectionsNumberPerMinute() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.FailedConnectionsNumberPerMinute
}

// GetFailedConnectionsNumberPerMinuteOk returns a tuple with the FailedConnectionsNumberPerMinute field value
// and a boolean to check if the value has been set.
func (o *NetworkTcpProblemsThresholds) GetFailedConnectionsNumberPerMinuteOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FailedConnectionsNumberPerMinute, true
}

// SetFailedConnectionsNumberPerMinute sets field value
func (o *NetworkTcpProblemsThresholds) SetFailedConnectionsNumberPerMinute(v int32) {
	o.FailedConnectionsNumberPerMinute = v
}

// GetNewConnectionFailuresPercentage returns the NewConnectionFailuresPercentage field value
func (o *NetworkTcpProblemsThresholds) GetNewConnectionFailuresPercentage() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.NewConnectionFailuresPercentage
}

// GetNewConnectionFailuresPercentageOk returns a tuple with the NewConnectionFailuresPercentage field value
// and a boolean to check if the value has been set.
func (o *NetworkTcpProblemsThresholds) GetNewConnectionFailuresPercentageOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NewConnectionFailuresPercentage, true
}

// SetNewConnectionFailuresPercentage sets field value
func (o *NetworkTcpProblemsThresholds) SetNewConnectionFailuresPercentage(v int32) {
	o.NewConnectionFailuresPercentage = v
}

func (o NetworkTcpProblemsThresholds) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o NetworkTcpProblemsThresholds) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["failedConnectionsNumberPerMinute"] = o.FailedConnectionsNumberPerMinute
	toSerialize["newConnectionFailuresPercentage"] = o.NewConnectionFailuresPercentage
	return toSerialize, nil
}

type NullableNetworkTcpProblemsThresholds struct {
	value *NetworkTcpProblemsThresholds
	isSet bool
}

func (v NullableNetworkTcpProblemsThresholds) Get() *NetworkTcpProblemsThresholds {
	return v.value
}

func (v *NullableNetworkTcpProblemsThresholds) Set(val *NetworkTcpProblemsThresholds) {
	v.value = val
	v.isSet = true
}

func (v NullableNetworkTcpProblemsThresholds) IsSet() bool {
	return v.isSet
}

func (v *NullableNetworkTcpProblemsThresholds) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNetworkTcpProblemsThresholds(val *NetworkTcpProblemsThresholds) *NullableNetworkTcpProblemsThresholds {
	return &NullableNetworkTcpProblemsThresholds{value: val, isSet: true}
}

func (v NullableNetworkTcpProblemsThresholds) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNetworkTcpProblemsThresholds) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


