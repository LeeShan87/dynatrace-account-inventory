/*
Dynatrace Configuration API

Documentation of the Dynatrace Configuration API. To read about use-cases and examples, see [Dynatrace Documentation](https://dt-url.net/4u43kxw).  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package configv1

import (
	"encoding/json"
)

// checks if the OpsGenieNotificationConfig type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OpsGenieNotificationConfig{}

// OpsGenieNotificationConfig Configuration of the OpsGenie notification.
type OpsGenieNotificationConfig struct {
	// The API key to access OpsGenie.
	ApiKey *string `json:"apiKey,omitempty"`
	// The region domain of the OpsGenie.
	Domain string `json:"domain"`
	// The content of the message.   You can use the following placeholders:  * `{ProblemID}`: The display number of the reported problem.  * `{ProblemImpact}`: The [impact level](https://dt-url.net/klg3k4q) of the problem. Possible values are `APPLICATION`, `SERVICE`, and `INFRASTRUCTURE`.  * `{ProblemSeverity}`: The [severity level](https://dt-url.net/f1i3k5b) of the problem. Possible values are `AVAILABILITY`, `ERROR`, `PERFORMANCE`, `RESOURCE_CONTENTION`, and `CUSTOM_ALERT`.  * `{ProblemTitle}`: A short description of the problem.  
	Message string `json:"message"`
}

// NewOpsGenieNotificationConfig instantiates a new OpsGenieNotificationConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOpsGenieNotificationConfig(domain string, message string, active bool, alertingProfile string, name string, type_ string) *OpsGenieNotificationConfig {
	this := OpsGenieNotificationConfig{}
	this.Active = active
	this.AlertingProfile = alertingProfile
	this.Name = name
	this.Type = type_
	this.Domain = domain
	this.Message = message
	return &this
}

// NewOpsGenieNotificationConfigWithDefaults instantiates a new OpsGenieNotificationConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOpsGenieNotificationConfigWithDefaults() *OpsGenieNotificationConfig {
	this := OpsGenieNotificationConfig{}
	return &this
}

// GetApiKey returns the ApiKey field value if set, zero value otherwise.
func (o *OpsGenieNotificationConfig) GetApiKey() string {
	if o == nil || IsNil(o.ApiKey) {
		var ret string
		return ret
	}
	return *o.ApiKey
}

// GetApiKeyOk returns a tuple with the ApiKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpsGenieNotificationConfig) GetApiKeyOk() (*string, bool) {
	if o == nil || IsNil(o.ApiKey) {
		return nil, false
	}
	return o.ApiKey, true
}

// HasApiKey returns a boolean if a field has been set.
func (o *OpsGenieNotificationConfig) HasApiKey() bool {
	if o != nil && !IsNil(o.ApiKey) {
		return true
	}

	return false
}

// SetApiKey gets a reference to the given string and assigns it to the ApiKey field.
func (o *OpsGenieNotificationConfig) SetApiKey(v string) {
	o.ApiKey = &v
}

// GetDomain returns the Domain field value
func (o *OpsGenieNotificationConfig) GetDomain() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Domain
}

// GetDomainOk returns a tuple with the Domain field value
// and a boolean to check if the value has been set.
func (o *OpsGenieNotificationConfig) GetDomainOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Domain, true
}

// SetDomain sets field value
func (o *OpsGenieNotificationConfig) SetDomain(v string) {
	o.Domain = v
}

// GetMessage returns the Message field value
func (o *OpsGenieNotificationConfig) GetMessage() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Message
}

// GetMessageOk returns a tuple with the Message field value
// and a boolean to check if the value has been set.
func (o *OpsGenieNotificationConfig) GetMessageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Message, true
}

// SetMessage sets field value
func (o *OpsGenieNotificationConfig) SetMessage(v string) {
	o.Message = v
}

func (o OpsGenieNotificationConfig) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OpsGenieNotificationConfig) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ApiKey) {
		toSerialize["apiKey"] = o.ApiKey
	}
	toSerialize["domain"] = o.Domain
	toSerialize["message"] = o.Message
	return toSerialize, nil
}

type NullableOpsGenieNotificationConfig struct {
	value *OpsGenieNotificationConfig
	isSet bool
}

func (v NullableOpsGenieNotificationConfig) Get() *OpsGenieNotificationConfig {
	return v.value
}

func (v *NullableOpsGenieNotificationConfig) Set(val *OpsGenieNotificationConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableOpsGenieNotificationConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableOpsGenieNotificationConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOpsGenieNotificationConfig(val *OpsGenieNotificationConfig) *NullableOpsGenieNotificationConfig {
	return &NullableOpsGenieNotificationConfig{value: val, isSet: true}
}

func (v NullableOpsGenieNotificationConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOpsGenieNotificationConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


