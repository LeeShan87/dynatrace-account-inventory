/*
Dynatrace Configuration API

Documentation of the Dynatrace Configuration API. To read about use-cases and examples, see [Dynatrace Documentation](https://dt-url.net/4u43kxw).  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package configv1

import (
	"encoding/json"
)

// checks if the PagerDutyNotificationConfig type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PagerDutyNotificationConfig{}

// PagerDutyNotificationConfig Configuration of the PagerDuty notification.
type PagerDutyNotificationConfig struct {
	// The name of the PagerDuty account.
	Account string `json:"account"`
	// The API key to access PagerDuty.
	ServiceApiKey *string `json:"serviceApiKey,omitempty"`
	// The name of the service.
	ServiceName string `json:"serviceName"`
}

// NewPagerDutyNotificationConfig instantiates a new PagerDutyNotificationConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPagerDutyNotificationConfig(account string, serviceName string, active bool, alertingProfile string, name string, type_ string) *PagerDutyNotificationConfig {
	this := PagerDutyNotificationConfig{}
	this.Active = active
	this.AlertingProfile = alertingProfile
	this.Name = name
	this.Type = type_
	this.Account = account
	this.ServiceName = serviceName
	return &this
}

// NewPagerDutyNotificationConfigWithDefaults instantiates a new PagerDutyNotificationConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPagerDutyNotificationConfigWithDefaults() *PagerDutyNotificationConfig {
	this := PagerDutyNotificationConfig{}
	return &this
}

// GetAccount returns the Account field value
func (o *PagerDutyNotificationConfig) GetAccount() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Account
}

// GetAccountOk returns a tuple with the Account field value
// and a boolean to check if the value has been set.
func (o *PagerDutyNotificationConfig) GetAccountOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Account, true
}

// SetAccount sets field value
func (o *PagerDutyNotificationConfig) SetAccount(v string) {
	o.Account = v
}

// GetServiceApiKey returns the ServiceApiKey field value if set, zero value otherwise.
func (o *PagerDutyNotificationConfig) GetServiceApiKey() string {
	if o == nil || IsNil(o.ServiceApiKey) {
		var ret string
		return ret
	}
	return *o.ServiceApiKey
}

// GetServiceApiKeyOk returns a tuple with the ServiceApiKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PagerDutyNotificationConfig) GetServiceApiKeyOk() (*string, bool) {
	if o == nil || IsNil(o.ServiceApiKey) {
		return nil, false
	}
	return o.ServiceApiKey, true
}

// HasServiceApiKey returns a boolean if a field has been set.
func (o *PagerDutyNotificationConfig) HasServiceApiKey() bool {
	if o != nil && !IsNil(o.ServiceApiKey) {
		return true
	}

	return false
}

// SetServiceApiKey gets a reference to the given string and assigns it to the ServiceApiKey field.
func (o *PagerDutyNotificationConfig) SetServiceApiKey(v string) {
	o.ServiceApiKey = &v
}

// GetServiceName returns the ServiceName field value
func (o *PagerDutyNotificationConfig) GetServiceName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ServiceName
}

// GetServiceNameOk returns a tuple with the ServiceName field value
// and a boolean to check if the value has been set.
func (o *PagerDutyNotificationConfig) GetServiceNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ServiceName, true
}

// SetServiceName sets field value
func (o *PagerDutyNotificationConfig) SetServiceName(v string) {
	o.ServiceName = v
}

func (o PagerDutyNotificationConfig) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PagerDutyNotificationConfig) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["account"] = o.Account
	if !IsNil(o.ServiceApiKey) {
		toSerialize["serviceApiKey"] = o.ServiceApiKey
	}
	toSerialize["serviceName"] = o.ServiceName
	return toSerialize, nil
}

type NullablePagerDutyNotificationConfig struct {
	value *PagerDutyNotificationConfig
	isSet bool
}

func (v NullablePagerDutyNotificationConfig) Get() *PagerDutyNotificationConfig {
	return v.value
}

func (v *NullablePagerDutyNotificationConfig) Set(val *PagerDutyNotificationConfig) {
	v.value = val
	v.isSet = true
}

func (v NullablePagerDutyNotificationConfig) IsSet() bool {
	return v.isSet
}

func (v *NullablePagerDutyNotificationConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePagerDutyNotificationConfig(val *PagerDutyNotificationConfig) *NullablePagerDutyNotificationConfig {
	return &NullablePagerDutyNotificationConfig{value: val, isSet: true}
}

func (v NullablePagerDutyNotificationConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePagerDutyNotificationConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


