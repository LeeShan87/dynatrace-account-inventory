/*
Dynatrace Configuration API

Documentation of the Dynatrace Configuration API. To read about use-cases and examples, see [Dynatrace Documentation](https://dt-url.net/4u43kxw).  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package configv1

import (
	"encoding/json"
)

// checks if the VMwareAnomalyDetectionConfig type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VMwareAnomalyDetectionConfig{}

// VMwareAnomalyDetectionConfig The configuration of the anomaly detection for VMware.
type VMwareAnomalyDetectionConfig struct {
	DroppedPacketsDetection DroppedPacketsDetectionConfig `json:"droppedPacketsDetection"`
	EsxiHighCpuSaturation EsxiHighCpuSaturationConfig `json:"esxiHighCpuSaturation"`
	EsxiHighMemoryDetection EsxiHighMemoryDetectionConfig `json:"esxiHighMemoryDetection"`
	GuestCpuLimitReached *GuestCPULimitReachedConfig `json:"guestCpuLimitReached,omitempty"`
	LowDatastoreSpaceDetection LowDatastoreSpaceDetectionConfig `json:"lowDatastoreSpaceDetection"`
	Metadata *ConfigurationMetadata `json:"metadata,omitempty"`
	OverloadedStorageDetection OverloadedStorageDetectionConfig `json:"overloadedStorageDetection"`
	SlowPhysicalStorageDetection SlowPhysicalStorageDetectionConfig `json:"slowPhysicalStorageDetection"`
	UndersizedStorageDetection UndersizedStorageDetectionConfig `json:"undersizedStorageDetection"`
}

// NewVMwareAnomalyDetectionConfig instantiates a new VMwareAnomalyDetectionConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVMwareAnomalyDetectionConfig(droppedPacketsDetection DroppedPacketsDetectionConfig, esxiHighCpuSaturation EsxiHighCpuSaturationConfig, esxiHighMemoryDetection EsxiHighMemoryDetectionConfig, lowDatastoreSpaceDetection LowDatastoreSpaceDetectionConfig, overloadedStorageDetection OverloadedStorageDetectionConfig, slowPhysicalStorageDetection SlowPhysicalStorageDetectionConfig, undersizedStorageDetection UndersizedStorageDetectionConfig) *VMwareAnomalyDetectionConfig {
	this := VMwareAnomalyDetectionConfig{}
	this.DroppedPacketsDetection = droppedPacketsDetection
	this.EsxiHighCpuSaturation = esxiHighCpuSaturation
	this.EsxiHighMemoryDetection = esxiHighMemoryDetection
	this.LowDatastoreSpaceDetection = lowDatastoreSpaceDetection
	this.OverloadedStorageDetection = overloadedStorageDetection
	this.SlowPhysicalStorageDetection = slowPhysicalStorageDetection
	this.UndersizedStorageDetection = undersizedStorageDetection
	return &this
}

// NewVMwareAnomalyDetectionConfigWithDefaults instantiates a new VMwareAnomalyDetectionConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVMwareAnomalyDetectionConfigWithDefaults() *VMwareAnomalyDetectionConfig {
	this := VMwareAnomalyDetectionConfig{}
	return &this
}

// GetDroppedPacketsDetection returns the DroppedPacketsDetection field value
func (o *VMwareAnomalyDetectionConfig) GetDroppedPacketsDetection() DroppedPacketsDetectionConfig {
	if o == nil {
		var ret DroppedPacketsDetectionConfig
		return ret
	}

	return o.DroppedPacketsDetection
}

// GetDroppedPacketsDetectionOk returns a tuple with the DroppedPacketsDetection field value
// and a boolean to check if the value has been set.
func (o *VMwareAnomalyDetectionConfig) GetDroppedPacketsDetectionOk() (*DroppedPacketsDetectionConfig, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DroppedPacketsDetection, true
}

// SetDroppedPacketsDetection sets field value
func (o *VMwareAnomalyDetectionConfig) SetDroppedPacketsDetection(v DroppedPacketsDetectionConfig) {
	o.DroppedPacketsDetection = v
}

// GetEsxiHighCpuSaturation returns the EsxiHighCpuSaturation field value
func (o *VMwareAnomalyDetectionConfig) GetEsxiHighCpuSaturation() EsxiHighCpuSaturationConfig {
	if o == nil {
		var ret EsxiHighCpuSaturationConfig
		return ret
	}

	return o.EsxiHighCpuSaturation
}

// GetEsxiHighCpuSaturationOk returns a tuple with the EsxiHighCpuSaturation field value
// and a boolean to check if the value has been set.
func (o *VMwareAnomalyDetectionConfig) GetEsxiHighCpuSaturationOk() (*EsxiHighCpuSaturationConfig, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EsxiHighCpuSaturation, true
}

// SetEsxiHighCpuSaturation sets field value
func (o *VMwareAnomalyDetectionConfig) SetEsxiHighCpuSaturation(v EsxiHighCpuSaturationConfig) {
	o.EsxiHighCpuSaturation = v
}

// GetEsxiHighMemoryDetection returns the EsxiHighMemoryDetection field value
func (o *VMwareAnomalyDetectionConfig) GetEsxiHighMemoryDetection() EsxiHighMemoryDetectionConfig {
	if o == nil {
		var ret EsxiHighMemoryDetectionConfig
		return ret
	}

	return o.EsxiHighMemoryDetection
}

// GetEsxiHighMemoryDetectionOk returns a tuple with the EsxiHighMemoryDetection field value
// and a boolean to check if the value has been set.
func (o *VMwareAnomalyDetectionConfig) GetEsxiHighMemoryDetectionOk() (*EsxiHighMemoryDetectionConfig, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EsxiHighMemoryDetection, true
}

// SetEsxiHighMemoryDetection sets field value
func (o *VMwareAnomalyDetectionConfig) SetEsxiHighMemoryDetection(v EsxiHighMemoryDetectionConfig) {
	o.EsxiHighMemoryDetection = v
}

// GetGuestCpuLimitReached returns the GuestCpuLimitReached field value if set, zero value otherwise.
func (o *VMwareAnomalyDetectionConfig) GetGuestCpuLimitReached() GuestCPULimitReachedConfig {
	if o == nil || IsNil(o.GuestCpuLimitReached) {
		var ret GuestCPULimitReachedConfig
		return ret
	}
	return *o.GuestCpuLimitReached
}

// GetGuestCpuLimitReachedOk returns a tuple with the GuestCpuLimitReached field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VMwareAnomalyDetectionConfig) GetGuestCpuLimitReachedOk() (*GuestCPULimitReachedConfig, bool) {
	if o == nil || IsNil(o.GuestCpuLimitReached) {
		return nil, false
	}
	return o.GuestCpuLimitReached, true
}

// HasGuestCpuLimitReached returns a boolean if a field has been set.
func (o *VMwareAnomalyDetectionConfig) HasGuestCpuLimitReached() bool {
	if o != nil && !IsNil(o.GuestCpuLimitReached) {
		return true
	}

	return false
}

// SetGuestCpuLimitReached gets a reference to the given GuestCPULimitReachedConfig and assigns it to the GuestCpuLimitReached field.
func (o *VMwareAnomalyDetectionConfig) SetGuestCpuLimitReached(v GuestCPULimitReachedConfig) {
	o.GuestCpuLimitReached = &v
}

// GetLowDatastoreSpaceDetection returns the LowDatastoreSpaceDetection field value
func (o *VMwareAnomalyDetectionConfig) GetLowDatastoreSpaceDetection() LowDatastoreSpaceDetectionConfig {
	if o == nil {
		var ret LowDatastoreSpaceDetectionConfig
		return ret
	}

	return o.LowDatastoreSpaceDetection
}

// GetLowDatastoreSpaceDetectionOk returns a tuple with the LowDatastoreSpaceDetection field value
// and a boolean to check if the value has been set.
func (o *VMwareAnomalyDetectionConfig) GetLowDatastoreSpaceDetectionOk() (*LowDatastoreSpaceDetectionConfig, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LowDatastoreSpaceDetection, true
}

// SetLowDatastoreSpaceDetection sets field value
func (o *VMwareAnomalyDetectionConfig) SetLowDatastoreSpaceDetection(v LowDatastoreSpaceDetectionConfig) {
	o.LowDatastoreSpaceDetection = v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *VMwareAnomalyDetectionConfig) GetMetadata() ConfigurationMetadata {
	if o == nil || IsNil(o.Metadata) {
		var ret ConfigurationMetadata
		return ret
	}
	return *o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VMwareAnomalyDetectionConfig) GetMetadataOk() (*ConfigurationMetadata, bool) {
	if o == nil || IsNil(o.Metadata) {
		return nil, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *VMwareAnomalyDetectionConfig) HasMetadata() bool {
	if o != nil && !IsNil(o.Metadata) {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given ConfigurationMetadata and assigns it to the Metadata field.
func (o *VMwareAnomalyDetectionConfig) SetMetadata(v ConfigurationMetadata) {
	o.Metadata = &v
}

// GetOverloadedStorageDetection returns the OverloadedStorageDetection field value
func (o *VMwareAnomalyDetectionConfig) GetOverloadedStorageDetection() OverloadedStorageDetectionConfig {
	if o == nil {
		var ret OverloadedStorageDetectionConfig
		return ret
	}

	return o.OverloadedStorageDetection
}

// GetOverloadedStorageDetectionOk returns a tuple with the OverloadedStorageDetection field value
// and a boolean to check if the value has been set.
func (o *VMwareAnomalyDetectionConfig) GetOverloadedStorageDetectionOk() (*OverloadedStorageDetectionConfig, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OverloadedStorageDetection, true
}

// SetOverloadedStorageDetection sets field value
func (o *VMwareAnomalyDetectionConfig) SetOverloadedStorageDetection(v OverloadedStorageDetectionConfig) {
	o.OverloadedStorageDetection = v
}

// GetSlowPhysicalStorageDetection returns the SlowPhysicalStorageDetection field value
func (o *VMwareAnomalyDetectionConfig) GetSlowPhysicalStorageDetection() SlowPhysicalStorageDetectionConfig {
	if o == nil {
		var ret SlowPhysicalStorageDetectionConfig
		return ret
	}

	return o.SlowPhysicalStorageDetection
}

// GetSlowPhysicalStorageDetectionOk returns a tuple with the SlowPhysicalStorageDetection field value
// and a boolean to check if the value has been set.
func (o *VMwareAnomalyDetectionConfig) GetSlowPhysicalStorageDetectionOk() (*SlowPhysicalStorageDetectionConfig, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SlowPhysicalStorageDetection, true
}

// SetSlowPhysicalStorageDetection sets field value
func (o *VMwareAnomalyDetectionConfig) SetSlowPhysicalStorageDetection(v SlowPhysicalStorageDetectionConfig) {
	o.SlowPhysicalStorageDetection = v
}

// GetUndersizedStorageDetection returns the UndersizedStorageDetection field value
func (o *VMwareAnomalyDetectionConfig) GetUndersizedStorageDetection() UndersizedStorageDetectionConfig {
	if o == nil {
		var ret UndersizedStorageDetectionConfig
		return ret
	}

	return o.UndersizedStorageDetection
}

// GetUndersizedStorageDetectionOk returns a tuple with the UndersizedStorageDetection field value
// and a boolean to check if the value has been set.
func (o *VMwareAnomalyDetectionConfig) GetUndersizedStorageDetectionOk() (*UndersizedStorageDetectionConfig, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UndersizedStorageDetection, true
}

// SetUndersizedStorageDetection sets field value
func (o *VMwareAnomalyDetectionConfig) SetUndersizedStorageDetection(v UndersizedStorageDetectionConfig) {
	o.UndersizedStorageDetection = v
}

func (o VMwareAnomalyDetectionConfig) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VMwareAnomalyDetectionConfig) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["droppedPacketsDetection"] = o.DroppedPacketsDetection
	toSerialize["esxiHighCpuSaturation"] = o.EsxiHighCpuSaturation
	toSerialize["esxiHighMemoryDetection"] = o.EsxiHighMemoryDetection
	if !IsNil(o.GuestCpuLimitReached) {
		toSerialize["guestCpuLimitReached"] = o.GuestCpuLimitReached
	}
	toSerialize["lowDatastoreSpaceDetection"] = o.LowDatastoreSpaceDetection
	if !IsNil(o.Metadata) {
		toSerialize["metadata"] = o.Metadata
	}
	toSerialize["overloadedStorageDetection"] = o.OverloadedStorageDetection
	toSerialize["slowPhysicalStorageDetection"] = o.SlowPhysicalStorageDetection
	toSerialize["undersizedStorageDetection"] = o.UndersizedStorageDetection
	return toSerialize, nil
}

type NullableVMwareAnomalyDetectionConfig struct {
	value *VMwareAnomalyDetectionConfig
	isSet bool
}

func (v NullableVMwareAnomalyDetectionConfig) Get() *VMwareAnomalyDetectionConfig {
	return v.value
}

func (v *NullableVMwareAnomalyDetectionConfig) Set(val *VMwareAnomalyDetectionConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableVMwareAnomalyDetectionConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableVMwareAnomalyDetectionConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVMwareAnomalyDetectionConfig(val *VMwareAnomalyDetectionConfig) *NullableVMwareAnomalyDetectionConfig {
	return &NullableVMwareAnomalyDetectionConfig{value: val, isSet: true}
}

func (v NullableVMwareAnomalyDetectionConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVMwareAnomalyDetectionConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


