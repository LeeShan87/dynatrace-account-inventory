/*
Dynatrace Configuration API

Documentation of the Dynatrace Configuration API. To read about use-cases and examples, see [Dynatrace Documentation](https://dt-url.net/4u43kxw).  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package configv1

import (
	"encoding/json"
)

// checks if the RdsHighCpuThresholds type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RdsHighCpuThresholds{}

// RdsHighCpuThresholds Custom thresholds for high CPU utilization on RDS. If not set, automatic mode is used.
type RdsHighCpuThresholds struct {
	// Alert if CPU usage is higher than *X*% in 3 out of 5 samples.
	CpuUsagePercentage int32 `json:"cpuUsagePercentage"`
}

// NewRdsHighCpuThresholds instantiates a new RdsHighCpuThresholds object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRdsHighCpuThresholds(cpuUsagePercentage int32) *RdsHighCpuThresholds {
	this := RdsHighCpuThresholds{}
	this.CpuUsagePercentage = cpuUsagePercentage
	return &this
}

// NewRdsHighCpuThresholdsWithDefaults instantiates a new RdsHighCpuThresholds object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRdsHighCpuThresholdsWithDefaults() *RdsHighCpuThresholds {
	this := RdsHighCpuThresholds{}
	return &this
}

// GetCpuUsagePercentage returns the CpuUsagePercentage field value
func (o *RdsHighCpuThresholds) GetCpuUsagePercentage() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.CpuUsagePercentage
}

// GetCpuUsagePercentageOk returns a tuple with the CpuUsagePercentage field value
// and a boolean to check if the value has been set.
func (o *RdsHighCpuThresholds) GetCpuUsagePercentageOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CpuUsagePercentage, true
}

// SetCpuUsagePercentage sets field value
func (o *RdsHighCpuThresholds) SetCpuUsagePercentage(v int32) {
	o.CpuUsagePercentage = v
}

func (o RdsHighCpuThresholds) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RdsHighCpuThresholds) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["cpuUsagePercentage"] = o.CpuUsagePercentage
	return toSerialize, nil
}

type NullableRdsHighCpuThresholds struct {
	value *RdsHighCpuThresholds
	isSet bool
}

func (v NullableRdsHighCpuThresholds) Get() *RdsHighCpuThresholds {
	return v.value
}

func (v *NullableRdsHighCpuThresholds) Set(val *RdsHighCpuThresholds) {
	v.value = val
	v.isSet = true
}

func (v NullableRdsHighCpuThresholds) IsSet() bool {
	return v.isSet
}

func (v *NullableRdsHighCpuThresholds) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRdsHighCpuThresholds(val *RdsHighCpuThresholds) *NullableRdsHighCpuThresholds {
	return &NullableRdsHighCpuThresholds{value: val, isSet: true}
}

func (v NullableRdsHighCpuThresholds) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRdsHighCpuThresholds) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


