/*
Dynatrace Configuration API

Documentation of the Dynatrace Configuration API. To read about use-cases and examples, see [Dynatrace Documentation](https://dt-url.net/4u43kxw).  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package configv1

import (
	"encoding/json"
)

// checks if the AwsSupportingServiceMetric type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AwsSupportingServiceMetric{}

// AwsSupportingServiceMetric A metric of service to be monitored.
type AwsSupportingServiceMetric struct {
	// A list of metric's dimensions names.
	Dimensions []string `json:"dimensions"`
	// The name of the metric of the service.
	Name string `json:"name"`
	// The statistic (aggregation) to be used for the metric. AVG_MIN_MAX value is 3 statistics at once: AVERAGE, MINIMUM and MAXIMUM
	Statistic string `json:"statistic"`
}

// NewAwsSupportingServiceMetric instantiates a new AwsSupportingServiceMetric object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAwsSupportingServiceMetric(dimensions []string, name string, statistic string) *AwsSupportingServiceMetric {
	this := AwsSupportingServiceMetric{}
	this.Dimensions = dimensions
	this.Name = name
	this.Statistic = statistic
	return &this
}

// NewAwsSupportingServiceMetricWithDefaults instantiates a new AwsSupportingServiceMetric object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAwsSupportingServiceMetricWithDefaults() *AwsSupportingServiceMetric {
	this := AwsSupportingServiceMetric{}
	return &this
}

// GetDimensions returns the Dimensions field value
func (o *AwsSupportingServiceMetric) GetDimensions() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Dimensions
}

// GetDimensionsOk returns a tuple with the Dimensions field value
// and a boolean to check if the value has been set.
func (o *AwsSupportingServiceMetric) GetDimensionsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Dimensions, true
}

// SetDimensions sets field value
func (o *AwsSupportingServiceMetric) SetDimensions(v []string) {
	o.Dimensions = v
}

// GetName returns the Name field value
func (o *AwsSupportingServiceMetric) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *AwsSupportingServiceMetric) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *AwsSupportingServiceMetric) SetName(v string) {
	o.Name = v
}

// GetStatistic returns the Statistic field value
func (o *AwsSupportingServiceMetric) GetStatistic() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Statistic
}

// GetStatisticOk returns a tuple with the Statistic field value
// and a boolean to check if the value has been set.
func (o *AwsSupportingServiceMetric) GetStatisticOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Statistic, true
}

// SetStatistic sets field value
func (o *AwsSupportingServiceMetric) SetStatistic(v string) {
	o.Statistic = v
}

func (o AwsSupportingServiceMetric) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AwsSupportingServiceMetric) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["dimensions"] = o.Dimensions
	toSerialize["name"] = o.Name
	toSerialize["statistic"] = o.Statistic
	return toSerialize, nil
}

type NullableAwsSupportingServiceMetric struct {
	value *AwsSupportingServiceMetric
	isSet bool
}

func (v NullableAwsSupportingServiceMetric) Get() *AwsSupportingServiceMetric {
	return v.value
}

func (v *NullableAwsSupportingServiceMetric) Set(val *AwsSupportingServiceMetric) {
	v.value = val
	v.isSet = true
}

func (v NullableAwsSupportingServiceMetric) IsSet() bool {
	return v.isSet
}

func (v *NullableAwsSupportingServiceMetric) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAwsSupportingServiceMetric(val *AwsSupportingServiceMetric) *NullableAwsSupportingServiceMetric {
	return &NullableAwsSupportingServiceMetric{value: val, isSet: true}
}

func (v NullableAwsSupportingServiceMetric) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAwsSupportingServiceMetric) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


