/*
Dynatrace Configuration API

Documentation of the Dynatrace Configuration API. To read about use-cases and examples, see [Dynatrace Documentation](https://dt-url.net/4u43kxw).  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package configv1

import (
	"encoding/json"
)

// checks if the VisuallyComplete2Settings type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VisuallyComplete2Settings{}

// VisuallyComplete2Settings Settings for VisuallyComplete2
type VisuallyComplete2Settings struct {
	// A RegularExpression used to exclude images and iframes from being detected by the VC module.
	ExcludeUrlRegex *string `json:"excludeUrlRegex,omitempty"`
	// Query selector for mutation nodes to ignore in VC and SI calculation
	IgnoredMutationsList *string `json:"ignoredMutationsList,omitempty"`
	// The time in ms the VC module waits for no mutations happening on the page after the load action. Defaults to 1000.
	InactivityTimeout *int32 `json:"inactivityTimeout,omitempty"`
	// Determines the time in ms VC waits after an action closes to start calculation. Defaults to 50.
	MutationTimeout *int32 `json:"mutationTimeout,omitempty"`
	// Minimum visible area in pixels of elements to be counted towards VC and SI. Defaults to 50.
	Threshold *int32 `json:"threshold,omitempty"`
}

// NewVisuallyComplete2Settings instantiates a new VisuallyComplete2Settings object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVisuallyComplete2Settings() *VisuallyComplete2Settings {
	this := VisuallyComplete2Settings{}
	return &this
}

// NewVisuallyComplete2SettingsWithDefaults instantiates a new VisuallyComplete2Settings object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVisuallyComplete2SettingsWithDefaults() *VisuallyComplete2Settings {
	this := VisuallyComplete2Settings{}
	return &this
}

// GetExcludeUrlRegex returns the ExcludeUrlRegex field value if set, zero value otherwise.
func (o *VisuallyComplete2Settings) GetExcludeUrlRegex() string {
	if o == nil || IsNil(o.ExcludeUrlRegex) {
		var ret string
		return ret
	}
	return *o.ExcludeUrlRegex
}

// GetExcludeUrlRegexOk returns a tuple with the ExcludeUrlRegex field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VisuallyComplete2Settings) GetExcludeUrlRegexOk() (*string, bool) {
	if o == nil || IsNil(o.ExcludeUrlRegex) {
		return nil, false
	}
	return o.ExcludeUrlRegex, true
}

// HasExcludeUrlRegex returns a boolean if a field has been set.
func (o *VisuallyComplete2Settings) HasExcludeUrlRegex() bool {
	if o != nil && !IsNil(o.ExcludeUrlRegex) {
		return true
	}

	return false
}

// SetExcludeUrlRegex gets a reference to the given string and assigns it to the ExcludeUrlRegex field.
func (o *VisuallyComplete2Settings) SetExcludeUrlRegex(v string) {
	o.ExcludeUrlRegex = &v
}

// GetIgnoredMutationsList returns the IgnoredMutationsList field value if set, zero value otherwise.
func (o *VisuallyComplete2Settings) GetIgnoredMutationsList() string {
	if o == nil || IsNil(o.IgnoredMutationsList) {
		var ret string
		return ret
	}
	return *o.IgnoredMutationsList
}

// GetIgnoredMutationsListOk returns a tuple with the IgnoredMutationsList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VisuallyComplete2Settings) GetIgnoredMutationsListOk() (*string, bool) {
	if o == nil || IsNil(o.IgnoredMutationsList) {
		return nil, false
	}
	return o.IgnoredMutationsList, true
}

// HasIgnoredMutationsList returns a boolean if a field has been set.
func (o *VisuallyComplete2Settings) HasIgnoredMutationsList() bool {
	if o != nil && !IsNil(o.IgnoredMutationsList) {
		return true
	}

	return false
}

// SetIgnoredMutationsList gets a reference to the given string and assigns it to the IgnoredMutationsList field.
func (o *VisuallyComplete2Settings) SetIgnoredMutationsList(v string) {
	o.IgnoredMutationsList = &v
}

// GetInactivityTimeout returns the InactivityTimeout field value if set, zero value otherwise.
func (o *VisuallyComplete2Settings) GetInactivityTimeout() int32 {
	if o == nil || IsNil(o.InactivityTimeout) {
		var ret int32
		return ret
	}
	return *o.InactivityTimeout
}

// GetInactivityTimeoutOk returns a tuple with the InactivityTimeout field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VisuallyComplete2Settings) GetInactivityTimeoutOk() (*int32, bool) {
	if o == nil || IsNil(o.InactivityTimeout) {
		return nil, false
	}
	return o.InactivityTimeout, true
}

// HasInactivityTimeout returns a boolean if a field has been set.
func (o *VisuallyComplete2Settings) HasInactivityTimeout() bool {
	if o != nil && !IsNil(o.InactivityTimeout) {
		return true
	}

	return false
}

// SetInactivityTimeout gets a reference to the given int32 and assigns it to the InactivityTimeout field.
func (o *VisuallyComplete2Settings) SetInactivityTimeout(v int32) {
	o.InactivityTimeout = &v
}

// GetMutationTimeout returns the MutationTimeout field value if set, zero value otherwise.
func (o *VisuallyComplete2Settings) GetMutationTimeout() int32 {
	if o == nil || IsNil(o.MutationTimeout) {
		var ret int32
		return ret
	}
	return *o.MutationTimeout
}

// GetMutationTimeoutOk returns a tuple with the MutationTimeout field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VisuallyComplete2Settings) GetMutationTimeoutOk() (*int32, bool) {
	if o == nil || IsNil(o.MutationTimeout) {
		return nil, false
	}
	return o.MutationTimeout, true
}

// HasMutationTimeout returns a boolean if a field has been set.
func (o *VisuallyComplete2Settings) HasMutationTimeout() bool {
	if o != nil && !IsNil(o.MutationTimeout) {
		return true
	}

	return false
}

// SetMutationTimeout gets a reference to the given int32 and assigns it to the MutationTimeout field.
func (o *VisuallyComplete2Settings) SetMutationTimeout(v int32) {
	o.MutationTimeout = &v
}

// GetThreshold returns the Threshold field value if set, zero value otherwise.
func (o *VisuallyComplete2Settings) GetThreshold() int32 {
	if o == nil || IsNil(o.Threshold) {
		var ret int32
		return ret
	}
	return *o.Threshold
}

// GetThresholdOk returns a tuple with the Threshold field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VisuallyComplete2Settings) GetThresholdOk() (*int32, bool) {
	if o == nil || IsNil(o.Threshold) {
		return nil, false
	}
	return o.Threshold, true
}

// HasThreshold returns a boolean if a field has been set.
func (o *VisuallyComplete2Settings) HasThreshold() bool {
	if o != nil && !IsNil(o.Threshold) {
		return true
	}

	return false
}

// SetThreshold gets a reference to the given int32 and assigns it to the Threshold field.
func (o *VisuallyComplete2Settings) SetThreshold(v int32) {
	o.Threshold = &v
}

func (o VisuallyComplete2Settings) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VisuallyComplete2Settings) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ExcludeUrlRegex) {
		toSerialize["excludeUrlRegex"] = o.ExcludeUrlRegex
	}
	if !IsNil(o.IgnoredMutationsList) {
		toSerialize["ignoredMutationsList"] = o.IgnoredMutationsList
	}
	if !IsNil(o.InactivityTimeout) {
		toSerialize["inactivityTimeout"] = o.InactivityTimeout
	}
	if !IsNil(o.MutationTimeout) {
		toSerialize["mutationTimeout"] = o.MutationTimeout
	}
	if !IsNil(o.Threshold) {
		toSerialize["threshold"] = o.Threshold
	}
	return toSerialize, nil
}

type NullableVisuallyComplete2Settings struct {
	value *VisuallyComplete2Settings
	isSet bool
}

func (v NullableVisuallyComplete2Settings) Get() *VisuallyComplete2Settings {
	return v.value
}

func (v *NullableVisuallyComplete2Settings) Set(val *VisuallyComplete2Settings) {
	v.value = val
	v.isSet = true
}

func (v NullableVisuallyComplete2Settings) IsSet() bool {
	return v.isSet
}

func (v *NullableVisuallyComplete2Settings) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVisuallyComplete2Settings(val *VisuallyComplete2Settings) *NullableVisuallyComplete2Settings {
	return &NullableVisuallyComplete2Settings{value: val, isSet: true}
}

func (v NullableVisuallyComplete2Settings) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVisuallyComplete2Settings) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


